[
{"site": "website", "section": "Platform.sh", "title": "PaaS for Multi-Cloud Hosting, Development, and Deployment with PHP, Java, Node.js, Ruby, Python, Golang ", "url": "https://platform.sh/", "documentId": "582c085907e4fb8785d6cf11592ec475286c0fdd", "text": "\n   \n     \n       \n     \n         The end-to-end web platform for agile teams \n\n        \n\n        \n         Build, evolve, and scale your website fleet\u2014with zero infrastructure management investment. Get hosting, CI/CD, automated updates, global 24x7 support. And much more. \n        \n\n        \n\n        \n         \n         \n           \n             Email Address \n             \n           \n           \n             Get a demo \n             \n           \n         \n        \n\n        \n          \n\n            \n\n            \n\n              \n                 \n                   \n                    Or try Platform.sh for free now\n                     \n   \n   \n   \n   \n \n\n                   \n                 \n              \n            \n            \n\n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n \n \n \n \n \n \n \n \n\n        \n      \n     \n   \n \n   \n     \n       The fastest way to build modern web apps \n     \n     \n       Platform.sh removes the barriers to getting work done. Create and launch projects independently or with teams\u2014easily and efficiently. \n     \n     \n       \n         \n           \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                Instant cloning\n               \n               \n                 \n                  \n                   Start with a single command: \n                  \n                   git branch new-idea \n                  \n                   And work in a perfect replica of production\u2013data, services, and all. \n                  \n                 \n               \n             \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                Works the way your team does\n               \n               \n                 \n                  \n                   Platform.sh adapts to your workflow, creating new environments on the fly for features, testing, review. \n                  \n                 \n               \n             \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                Declarative infrastructure\n               \n               \n                 \n                  \n                   Add or update the services your app depends on with a few lines of configuration. \n                  \n                   Platform.sh transforms config into fully managed containers in moments, no add-ons required. \n                  \n                 \n               \n             \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                Built-in CI/CD\n               \n               \n                 \n                  \n                   Ready for launch? We deploy your code and infrastructure changes to production with a simple  git merge . So you can deploy fast and frequently. \n                  \n                 \n               \n             \n            \n           \n           \n             \n               \n             \n           \n         \n       \n     \n   \n \n   \n     \n       Polyglot?   Hyperpolyglot?   We glot you. \n       Platform.sh supports an array of cool languages and frameworks. Monoliths. Microservices. So you can keep your options open. Flexible. And future-proof. \n       \n         \n           How Platform.sh unifies your workflow \n           \n         \n       \n     \n     \n       \n   \n     \n      \n       \n      \n      Go\n     \n   \n   \n     \n      \n       \n      \n        Java\n       \n     \n     \n       \n        \n         \n        \n        Node.js\n       \n     \n     \n       \n        \n         \n        \n        PHP\n       \n     \n     \n       \n        \n         \n        \n        Python\n       \n     \n\n     \n       \n        \n         \n        \n          Ruby\n       \n     \n     \n       \n        \n         \n        \n        Drupal\n       \n     \n\n     \n       \n        \n         \n        \n        eZ\n       \n     \n\n     \n       \n        \n         \n        \n        Laravel\n       \n     \n\n     \n       \n        \n         \n        \n        Magento\n       \n     \n\n     \n       \n      \n       \n      \n        Strapi\n       \n     \n\n     \n       \n      \n       \n      \n        Symfony\n       \n     \n\n     \n       \n        \n         \n        \n        Typo3\n       \n     \n\n   \n     \n      \n       \n      \n      WordPress\n     \n   \n\n \n\n\n     \n   \n \n   \n     \n       \n         \n        \n\n \n    \n     \n    \n     \n     \n \n       \n     \n     \n       Scales and secures your whole web app fleet \n       10 sites or 10,000? Platform.sh helps your team balance governance and flexibility. \n       \n         Centralized management and patching of all your apps \n         High-availability SLAs (up to 99.99%) \n         24x7 global support \n         Fully managed database services secure your data \n         Certified security and compliance \n       \n       \n         \n   Learn about Platform.sh for FleetOps \n   \n \n\n       \n     \n   \n \n   \n     \n       More than 5,000 customers and 65,000 developers rely on Platform.sh  \n     \n   \n \n   \n     \n        \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n             \n               Serves a global community \n             \n              \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n             \n               Releases 5x more often with 100% uptime \n             \n              \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n             \n               Manages web applications across the entire university \n             \n              \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n             \n               Doubled ecommerce site performance \n             \n              \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n             \n               Delivers 6,000+ sites from SMB to enterprise \n             \n              \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n             \n               Deploys new innovations to sites in 110 countries \n             \n              \n            \n           \n          \n        \n     \n   \n  \n   \n     \n       \n       \n       \n     \n   \n  \n \n   \n     \n       \n   Platform.sh customers and case studies \n   \n \n\n     \n   \n \n   \n     \n       A unified and extensible workflow, from development to production \n     \n     \n      \n \n   \n    \n     \n       \n         Develop \n         \n          \n           Git-native: instantly clone your code  and  infrastructure for every branch \n          \n           Services snap-in with a line of code\u2014from MySQL to Kafka to Elasticsearch \n          \n           Build in virtually any runtime or framework \n          \n         \n       \n       \n         Integrated with \n         \n          \n           Bitbucket \n          \n           GitHub \n          \n           GitLab \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Build \n         \n          \n           CI/CD built in: run tests, compile dependencies \n          \n           Extensible with webhooks to integrate with any workflow \n          \n           Declarative infrastructure, versioned like your code \n          \n         \n       \n       \n         Includes the best of \n         \n          \n           CircleCI \n          \n           Jenkins \n          \n           TravisCI \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Package \n         \n          \n           Fully managed databases, queues, networking, storage \n          \n           Migrate between service versions with a single line of configuration \n          \n           Services patched and secured by Platform.sh \n          \n         \n       \n       \n         Replaces \n         \n          \n           Ansible \n          \n           Chef \n          \n           Puppet \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Deploy \n         \n          \n           Apps and services are  automatically  containerized and deployed to our grid \n          \n           Supports stateful and stateless apps, worker processes \n          \n           Integrates with your current DevOps processes \n          \n         \n       \n       \n         Works like \n         \n          \n           Docker \n          \n           XLDeploy \n          \n           Kubernetes \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Provision \n         \n          \n           One-click deployment of new applications in an instant \n          \n           Custom template libraries \n          \n           API control over RBAC, app provisioning, deployment \n          \n         \n       \n       \n         Faster and  far  less costly than \n         \n          \n           CloudFoundry \n          \n           OpenShift \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Run \n         \n          \n           Production cloud hosting included \n          \n           Multicloud support: AWS, Microsoft Azure, Orange, Google, and regional partners \n          \n           Run without modifications between regions and clouds \n          \n         \n       \n       \n         We partner with \n         \n          \n           AWS \n          \n           Google Cloud \n          \n           Microsoft Azure \n          \n           Orange \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Manage \n         \n          \n           Update your fleet with a single command \n          \n           Support  everything  from microservices to enterprise CMS to static sites \n          \n           Maintain governance over process, code, and infrastructure across distributed teams \n          \n         \n       \n       \n         Capabilities you won\u2019t find with \n         \n          \n           Acquia \n          \n           Pantheon \n          \n           Heroku \n          \n           WPEngine \n          \n           Netlify \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Secure \n         \n          \n           All changes to code and infrastructure fully auditable \n          \n           SOC 2-certified \n          \n           Strict data localization available \n          \n           Check out our security details \n          \n         \n       \n       \n         24x7 data security and privacy \n         \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n   \n \n\n     \n   \n \n   \n     \n       Capabilities to help speed time to value \n     \n     \n       Robust Platform.sh technologies enable you to expand your reach, customer base, and revenue potential. \n     \n     \n       \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     Provision sites where and when your business demands. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     Continuously improve digital experiences, deploying new innovations across your fleet. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     Work confidently with the teams, tools, and frameworks that fit each project. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       The latest  \n     \n     \n       \n        \n         \n           \n             \n              \n              \n                \n                  \n                    \n                      \n                      \n                      \n                      \n                     \n                       \n                     \n                    \n                \n              \n               \n                 Platform.sh + Lando: local dev in perfect sync with the cloud \n                 Lando simplifies local development the way Platform.sh simplifies the cloud \n               \n             \n           \n         \n        \n         \n           \n             \n              \n              \n                \n                  \n                    \n                      \n                      \n                      \n                      \n                     \n                       \n                     \n                    \n                \n              \n               \n                 New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n                 Today, we\u2019re excited to introduce new product tiers that deliver the features needed to manage website fleets \n               \n             \n           \n         \n        \n         \n           \n             \n              \n              \n                \n                  \n                    \n                      \n                      \n                      \n                      \n                     \n                       \n                     \n                    \n                \n              \n               \n                 Building a resilient digital foundation with Drupal + Gatsby \n                 Agency partner Mediacurrent: a decoupled approach frees you to choose the best solution for every project \n               \n             \n           \n         \n        \n       \n     \n   \n \n   \n     \n       Create a Platform.sh project now \n      \n      \n       \n         Get started for free \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Demos", "title": "Platform.sh Demos", "url": "https://platform.sh/product/demos/", "documentId": "60970f9c48592dba9f4519754fb5e943087d8866", "text": "\n   \n     \n       Platform.sh Demos \n     \n     \n       \n         \n       \n     \n   \n \n   \n     \n       \n         \n           Featured \n           All demos \n         \n         \n          \n          \n\n           \n             \n               \n                 \n                  Categories\n                 \n                 \n                   \n                     \n                       \n                      All\n                     \n                   \n\n                  \n\n                 \n               \n             \n           \n         \n       \n     \n   \n \n\t \n\t\t \n\t\t\t features \n\t\t \n\t \n\t \n\t\t \n\t\t\t \n\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to install Drupal with the Platform.sh CLI \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to launch a Django 2 project with the Platform.sh CLI \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to manage Drupal 8 Multi-site \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to use Elasticsearch with Drupal \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Splitting your monolithic application into microservices \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Using Laravel with the Platform.sh CLI \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t \n\t\t\t\t \n\t\t\t \n\t\t \n\t \n \n\t \n\t\t \n\t\t\t workflow \n\t\t \n\t \n\t \n\t\t \n\t\t\t \n\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Connecting your local development environment to Platform.sh \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How do I manage a complex development workflow for my team? \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How do I onboard new developers to my team? \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to add new services to your Platform.sh application \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to integrate Platform.sh with GitHub, Bitbucket, or GitLab \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to keep your development environments in sync with prod \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to scale your Platform.sh projects to meet demand \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to update Drupal with Composer \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to upgrade runtime versions with one line of code \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t \n\t\t\t\t \n\t\t\t \n\t\t \n\t \n \n\t \n\t\t \n\t\t\t benefits \n\t\t \n\t \n\t \n\t\t \n\t\t\t \n\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Controlling costs with Platform.sh as your virtual DevOps team \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How Platform.sh provides white-label tools to power your SaaS application \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to run Anaconda on Platform.sh \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to update a fleet of websites with the Platform.sh API or command line \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Platform.sh overview \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         What is the Platform.sh approach to security? \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         What service types does Platform.sh support? \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t \n\t\t\t\t \n\t\t\t \n\t\t \n\t \n", "rank": 4},
{"site": "website", "section": "Product", "title": "Product details | Build, run, scale with integrated hosting, CI/CD, DevOps ", "url": "https://platform.sh/product/", "documentId": "53f07b0b86455feed9c2165ec26ad221d053a7d8", "text": "\n   \n     \n       \n     \n         Build, run, and scale your applications\u2014end to end \n\n        \n\n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n        \n      \n     \n   \n \n   \n     \n       \n         \n           \n  \n   \n    \n       .ab7804fb-1ae8-4b48-bdd7-f6984a2dc94d{fill:#eae5e7;}.a3542403-fa12-4ead-84b3-2c41fea0c601{fill:#fde8e9;}.fbdad3d8-f7ba-46a9-8b06-f438250b8c2a{fill:#171719;}.bb154062-b803-4ae4-a561-02cb35933b06{isolation:isolate;}.a77563f6-4917-4f59-a396-6ac426535f61{fill:none;stroke:#1a192b;stroke-linecap:round;stroke-linejoin:round;stroke-width:2px;}.eaa45988-5a94-416e-b407-e9dbd542fd16{fill:#1a192b;} Artboard 32 copy 2 \n    \n   \n  \n   \n    \n    \n     Enable your team to manage everything\u2014databases, queues, workflows\u2014as easily as they manage code. For every branch, every change, every developer, get a perfect production replica. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       .eea81be5-250e-4b0a-84f1-527e96774560{fill:#fde8e9;}.ba1b9e08-ca5c-4165-9efe-00722595dc46{fill:#eae5e7;}.bab85bce-9c32-4b14-a809-f0c1bb7f0dd4{fill:#171719;} Artboard 32 \n    \n   \n  \n   \n    \n    \n     Every idea can be fully tested and merged flawlessly into production and deployed across multiple cloud providers. Simply. Quickly. Fearlessly. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       .e7240f8d-e5a1-4b5b-b959-3f525cd61108{fill:#eae5e7;}.b3e47195-4583-41ab-96f7-2b0901b294ba{fill:#fde8e9;}.ac75ea8c-5f57-482a-bd60-586c4792a023{fill:#171719;}.bc577d61-2642-4df2-b91d-83d2d2011480{isolation:isolate;} Artboard 32 copy \n    \n   \n  \n   \n    \n    \n     Manage your production app\u2014or your fleet\u2014at scale: high-volume traffic, tons of apps, big teams. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       \n         Platform.sh:  \n         more than hosting \n       \n       A polyglot, multicloud PaaS, with continuous deployment built in. \n       No application re-architecture required. \n       At Platform.sh we believe your code should just run. Monoliths? Microservices? Stateful? Stateless? Develop and deliver them all with consistent tools. \n       Build in almost any language or framework, including PHP, Java, Node.js, Python, Golang, Ruby, Drupal, WordPress, Symfony, Django, React, and Angular. Mix and match microservices within projects, and process data with built-in worker support. \n     \n     \n       \n         \n       \n     \n   \n \n   \n     \n       \n     \n     \n       Batteries included \n       Add MySQL, PostgreSQL, MongoDB, Kafka, Elasticsearch, Solr, Redis, RabbitMQ, or InfluxDB to your project with a few lines of code. Infrastructure changes are versioned and auditable. \n       Service updates and security? That\u2019s on us. No more effort wasted on patching your fleet. \n       Build dependencies and tests are resolved automatically. Then, our continuous deployment system containerizes your apps and services and deploys them to our grid. \n     \n   \n \n   \n     \n       Instant cloning to eliminate bottlenecks \n       Your development team lives in version control. Now your whole app lives there, too. For every Git branch, Platform.sh instantly clones your entire production application stack, including services and their data. \n       Every feature, team, or developer now has a perfect copy of production to work in, test with, or share with stakeholders. Each environment is automatically secured with SSL and features robust access control to tailor your workflow to your release process. \n     \n     \n       \n     \n   \n \n   \n     \n       \n     \n     \n       Deploy anytime (even Fridays) \n       Because every change is being tested on a byte-for-byte clone of your production application, deployments become non-events. So you can feel confident your release will work\u2014every time. \n       Merging in Git automatically packages the fully tested build, and our continuous deployment process sends those containers to production. \n     \n   \n \n   \n     \n       Deploy anywhere \n       Leverage our multicloud platform to deploy apps and sites wherever you need them. Got fleets of sites? Provision and manage them centrally with the Platform.sh CLI and API. Run your apps in regions around the world, including  Australia ,  Canada ,  France , Ireland,  Germany , and the US. \n     \n     \n       \n     \n   \n \n   \n     \n       A cloud application platform   that delivers, from end to end \n       To deploy fearlessly, you need a unified workflow that brings everything together from development to production. \n     \n   \n \n   \n    \n     \n       \n         Develop \n         \n          \n           Git-native: instantly clone your code  and  infrastructure for every branch \n          \n           Services snap-in with a line of code\u2014from MySQL to Kafka to Elasticsearch \n          \n           Build in virtually any runtime or framework \n          \n         \n       \n       \n         Integrated with \n         \n          \n           Bitbucket \n          \n           GitHub \n          \n           GitLab \n          \n         \n         \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n         \n       \n     \n  \n     \n       \n         Build \n         \n          \n           CI/CD built in: run tests, compile dependencies \n          \n           Extensible with webhooks to integrate with any workflow \n          \n           Declarative infrastructure, versioned like your code \n          \n         \n       \n       \n         Includes the best of \n         \n          \n           CircleCI \n          \n           Jenkins \n          \n           TravisCI \n          \n         \n         \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n         \n       \n     \n  \n     \n       \n         Package \n         \n          \n           Fully managed databases, queues, networking, storage \n          \n           Migrate between service versions with a single line of configuration \n          \n           Services patched and secured by Platform.sh \n          \n         \n       \n       \n         Replaces \n         \n          \n           Ansible \n          \n           Chef \n          \n           Puppet \n          \n         \n         \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n         \n       \n     \n  \n     \n       \n         Deploy \n         \n          \n           Apps and services are  automatically  containerized and deployed to our grid \n          \n           Supports stateful and stateless apps, worker processes \n          \n           Integrates with your current DevOps processes \n          \n         \n       \n       \n         Works like \n         \n          \n           Docker \n          \n           XLDeploy \n          \n           Kubernetes \n          \n         \n         \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n         \n       \n     \n  \n     \n       \n         Provision \n         \n          \n           One-click deployment of new applications in an instant \n          \n           Custom template libraries \n          \n           API control over RBAC, app provisioning, deployment \n          \n         \n       \n       \n         Faster and  far  less costly than \n         \n          \n           CloudFoundry \n          \n           OpenShift \n          \n         \n         \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n         \n       \n     \n  \n     \n       \n         Run \n         \n          \n           Production cloud hosting included \n          \n           Multicloud support: AWS, Microsoft Azure, Orange, Google, and regional partners \n          \n           Run without modifications between regions and clouds \n          \n         \n       \n       \n         We partner with \n         \n          \n           AWS \n          \n           Google Cloud \n          \n           Microsoft Azure \n          \n           Orange \n          \n         \n         \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n         \n       \n     \n  \n     \n       \n         Manage \n         \n          \n           Update your fleet with a single command \n          \n           Support  everything  from microservices to enterprise CMS to static sites \n          \n           Maintain governance over process, code, and infrastructure across distributed teams \n          \n         \n       \n       \n         Capabilities you won\u2019t find with \n         \n          \n           Acquia \n          \n           Pantheon \n          \n           Heroku \n          \n           WPEngine \n          \n           Netlify \n          \n         \n         \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n         \n       \n     \n  \n     \n       \n         Secure \n         \n          \n           All changes to code and infrastructure fully auditable \n          \n           SOC 2-certified \n          \n           Strict data localization available \n          \n           Check out our security details \n          \n         \n       \n       \n         24x7 data security and privacy \n         \n          \n         \n         \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n           \n            \n\n \n    \n     \n    \n     \n     \n \n          \n         \n       \n     \n  \n   \n \n   \n     \n       Get feedback faster. Deliver new features sooner. \n     \n     \n       \n         \n           90 % \n           Reduction in DevOps \n         \n         \n           15 x \n           Faster user acceptance testing \n         \n         \n           40 % \n           Uplift in developer  productivity \n         \n         \n           20 x \n           More  deployments \n         \n       \n     \n   \n \n   \n     \n       Build your greatest-ever app. \n      \n      \n       \n         Get Started \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Stacks", "title": "Powering SymfonyCloud and more ", "url": "https://platform.sh/stacks/symfony/", "documentId": "51a701cd7c151f8a9ffe40343785e3c0ea4cb5bb", "text": "\n     \n       \n         Powering SymfonyCloud and more \n        \n         Platform.sh is the cloud behind Symfony SAS\u2019s SymfonyCloud, which provides developers with agile development all the way to production \u2014 right from the command line. \n        \n         Building PHP microservices, or integrating multiple languages in your projects? Run and manage them together with multiapp support in every Platform.sh project. \n        \n        \n         \n   Launch Symfony 4 now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           Designed for developers \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Focus on your sites, not DevOps \n           Start your Symfony projects quickly, and onboard developers with ease. Platform.sh manages infrastructure and operations so your team can focus on writing great code and launching sites. \n         \n       \n      \n       \n         \n           \n         \n         \n           Eliminate bottlenecks \n           Platform.sh creates a perfect replica of production for you to test every change, so you can launch successfully, anytime. Code and test in parallel with environments for every developer or team. \n         \n       \n      \n       \n         \n           \n         \n         \n           Scale predictably or on demand \n           Platform.sh Enterprise delivers zero-downtime scalability that lets you scale to meet peak traffic. \n         \n       \n      \n     \n   \n     \n       \n         \n       \n       \n         SymfonyCloud \u2014 powered by Platform.sh \n\n        \n         It takes just seconds to get a project ready, and up and running. SymfonyCloud has been built as a CLI-first experience \u2014 just like Symfony, with  bin/console . \n        \n         Migrate a project to SymfonyCloud by moving your code and database content. Your services are running in containers in minutes, with one configuration file. \n        \n\n        \n\n         \n          \n           \n   Discover SymfonyCloud \n   \n \n\n         \n\n       \n     \n   \n     \n       \n         The greatest toolbox for PHP developers \n       \n     \n     \n       \n         \n   Learn more \n   \n \n\n       \n     \n     \n      \n       \n         Git \n         Our main API is Git. You can do most operations by just pushing code or a config file. Then watching your cluster configure itself automatically. \n       \n      \n       \n         Command line \n         Manage your projects directly from within your terminal. Anything you can do in the Platform.sh UI, you can do in your terminal with our CLI. \n       \n      \n       \n         Composer \n         With built-in Composer support, no need to check in your vendor directory. Just push your composer.json to us and we\u2019ll handle it, just as it should be. \n       \n      \n     \n   \n     \n       \n         \n   Platform.sh\u2019s approach is very attractive. In my opinion it\u2019s something of a killer application. It allows one to bene\ufb01t from a production hosting solution integrated with a development and deployment work\ufb02ow.\u201d \n   Fabien Potencier,  Symfony Founder, and CEO, Symfony SAS \n \n\n       \n     \n   \n     \n       \n         \n           \n             \n               Whitepaper \n               Modern PHP Dev and Ops Field Guide \n              \n               Adopt DevOps current best practices \n              \n               \n   Download \n   \n \n \n             \n             \n               \n             \n           \n         \n       \n     \n   \n     \n       \n         Related documentation \n       \n     \n     \n       \n         \n   Check out our PHP and Symfony docs \n   \n \n \n       \n     \n     \n      \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Stacks", "title": "TYPO3 hosting for the cloud era has arrived ", "url": "https://platform.sh/stacks/typo3/", "documentId": "36b31e6f2b4be48657f85579bba20b943e578190", "text": "\n     \n       \n         TYPO3 hosting for the cloud era has arrived \n        \n         We\u2019ve worked with the TYPO3 Community to help you to get the most out of TYPO3 CMS. \n        \n         Discover how you can get a seamless experience between agile development and an enterprise-grade production TYPO3 projects. \n        \n        \n         \n   Try Typo3 CE now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           Designed for developers \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Focus on your sites, not DevOps \n           Start your TYPO3 projects quickly, and onboard developers with ease. Platform.sh manages infrastructure and operations so your team can focus on writing great code and launching sites. \n         \n       \n      \n       \n         \n           \n         \n         \n           Eliminate bottlenecks \n           Platform.sh creates a perfect replica of production for you to test every change, so you can launch successfully, anytime. Code and test in parallel with environments for every developer or team. \n         \n       \n      \n       \n         \n           \n         \n         \n           Scale predictably or on demand \n           Platform.sh Enterprise delivers zero-downtime scalability that lets you scale to meet peak traffic. \n         \n       \n      \n     \n   \n     \n       \n         \n       \n       \n         Deploy TYPO3 with ease and security \n\n        \n         TYPO3 is an open-source PHP-based CMS built for enterprise with extensive multilingual, workspace and versioning functionalities. It\u2019s highly scalable, extensible, and provides granular access rights for customized access and editorial control. \n        \n         Our  German region  offers data security and compliance. We\u2019ve got you covered on infrastructure, data security, and application lifecycle management. \n        \n\n        \n\n         \n          \n           \n   Try TYPO3 on Platform.sh for free \n   \n \n\n         \n\n       \n     \n   \n     \n       \n         The greatest toolbox for PHP developers \n       \n     \n     \n       \n         \n   Learn more \n   \n \n\n       \n     \n     \n      \n       \n         Git \n         Our main API is Git. You can do most operations by just pushing code or a config file. Then watching your cluster configure itself automatically. \n       \n      \n       \n         Command line \n         Manage your projects directly from within your terminal. Anything you can do in the Platform.sh UI, you can do in your terminal with our CLI. \n       \n      \n       \n         Composer \n         With built-in Composer support, no need to check in your vendor directory. Just push your composer.json to us and we\u2019ll handle it, just as it should be. \n       \n      \n     \n   \n     \n       \n         \n           \n             \n              \n               \n              \n               \n              \n             \n             \n              \n               \n                 \u00a0 \n                 \n                   \n                   Why you should migrate to the Cloud \n                  \n                   Matthias Schreiber, CTO of TYPO3 GmbH, shares some useful advice for companies looking to migrate to the Cloud. \n                  \n                   \n   Watch on YouTube \n   \n \n \n                 \n                 \n                   \n                     \n                   \n                 \n               \n            \n               \n                 \u00a0 \n                 \n                   \n                   TYPO3 on the partnership with Platform.sh \n                  \n                   Olivier Dobberkau, President of the TYPO3 Association, discusses the partnership between TYPO3 and Platform.sh and shares the exciting and innovative things TYPO3 is able to do now with Platform.sh. \n                  \n                   \n   Watch on YouTube \n   \n \n \n                 \n                 \n                   \n                     \n                   \n                 \n               \n            \n             \n             \n               \n               Previous \n             \n             \n               \n               Next \n             \n           \n         \n       \n     \n   \n     \n       \n         Related documentation \n       \n     \n     \n       \n         \n   Check out our PHP and Typo3 docs \n   \n \n \n       \n     \n     \n      \n       \n         Getting started with TYPO3 \n         Move your TYPO3 sites to the cloud with a few lines of configuration. \n         View \n       \n      \n       \n         Platform.sh PHP configuration reader \n         This library provides a streamlined and easy to use way to interact with a Platform.sh environment. It offers utility methods to access routes and relationships more cleanly than reading the raw environment variables yourself. \n         View \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Stacks", "title": "Deploy Strapi-the leading open-source headless CMS alternative to Contentful ", "url": "https://platform.sh/stacks/strapi/", "documentId": "9ed5816af95a8b2faca99f951c48bf2a3f139a60", "text": "\n     \n       \n         Launch Strapi with one click \n        \n         Strapi  gives developers a robust API to power anything from websites to apps to set-top boxes with an extensible, editor-friendly content management system (CMS) interface. \n        \n         Platform.sh now enables you to deploy new Strapi headless CMS instances on demand, with zero infrastructure investment. \n        \n        \n         \n   Try Strapi now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           Open-source headless CMS is the future of digital experience \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Combine Strapi CMS with your favorite front-end \n           Only Platform.sh enables you to run Strapi  and  your front end of choice\u2014from  Gatsby  to  Hugo \u2014in a single project with multiple services and an integrated development workflow. \n         \n       \n      \n       \n         \n           \n         \n         \n           Keep an eye on your whole stack \n           Run your decoupled site end-to-end without worrying about integrating SaaS tools like Contentful. Choose any of our global hosting regions to keep your content close to your users. \n         \n       \n      \n       \n         \n           \n         \n         \n           Batteries Included \n           Power Strapi with  MongoDB  or  PostgreSQL , out-of-the-box with no add-on costs or multiple hosting providers required. Platform.sh supports  14 different services  at no extra cost, enabled with simple configuration. \n         \n       \n      \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh\u2013deploying the future of content with one click \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Out of the lab: Node.js 12 features graduate from experimental status \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Off with its head! Headless Chrome as a service. \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Stacks", "title": "Magento enterprise ecommerce hosting ", "url": "https://platform.sh/stacks/magento/", "documentId": "8fb6ccaf2a6d7ce380db093b4a7f29e701479e64", "text": "\n     \n       \n         Powering Magento for enterprise \n        \n         Magento selected Platform.sh to run the Magento Commerce Cloud for a very good reason: our PaaS provides more than a managed service. Take advantage of the infrastructure and DevOps benefits of Magento Commerce Cloud for your Magento 1 site\u2014even while transitioning to Magento 2. \n        \n        \n         \n   Try Magento2 CE now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           Magento-specific platform-as-a-service \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Power tools, built in \n           Build and deploy your Magento 1 or Magento 2 site with our Git-driven workflow and built-in managed services. \n         \n       \n      \n       \n         \n           \n         \n         \n           Test and launch every campaign flawlessly \n           Platform.sh creates a perfect replica of production for you to test every change, every campaign, so you can launch successfully, anytime (even on Black Friday). \n         \n       \n      \n       \n         \n           \n         \n         \n           Scale predictably or on demand \n           Zero-downtime scalability lets you meet peak traffic demands whether they\u2019re seasonal or driven by flash sales. \n         \n       \n      \n     \n   \n     \n       \n         \n       \n       \n         Magento on Platform.sh: performance + flexibility \n\n        \n         Get the best of all worlds:  high-performance, replicable delivery of your Magento 1 or Magento 2 storefront and the flexibility to run the architecture that suits your needs. \n        \n         The Platform.sh polyglot PaaS enables your team to run your Magento site as a full stack or headless commerce application, alongside Node.js, Angular, React, or other front ends. \n        \n         \n        \n\n        \n\n         \n          \n           \n   Start free trial \n   \n \n\n         \n\n       \n     \n   \n     \n       \n         Powerful services included \n       \n     \n     \n       \n         \n   Learn more about Enterprise \n   \n \n\n       \n     \n     \n      \n       \n         Multicloud global deployment \n         You can deploy your Magento applications Amazon Web Services, Google Cloud, Microsoft Azure, and Orange Cloud, worldwide. \n       \n      \n       \n         Critical performance and high availability \n         Everything runs on high-IOPs SSDs, which, when combined with our powerful integrated caching (both at the HTTP layer and the database layer), makes this the highest-performing Magento platform available. \n       \n      \n       \n         Around-the-clock enterprise support \n         Our team is  your  team\u2014across five continents, 14 timezones, 24x7. \n       \n      \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Adobe Summit 2019: take-aways \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Contact", "title": "Contact Us ", "url": "https://platform.sh/contact/", "documentId": "e91d035ceee137c64e0ade8db9218b4a26c51506", "text": "\n   \n     \n\n       \n         \n           Get in touch \n           Our dedicated sales and service teams are standing by, ready to assist. \n         \n       \n\n       \n\n        \n         \n           \n             \n               \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n             \n\n             Contact  Sales \n             Want to learn more about how Platform.sh can help your company or organization? Our customer advocates can help you find the right solution. \n             \n              Request more info\n             \n           \n         \n        \n\n        \n         \n           \n             \n               \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n             \n\n             Contact  Customer Care \n             Need technical help?  Creating a support ticket  is the fastest way. You can also leave a note for our Customer Care team here. \n             \n              Contact Customer Care\n             \n           \n         \n        \n       \n\n     \n   \n \n   \n     \n       \n \n \n \n \n \n \n \n \n \n\n \n       Join us on Slack \n     \n     \n       \n        Our customers and engineers hang out on our  public Slack channel  where you can get tips on using Platform.sh. Mention  @platform  to grab our team's attention. You can also find a trove of how-tos on our  Platform.sh Community Site . \n       \n     \n   \n \n   \n     \n       Office Locations \n     \n   \n \n   \n     \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n     \n     \n       France \n       131 Boulevard de S\u00e9bastopol \n       75002 Paris, France \n       +33 (0) 1 40 09 30 00 \n     \n     \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n     \n     \n       Germany \n       Marienstr. 90-92 \n       50825 K\u00f6ln, Germany \n       +49(0) 221 169 23136 \n     \n   \n \n   \n     \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n     \n     \n       United Kingdom \n       Kemp House | 152 City Road \n       London, EC1V 2NX UK \n       +44(0) 203 815 7962 \n     \n     \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n     \n     \n       United States \n       255 Kansas St \n       San Francisco, CA 94103 \n       +1 818-369-4597 \n     \n   \n \n   \n     \n       \n   Manage your Platform.sh\u2028 communication preferences \n  \n   \n     Manage preferences \n     \n   \n  \n \n\n     \n   \n \n   \n     \n       Create a Platform.sh project now \n      \n      \n       \n         Get started \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Stacks", "title": "Build and run Laravel apps on a true PaaS ", "url": "https://platform.sh/stacks/laravel/", "documentId": "32c2e903f49ba87dcc31dc60ed230c7c7b90f36b", "text": "\n     \n       \n         Enteprise grade Laravel hosting \n        \n         Laravel is one of the fastest growing PHP frameworks. Built for PHP 7.x with an elegant command-line driven workflow, it\u2019s the perfect match for Platform.sh. \n        \n        \n         \n   Try Laravel now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           Multiapp and microservices \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Git-driven, built for microservices \n           Check in your Laravel app, and bring along its friends ReactJS, Angular, Python, and more. Merge to master and you\u2019re running and scaling in production. \n         \n       \n      \n       \n         \n           \n         \n         \n           Instant clones for every branch \n           Do away with staging bottlenecks. Now every git branch gets a perfect byte-for-byte replica of prod, data included, in seconds. \n         \n       \n      \n       \n         \n           \n         \n         \n           Batteries included \n           Services from Redis to MongoDB to Elasticsearch are available with a few lines of YAML. No add-ons or management required. \n         \n       \n      \n     \n   \n     \n       \n         \n       \n       \n         Modern hosting  for modern PHP \n\n        \n         From day one we\u2019ve supported PHP 7.0 , PHP 5.x, and best of breed PHP tooling, integrated Composer support. You can run PHP 7.1 ZTS with the Pthreads extension for fully threaded workers. Or the ext/event extension for high-performance, asynchronous PHP (with support for ReactPHP and AmPHP). \n        \n\n        \n\n         \n          \n           \n   Start free trial \n   \n \n\n         \n\n       \n     \n   \n     \n       \n         The greatest toolbox for PHP developers \n       \n     \n     \n       \n         \n   Learn more \n   \n \n\n       \n     \n     \n      \n       \n         Git \n         Our main API is Git. You can do most operations by just pushing code or a config file. Then watching your cluster configure itself automatically. \n       \n      \n       \n         Command line \n         Manage your projects directly from within your terminal. Anything you can do in the Platform.sh UI, you can do in your terminal with our CLI. \n       \n      \n       \n         Composer \n         With built-in Composer support, no need to check in your vendor directory. Just push your composer.json to us and we\u2019ll handle it, just as it should be. \n       \n      \n     \n   \n     \n       \n         \n           \n             \n               whitepaper \n               Modern PHP Dev and Ops Field Guide \n              \n               Adopt DevOps current best practices \n              \n               \n   Download \n   \n \n \n             \n             \n               \n             \n           \n         \n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             It's July 2018, do you know what your PHP is? \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Going Local with Lando \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             When your job is too tough for cron \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Stacks", "title": "Drupal hosting, devops, development tools and more, for agencies, enterprise, higer ed ", "url": "https://platform.sh/stacks/drupal/", "documentId": "14ad6a8b6459f3e251f1581d631001ac2a8b2cd6", "text": "\n     \n       \n         Hosting and advanced workflow for any Drupal architecture \n        \n         Drupal 7? Drupal 8? Drupal plus Node.js, Angular, React, or Python? You can host, build, and manage them on a single platform. \n        \n        \n         \n   Try Drupal 8 now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           Drupal+ To infinity and beyond. \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Power tools \n           Build sites faster with full Composer, Drupal Console, and Drush support. Our Composer-based builds for Drupal 8 are unique among PHP hosts. \n         \n       \n      \n       \n         \n           \n         \n         \n           Faster Drupal development \n           Start Drupal projects from any install profile or distribution. Use Drush make files to add modules and themes with one line of code. \n         \n       \n      \n       \n         \n           \n         \n         \n           Batteries included \n           Everything on SSDs. Built-in Redis, Elasticsearch, and Solr support for every account. Integrated Blackfire.io support and a managed CDN make your Drupal sites faster. Deliver on AWS, Google Cloud, Azure, and more. \n         \n       \n      \n     \n   \n     \n       \n         \n       \n       \n         Go beyond the clouds \n\n        \n         We run some of the largest Drupal 8 sites on the planet, handling massive traffic with incredible speed. Our Drupal customers have reported positive results on their live service and performance: \n        \n\n        \n         \n          \n           90% reduction in devops \n          \n           15X faster user acceptance testing \n          \n           40% uplift in developer productivity \n          \n           20X more deployments \n          \n         \n        \n\n         \n          \n           Got tens, hundreds, or thousands of Drupal sites to manage? Our tools help you manage Drupal at scale. \n          \n           \n   Get a quote \n   \n \n\n         \n\n       \n     \n   \n     \n       \n         Use the tools you love \n       \n     \n     \n       \n         \n   Learn more \n   \n \n\n       \n     \n     \n      \n       \n         Git \n         Our main API is Git. You can do most operations by just pushing code or a config file. Then watching your cluster configure itself automatically. \n       \n      \n       \n         Command line \n         Manage your projects directly from within your terminal. Anything you can do in the Platform.sh UI, you can do in your terminal with our CLI. \n       \n      \n       \n         Composer \n         Built-in Composer support, no need to check in your vendor directory. Just push your composer.json to us and we\u2019ll handle it, just as it should be. \n       \n      \n     \n   \n     \n       \n         \n           \n             \n               Whitepaper \n               Modern Drupal Dev and Ops Field Guide \n              \n               Adopt modern Drupal development \n              \n               This whitepaper outlines all you need to know for your team to fully embrace DevOps\u2014 and never look back. Follow six key steps to make it simpler and easier for your teams to increase the performance of the application they build. \n              \n               \n   Download \n   \n \n \n             \n             \n               \n             \n           \n         \n       \n     \n   \n     \n       \n         Related documentation \n       \n     \n     \n       \n         \n   More Drupal docs \n   \n \n \n       \n     \n     \n      \n       \n         Drupal 8 on Platform.sh \n         Run your D8 site with Composer support out of the box. Our quick-start will get your site up and running in no time. \n         View \n       \n      \n       \n         Using Drush \n         Platform.sh extends the \u201cSwiss Army Knife\u2122\u201d for Drupal with power tools like automatic aliases. \n         View \n       \n      \n       \n         Drupal 7 support \n         Run your Drupal 7 site, including support for Redis, Solr, SimplSAML, and more. \n         View \n       \n      \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Stacks", "title": "Deploy and managed eZ Platform sites ", "url": "https://platform.sh/stacks/ez/", "documentId": "a3538ca890e5469b0dfa675d6ab8c6b39ea9434e", "text": "\n     \n       \n         eZ hosting in collaboration with eZ Systems \n        \n         In partnership with eZ Systems, the company behind the eZ Platform content management system, Platform.sh enables you build and scale quality websites and apps fast. Discover how you can get a seamless experience between agile development and an enterprise grade production environment for eZ projects. \n        \n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           Deliver development velocity \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Focus on your sites, not DevOps \n           Start eZ Platform projects quickly, and onboard developers with ease. Platform.sh manages infrastructure and operations so your team can focus on writing great code and launching sites. \n         \n       \n      \n       \n         \n           \n         \n         \n           Eliminate bottlenecks \n           Platform.sh creates a perfect replica of production for you to test every change, so you can launch successfully, anytime. Code and test in parallel with environments for every developer or team. \n         \n       \n      \n       \n         \n           \n         \n         \n           Scale predictably or on demand \n           Platform.sh Enterprise delivers zero-downtime scalability that lets you scale to meet peak traffic. \n         \n       \n      \n     \n   \n     \n       \n         \n       \n       \n         Deploy eZ Platform \u2014 easily \n\n        \n         eZ Platform is a PHP CMS based on the  Symfony  full-stack framework. Open source and enterprise grade, eZ Platform provides developers with unmatched flexibility to build, extend, and scale websites, apps, and other digital products. \n        \n         eZ\u2019s premium edition, eZ Enterprise, extends eZ Platform with a set of editorial tools including in-page editing, flexible workflows, and automated content scheduling. \n        \n\n        \n\n         \n          \n           \n   Discover eZ Platform Enterprise Edition \n   \n \n\n         \n\n       \n     \n   \n     \n       \n         The greatest toolbox for PHP developers \n       \n     \n     \n       \n         \n   Learn more \n   \n \n\n       \n     \n     \n      \n       \n         Git \n         Our main API is Git. You can do most operations by just pushing code or a config file. Then watching your cluster configure itself automatically. \n       \n      \n       \n         Command line \n         Manage your projects directly from within your terminal. Anything you can do in the Platform.sh UI, you can do in your terminal with our CLI. \n       \n      \n       \n         Composer \n         With built-in Composer support, no need to check in your vendor directory. Just push your composer.json to us and we\u2019ll handle it, just as it should be. \n       \n      \n     \n   \n     \n       \n         \n           \n             \n               overview \n               A tour of eZ Platform on Platform.sh \n              \n               With only a few clicks, developer teams can deploy eZ Platform without needing to worry about server setup, software configuration, or installation. Check out this 3-minute demo by David Christian Liedle, Technical Product Manager at eZ Systems to see how quick and easy it is to get started. \n              \n               \n   Watch the demo \n   \n \n \n             \n             \n               \n             \n           \n         \n       \n     \n   \n     \n       \n         Related documentation \n       \n     \n     \n       \n         \n   More PHP and eZ docs \n   \n \n \n       \n     \n     \n      \n       \n         Running your eZ Platform app on Platform.sh \n         Hosting your existing eZ Platform site is, well, easy. Follow this guide to basic configuration of eZ for Platform.sh. \n         View \n       \n      \n       \n         Local development with eZ Launchpad \n         Thanks to eZ Launchpad you are able to be work 100% locally, and sync data between Platform.sh and your local environment. \n         View \n       \n      \n       \n         Platform.sh PHP configuration reader \n         This library provides a streamlined and easy to use way to interact with a Platform.sh environment. It offers utility methods to access routes and relationships more cleanly than reading the raw environment variables yourself. \n         View \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Stacks", "title": "Ruby microservices, Ruby on Rails, Sinatra, Discourse, and more ", "url": "https://platform.sh/stacks/ruby/", "documentId": "2e88542be78d5b73b06200fc14993ae877bbbd4a", "text": "\n     \n       \n         Enteprise grade Ruby hosting \n        \n         Batteries-included, hassle-free Ruby Deployment. MariaDB, PostgreSQL, MongoDB, Redis, Elastic Search, RabbitMQ and SSL with no extra cost or effort. \n        \n        \n         \n   Try Ruby on Rails now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           Multiapp and microservices \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Git-driven, built for microservices \n           Check in your Ruby app, and bring along its friends ReactJS, Angular, Python, and more. Merge to master and you\u2019re running and scaling in production. \n         \n       \n      \n       \n         \n           \n         \n         \n           Instant clones for every branch \n           Do away with staging bottlenecks. Now every git branch gets a perfect byte-for-byte replica of prod, data included, in seconds. \n         \n       \n      \n       \n         \n           \n         \n         \n           Batteries included \n           Services from Redis to MongoDB to Elasticsearch are available with a few lines of YAML. No add-ons or management required. \n         \n       \n      \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Apache Kafka now available \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Even more batteries included: Platform.sh configuration libraries \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks, Day 4: Jekyll - the SSG that started it all \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Stacks", "title": "WordPress hosting, secure, fast, flexible ", "url": "https://platform.sh/stacks/wordpress/", "documentId": "baab3a007fe9cb5bd03f990317cbcc2410e34d4b", "text": "\n     \n       \n         Enterprise WordPress: no limits \n        \n         Get started in minutes, scale to millions of users. WordPress on Platform.sh is fast, secure, and more flexible than wordpress.com. \n        \n        \n         \n   Try WordPress now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           Use the tools you love \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           PHP microservices: No add-on required \n           Our main API is Git. You can do most operations by just pushing code or a config file. Then watch your cluster configure itself automatically. \n         \n       \n      \n       \n         \n           \n         \n         \n           Instant staging environments for continuous deployments \n           Manage your projects directly from within your terminal. Anything you can do in the Platform.sh UI, you can do in your terminal with our CLI. \n         \n       \n      \n       \n         \n           \n         \n         \n           Batteries included \n           Built-in Composer support, no need to check in your vendor directory. Just push your composer.json to us and we\u2019ll handle it. Just as it should be. \n         \n       \n      \n     \n   \n     \n       \n         \n       \n       \n         Enterprise-grade WordPress\u2014 from development to delivery \n\n        \n         WordPress is one of the most popular open-source projects, powering millions of websites worldwide. But it can be a challenge to manage from both security and scaling perspectives. \n        \n         Our approach to WordPress hosting takes all the hassle out of managing a single instance\u2014or hundreds. Our Git-powered workflow enables full automation. No more updating each instance by hand. No more vulnerable versions in production. \n        \n         Every plan includes free and automatically generated SSL certificates on every environment, and our read-only filesystem and web application firewall (WAF) mitigate against common exploit vectors. \n        \n\n        \n\n         \n          \n           \n   Start free trial \n   \n \n\n         \n\n       \n     \n   \n     \n       \n         Powerful services included \n       \n     \n     \n       \n         \n   Learn more \n   \n \n\n       \n     \n     \n      \n       \n         ElasticPress, Redis with no add-ons \n         Every plan includes Elasticsearch and Redis (on top of MySQL, of course). No need for integrating with external services to add functionality to your site. \n       \n      \n       \n         Predictable pricing and performance \n         Everything you need to run a secure, high-performance WordPress installation is included in the price. And everything is managed for you. \n       \n      \n       \n         Zero-config deployments \n         You don\u2019t need to learn how to deploy and manage Redis, Elasticsearch, or any other service. When you backup your site, we make a full copy of everything. \n       \n      \n     \n   \n     \n       \n         \n           \n             \n               Whitepaper \n               Modern PHP Dev and Ops Field Guide \n              \n               Adopt DevOps current best practices \n              \n               \n   Download \n   \n \n \n             \n             \n               \n             \n           \n         \n       \n     \n   \n     \n       \n         Related documentation \n       \n     \n     \n       \n         \n   More PHP Docs \n   \n \n \n       \n     \n     \n      \n       \n         Getting started with WordPress and Composer \n         We recommend managing your WordPress codebase dependencies with Composer. Find out how to adapt your existing site, or get started with the Platform.sh WP template. \n         View \n       \n      \n       \n         Run Redis with Wordpress on Platform.sh \n         Speed up your WordPress sites using  WP Redis . It\u2019s just a few lines of configuration away and fully managed. \n         View \n       \n      \n       \n         Platform.sh PHP configuration reader \n         LLibrary provides a streamlined and easy to use way to interact with the Platform.sh environment. Utility methods enable you to access routes and relationships more cleanly than reading the raw environment variables yourself. \n         View \n       \n      \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Open source software ROI for your organization \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Blog ", "url": "https://platform.sh/blog/", "documentId": "bf26595eb50b447a85f31875f6ccc60c58e7ec0f", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             15 Apr 2020 \n           \n          \n\n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         Recent posts \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       One source, many apps \n\n      \n       \n         23 Apr 2020\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh + Lando: local dev in perfect sync with the cloud \n\n      \n       \n         21 Apr 2020\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Improving access and security for your projects \n\n      \n       \n         20 Apr 2020\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Supporting the Drupal Association and community through the COVID-19 crisis \n\n      \n       \n         17 Apr 2020\u00a0 \n           \n              Author:\n              Fred Plais\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Taking your application to SaaS: a business decision \n\n      \n       \n         17 Apr 2020\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       The monolith myth: Why all-in-one tech suites aren't the solution \n\n      \n       \n         13 Apr 2020\u00a0 \n           \n              Author:\n              Chris Yates\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Building a resilient digital foundation with Drupal + Gatsby  \n\n      \n       \n         09 Apr 2020\u00a0 \n           \n              Author:\n              Tara Arnold\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Health notifications for all \n\n      \n       \n         08 Apr 2020\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       A 10x increase in enterprise valuation over two years: a SaaS case study  \n\n      \n       \n         07 Apr 2020\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       The suddenly online conference: an Indy Cloud Conf case study \n\n      \n       \n         02 Apr 2020\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       The container is a lie! \n\n      \n       \n         24 Mar 2020\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       A note to Platform.sh customers about COVID-19 preparedness \n\n      \n       \n         17 Mar 2020\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Voil\u00e0! You\u2019re now a distributed workforce \n\n      \n       \n         13 Mar 2020\u00a0 \n           \n              Author:\n              Fred Plais\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh\u2013deploying the future of content with one click \n\n      \n       \n         03 Mar 2020\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Some Platform.sh customer sites may be redeployed due to issues with Let\u2019s Encrypt certificates \n\n      \n       \n         03 Mar 2020\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       PHPun with FFI: Getting Rust-ic \n\n      \n       \n         02 Mar 2020\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       PHPun with FFI: C PHP run \n\n      \n       \n         26 Feb 2020\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       PHPun with FFI: Just enough C \n\n      \n       \n         20 Feb 2020\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Out of the lab: Node.js 12 features graduate from experimental status \n\n      \n       \n         14 Jan 2020\u00a0 \n           \n              Author:\n              Nick Anderegg\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       What\u2019s new with Jakarta NoSQL? (Part II) \n\n      \n       \n         08 Jan 2020\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Multisite on Platform.sh: the how and why \n\n      \n       \n         06 Jan 2020\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Migrating your applications made simple \n\n      \n       \n         19 Dec 2019\u00a0 \n           \n              Author:\n              Chad Carlson\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Sharpen your tusks: it's time for Python 3.8 \n\n      \n       \n         18 Dec 2019\u00a0 \n           \n              Author:\n              Nick Anderegg\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Faster, friendlier analytics for your PHP project \n\n      \n       \n         12 Dec 2019\u00a0 \n           \n              Author:\n              Mathias Bolt Lesniak\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       What's new with Jakarta NoSQL? (Part I) \n\n      \n       \n         11 Dec 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Next-gen Platform.sh Partner Program launches \n\n      \n       \n         10 Dec 2019\u00a0 \n           \n              Author:\n              Aaron Porter\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Announcing streaming deploy hooks and SSH access \n\n      \n       \n         04 Dec 2019\u00a0 \n           \n              Author:\n              Chad Carlson\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Confidence in your ecommerce platform makes Black Friday a non-event \n\n      \n       \n         02 Dec 2019\u00a0 \n           \n              Author:\n              Chris Yates\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       PHP 7.4 is just a  git push  away \n\n      \n       \n         28 Nov 2019\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Supersize app containers in your dev environments \n\n      \n       \n         20 Nov 2019\u00a0 \n           \n              Author:\n              Chad Carlson\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n \n    \n     \n         \u00ab\u00ab \n     \n    \n     \n     \u00ab \n     \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     1 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     2 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     3 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     11 \n    \n    \n     \n     \u00bb \n     \n    \n     \n         \u00bb\u00bb \n     \n    \n \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "What service types does Platform.sh support?", "url": "https://platform.sh/product/demos/real-services/", "documentId": "7a2bbded8bfd4381ad56bfd4004ef52ce0b622cf", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         What service types does Platform.sh support? \n       \n     \n     \n       \n         \n          \n             configuration \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       A PaaS provider should be able to provide real production environments and services for developers that use it.\n       \n    \n    \n       There's no sense in a testing environment containing demo services that can't accomplish everything that production can.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Each environment on Platform.sh is configured production-ready. Runtimes are set to the same standard,\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      and the same goes for each of our managed services.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      At any point if your application requires the newest version of any service, upgrading them in most cases is as easy as a single\n\n  \n\n\n  \n    \n\n      character change in your  services.yaml  file.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Each service you define is exposed only to your application, not to the web, making everything secure by default.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Stacks", "title": "The best PaaS for Python development and delivery ", "url": "https://platform.sh/stacks/python/", "documentId": "78b28d5fabf37ea3634ce6b834845c232e954116", "text": "\n     \n       \n         Enterprise-grade Python hosting \n        \n         Batteries-included, hassle-free Python deployment. MariaDB, PostgreSQL, MongoDB, Redis, Elasticsearch, RabbitMQ, and SSL\u2014all included at no extra cost. \n        \n         With native microservices capabilities and support for your Python, Java, and Node.js dependencies, building strong, scalable apps is easy. \n        \n        \n         \n   Try Django2 now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           By Python lovers, for Python lovers. \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Python microservices. No add-on required. \n           Build sites and apps faster with native support for pipenv, and yaml-driven configuration of PostgreSQL, Redis, Elasticsearch, and more. Build and deploy your Python apps without having to manage add-ons from a 3rd party marketplace. \n         \n       \n      \n       \n         \n           \n         \n         \n           Instant staging environments for continuous deployments \n           Platform.sh solves the issue by giving you an immutable infrastructure for hosting your Python projects. We build your hosting environment from scratch every time you  git push , so you always know what you\u2019re getting at deploy time. You tell us what you project needs to fly, and we\u2019ll take it from there. \n         \n       \n      \n       \n         \n           \n         \n         \n           Batteries Included \n           We support both Python 2 and 3, and our Git-based workflow makes it a snap to test out your Python 2 application\u2019s readiness for Python 3. \n         \n       \n      \n     \n   \n     \n       \n         \n       \n       \n         The complete solution to develop and deploy Python apps \n\n        \n         Platform.sh is a second-generation PaaS. We drew inspiration from the simplicity of a Git-based development and deployment workflows and took it further. Rather than having to rely on paid, third-party integrations to add services like Solr or Redis to your project, we include a list of hosted services with every project\u2014by default. No surprise add-ons. No support tickets. \n        \n         We also fulfill the promise of Git as a team-oriented development tool. You\u2019re no longer limited to just hosting your master environment. Every branch of your project can have a completely functional hosting environment you can modify as you see fit, with just a few lines of configuration. \n        \n         Collaboration has never been this easy. \n        \n\n        \n\n         \n          \n           \n   Start free trial \n   \n \n\n         \n\n       \n     \n   \n     \n       \n         The greatest toolbox for Python developers \n       \n     \n     \n       \n         \n   Learn more \n   \n \n\n       \n     \n     \n      \n       \n         Git \n         Our main API is Git. You can do most operations by just pushing code or a config file. Then watching your cluster configure itself automatically. \n       \n      \n       \n         Command line \n         Manage your projects directly from within your terminal. Anything you can do in the Platform.sh UI, you can do in your terminal with our CLI. \n       \n      \n       \n         Integrated \n         Platform.sh is integrated with GitHub and Bitbucket and can generate new environments on demand for every pull or merge request. \n       \n      \n     \n   \n     \n       \n         Related documentation \n       \n     \n     \n       \n         \n   More Python docs \n   \n \n \n       \n     \n     \n      \n       \n         Accessing services with Python \n         How to call Solr, Redis, MySQL, and more from your Python application. \n         View \n       \n      \n       \n         CMS and framework templates \n         There\u2019s no easier way to get started developing on Platform.sh. Check out our library of templates for Django, Python 3, or uWSGI. \n         View \n       \n      \n       \n         Platform.sh configuration library \n         Library provides a streamlined and easy-to-use way to interact with a Platform.sh environment. Find utility methods to access routes and relationships more cleanly than reading the raw environment variables yourself. \n         View \n       \n      \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Sharpen your tusks: it's time for Python 3.8 \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Apache Kafka now available \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Even more batteries included: Platform.sh configuration libraries \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Demos", "title": "What is the Platform.sh approach to security?", "url": "https://platform.sh/product/demos/security/", "documentId": "efdceb5a7a12171facde989d346b8a90ee7ee28c", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         What is the Platform.sh approach to security? \n       \n     \n     \n       \n         \n          \n             security \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Whether you're running an online store or a learning management systems, the security of your application needs to be the highest priority.\n       \n    \n    \n       Teams need to be able to know and verify that their sites are secure at all times.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      On Platform.sh, every change to your application code, infrastructure or otherwise, has to occur through Git.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      This ensures that even when team members commit broken code, it can always be traced back to the source.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      So you can find out what was changed, who made that change, and when was it applied to production, all visible in the Git log.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Additionally, Platform.sh containers are read-only post-build, making it impossible for anyone to \"fix it live\" and forget it. That\n\n  \n\n\n  \n    \n\n      means that even if the site has been compromised, the code can't be.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      What's more, Platform.sh provides strict controls to limit who can contribute to which environments right from the beginning.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      So even though you can add a user to commit to one branch,\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      they are incapable of merging into  master  without proper review first. Because no one likes broken code,\n\n  \n\n\n  \n    \n\n      even on Fridays.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Security is on us from the start. You pick the major version for your runtimes and services, and we'll handle every\n\n  \n\n\n  \n    \n\n      security update to the those services, and to the operating system for you.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      This is secure-by-design architecture at your disposal. We run hardened Linux kernels, and all packages originate from internal\n\n  \n\n\n  \n    \n\n      signed repositories, and every operation we make is fully automated and logged. We keep a restrictive firewall in place where only\n\n  \n\n\n  \n    \n\n      HTTP, HTTPS and SSH are allowed inside with fully isolated services. By default, all users are unprivileged to access environments\n\n  \n\n\n  \n    \n\n      via SSH, and access is granted on an environment-by-environment basis. Two factor authentication can be enforced for every login to\n\n  \n\n\n  \n    \n\n      your team's dashboard, and TLS certificates are provided for free for every project and environment as soon as they are created.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Platform.sh also comes compliant with GDPR, BDSG, and PIPEDA, and our cloud partners are certified under multiple compliance\n\n  \n\n\n  \n    \n\n      frameworks themselves.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Webinar", "title": "Webinars ", "url": "https://platform.sh/webinars/", "documentId": "82719641f3c50bdc61961e5cda36bb4e6c797144", "text": "\n     \n       \n         \n          \n           Tue, 28 Apr, 2020\n           18:00 CEST/ \n            \n           \n            var zone = new Date().toLocaleTimeString('en-us',{timeZoneName:'short', timeZone: \"America/Los_Angeles\"}).split(' ')[2];\n            var usaTime = new Date(\"2020-04-28T18:00:00+02:00\").toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n            usaTime = new Date(usaTime);\n            document.write(usaTime.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})+' '+zone);\n           \n           \n             \n          \n         \n         PHP 7.4: The new hotness \n         \n         \n   Register \n   \n \n \n       \n       \n         \n        \n        \n          \n          \n           \n          \n          \n          \n          \n           \n             \n           \n          \n        \n         \n       \n     \n   \n     \n       \n         \n           \n             Upcoming \n           \n           \n             Past \n           \n         \n       \n     \n   \n     \n       \n         \n        \n        \n        \n        \n         \n          \n           \n          \n          \n            \n            \n            \n            \n             \n               \n             \n          \n           \n           30 Apr 2020\u00a0 \n           How the University of Missouri cost-effectively migrated its fleet of web apps to the cloud \n           Register \n         \n        \n        \n        \n         \n          \n           \n          \n          \n            \n            \n            \n            \n             \n               \n             \n          \n           \n           05 May 2020\u00a0 \n           In the Cloud Economy, Containers are the New Currency \n           Register \n         \n        \n        \n        \n         \n          \n           \n          \n          \n            \n            \n            \n            \n             \n               \n             \n          \n           \n           12 May 2020\u00a0 \n           PaaS protection: how to keep your digital agency fit in challenging times \n           Register \n         \n        \n        \n         \n       \n     \n\n     \n       \n         \n        \n         \n           \n          \n          \n          \n            \n            \n            \n             \n               \n             \n          \n           \n           23 Apr 2020\u00a0 \n           Your checklist for running thousands of websites \n           View \n         \n        \n         \n           \n          \n          \n          \n            \n            \n            \n             \n               \n             \n          \n           \n           16 Apr 2020\u00a0 \n           FleetOps: aligning business and technology for success at scale \n           View \n         \n        \n         \n           \n          \n          \n          \n            \n            \n            \n             \n               \n             \n          \n           \n           14 Apr 2020\u00a0 \n           Jakarta EE Meets NoSQL at the cloud age \n           View \n         \n        \n         \n           \n          \n          \n          \n            \n            \n            \n             \n               \n             \n          \n           \n           07 Apr 2020\u00a0 \n           Containerize your cloud applications in a few lines of code without Kubernetes \n           View \n         \n        \n         \n           \n          \n          \n          \n            \n            \n            \n             \n               \n             \n          \n           \n           31 Mar 2020\u00a0 \n           Beginner Probot: building and hosting GitHub Apps on Platform.sh \n           View \n         \n        \n         \n           \n          \n          \n          \n            \n            \n            \n             \n               \n             \n          \n           \n           26 Mar 2020\u00a0 \n           Architecting cloud computing solutions with Java \n           View \n         \n        \n         \n           \n          \n          \n          \n            \n            \n            \n             \n               \n             \n          \n           \n           19 Mar 2020\u00a0 \n           Tools and tips for remote teams that protect your privacy \n           View \n         \n        \n         \n           \n          \n          \n          \n            \n            \n            \n             \n               \n             \n          \n           \n           18 Mar 2020\u00a0 \n           Front-end performance testing in practice \n           View \n         \n        \n         \n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Four days, four languages, four frameworks on Platform.sh ", "url": "https://platform.sh/blog/four-days-four-languages-four-frameworks-on-platformsh/", "documentId": "fdda5588f0bf7c51f33cbe089d81be73bd3428d5", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Four days, four languages, four frameworks on Platform.sh \n         \n\n        \n         \n            \n              \n          \n         \n         26 Feb 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh is well-known as the premier platform for developing and delivering applications in Drupal, WordPress, Symfony, Typo3, EZ, and Magento. We\u2019ve even partnered directly with  Magento ,  \nSymfony , and  EZ Systems  to help them deliver their own SaaS offerings. What you may not know is how easy it is to run  just about anything  on Platform.sh. \n Our man in Bordeaux and Director of Customer Solutions Guillaume Moigneau recently went on a spree documenting how to get four new frameworks\u2014in four different languages\u2014up and running on Platform.sh. \n The four couldn\u2019t be more different. A Java CMS and three popular static site generators (SSGs), written in Golang, React, and Ruby. \n Today, we\u2019ll start with  Brightspot CMS . Brightspot is a full-featured, open-source web content management system (WCMS) written in Java and backed by MySQL and Solr\u2014two services that snap in easily to any application on Platform.sh with just a few lines of configuration. \n Here, we\u2019ll get Brightspot running with Apache Tomcat, MySQL, and Solr, with a Maven build process. \n As with most projects, the pattern to get the app running on Platform.sh is quite simple. \n \n Check out or download a local copy of the application. \n Add the requisite  .platform.app.yaml ,  services.yaml , and  routes.yaml  files that define the application configuration and build process, supporting data services and routing rules, respectively. \n Push your local repo to Platform.sh. \n For you, there\u2019s no step 4. Platform.sh takes care of containerizing your apps and services and deploying them on our grid. No CI/CD pipelines to build and manage, no Kubernetes or IaaS-specific knowledge required. \n \n Let\u2019s skip ahead a bit to focus on a few things that are unique about running a Java/Tomcat application on Platform.sh. \n Running Tomcat \n Sometimes, Java can be tricky to run on a PaaS, especially for applications that use Tomcat.  But it can be done by taking advantage of Platform.sh\u2019s ability to run multiple application containers in a single project. \n We\u2019ve put together a ready-to-run  example repository for Brightspot  that shows how to make it work.  Let\u2019s go through some of the key points. \n The project has two application containers,  tomcat  and  app , each in their own directory and with their own  .platform.app.yaml  file.  The Tomcat container is just a bare Java container with a few config files.  Everything else happens in the  build hook .  It\u2019s a bit long, but very straightforward; it downloads Tomcat and the Tomcat MySQL connector from scratch and installs them, then adds the config files that were included in the repository.  On start, then, it runs the Catalina command to start Tomcat. \n That process may not be particularly fast, but that\u2019s why it\u2019s on its own container: it only needs to run once.  On subsequent deploys as long as there are no changes to the config files or Tomcat version that container won\u2019t be rebuilt, just paused momentarily.  It can still be upgraded or tweaked at any time by simply modifying one of the provided config files and redeploying. \n The user application lives in  app , and contains enough information to compile the source code for the application.  It doesn\u2019t run itself, though.  Instead, its  build hook  uses Maven to download all of the application\u2019s dependencies locally, compile the application, and then move the Maven build cache into the application.  The deploy hook, then does this: \n  # Make sure we are using the local repository.\nexport MAVEN_OPTS=\"-Dmaven.repo.local=$PLATFORM_APP_DIR/.m2/repository\"\nmvn \\\n\t--offline \\\n\t-Dtomcat.username=admin \\\n\t-Dtomcat.password=$PLATFORM_PROJECT_ENTROPY \\\n\t-Dmaven.tomcat.url=$(./tomcat-url)/manager/text \\\n\ttomcat7:redeploy-only\n What that does is install the built application into Tomcat, over the network connection between the two containers.  Tomcat fully supports that sort of runtime update.  The app container also has a relationship defined to let it access Tomcat: \n relationships:\n    tomcat: tomcat:http\n Finally, the  routes.yaml  file directs all incoming HTTP requests to Tomcat: \n https://{default}/:\n  type: upstream\n  upstream: tomcat:http\n The  app  container isn\u2019t even used at all after deploy is completed!  Tomcat itself, with a freshly updated copy of the compiled application, is responsible for serving all web requests. \n Brightspot-specific configuration \n Databases \n We run Brightspot on top of MySQL and Solr. Two relationships are defined in the  tomcat  application\u2019s  .platform.app.yaml  file: \n      database :   \"mysql:mysql\" \n      solr :   \"solr4:solr\" \n You can find the Brightspot services configurations in  tomcat/context.xml . We use the  com.psddev.dari.db.AggregateDatabase  storage class with two delegates:  sql  and  solr . \n Solr is configured with the Brightspot  solrconfig.xml  and  schema.xml  located in  .platform/solr/ .  (See our  Solr documentation  for details.) \n Example project \n The example repository includes the Brightspot  hello-world  application from their documentation.  Feel free to remove and replace it with your own source. \n There\u2019s one quirk with the way Brightspot is configured.  Maven\u2019s   mvn dependency:go-offline  sometimes has an issue installing transitive dependencies (those that are depended on by something our code depends on).  For that reason the  junit ,  guava ,  findbugs ,  httpcomponents , and  httpclient  dependencies need to be  specified explicitly . \n Brightspot mode \n Brightspot production mode is disabled by default. You can enable it in  tomcat/context.xml . \n The  isAutoCreateUser  option is enabled by default. Feel free to change this in the same file. \n The editor default path is  cms/ . \n Starting a new project \n To make trying out Brightspot on Platform.sh as easy as possible, the  template linked before  is ready-to-run. \n To begin a new project based on this template, follow these three simple steps: \n \n \n Clone the repository locally.  You may optionally remove the  origin  remote or remove the  .git  directory and re-init the project if you want a clean history. You\u2019ll want to commit all your local changes. \n \n \n Create a new project  through the Platform.sh user interface, and select \u201cImport an existing project\u201d when prompted. \n \n \n Now you can access your newly created project.\n \n On the wizard, click  Git remote  and copy that string. \n \n \n \n Run the provided Git commands to add a Platform.sh remote, and push the code to the Platform.sh repository. It\u2019ll look like this, which you\u2019ll run inside your local Git repo. \n git remote add platform <project ID>@git.<region>.platform.sh:<project ID>.git\ngit push platform master\n `` \n \n \n That\u2019s it!  You now have a working \u201chello world\u201d level project you can build on. \n Accessing the project \n The  /  path defaults to a 404; that\u2019s normal since the example application has no default home page.  Instead, go to  /cms/ .  Until the first user is created, it will show a registration form to create the admin user, after which you\u2019ll have access to start creating pages. \n The  dari  debug tools are accessible at  /_debug/  as long as the application is running in debug mode. \n Tomorrow  come back to check out the second post in our series about running  Hugo , the Go-based static site generator, on Platform.sh. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh launches white-label SaaS factory \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Demos", "title": "Platform.sh overview", "url": "https://platform.sh/product/demos/platform-overview/", "documentId": "29b583fd569a14e79f73d853dbc36726f5255a1f", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         Platform.sh overview \n       \n     \n     \n       \n         \n          \n             environments \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Platform.sh is a second-generation Platform-as-a-Service built especially for continuous deployment.\n       \n    \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Platform.sh gives you the power you need to develop and deliver your greatest\n\n  \n\n\n  \n    \n\n      ever applications.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Because today, your application isn't just code. It's the coordination of its infrastructure,\n\n  \n\n\n  \n    \n\n      its data, and all of the developers and contributors that make it run.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      All of these factors fall under DevOps, and Platform.sh makes managing DevOps\n\n  \n\n\n  \n    \n\n      as easy as managing code, making development teams up to 40% more efficient.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      But how does it all work?\n\n  \n\n\n  \n    \n\n      Our configuration allows you to drop in your application, with no need to\n\n  \n\n\n  \n    \n\n      re-architecture. Add a YAML file to your repository to define your application's\n\n  \n\n\n  \n    \n\n      runtime, start command, and its build and deploy process.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Add another  services.yaml  file that defines which of our managed services\n\n  \n\n\n  \n    \n\n      you app depends on, such as a MySQL database, which can be defined in only a\n\n  \n\n\n  \n    \n\n      few lines of code.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      You can integrate existing workflows and mirror your repository on GitHub, triggering\n\n  \n\n\n  \n    \n\n      deployments with every pull request. The Plaform.sh CLI can get your code migrated with a\n\n  \n\n\n  \n    \n\n      single command.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      With your branches tied to Platform.sh environments, every branch is an exact clone of\n\n  \n\n\n  \n    \n\n      all of your production data and infrastructure.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      You can scale your application up or down on a new live environment,\n\n  \n\n\n  \n    \n\n      run your tests, and merge - allowing you to increase resources at any time to meet demand.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      With clear configuration and dedicated isolated environments for every change to your application,\n\n  \n\n\n  \n    \n\n      you can onboard developers more quickly, and everyone gets their own testing server.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Anytime you want to sync your development environments with up-to-date production data, all\n\n  \n\n\n  \n    \n\n      it takes is a single command.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      No matter which region or cloud your project is on.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Or how many projects you manage.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Managing fleets of applications is as easy as managing one.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      So you can focus on scaling your business, instead of on your infrastructure.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Just like Magento, Symfony, and Orange have, with Platform.sh.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "B2B Software-as-a-Service companies: accelerate your journey to enterprise! ", "url": "https://platform.sh/blog/b2b-softwareasaservice-companies-accelerate-your-journey-to-enterprise/", "documentId": "b5ea661431fa71adc1b78a7ea1fadd2886fd9ce2", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Fred Plais \n                  \n                   CEO \n                  \n                  \n                 \n            \n          \n         \n         04 Dec 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         There\u2019s a common pattern within many fast-growing B2B Software-as-a-Service (SaaS) startups. (Think about Slack, Twilio, Atlassian, Github.) One can start to use their product for little money (sometimes even for free).  And  they have a model that can scale to accommodate enterprise customers that enables the Fortune 500 to invest millions of dollars in their SaaS subscriptions. But these companies didn\u2019t begin their journeys in the enterprise market; they got started by selling to startups or small teams within larger organizations that often carefully maneuvered their way around their companies\u2019 purchasing policies (expensing software on a manager\u2019s credit card, for example [yes, I\u2019ve seen this many times!]), before they really worked hard to create an attractive, lucrative enterprise offering.  \n For a SaaS B2B company, starting in the enterprise market is hard. And in the early days, working with small and midsize businesses (SMBs), especially startups, is often a more direct path to growth. Smaller organizations are easier to work with; sure, they\u2019re careful about their spend, but they make decisions quickly and can move equally quickly to adopt your software. Sales cycles are short. SMBs are less reluctant to buy from an early stage company. And their requirements rarely include expensive and challenging compliance programs that larger companies must consider.  \n From a revenue perspective, selling to SMBs also means that your average Annual Contract Value (ACV) will probably be between the three and five-figure range, and your churn rate will be higher than if you sell to enterprise customers that tend to remain on a platform longer. So, scaling your SaaS business above US$10 million (let alone to US$100 million) of Annual Recurring Revenue (ARR) becomes extremely challenging\u2014if you narrowly \u00a0focus on only that market segment. With an average ACV of US$5,000/year, you need to convince and retain 20,000 customers to reach US$100M in ARR. That\u2019s a  lot  of customers. It\u2019s likely your business will scale much faster if you can progressively increase your ACV numbers and acquire customers who'll spend between six and eight-figure ACV numbers on your platform. \n What does it take to adapt your SaaS offering to meet enterprise requirements?  \n 1. \u00a0Enterprise customers will expect to have the ability to customize their own experiences or plug your software into their stack. Your software needs to enable that level of integration/customization, and moreover, enable service integration companies to customize your software for these customers. Consider organizations like Salesforce, NetSuite, Magento, WordPress, Acquia. Having delivery partners that make money on top of your software is a golden asset! Suddenly, you\u2019re not the only one selling your product. You\u2019re at the center of a partner ecosystem that will feed you with business opportunities, that value their relationship with you, and want to promote your business. That\u2019s a win/win. And to get there, your software will need to provide an API-first approach, rock-solid documentation, and ideally, open-source capabilities to customize the software on a Platform-as-a-Service (Paas). But also, these IT services will need to be managed, and offering a PaaS to build and manage their customization will be of the essence. We\u2019ll get back to that. \n 2. Multitenant capabilities. There are two approaches to run a scalable number of customers on your SaaS. You can decide to deal with multitenancy on the software level  or  you can deal with it on the infrastructure level. Having one software instance for each of your customers\u2014and trust the infrastructure to deal with the complexity of multitenancy\u2014comes with a lot of very solid pros when you serve the enterprise segment.  \n \n\t \n\t It reduces the  noisy neighbors  issue by cleanly segregating and protecting all your customers.  \n\t \n\t \n\t It accommodates the management of in-depth customization for each customer, and can operate at scale (all customers have their separate software instance, so the range of changes that can be executed becomes really wide).  \n\t \n\t \n\t It enables your software to run on-prem, supporting large customers that still need everything in their own data centers, or on different public-clouds. All of a sudden, use cases\u2014like sovereign cloud options in Europe, Russia, or China\u2014can be delivered. These options aren\u2019t merely nice to have; if you want to do business in these geographies, it\u2019s a mandate for your software to run on a local cloud. \n\t \n \n 3. Provide compliance, security, and quality assurance (QA) plans. Every enterprise organization comes with its own requirements: ISO 27001, GDPR in Europe, SOC1, SOC2, PCI for e-commerce/transactions, HIPAA for healthcare, FedRAMP for government). These are critical, mandatory, or reassuring quality points for large enterprise customers currently managing businesses in a world where security threats have never been so pervasive and challenging to combat. With behemoths like Equifax flirting with bankruptcy and major breaches in the most tech-savvy companies in the world (like Facebook), this topic is now top of mind for every CIO and tech purchasing leader. To be a viable option for enterprise customer consideration, you must be prepared to offer the compliance, security, and QA plans enterprise customer industries demand. \n The nice thing about a PaaS approach\u2014and specifically about Platform.sh and our white label product\u2014is that it can help B2B SaaS companies build an enterprise offering\u00a0faster than ever before by providing a much smoother route for every one of these three major requirements.  \n Helping software entrepreneurs transform\u2014profitably \n Platform.sh has provided leading software companies like Magento in e-commerce, eZ Systems in web content management, and Symfony, the PHP framework, with a platform that\u2019s fully branded and delivers a unified experience for  their  partners, who develop customizations and manage the customer runtime. These hundreds of delivery partners simply log in to the platform, test all their custom code, and deploy to the production runtime on a daily basis. They do this on a platform that runs on the Infrastructure of their choice (AWS, Azure, Orange/Huawei, Google Cloud), in the geographic region of their choice. All the infrastructure and cloud management are provided by the platform: security, compliance, GDPR, hourly back-ups, 24x7 monitoring\u2014even end-user support. By leveraging Platform.sh, these companies have managed to maintain a laser-focus on providing the best software experience for their end customers while leaving the management of cloud infrastructure complexity to the Platform.sh product. Leveraging Platform.sh has enabled these software vendors to improve their value propositions, master their cost of goods sold, and boost their ACV significantly. Wins on all fronts. \n At Platform.sh, our mission is to help software entrepreneurs\u2014whether they were born in SaaS or started an open-source project, or have on-prem software they want to cloudify\u2014to become powerful, cloud-enabled software companies. With our help, our partner, Magento, transformed its business from an on-premises software business to a cloud-first business in three years, boosting its valuation from US$200 million (when they were sold by eBay) to US$1.7 billion only four years later, when they were acquired by Adobe.  \n We\u2019re committed to helping many other software vendors make their own transformations. Check out our  White label SaaS Factory offer , and please reach out you\u2019re interested in seeing how we can help your SaaS business move up the ladder to reach enterprise customers. \n Ready to learn more? \n Register  for the 12 December Transform your software into a profitable SaaS cloud business webinar  \n Explore  the Platform.sh White-label Saas Factory \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh launches white-label SaaS factory \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh ", "url": "https://platform.sh/blog/how-a-marketing-guy-quickly-built-a-python-microservice-chatbot-app-for-drift-on-platformsh/", "documentId": "c18133b67d392e54837472ada136c3266923c756", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Yates \n                  \n                   VP Marketing \n                  \n                  \n                 \n            \n          \n         \n         12 Dec 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         A few weeks ago, it was snowing. Actually, snow isn\u2019t quite the right descriptor. It was a chilly mixture of snow, rain, and sleet, with a helping of wind for good measure. ( Lovely  weather outside my Boston-area home office.) Instead of going outdoors (and who would), I sat down at my desk and decided to scratch an itch our marketing automation pipeline had been giving me. \n \n At Platform.sh, we use  Drift , a conversational marketing platform built by smart folks here in Boston. Through Drift, Platform.sh customers and prospects can have direct 1:1 conversations with our team to find out more about how they can use our product. What makes Drift really great? It has a  robust API . \n This got me to thinking: Platform.sh, like Drift, has a  really robust API . In fact, it\u2019s so robust we\u2019ve built our web UI and  Platform Shell Command Line Interface (CLI)  on it. What if I could connect Drift to Platform.sh, so our team would know what projects a user might be working on, enabling us to better support them? Now,  that  would be the makings of an afternoon coding project\u2014a project that went from an idea to cloud deployment in just a few of hours. \n Let me set the stage by sharing that most of the time I spent on this project was invested in re-learning how to write Python code, something I hadn\u2019t done since my  NASA days , eight years ago! In fact, I couldn\u2019t remember the last time I wrote any code, mostly because getting development workflows and environments ready\u2014the stuff you have to do before getting real features written\u2014had become such a hassle. \n Platform.sh turned out to be the easiest part of the journey\u2014getting my little service up and running, from development through to production. \n The Drift team has provided not only a well-documented, full-featured API, but has also provided SDKs in several languages,  including Python . Platform.sh supports most modern languages including Golang, Node.js, Ruby, PHP, and Java*, but I chose Python based on my familiarity (however rusty), and the batteries-included philosophy that the community shares with Platform.sh (incidentally, much of our product is also Python-based!). \n Creating a project: somewhere for my code to run \n Creating a new project on Platform.sh is simple. You can even  start a trial for free , no credit card required. With Platform.sh, I don\u2019t need to worry about managing servers, virtual machines, or even containers\u2014I just choose the amount of resources I think I\u2019ll need for my app, which I can always change later. \n \n You can also create and manage your projects from the  Platform Shell CLI  or the  API . \n Once my project was created, I did a couple of things. Platform.sh is based around Git, which makes it a powerful tool for teams\u2014and even individual devs\u2014to manage their workflows. Because apps aren\u2019t just the code you write, we use Git to manage the configuration of infrastructure, continuous integration, and deployment, too. \n First, in the Platform.sh web UI, I created a new branch called \u2018dev,\u2019 where I could work on my new idea. We use the master branch for production, so you\u2019ll want to create other branches for your work in progress. \n \n Then, you\u2019ll want to check out your project; you can do this via Git directly, or with the Platform.sh CLI, like so: \n \n Building a simple app, no specific architecture required \n My app is about as simple as you can get. It listens for a webhook from Drift, triggered when Drift identifies a user. When that happens, my little Python app sends a query to the  Platform.sh users API . \n As I mentioned earlier, everything that can be done through the Platform.sh web UI can be done through the API.\u00a0So while here, I\u2019m just returning information about the user, their projects (if any), and a few other things. I could also use the Platform.sh API as part of a white-label service, much like our friends at  Symfony  have done. \n Finally, I used the Drift conversation API to return a message to Drift, so that anyone interacting with a user can have context about how they\u2019re using Platform.sh. \n \n Soon, I\u2019ll get this code posted on Github for those that want to see for themselves. But the most important point I want to make is this: to get an app running on Platform.sh required no adaptations. By using features like  inheritable variables , I was able to keep any application- specific configuration (like API tokens, for example) out of my code, and manageable across multiple environments\u2014say, if I wanted to have my development or staging branches use credentials for a Drift sandbox, instead of production. \n \n I don\u2019t even need to know how these variables work on Platform.sh; I can just access them with my language\u2019s standards, in this case, Python\u2019s os.getenv(). \n Telling Platform.sh about what my app needs to run \n Adapting the code I want to run to whatever environment it\u2019s running on is often challenging, and frankly, as a rusty and lazy developer, it\u2019s where I often throw up my hands in frustration. Ensuring that your code is going to build and run when you send it to the cloud is often the last step in the process, or even something that other teams [like ops] do. But it shouldn\u2019t be. Getting my app running on Platform.sh requires only a few simple steps: \n \n\t \n\t Add a  .platform.app.yaml  file to my app\u2019s directory. This file describes how to build, deploy, and run my app, which dependencies need to be included, and what the app should be called. For this simple app, I\u2019ve got only one service (the Python script), and my .platform.app.yaml looks like this: \n\t \n \n \n \n\t \n\t Add a .platform directory, and in it, a routes.yaml, and  services.yaml  file. As you might expect, the routes.yaml file defines how your services communicate with the outside world, and the services.yaml file enumerates any additional services that your app needs. You might need a SQL database, like MySQL or Postgres, a queue, like Redis or RabbitMQ, or a document database, like Mongo. Listing these services in \u00a0your services.yaml and creating relationships in your .platform.app.yaml are all you need to do. \n\t \n \n Once you commit and push your code, Platform.sh takes care of running any build and deploy processes you\u2019ve specified in your .platform.app.yaml file, then containerizes and deploys each service. \n Pushing the code, and running it \n \n That stream of text actually shows a lot: I now have a microservice running on Platform.sh, deployed directly from Git. In this case, I\u2019ve made a simple change, and Platform.sh has deployed my app. For more complex microservices apps, we only deploy things that have changed. Updating a front-end React component? No need to rebuild everything. Platform.sh just deploys the changes to that specific component. In our new UI, you can see how our Drifty app has been deployed to its own container, separate from the router (admittedly, it\u2019s just about the simplest application ever, with no stateful services needed). \n \n Unlike a purely functional Platform-as-a-Service (fPaaS, e.g., AWS Lambda, Azure Functions), Platform.sh has also taken care of automatically deploying an SSL certificate for any branch I\u2019ve created, so I can go directly to my application, share it with colleagues, test it, and so forth. Using the platform ssh command, I can also SSH directly to my app container to view logs, interact live, and more. \n Speaking of sharing, we know that real-life development is a team sport. For every project, and every branch you create within that project, you can delegate access as a developer (contributor), reader, or admin. With the Platform.sh API, you can also  integrate these rules  within your broader workflow. \n Summing it up \n I\u2019ve just scratched the surface of what\u2019s possible with Platform.sh, and hopefully I\u2019ve given you some insights into how it can help teams focus on developing features to solve business problems\u2014rather than building a toolchain and managing servers, VMs, or containers. \n If the marketing guy can deliver a real service to production with minimal effort and no worry, just about anyone can. \n \n\t Don't take my word for it,  try it now . \n\t Check out the  Platform.sh API reference . \n\t Explore  Platform.sh docs . \n \n P.S. Special thanks to the Drift API team, specifically Chris Buonocore, for being super responsive on Slack and adding new functionality on the fly to make this work. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh launches white-label SaaS factory \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to update a fleet of websites with the Platform.sh API or command line", "url": "https://platform.sh/product/demos/operating-scale/", "documentId": "8f6663fb109fae3808b9aff09861f2e2c35b555f", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to update a fleet of websites with the Platform.sh API or command line \n       \n     \n     \n       \n         \n          \n             scaling \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Operating at scale doesn't just mean meeting the demands of a single application.\n       \n    \n    \n       As your business grows, you may have multiple application across an entire fleet that each require diligent management.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Managing fleets introduces new and large problems. How do you efficiently provision new sites? How do you manage updates for each site\n\n  \n\n\n  \n    \n\n      when needed across the whole fleet? How do you control your developer's access to each of them? What's the support lifecycle for problems?\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      With Platform.sh, provisioning can be completely automated since our API is fully scriptable.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Platform.sh doesn't restrict your updates workflow at all, so you can decide to test pushed updates on dedicated testing branches.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Through the CLI or our API, controlling developer access can be fully automated as well, giving you fine grained control over who\n\n  \n\n\n  \n    \n\n        can contribute to which project.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      And when it comes to support, Platform.sh provides 24/7 infrastructure support where you can open and share pressing tickets we can\n\n  \n\n\n  \n    \n\n      escalate quickly to resolution.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      All of this makes Platform.sh a one-stop solution for web hosting. As the number of sites your team manages grows, the greater the\n\n  \n\n\n  \n    \n\n      benefit you'll receive from the fully automatable solutions we provide.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Impressum", "title": "Impressum ", "url": "https://platform.sh/impressum/", "documentId": "bce4ade50c9e9976bab900cf3f1fdb861fdd3e12", "text": "\n     \n       \n         Platform.sh is a service provider according to \u00a7 5 TMG: \n Email:  sayhello@platform.sh \n Platform.sh \n Marienstr 90 \n Germany \n Telephone: +49(0) 221 169 23136 \n Directors: Andrew Melck, Kieron Sambrook-Smith \n Seat: Platform.sh GmbH, \n Marienstr. 90 50825 \n K\u00f6ln Register Court: Amtsgericht K\u00f6ln \n Commercial Register Number: HRB 87687 \n VAT ID: DE306204759 \n Data Privacy \n Joey Stanford  (joey@platform.sh) \n Information Security and Data Protection Officer \n https://platform.sh/security \n Headquarters \n Platform.sh SAS \n 131, Boulevard de S\u00e9bastopol, \n Paris, 75002 France \n Telephone: +33 (0) 1 40 09 30 00 \n Management: Fred Plais \n For additional information, please visit  https://platform.sh/contact \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Adobe Summit 2019: take-aways ", "url": "https://platform.sh/blog/2019/adobe-summit-2019/", "documentId": "51e54efc3f3c0c6428cbf5f06d2d51b149244a6c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Adobe Summit 2019: take-aways \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Doug Goldberg \n                  \n                   Senior Vice President of Operations and Global Alliances \n                  \n                  \n                 \n            \n          \n         \n         01 Apr 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The Platform.sh team just returned from our first Adobe Summit. As\nregular Magento Imagine participants, we had enjoyed that event\u2019s\nsmaller family feel. But we\u2019re happy to report the size and scope of the\nAdobe Summit (even with more than 17,000 attendees) retained a strong\ncommunity vibe. \n As you\u2019d imagine from an event like the Summit, there were key\nannouncements. Like the integration of Magento and Marketo into Adobe\nExperience Cloud. And the renewed energy of the Adobe/Microsoft\npartnership. But the Summit gave us the opportunity to achieve several\ngoals: \n \n \n Deepen relationships with Adobe staff (whom we\u2019d been talking with for months) by meeting in person \n \n \n Continued planning with our Magento partners \n \n \n To see the integration of Magento Commerce Pro into Adobe Commerce Cloud \n \n \n Looking ahead \n After the announcement of Adobe Commerce Cloud, we walked over to the\nExhibit Hall to take a look at the new demo. We saw the macro-services\nframework of the future: content-driven commerce with Adobe Experience\nManager on the front end and Magento Commerce Pro on the back end, with\nMarketo integrated in for good measure. It\u2019s a macro-services approach\nthat might, one day, turn into a microservices approach. \n The booth was staffed by all the familiar Magento faces we\u2019ve\ncollaborated with for years. We accomplished all of our Summit goals,\nincluding quality time spent planning with Magento Ops, Engineering,\nSupport, and Pre-Sales teams. All of this made our time at the Summit\nwell worth the trip. \n It was equally rewarding to see the Adobe and Magento ecosystems begin\nto merge. We ran into many familiar faces from Corra, Lyons, Blue Acorn,\nShipperHQ, Jamersan, and more. We imagine next year will bring even more\nof the Magento ecosystem into the Adobe fold. \n We enjoyed our week and will definitely be back next year. With that\nsaid, we still can\u2019t wait until Magento Imagine in six weeks. Hope to\nsee you in Vegas! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Open source software ROI for your organization \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Off with its head! Headless Chrome as a service. ", "url": "https://platform.sh/blog/2019/off-with-its-head-headless-chrome-as-a-service/", "documentId": "ab080a7b3ce42e0824c7ab4243c5964b5b4c3a66", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Off with its head! Headless Chrome as a service. \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chad Carlson \n                  \n                   Technical Writer \n                  \n                  \n                 \n            \n          \n         \n         12 Jun 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We\u2019re excited to share  Headless Chrome  as a service is now available on Platform.sh. When used in combination with the Node.js library  Puppeteer , you get a powerful, new automated testing tool that enables you to: \n \n Easily generate PDFs and screenshots of your application, including emulating your site\u2019s appearance on mobile devices. \n Crawl each page of an application, and potentially compare screenshots between branches, to ensure new features don\u2019t result in changes to your UI. \n Simulate user action. Puppeteer provides programmatic control over keyboard input, form completion, mouse position and clicks. So you could, for example, verify the checkout process of your eCommerce application\u2014end-to-end. \n Monitor and verify that client-side Javascript and resource handling is working as you intended. \n \n In this post, we\u2019ll show you how to configure Headless Chrome on a project, and then build an  ExpressJS  application that shows off some of the cool new capabilities your applications can have with a headless browser at its disposal. \n Configuring Headless Chrome \n Headless Chrome can be configured on an existing Platform.sh project like any other of our maintained services. First, define the  chrome-headless  container in your  .platform/services.yaml : \n headless : \n     type :   chrome-headless : 73 \n along with a complementary relationship definition in  .platform.app.yaml : \n relationships : \n   headless :   \"headless:http\" \n Using  Puppeteer  with the Platform.sh  Config Reader  library requires Node.js 10 or later \n type :   nodejs : 10 \n and that both libraries are included in your  package.json  dependencies: \n   \"dependencies\" :   { \n    \"platformsh-config\" :   \"^2.0.0\" , \n    \"puppeteer\" :   \"^1.14.0\" , \n  } \n If you\u2019re running a Node.js application, you\u2019re all set! Projects running with non-Node.js runtimes will also have to upgrade the current installation of Node.js, which can be done easily using the Node Version Manager and by following the instructions outlined in our  documentation . \n Using Headless Chrome and Puppeteer \n Now that we\u2019ve configured Headless Chrome on Platform.sh, let\u2019s build something that uses Puppeteer! \n Generating PDFs \n First, we\u2019re going to create a simple Node.js application using the  ExpressJS  framework that generates a PDF of any URL a user provides. We\u2019ve already defined our  services.yaml  above, so let\u2019s define our application in  .platform.app.yaml : \n name :   nodejs \n \n type :   nodejs : 10 \n \n relationships : \n   headless :   \"headless:http\" \n \n crons : \n   cleanup : \n     spec :   '*/30 * * * *' \n     cmd :   rm   pdfs/* \n \n web : \n   commands : \n     start :   \"node index.js\" \n \n mounts : \n   \"/pdfs\":  \"shared:files/pdfs\" \n \n disk :   512 \n We define the mount  /pdfs , which will become the writable directory our generated PDFs will be saved to, and a\n cron  job that empties that directory every thirty minutes. We can also define a single upstream and redirect route for our application  nodejs  in  .platform/routes.yaml : \n \"https://{default}/\" : \n     id :   main \n     type :   upstream \n     upstream :   \"nodejs:http\" \n \n \"https://www.{default}/\" : \n     type :   redirect \n     to :   \"https://{default}/\" \n Writing the ExpressJS application \n We start our application by running  index.js , so let\u2019s write one now that uses the ExpressJS framework. It defines an application  app  that uses  public/  as a static source for the application\u2019s stylesheet and  express-rate-limit  to set limits on the number of requests users can make to the site. It also requires the local file  /examples/pdfs.js , which will actually use Puppeteer to generate PDFs\u2014but more on that later. \n const   fs   =   require ( 'fs' ) ; \n const   uuidv4   =   require ( 'uuid/v4' ) \n const   express   =   require ( 'express' ) ; \n const   rateLimit   =   require ( \"express-rate-limit\" ) ; \n const   platformsh   =   require ( 'platformsh-config' ) ; \n\n // Require locals\n var   pdfs   =   require ( \"./examples/pdfs.js\" ) ; \n\n // Build the application\n var   app   =   express ( ) ; \n\n // Define static source for css\n app . use ( express . static ( __dirname   +   '/public' ) ) ; \n\n // Set rate limits\n app . set ( 'trust proxy' ,   1 ) ; \n\n const   limiter   =   rateLimit ( { \n  windowMs :   15   *   60   *   1000 ,   // 15 minutes\n   max :   50   // limit each IP to 50 requests per windowMs\n } ) ; \n\n // Apply to all requests\n app . use ( limiter ) ; \n Next, we can define what the front page will look like with a little HTML that provides an input field named  pdfURL , where users can provide a website URL from which the PDF will be generated. \n // Define the index route\n app . get ( '/' ,   ( req ,   res )   =>   { \n  res . writeHead ( 200 ,   { \"Content-Type\" :   \"text/html\" } ) ; \n  res . write ( ` <html>\n <head>\n    <title>Headless Chrome on Platform.sh</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\" />\n </head>\n <body>\n \n <h1>Headless Chrome on Platform.sh</h1>\n \n <h2>Generate a PDF of a page</h2>\n \n Click 'Submit' to generate a PDF of the <a href=\"https://platform.sh/\">Platform.sh website</a>, or paste in another URL.\n \n </br></br>\n \n <form method=\"get\" action=\"/pdfs/result\">\n    <input type=\"text\" name=\"pdfURL\" value=\"https://platform.sh/\">\n    <input type=\"submit\">\n </form>\n ` ) ; \n    res . end ( ` </body></html> ` ) ; \n } ) \n We\u2019ll have to define the route associated with the above form\u2019s action,  /pdfs/result . It includes an async function that generates a random identifier, which will be a part of the output PDF file name, and then passes that identifier with the  pdfURL  to another function within  /examples/pdfs.js  called  makePDF() . The resulting file is then downloaded within the user\u2019s browser. \n // Define PDF result route\n app . get ( '/pdfs/result' ,   async   function ( req ,   res ) { \n  // Create a randomly generated ID number for the current PDF\n   var   pdfID   =   uuidv4 ( ) ; \n  // Generate the PDF\n   await   pdfs . makePDF ( req . query [ 'pdfURL' ] ,   pdfID ) \n  // Define and download the file\n   const   file   =   ` pdfs/ ${ pdfID } .pdf ` ; \n  res . download ( file ) ; \n } ) ; \n Finally, we use Config Reader to tell  app  which port it should be listening on: \n // Get PORT and start the server\n let   config   =   platformsh . config ( ) ; \n app . listen ( config . port ,   function ( )   { \n    console . log ( ` Listening on port  ${ config . port } ` ) \n } ) ; \n\n Generating PDFs with Puppeteer \n Now that our base application is written, let\u2019s use Puppeteer to generate PDFs in  examples/pdfs.js : \n const   puppeteer   =   require ( 'puppeteer' ) ; \n const   platformsh   =   require ( 'platformsh-config' ) ; \n var   exports   =   module . exports   =   { } ; \n\n // Create an async function\n exports . makePDF   =   async   function   ( url ,   pdfID )   { \n\n    try   { \n        // Connect to chrome-headless using pre-formatted puppeteer credentials\n         let   config   =   platformsh . config ( ) ; \n        const   formattedURL   =   config . formattedCredentials ( \"headless\" ,   \"puppeteer\" ) ; \n        const   browser   =   await   puppeteer . connect ( { browserURL :   formattedURL } ) ; \n\n        // Open a new page to the given url and create the PDF\n         const   page   =   await   browser . newPage ( ) ; \n        await   page . goto ( url ,   { waitUntil :   'networkidle2' } ) ; \n        await   page . pdf ( { \n            path :   ` pdfs/ ${ pdfID } .pdf ` , \n            printBackground :   true \n        } ) ; \n        await   browser . close ( ) ; \n\n        return   browser \n\n    }   catch   ( e )   { \n        return   Promise . reject ( e ) ; \n    } \n } ; \n We can pass Config Reader\u2019s formatted credentials for Puppeteer as  browserURL  in  puppeteer.connect()  to connect to our Headless Chrome service container and instantiate a new headless browser. Then, we can use Puppeteer to create a new page, visit the user-provided URL, and call  page.pdf()  to generate a PDF of that site. \n Here, we also call two parameters:  path , saving the PDF with our unique identifier to the mount  pdfs/ , and  printBackground , an optional parameter that will include the site\u2019s background images in the resulting file. Many more options are available within  page.pdf() , so check the  documentation  for more details. \n Our application can now receive a URL provided by a user and generate a PDF from it. Before we push to Platform.sh, we can add another interesting feature that comes with Headless Chrome: screenshots. \n Creating screenshots with Puppeteer \n First, we can modify  .platform.app.yaml  with another mount where the screenshots will be saved \n mounts : \n   \"/pdfs\":  \"shared:files/pdfs\" \n   \"/screenshots\":  \"shared:files/screenshots\" \n and append our  cron  job to remove its files periodically, like we did with  pdfs \n crons : \n   cleanup : \n     spec :   '*/30 * * * *' \n     cmd :   rm   pdfs/*   &&   rm   screenshots/* \n In a file called  examples/screenshots.js  we can connect to Headless Chrome as we did before, but, instead, use  page.screenshot()  to take a screenshot of a given URL and save it to the new mount  screenshots/  with its own unique name. \n const   puppeteer   =   require ( 'puppeteer' ) ; \n const   devices   =   require ( 'puppeteer/DeviceDescriptors' ) ; \n const   platformsh   =   require ( 'platformsh-config' ) ; \n\n var   exports   =   module . exports   =   { } ; \n\n // Create an async function\n exports . takeScreenshot   =   async   function   ( url ,   screenshotID ,   emulateMobile = false )   { \n\n    try   { \n        // Connect to chrome-headless using pre-formatted puppeteer credentials\n         let   config   =   platformsh . config ( ) ; \n        const   formattedURL   =   config . formattedCredentials ( \"headless\" ,   \"puppeteer\" ) ; \n        const   browser   =   await   puppeteer . connect ( { browserURL :   formattedURL } ) ; \n\n        // Open a new page to the given url and take the screenshot\n         const   page   =   await   browser . newPage ( ) ; \n        // Emulate mobile device if selected\n         if   ( emulateMobile )   { \n            await   page . emulate ( devices [ 'iPhone 6' ] ) ; \n        } \n        await   page . goto ( url ) ; \n        await   page . screenshot ( { \n            fullPage :   true , \n            path :   ` screenshots/ ${ screenshotID } .png ` \n        } ) ; \n\n        await   browser . close ( ) ; \n\n        return   browser \n\n    }   catch   ( e )   { \n        return   Promise . reject ( e ) ; \n    } \n } ; \n There are a few new things happening here. First,  page.screenshot()  comes with its own set of parameters that can be modified.  fullPage  is set to  true , generating a PNG of the entire web page instead of just what\u2019s seen in a browser window. You can change the default image format from PNG to JPEG, along with many other options described in the  page.screenshot() documentation . \n Second, we\u2019ve included a new parameter in our exported function  takeScreenshot :  emulateMobile . If no value is provided,  takeScreenshot()  will create a full page PNG of the given URL. Otherwise, Puppeteer will use its  DeviceDescriptors  module to modify  browser  so it emulates the view of the web page as it would appear on a mobile device using  page.emulate() , which, in this case, is an iPhone 6. \n All we need to do to include this new feature in our application is to modify  index.js  to require the new module, \n // Require locals\n var   pdfs   =   require ( \"./examples/pdfs.js\" ) ; \n var   screenshots   =   require ( \"./examples/screenshots.js\" ) ; \n add a new form in our front page with an input field called  screenshotURL , \n < h2 > Take a screenshot of a page < / h2 > \n\nClick 'Submit' to create a screenshot of the  < a   href = \"https://platform.sh/\" > Platform.sh website < / a > , or paste in another URL.\n\n < / br > < / br > \n\n < form   method = \"get\"   action = \"/screenshots/result\" > \n    < input   type = \"text\"   name = \"screenshotURL\"   value = \"https://platform.sh/\" > \n    < input   type = \"submit\" > \n    < / br > \n  < label   class = \"checkbox\" > < input   type = \"checkbox\"   name = \"emulateMobile\"   value = true >  Emulate mobile device < / label > < br > \n < / form > \n and define the route for its result that calls  takeScreenshot() \n // Define Screenshots result route\n app . get ( '/screenshots/result' ,   async   function ( req ,   res ) { \n  // Create a randomly generated ID number for the current screenshot\n   var   screenshotID   =   uuidv4 ( ) ; \n  // Generate the screenshot\n   await   screenshots . takeScreenshot ( req . query [ 'screenshotURL' ] ,   screenshotID ,   req . query [ 'emulateMobile' ] ) \n  // Define and download the file\n   const   file   =   ` screenshots/ ${ screenshotID } .png ` ; \n  res . download ( file ) ; \n } ) ; \n Deploy on Platform.sh \n Define all of the dependencies in a  package.json \n { \n  \"name\" :   \"chrome_headless\" , \n  \"version\" :   \"1.0.0\" , \n  \"description\" :   \"A simple example for taking screenshots and PDFs with Puppeteer and headless Chrome on Platform.sh\" , \n  \"main\" :   \"index.js\" , \n  \"scripts\" :   { \n    \"test\" :   \"echo \\\"Error: no test specified\\\" && exit 1\" \n  } , \n  \"author\" :   \"Chad Carlson\" , \n  \"license\" :   \"MIT\" , \n  \"dependencies\" :   { \n    \"platformsh-config\" :   \"^2.0.0\" , \n    \"puppeteer\" :   \"^1.14.0\" , \n    \"express\" :   \"^4.16.4\" , \n    \"uuid\" :   \"^3.3.2\" , \n    \"express-rate-limit\" :   \"^4.0.4\" \n  } \n } \n Run  npm install  to generate a  package-lock.json , commit the changes, and push to an empty project on Platform.sh. \n That\u2019s it! When the build process is finished, we\u2019ll have an ExpressJS application that uses Headless Chrome and Puppeteer to generate: \n \n PDFs \n Full-page screenshots \n Screenshots that emulate what the site would look like on a mobile device \n \n for any URL a user provides! \n Wrap-up \n Platform.sh makes it easy to install and use Headless Chrome in your projects\u2014without the need to install your own version of Chrome into the container as part of your builds. You can expand PDF generation to create a tool that generates your application\u2019s invoices, or  crawl each page  of an application on your production and development branches to compare screenshots, and build complete visual regression testing into your workflow, blocking merges that would cause unwanted changes or distortions to the UI. \n You can find the source code for this post on  GitHub . For more information about Puppeteer and Headless Chrome, you can check out these resources: \n \n Live demo of this application \n Platform.sh Headless Chrome documentation \n Puppeteer GitHub \n Puppeteer documentation \n Getting Started with Headless Chrome \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "A 10x increase in enterprise valuation over two years: a SaaS case study  ", "url": "https://platform.sh/blog/2020/a-10x-increase-in-enterprise-valuation-over-two-years-a-saas-case-study/", "documentId": "f5094fb7ffa6ced2c74fcc5c34ed111210032c5b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           A 10x increase in enterprise valuation over two years: a SaaS case study  \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         07 Apr 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \nFor those companies  in the early stages of their SaaS journey, this case study offers an instructive overview of the many benefits of a cloud offering on Platform.sh.\n \n In the span of two years, an up-and-coming ecommerce company went from a valuation of 2.5x revenue to 12x revenue, from a low nine-figure valuation to an acquisition price nearly ten times that, nearly $2B in fact. What decisions did the company make in that time to increase its valuation by almost a magnitude? The big one was switching from an enterprise license product into an SaaS-based cloud offering on Platform.sh. \n SaaS false start \n Before their acquisition, the company had attempted to transition from its open-source, PHP-based platform to a software-as-a-service implementation. However, the new platform failed to gain market traction due to the constraints of its infrastructure management capabilities. It didn\u2019t allow larger shops to customize it to the extent they required, and for smaller shops it was too complex.  Small business owners were unable to easily configure, and development teams in larger companies were unable to enhance! \n Second time round, and seeking a better option for implementing a global SaaS offering, the company met with Platform.sh to discuss buy-versus-build options. We showed them how platform-as-a-service could offer them a managed hosting option that would give them immediate access to an advanced container management platform able to propel their new SaaS offer worldwide. \n An abundance of business value \n By partnering with Platform.sh, the company secured a problem-free cloud infrastructure to support their SaaS application at the right cost per client. The new Platform.sh cloud service proved immediately attractive to the company\u2019s clients. It solved some large-scale hosting challenges for them, whilst also offering a huge step change across the entire ecommerce building experience. \n As well as raising customer satisfaction, the SaaS vendor gained considerable internal business value from the PaaS, achieving: \n \n Faster time to market for the SaaS offer and much lower costs. This spurred early reference sales and brought substantial revenue forward by several months. \n Superior development and deployment experience. Tens of thousands of the ecosystem developers created buzz that influenced client-side decision makers. \n Tangible business agility. Maintaining a constant stream of changes into the live service became a game-changer for online shops, enabling them to react to events, analytics, or peak demand and make changes to optimize revenue. \n \n Even more client problems solved with Platform.sh \n The SaaS vendor also found that partnering with Platform.sh allowed them to solve several stubborn problems clients were  wrestling with: \n \n Soaring cost management issues associated with self-hosting. Solved by instant scaling and usage-based billing. \n Complex process and tooling for continuous integration. Simplified by Platform.sh cloning, build system, and API. \n Understanding cloud infrastructures and performing DevOps. Abstracted and automated away by the PaaS. \n Budget planning for containerization and Kubernetes build. Provided by the PaaS, out of the box. \n Effort required to make changes. Reduced number of tickets by 90%; developers make their own changes to config files. \n \n Assisting SaaS vendors with changes to the business model \n Eliminating the time, resources, and costs that would have been consumed by building/operating a complex cloud  infrastructure freed up energy and funding for other equally critical aspects of the business model, such as improving the SaaS application architecture, accelerating the feature roadmap, and enhancing support to marketing and partner sales. Platform.sh offers our PaaS for SaaS bundled with expert services: \n \n Optimizing application architecture for the cloud \n Putting forward a revenue bearing functionality through a roadmap acceleration program \n Leveraging the Platform.sh team for global first-line triage, speeding launch \n Bringing elements of infrastructure support back in-house through later-phase training \n Managing risks associated with disrupting the partner ecosystem (productivity and sales versus hosting revenue loss) \n Enforcing a cloud-first mentality throughout the company and marketplace \n Integrating the Platform.sh pre-sales team globally \n Training sales teams and partners to sell PaaS/cloud value, supporting the sales process globally \n Realigning incentive schemes to the cloud offer \n \n Learn from their success \n A few years after launch,  more than 85% of this SaaS vendor\u2019s new enterprise customers purchase the cloud offering. Tens of millions of dollars in incremental annual recurring revenue are derived from the new non-software-licence components of the cloud offer, including hosting compute, application support, embedded technologies like CDN, and code performance tools. \n In the following weeks, Kieron Sambrook-Smith, chief commercial officer for Platform.sh, will continue to share our experiences and insight through a series of articles that offer lessons on how your organization can also maximize the potential of its business model by transitioning to a PaaS cloud infrastructure. Check back soon for the next article! \n If you\u2019d like to connect or open a conversation about your SaaS business model or the value of a PaaS cloud infrastructure on the rest of your business model, you can find me on LinkedIn or you can contact me directly:  kieron.sambrook-smith@platform.sh . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             6,000+ applications, multiple content management systems, one platform \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             The diaries (and adventures) of a SaaS entrepreneur: entry one \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Taking your application to SaaS: a business decision ", "url": "https://platform.sh/blog/2020/taking-your-application-to-saas-a-business-decision/", "documentId": "0c1a3d7d12ed182dc7833e6bd23ed55231bdf3af", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Taking your application to SaaS: a business decision \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         17 Apr 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \n Why have some great apps  not evolved to SaaS? With new technology they still can. \n For digital agencies and established software vendors, this blog offers insight into how easy it is now to launch and manage a full cloud SaaS offering with a PaaS. \n \n In my last article, I shared the recent story of a  white-label client  who launched their software-as-a-Service cloud offer and grew in value from 2.5x to 12x revenue over two short years. Today, we\u2019re looking slightly further back into the life cycle of an application to understand why some make it to a $2 billion SaaS acquisition\u2014and some do not. \n Since my first management buy-out in 2007, I\u2019ve worked closely with hundreds of digital agencies and software vendors. In that time, I\u2019ve noticed some clear patterns in the applications being built and sold to clients. Some haven\u2019t changed since they were first delivered, and some have evolved into full-blown SaaS offerings with tens of thousands of subscribers. \n What is it about those applications that didn\u2019t? Why didn\u2019t they move on? Could they still? \n What blocks some apps from making it to SaaS \n I\u2019ve spoken with many a CEO about their plans to SaaSify their apps. They all believed they had the prerequisites in place: a great development team, solid product positioning, and a viable market. But what I noticed stopping them, time and time again, were the following roadblocks: \n \n   \n   Ownership of the IP . If code was delivered to a third party, and the contract maintained client ownership, there wasn\u2019t much that could be done, except negotiate a change in return for payment. Mostly, this was of little interest to  enterprise-size clients, and so rebuilding something fresh was the only option.\n   \n   \n   Viable infrastructure . Architecting and mapping an application onto a scalable hosting infrastructure is always a  major feature of any cloud offering. Whether building a multitenant service for 100,000 subscriptions or a single tenant offer for just a few hundred individual clients, some  serious cloud management tooling and integrations were needed.\n This was expensive and complicated to say the least. Despite the availability of Docker-type frameworks such as Kubernetes and a multitude of third-party tooling,  specialized engineering skills were needed to build it out, plus an operations/support team with hard-to-find resumes. \n For many smaller, less well-funded application builders, the effort and cost of doing it themselves put SaaS out of reach. \n This isn\u2019t the case any longer, just not everybody knows it. \n   \n   \n     Incomplete vision . For some of the CEOs I met, exponential SaaS-type growth was just a fleeting pipe-dream, while others spent considerable time writing up their business plans. The blocker in both cases was usually the same: the amount of money needed to build out the initial cloud offering and effectively promote it. A common observation of mine was that running a busy agency got in the way of working toward the bigger picture. And while some CEOs could clearly articulate a wider market for what they had built, for others, getting there just seemed a step too far.\n   \n \n A good idea only gets the opportunity to become a great idea only AFTER it\u2019s been implemented. I left many meetings with this playing on my mind! \n \n   \n     So, IP is what it is, and an incomplete vision can always be worked on. But what\u2019s changed most over recent years are the enabling technologies that materialize a SaaS business model, such as subscription billing, marketing automation, and, most of all, cloud management tooling. \n   \n   \n   \n \n\n An application\u2019s journey to SaaS \n Before we work out what you need to do to get SaaS, or even just do it better, let\u2019s see what stage of the journey your application is in. \n This chart shows the progression of an application on its journey to SaaS. Most applications start life in the hands of a developer or digital agency (stage 1), built for a single client. Some then evolve into products that require the agency to restructure itself into a software vendor (stage 2-3) and so on. Many apps are also built by well-funded start-ups; others come out of larger, more established vendors. \n \n Stage one challenge: becoming a product vendor \n Digital agencies with a repeatable application usually evolve into service-based product vendors. \n \n Applications mature over time\u2014growing up with new features and better security, for instance\u2014but only some evolve beyond their original use case. Why is that? \n Many applications begin their life cycle based on a client requirement or an entrepreneur investing time and effort to build something they believe will sell. \n And many more apps have come out of digital agencies, many of which won contracts to build something clients were asking for. Those projects that were publicized then generated demand for something similar. And, in turn, those apps that gained sufficient market traction led to better monetisation and repeatable business models until they started looking like a product. \n However, digital agencies offering an open-source application couldn\u2019t sell licences unless they created some sort of ecosystem for plug-ins. Instead, they provided enhancements and implementation services, plus maintenance, thus improving growth, though still somewhat constrained by a lack of finances. This category I call the service-based product vendor, because they are making money primarily from services. \n Agencies retaining IP, however, generated higher software deal values selling product licences, professional services, and maintenance. Doing so, they were blessed with stronger cash flow, which they invested\u2014or secured funding against\u2014to continue their evolution towards full-blown software product vendor status. \n So, generally, making the first big jump from one-off application builder to full product vendor required money\u2014and quite a bit of it. \n Stage two and three challenge: leaping from product to SaaS \n The next stage in the application \u201ctree of life\u201d is the big jump from a product vendor to a subscription-based SaaS offer hosted somewhere in the cloud. \n \n Agencies and service-based product vendors \n For many agencies and service-based product vendors, this  jump was always going to be a leap too far, largely due to the cost/complexity of building multitenancy plus billing plus management services, all precariously balanced on top of a hosting service. \n Even today, despite some great new tech coming to market, many aspects of SaaS are still really difficult to cobble together in-house. Assuming the absence of the blockers we covered earlier\u2014IP and vision\u2014sufficient resources now become the hurdle to SaaSify your app. Unless you\u2019ve been able to solve the cost/complexity problems of cloud infrastructure, your way forward remains blocked. \n \n Now let\u2019s consider full-blown software product vendors\u2014 those starting up and those more established\u2014both of which are far less resource-constrained. Quite the opposite in fact, they tend to be well financed and the start-ups well funded. \n Cloud natives, especially start-ups \n Start-ups these days generally plan to be SaaS from the outset. They tend to develop cloud native code, 12 Factor, and fit for purpose. However, all this means is that their apps will be optimized for containers; they still need scalable cloud infrastructure. \n And counterintuitively\u2014because they are developing the app cloud natively\u2014the hosting components are viewed as part of the same landscape, which makes it a 99% certainty that they will default to building the cloud infrastructure themselves, emboldened by the wealth of tooling available. \n Being a talented development team, with industry-specific knowledge, however, doesn\u2019t make for an accomplished cloud engineering team. And this lack of experience usually comes back to bite the organization in the form of scaling and reliability problems, quickly followed by unexpected costs for the new hires needed to correct and rebuild. \n Established software vendors \n Last but not least is the established software vendor that has been successfully selling its application for years. Some still sell licences that their clients download and host themselves, whilst others may have transitioned to a managed hosting-based offer already. \n Vendors selling license-only will have had little experience with the hosting issues their customers grapple with daily. This presents a steep learning curve when attempting to redesign an application for SaaS. For starters, the architecture will likely need an overhaul to optimize it for the cloud. They will need to build a cloud framework and hire an army of new engineering and support skills in the process. \n For those vendors that have already transitioned to a managed hosting-based offer, surprises await in terms of the number of people and the complexity required to run their cloud service at scale. \n Stage four: making it easy to launch and operate any service \n \n With the Platform.sh PaaS, you can single-handedly manage one application (or even thousands) in the cloud without having to know anything about the cloud. We currently offer the choice of four cloud providers: Amazon Web Services, Google Cloud Platform, MIcrosoft Azure, and Orange Business Services. You won\u2019t need to build container management, and there are no up-front setup costs. For each new client you sign-up, payments are usage-based and monthly/annual depending on how big the project is. \n \n   \n     We wipe 90% off your CapEx budget for building cloud and give back much of the remainder as variable cost OpEx. You will only be paying for the compute and storage each new client needs. These low costs are made possible by container technology. We built a global grid, and you benefit from the economies of scale we receive buying volume  capacity from hyperscalers. \n   \n   \n   \n \n\n Platform.sh eliminates the need to do any cloud infrastructure management. Instead, development managers describe the hosting infrastructure and services needed to run each application in just a few lines of code. \n The deployment process automatically builds and injects code changes into the development, test, or live version of the hosted application. This makes it possible to deploy changes across hundreds of web apps simultaneously, which is especially useful for fleet-wide feature enhancements and timely security patching. \n This is great for developers and DevOps teams and even better for SaaS vendors that want to focus precious money and people resources on application improvements and marketing efforts. \n It\u2019s all Git-driven \n \n Because the PaaS is entirely driven by Git (or Bitbucket), all code changes are deployed to test, staging, and live services via a simple Git push through the UI or API. For a software vendor selling new subscriptions, this means you can automate the provisioning of different-sized hosting plans\u2014 to match your price plans\u2014and allow new customers to instantly access the SaaS service as part of the sign-up process. At this point, partner agencies and developers are ready to continue setup and enhancement work on the client\u2019s behalf. \n Also, being Git-driven means there is no need to spend time decomposing your existing apps into microservices or re-architecting for containers. Platform.sh handles all that under the hood. \n A History of Helping \n Since 2016, we\u2019ve helped about 25 clients launch SaaS offerings. We can help you, too, and not just with the technical implementation. We can assist you with business planning and cloud-offer pricing. We will work with you as you gear up for launch, and we will support you thereafter making adjustments. Triage, cloud hosting support, \u2018cloud first\u2019 training, incentivising the sales team, keeping the partner ecosystem excited, pre-sales, and sales support on large deals: we\u2019ve done it all before and can help you do it, too. \n In our next article, we\u2019ll dissect the thinking strategies that set a SaaS vendor apart from other software companies. \n In the meantime, if you\u2019d like to open a conversation about your SaaS business model or the value of a PaaS cloud infrastructure on the rest of your business model, you can find me on  LinkedIn  or contact me at  kieron.sambrook-smith@platform.sh . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             6,000+ applications, multiple content management systems, one platform \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             The diaries (and adventures) of a SaaS entrepreneur: entry one \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Even more batteries included: Platform.sh configuration libraries ", "url": "https://platform.sh/blog/even-more-batteries-included-platformsh-configuration-libraries/", "documentId": "9a7f6ccc5de0988dd505ee5f427b1ddf14542c63", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Even more batteries included: Platform.sh configuration libraries \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         07 Mar 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh, like any good PaaS, exposes a lot of useful information to applications via environment variables.  The obvious parts, of course, are database credentials, but there\u2019s  far more that we make available  to allow an application to introspect its environment. \n Sometimes those environment variables aren\u2019t as obvious to use as we\u2019d like.  Environment variables have their limits, such as only being able to store strings.  For that reason, many of the most important environment variables are offered as JSON values, which are then base64-encoded so they fit nicely into environment variables.  Those are not always the easiest to read. \n That\u2019s why we\u2019re happy to announce all new, completely revamped client libraries for  PHP ,  Python , and  Node.js  to make inspecting the environment as dead-simple as possible. \n Installation \n All of the libraries are available through their respective language package managers: \n PHP: \n composer install platformsh/config-reader\n Python: \n pip install platformshconfig\n Node.js: \n npm install platformsh-config --save\n That\u2019s it, you\u2019re done. \n Usage \n All three libraries work the same way, but are flavored for their own language.  All of them start by instantiating a \u201cconfig\u201d object.  That object then offers methods to introspect the environment in intelligent ways. \n For instance, it\u2019s easy to tell if a project is running on Platform.sh, in the build hook or not, or if it\u2019s in a Platform.sh Enterprise environment.  In PHP: \n $config = new \\Platformsh\\ConfigReader\\Config();\n\n$config->inValidPlatform(); // True if env vars are available at all.\n$config->inBuild();\n$config->inRuntime();\n$config->onEnterprise();\n$config->onProduction();\n\n// Individual Platform.sh environment variables are available as their own properties, too.\n$config->applicationName;\n$config->port;\n$config->project;\n// ...\n The  onProduction()  method already takes care of the differences between Platform.sh Professional and Platform.sh Enterprise and will return  true  in either case. \n What about the common case of accessing relationships to get credentials for connecting to a database?  Currently, that requires deserializing and introspecting the environment blob yourself.  But with the new libraries, it\u2019s reduced to a single method call.  In Python: \n config = platformshconfig.Config()\n\ncreds = config.credentials('database')\n This will return the access credentials to connect to the  database  relationship.  Any relationship listed in  .platform.app.yaml  is valid there. \n What if you need the credentials formatted a particular way for a third-party library?  Fortunately, the new clients are extensible.  They support \u201ccredential formatters\u201d, which are simply functions (or callables, or lambdas, or whatever the language of your choice calls them) that take a relationship definition and format it for a particular service library. \n For example, one of the most popular Node.js libraries for connecting to Apache Solr,  solr-node  wants the name of a collection as its own string.  The Platform.sh relationship provides a path, since there are other libraries that use a path to connect.  Rather than reformat that string inline, the Node.js library includes a formatter specifically for  solr-node : \n const solr = require('solr-node');\nconst config = require(\"platformsh-config\").config();\n\nlet client = new solr(config.formattedCredentials('solr-relationship-name', 'solr-node'));\n Et voila.   client  is now a  solr-node  client and is ready to be used.  It\u2019s entirely possible to register your own formatters, too, and third-party libraries can include them as well: \n config.registerFormatter('my-client-library', (creds) => {\n  // Do something here to return a string, struct, dictionary, array, or whatever.\n});\n We\u2019ve included a few common formatters in each library to cover some common libraries.  We\u2019ll be adding more as time goes by, and, of course, PRs are always extremely welcome to add more! \n But what about my language? \n We wanted to get these three client libraries out the door and into your hands as soon as possible.  But don\u2019t worry; Go and Ruby versions are already in the works and will be released soon. \n We\u2019ll continue to evolve these new libraries, keeping the API roughly in sync between all languages, but allowing each to feel as natural as possible for each language. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Apache Kafka now available ", "url": "https://platform.sh/blog/2019/apache-kafka-support/", "documentId": "2b96212010e480739d80d3db0aec1352802dc651", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Apache Kafka now available \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Yates \n                  \n                   VP Marketing \n                  \n                  \n                 \n            \n          \n         \n         05 Jun 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh is pleased to announce the availability of the  Apache Kafka  streaming data service. Kafka is used to build real-time streaming applications and data pipelines, and enables the storage of streamed data, publisher-subscriber models (similar to a queue or enterprise messaging system), and stream processing in real time. \n Kafka is included and available in all your Platform.sh projects. Getting started with Kafka on Platform.sh is as simple as using any other data services, such as  Postgres ,  Elasticsearch , and  Redis . \n To configure a new Kafka service in your project, simply add this configuration to your project\u2019s  .platform/services.yaml  file: \n mykafka : \n      type :   kafka : 2.1 \n      disk :   1024 \n Then in your application\u2019s  .platform.app.yaml , set up a relationship that allows your application (in Python, Ruby, etc.) to access the Kafka service: \n relationships : \n      kafka :   \"mykafka:kafka\" \n That\u2019s it! No servers, VMs, or containers to configure or routing to set up. \n You can then use the  $PLATFORM_RELATIONSHIPS   environment variable  to access the Kafka service from your code. \n Our  documentation page on Kafka  has details and examples of using Kafka from Python and Ruby, and more language examples are coming soon. \n Kafka 2.1 is already available on all Professional plans as a single-node architecture. \n Have questions or need assistance? Customers can always  open a ticket with our support team , and developers are welcome to  join our public Slack channel  to chat with our engineering and customer success folks. \n Let us know what awesome things you build with this new capability! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Webinar", "title": "How the University of Missouri cost-effectively migrated its fleet of web apps to the cloud ", "url": "https://platform.sh/webinars/2020/how-the-university-of-missouri-cost-effectively-migrated-its-fleet-of-web-apps-to-the-cloud/", "documentId": "da55bf564f318912d174523a4246450e9bd052e4", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n           Thu, 30 Apr, 2020\n           18:00 CEST / \n            \n           \n            var zone = new Date().toLocaleTimeString('en-us',{timeZoneName:'short', timeZone: \"America/Los_Angeles\"}).split(' ')[2];\n            var usaTime = new Date(\"2020-04-30T18:00:00+02:00\").toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n            usaTime = new Date(usaTime);\n            document.write(usaTime.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})+' '+zone);\n           \n           \n             \n          \n         \n         How the University of Missouri cost-effectively migrated its fleet of web apps to the cloud \n        \n         \n          \n         \n        \n         \n          \n         \n        \n       \n       \n        \n        \n          \n          \n           \n          \n          \n           \n             \n           \n          \n        \n        \n       \n     \n   \n     \n       \n         The University of Missouri (Mizzou) marketing team had a big challenge: to migrate, standardize, and manage hundreds of unmanaged, on-premises WordPress, Drupal, and static HTML websites to the cloud. \n With a small web dev team, how could their team efficiently move the sites to a managed platform, where updates and changes could be deployed to all sites quickly, securely, and consistently while minimizing downtime? \n Join the Mizzou web dev team and Platform.sh as they discuss the journey to successfully manage their fleet of web apps across a decentralized campus\u2014 without costly DevOps resources. \n You\u2019ll learn how Mizzou: \n \n Increased efficiency and manage web apps at scale \n Can now deploy new features and updates faster and more frequently \n Saved 30% reduction in annual hosting costs \n Realized a 300% increase in the number of requests Drupal and WordPress sites can handle \n \n Check out the other webinars in this FleetOps series: \n \n FleetOps: aligning business and technology for success at scale \n Your checklist for running thousands of websites \n \n\n       \n      \n       \n         \n         \n           \n            \n             Save your spot! \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Register \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Webinar", "title": "PHP 7.4: The new hotness ", "url": "https://platform.sh/webinars/2020/php-7.4-the-new-hotness/", "documentId": "c695404a1923050cb3cc0ac627464cdbc50d9a93", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n           Tue, 28 Apr, 2020\n           18:00 CEST / \n            \n           \n            var zone = new Date().toLocaleTimeString('en-us',{timeZoneName:'short', timeZone: \"America/Los_Angeles\"}).split(' ')[2];\n            var usaTime = new Date(\"2020-04-28T18:00:00+02:00\").toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n            usaTime = new Date(usaTime);\n            document.write(usaTime.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})+' '+zone);\n           \n           \n             \n          \n         \n         PHP 7.4: The new hotness \n        \n         \n          \n            \n             \n            \n             \n               Larry Garfield \n              \n               Director of Developer Experience \n              \n             \n          \n         \n        \n       \n       \n        \n        \n          \n          \n           \n          \n          \n           \n             \n           \n          \n        \n        \n       \n     \n   \n     \n       \n         The PHP language marches forward with its most significant release in four years.  Chock full of new goodies to make both PHP and writing PHP faster and easier, 7.4 will soon be the benchmark for dollar sign-based goodness. \n Want more powerful typing, easier to write functional code, or faster boot up time?  Then PHP 7.4 is for you. \n This webinar will review the various exciting reasons why you want to start using the new stable PHP as soon as possible. \n We will cover: \n \n Typed properties \n Short lambdas \n Null coalesce assignment \n Preloading \n FFI \n And more! \n \n\n       \n      \n       \n         \n         \n           \n            \n             Save your spot! \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Register \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "When your job is too tough for cron ", "url": "https://platform.sh/blog/when-your-job-is-too-tough-for-cron/", "documentId": "b0b97de0fa698047ae44d122f27eefc6a94ed478", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           When your job is too tough for cron \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         09 Aug 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Cron jobs are good.  Cron jobs are nice.  But sometimes, a Cron job just isn\u2019t enough.  Running a task now and again may be good for some jobs, but what if you have a really big task.  A task that needs muscle from a long-running process.  \n \n For the big tasks a Cron job just isn\u2019t going to cut it. \n What you need is a dedicated worker instance;  Worker application instances  that Platform.sh now provides, of course. \n What's wrong with Cron? \n Cron tasks are fine for what they're good for: Relatively cheap single tasks that run at a specific time or times.  Platform.sh has supported custom cron jobs since the stone age.  (That's about 3 years in Internet time.)  They have a number of limitations, though: \n \n Cron tasks on Platform.sh run on the same container as your application instance, which means they're competing for resources. \n A Cron task succeeds or fails entirely, making it a poor fit for a task that can be worked on incrementally. \n We limit cron jobs to running no more often than every 5 minutes, which means a task that needs to be done \"now, but not in the web request\" may happen as long as 5 minutes later. \n A running cron task blocks a new code deploy \n If a cron task is still running when it's next triggered they may step on each other's toes and confuse the application state unless you're very very careful about how it's written. \n \n As a general rule of thumb Cron jobs should be used when something needs to happen at a specific time. For example if you have to transfer a CSV export, every day, after midnight. \n What\u2019s a worker? \n Workers are more general and flexible than Cron jobs.  They generally work iteratively on fine-grained tasks, like a queue, and because they're a persistent process can work on task immediately once it's enqueued. \n On Platform.sh a worker is a parallel instance of your application that doesn\u2019t respond to web requests.  Instead, it runs a different, persistent background process.  It\u2019s the exact same code, just running a process other than listening to incoming web requests. \n This makes it incredibly easy to first implement your application in a traditional, synchronous manner, and with trivial changes make the heavy-lifting lazy and asynchronous. This is useful for bulk processing; for handling large queues; for long-running tasks; or anything else that needs to be done \u201cas quickly as possible but don\u2019t block the web request for it.\". \n (If what you need is a totally separate application, possibly written in a different language, check-out our  multi-application support .) \n It's also possible to mix-and-match.  For example, a weekly mass-mailing could be triggered by a Cron task that runs once a week and enqueues a long list of emails to contact.  A worker would then immediately begin churning through that queue and sending out emails one by one.  (Sending email is far more time consuming than just enqueuing the tasks to be done.)  That's far more robust, as well as potentially faster; you can even create multiple identical workers to work through the queue even faster. \n Using Platform.sh workers can make your web application faster and more responsive while simultaneously reducing the latency of your background jobs and making the whole system more robust and easier to manage. \n Great, so how's it work? \n Setting up a worker is quite simple.  For the most basic case, just add something like the following to your  .platform.app.yaml  file: \n \nworkers:\n  queue:\n    commands:\n      start: |\n          php worker.php\n \n That will cause your application to be deployed twice, in 2 separate containers: One to handle web requests (exactly as it does now), and a second container named \u201c queue \" with the exact same code that will run  worker.php  instead of a web server.  It doesn\u2019t have to be a PHP script, of course.  It can be any command your application container can run. \n For example, a Drupal site can use the  Drush Waiting Queue  module to run its queue as a real queue, rather than piggy-backing on cron.  A Ruby on Rails application can use  sidekiq  with a  persistent Redis  instance to churn through a long queue of background tasks.  Symfony or Laravel developers can do the same with the  PHP port of Resqeue , while Python people can opt for  Celery. \n Workers can also be backed by a dedicated queue server that offers more fine-grained functionality such as the  RabbitMQ message-queue .  It's your app, so pick the approach that works best for you. \n Workers are of course much more flexible than just the few lines shown above, but you can  see the documentation  for the full low-down on how you can customize a worker instance to your needs, and even spin up multiple workers for different tasks. \n For the tough jobs, bring a real worker process to the task. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Open source software ROI for your organization ", "url": "https://platform.sh/blog/open-source-software-roi-for-your-organization/", "documentId": "deeef339dd958073b31942b0f053ab86ffdc225e", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Open source software ROI for your organization \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Yates \n                  \n                   VP Marketing \n                  \n                  \n                 \n            \n          \n         \n         02 Jan 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         For most startups\u2014and most of today\u2019s enterprise organizations\u2014open source software (OSS) has become the lifeblood of IT and development organizations. As part of the OSS community, we at Platform.sh stand on the shoulders of those behind Linux, various Apache Foundation projects, and our peers who\u2019ve created something to solve a problem in their own organizations, then shared it with the world.  \n Today, few people question the value of using open source software as a springboard. But what about contributing to the open source world? \n The issue with encouraging open source contributions isn\u2019t lack of interest; it\u2019s lack of  time  and organizational culture. It takes time to get an internal tool ready to share with a broader community, cultivate and manage a community around it, and manage contributions to the software. But organizations that take a proactive approach to granting their developers this time are benefiting from OSS\u2014not just as users, but as contributors. \n Wait. What\u2019s in it for me?  \n You have a great team of developers, heads-down in projects that support your business objectives. And that\u2019s what you\u2019re paying them to do, right? My experience is that developers who also contribute to the open source community deliver additional benefits to the organizations they work for.  \n \n\t \n\t Useful software released as OSS and managed well can garner contribution\u2014in code, documentation, and visibility\u2014from other individual developers and peer organizations. This contribution may add new features to your software; it also provides a proving ground to harden and improve it in ways that far surpass what most organizations can accomplish with closed-source internal projects.  \n\t \n \n \n \u201cIt really helps beat up the platform in a way that creates a stellar, robust  implementation that can be rolled out and shared with everyone globally.\u201d \n \u2013 Mark Lenhard, Senior Vice President of Strategy & Growth, Magento \n \n \n\t \n\t Contribution to OSS is a great tool for recruiting. If your team produces top-notch, widely used OSS projects, potential developers will be drawn to your organization. The quality of the code is laid bare for all to see\u2014as is your culture, demonstrated by how your team interacts with the OSS community. Both are critical elements in attracting highly qualified engineers.  \n\t \n \n Goodness for developers \n OSS developer benefits mirror your organizational benefits.  \n \n\t \n\t Simply put, OSS provides an opportunity to make your software better, i.e., thousands of eyes are always better than dozens. Software improves through broad use and contribution. Great examples of this successful approach? Drupal, WordPress, and Linux. \n\t \n\t \n\t OSS contribution provides a career-building tool for engineers. These days, \u201c10X Engineers\u201d aren\u2019t lone devs who just churn out tons of code. They can establish credibility through their contributions to the discussions and process that surround the actual writing of code, garnering the respect of others in the broader community. They shine by working collaboratively with product managers, communicating with other stakeholders, and translating between business requirements and technical implementations. OSS participation gives your developers a chance to do it all in a public forum.  \n\t \n \n OSS and your IP \n Understandably, many organizations remain tight-lipped about their intellectual property (IP) and internal processes. As a vendor, we experience this when great customers want to talk about how they use our PaaS, but their corporate lawyers hesitate to do so. With OSS, the problem is magnified, because it\u2019s real IP that employees have created.  \n Every organization needs to make decisions about what their \u201csecret sauce\u201d really is and weigh the benefits and drawbacks of releasing parts of their toolchain, or in some cases, their whole product as OSS. There are definite advantages to establishing a broad OSS policy that can drive innovation, if the underlying business model of the organization is sound.  \n Open source momentum accelerates \n To paraphrase  Marc Andreesen , open source software [has already] eaten the world. It\u2019s pervasive, at the core of the services and products we use\u2014from high-tech to automotive to consumer products. While monetization of OSS remains a tricky challenge, the participation of organizations in OSS will only grow. The huge acquisitions of  GitHub by Microsoft ,  Magento by Adobe , and, most recently,  RedHat by IBM , only cement open source software\u2019s position as not just an alternative to proprietary software components, but the default choice. \n Are you running OSS products and looking for ways to launch them without spending all your team\u2019s time on DevOps tasks? Check out our  White-label SaaS Factory solution  that can help you focus, faster. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             It's July 2018, do you know what your PHP is? \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Four days, four languages, four frameworks, Day 4: Jekyll - the SSG that started it all ", "url": "https://platform.sh/blog/four-days-four-languages-four-frameworks-day-4-jekyll-the-ssg-that-started-it-all/", "documentId": "be55af2b131ea81a8b6b78042f1d57f4f7e8a9b8", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Four days, four languages, four frameworks, Day 4: Jekyll - the SSG that started it all \n         \n\n        \n         \n            \n              \n          \n         \n         01 Mar 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         This week we\u2019ve covered how we run three very different applications on Platform.sh: \n \n Brightspot, a Java CMS \n Hugo , a Go-based static site generator (SSG) \n GatsbyJS , a React-based SSG and progressive web app. \n \n Today, we\u2019ll wrap up with the SSG that started the static trend in web content management, and remains the most popular:  Jekyll . \n Jekyll is written in  Ruby , and as with Hugo and Gatsby, you can take advantage of Platform.sh\u2019s Git-driven workflow to compile any code or content changes on every  git push .  Your team is able to work on multiple initiatives at once and merge changes into production with ease. \n While we\u2019ve spaced the publishing of this blog series over four days, the actual work needed to get each CMS or SSG running on Platform.sh was minimal. Platform.sh is a polygot tool for developing  and  delivering applications, so we\u2019ve designed it from the beginning to be adaptable to just about any language or framework with minimal adaptation or training required. \n Beyond the examples we\u2019ve published here, we\u2019ve made the whole process easy enough even for less technical (or just plain rusty) users  to get new apps running . \n Onward to the how-to \n If you\u2019ve followed along with our series so far, you\u2019ll see that running Jekyll on Platform.sh isn\u2019t much different from running other SSGs. The particulars are in the configuration of your local environment, and the  .platform.app.yaml  file, for the most part.  You can also start from a ready-to-run  Jekyll example on GitHub , or if you have your own Jekyll application already you can  skip ahead  to the Platform.sh-specific bits. \n 1. Setup your local machine \n You\u2019ll need 3 tools to deploy your Jekyll site on Platform.sh: \n \n ruby and rubygem (installation varies by OS and package manager \n jekyll:  sudo gem install bundler jekyll \n Optional:  the platform.sh cli tool \n \n The links above refer to installation instructions for each tool. \n On macOS, you can use  homebrew  to install your dependencies quickly. \n brew install ruby\nsudo gem install bundler jekyll\nbrew tap homebrew/homebrew-php\nbrew install curl git php72-cli php72-curl\ncurl -sS https://platform.sh/cli/installer  |  php\n 2. Bootstrap your Jekyll project \n We need to create a new Jekyll folder from the command-line: \n $ jekyll new jekyll-hello\nRunning bundle install in /media/psh/customers/jekyll-hello...\nYour user account isn ' t allowed to install to the system RubyGems.\n  You can cancel this installation and run:\n\n      bundle install --path vendor/bundle\n\n  to install the gems into ./vendor/bundle/, or you can enter your password\n  and install the bundled gems to RubyGems using sudo.\n\n  Password:\n  Bundler: Fetching gem metadata from https://rubygems.org/...........\n  Bundler: Fetching gem metadata from https://rubygems.org/.\n  Bundler: Resolving dependencies...\n  Bundler: Fetching public_suffix 3.0.3\n  ...\nNew jekyll site installed in jekyll-hello.\n You can now run the development server: \n $  cd  jekyll-hello  &&  bundle  exec  jekyll serve\nConfiguration file: jekyll-hello/_config.yml\n            Source: jekyll-hello\n       Destination: jekyll-hello/_site\n Incremental build: disabled. Enable with --incremental\n      Generating...\n       Jekyll Feed: Generating feed  for  posts\n  Bundler: /var/lib/gems/2.5.0/specifications\n                     done  in 0.288 seconds.\n Auto-regeneration: enabled  for   'jekyll-hello' \n    Server address: http://127.0.0.1:4000/\n  Server running... press ctrl-c to stop.\n Browse to  http://localhost:4000/  to check that everything is working as expected. \n The  npx  template already creates a basic git repository: \n Create a new git repository inside that folder: \n git init .\ngit add .\ngit commit -m  \"Init jekyll\" \n 3. Create your Platform.sh project \n    We\u2019ve shown you how to create a new Platform.sh project through the  Web UI , as well as through the  Platform.sh Command Line Interface  (CLI). Did you know that you can manage your Platform.sh experience entirely through our  API , too? \n Let\u2019s create a new project to test Jekyll, via the Platform.sh API. We\u2019ll assume that you\u2019ve already  registered for a Platform.sh trial account , and you\u2019re starting a new project. If you want to skip this part, the instructions for creating a new project are the same as in our first post of this series. \n For simplicity, we\u2019ll use  curl  for this example, but you could use just about any tool that can make a HTTP request. \n First, let\u2019s get an authorization token. This requires that you\u2019ve  generated an API token  to access the Platform.sh API. \n Once you have your API token, you\u2019ll need to generate an Oauth access token, which you\u2019ll use to authenticate your subsequent requests. \n curl -X POST  \\\n   https://accounts.platform.sh/oauth2/token  \\\n   -H  'Authorization: Basic cGxhdGZvcm0tY2xpOg=='   \\\n   -H  'Content-Type: application/json'   \\\n   -H  'cache-control: no-cache'   \\\n   -d  '{\n     \"grant_type\": \"api_token\",\n     \"client_id\": \"platform-api-user\"\n     \"api_token\": \"<your api token goes here>\"\n }' \n The  client_id  should always be  platform-api-user  to differentiate the request from internal applications.  Your response should look something like \n { \n     \"access_token\" :  \"<your access token will appear here>\" ,\n     \"expires_in\" : 3600,\n     \"token_type\" :  \"Bearer\" ,\n     \"scope\" :  \"account\" \n } \n This  access_token  will allow you to authenticate subsequent requests to the API until it expires. Once you\u2019ve got an  access_token , you can request a new project like so: \n curl -X POST  \\\n   https://api.platform.sh/subscriptions  \\\n   -H  'Authorization: Bearer <your access_token>'   \\\n   -H  'Content-Type: application/x-www-form-urlencoded'   \\\n   -H  'cache-control: no-cache'   \\\n   -d  'project_region=ca-1.platform.sh&project_title=jekyll-blog' \n Note the two required parameters -  project_region  which specifies where you want to deploy your project (in this case, our  Canada region ), and  project_title , which is self-explanatory. We\u2019ve left other options set to their defaults\u2014including project plan size, environment count, and storage. You can adjust all of these after you\u2019ve provisioned your project. \n The API will return a JSON formatted output with the details of your new project. \n { \n     \"id\" :   \"<your subscription id>\" , \n     \"status\" :   \"requested\" , \n     \"owner\" :   \"<your owner GUID>\" , \n     \"owner_info\" :   { \n         \"type\" :   \"user\" , \n         \"username\" :   \"<your username>\" , \n         \"display_name\" :   \"<your displayname>\" \n     } , \n     \"vendor\" :   null , \n     \"project_id\" :   null , \n     \"project_endpoint\" :   null , \n     \"project_title\" :   \"jekyll-blog\" , \n     \"project_region_label\" :   \"Canada\" , \n     \"project_ui\" :   null , \n     \"plan\" :   \"development\" , \n     \"environments\" :   3 , \n     \"storage\" :   5120 , \n     \"user_licenses\" :   1 , \n     \"project_region\" :   \"ca-1.platform.sh\" , \n     \"project_options\" :   { \n         \"defaults\" :   { \n             \"settings\" :   { \n                 \"use_drupal_defaults\" :   false \n             } , \n             \"variables\" :   [ ] , \n             \"access\" :   [ ] \n         } , \n         \"enforced\" :   [ ] , \n         \"regions\" :   [ ] , \n         \"plans\" :   [ ] \n     } , \n     \"enterprise_tag\" :   null , \n     \"locked\" :   null , \n     \"invoiced\" :   null , \n     \"services\" :   [ ] , \n     \"support_tier\" :   null , \n     \"_links\" :   { \n         \"self\" :   { \n             \"href\" :   \"https://accounts.platform.sh/api/v1/subscriptions/<your subscription id>\" \n         } , \n         \"owner\" :   { \n             \"href\" :   \"https://accounts.platform.sh/api/v1/profiles/<your owner GUID>\" \n         } \n     } \n } \n You\u2019ve now got a home for your new Jekyll project on Platform.sh. \n Using the API, you can do a lot more; in fact, you can do everything through the API that you\u2019re able to with the web UI and CLI. However, for the scope of this post, let\u2019s retrieve the details of our new Git repo from the  Web UI . On the main project screen, click  Git remote  and copy it.\n \n Add the remote to your local project: \n git remote add platform <project ID>@git.<region>.platform.sh:<project ID>.git\n Don\u2019t push anything for now . You still need to add the Platform.sh configuration. \n 4. Set up the  .platform.app.yaml  configuration \n Platform.sh relies on  yaml  configurations to configure the different containers to deploy. \n Create the  .platform.app.yaml  file at the root of your project, and add the following code: \n # .platform.app.yaml \n \n # The name of this application, which must be unique within a project. \n name :   'jekyll' \n \n # The type key specifies the language and version for your application. \n type :   'ruby:2.5' \n \n # The hooks that will be triggered when the package is deployed. \n hooks : \n      # Build hooks can modify the application files on disk, but not access any services like databases. \n      build :   |\n           bundle install \n          bundle   exec   jekyll   build \n \n # The size of the persistent disk of the application (in MB). \n disk :   5120 \n \n # The configuration of the application when it's exposed to the web. \n web : \n      locations : \n          '/' : \n              # The public directory of the application relative to its root. \n              root :   '_site' \n              index :   [ 'index.html' ] \n              scripts :   false \n              allow :   true \n Again, the  web  section is nearly identical to the  Hugo version  and  Gatsby version , just with a different root path for Jekyll.  In this case, since the Ruby container has no build flavors the  build  hook needs to run  bundle install  itself and then run a Jekyll build. \n We need also two other files:  routes.yaml  and  services.yaml .  services.yaml  is used to configure additional services like databases so we don\u2019t need it for that project. Just create the file: \n mkdir .platform\ntouch services.yaml\n Add  routes.yaml  in the  .platform  folder, and add the following configuration: \n \"https://{default}/\" : \n    type :   upstream \n    upstream :   \"jekyll:http\" \n This file tells the platform router to direct all incoming requests to our  jekyll  container. \n The last step is to create the appropriate  Gemfile  for our dependencies: \n source   \"https://rubygems.org\" \n gem   \"jekyll\" ,   \"~> 3.8.5\" \n gem   \"minima\" ,   \"~> 2.0\" \n group   : jekyll_plugins   do \n    gem   \"jekyll-feed\" ,   \"~> 0.6\" \n end \n gem   \"tzinfo-data\" , platforms :   [ : mingw ,   : mswin ,   : x64_mingw ,   : jruby ] \n gem   \"wdm\" ,   \"~> 0.1.0\"   if   Gem.win_platform ? \n Commit these new files: \n git add .platform.app.yaml .platform Gemfile\ngit commit -m  \"Add platform.sh configuration\" \n 5. Test and deploy \n Now, we\u2019re ready to deploy the project on Platform.sh. Push the repository to the new remote: \n git push platform master\n Then Platform.sh will build and deploy your app, containerized onto our grid, with the following output: \n \nCounting objects: 3,  done .\nDelta compression using up to  4  threads.\nCompressing objects: 100%  ( 3/3 ) ,  done .\nWriting objects: 100%  ( 3/3 ) ,  613  bytes  |  613.00 KiB/s,  done .\nTotal  3   ( delta 2 ) , reused  0   ( delta 0 ) \n\nValidating submodules\n\nValidating configuration files\n\nProcessing activity: Guillaume Moigneu pushed to Master\n    Found  4  new commits\n\n    Building application  'jekyll'   ( runtime type: ruby:2.5, tree: db94bb7 ) \n      Generating runtime configuration.\n\n      Executing build hook...\n        The dependency tzinfo-data  ( > =  0 )  will be unused by any of the platforms Bundler is installing  for . Bundler is installing  for  ruby but the dependency is only  for  x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run  ` bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java ` .\n        Fetching gem metadata from https://rubygems.org/...........\n        Fetching public_suffix 3.0.3\n        Installing public_suffix 3.0.3\n        ...\n        Configuration file: /app/_config.yml\n                    Source: /app\n               Destination: /app/_site\n         Incremental build: disabled. Enable with --incremental\n              Generating...\n               Jekyll Feed: Generating feed  for  posts\n                             done  in 0.424 seconds.\n         Auto-regeneration: disabled. Use --watch to enable.\n\n      Executing pre-flight checks...\n\n      Compressing application.\n      Beaming package to its final destination.\n\n      Provisioning certificates\nEnvironment certificates\n- certificate 43e7fdd: expiring on 2019-05-19 13:12:37+00:00, covering master-7rqtwti-<project ID>.<region>.platformsh.site\n\n\nRe-deploying environment <project ID>-master-7rqtwti\nEnvironment configuration\n  jekyll  ( type: ruby:2.5, size: S, disk: 5120 ) \n\nEnvironment routes\n  http://master-7rqtwti-<project ID>.<region>.platformsh.site/ redirects to https://master-7rqtwti-<project ID>.<region>.platformsh.site/\n  https://master-7rqtwti-<project ID>.<region>.platformsh.site/ is served by application  ` jekyll ` \n\n Let\u2019s review the output of your  push . After a basic Git push output, Platform.sh kicks in and runs the build script.  Under where it says  Executing build hook  you can see it downloading the Ruby dependencies and executing Jekyll: \n \n        Configuration file: /app/_config.yml\n                    Source: /app\n               Destination: /app/_site\n         Incremental build: disabled. Enable with --incremental\n              Generating...\n               Jekyll Feed: Generating feed  for  posts\n                             done  in 0.424 seconds.\n         Auto-regeneration: disabled. Use --watch to enable.\n Platform.sh then checks that everything seems correct and deploys the container to a host. You\u2019ll see that Platform.sh also generates the Let\u2019s Encrypt TLS certificate for your project. \n Environment routes\n  http://master-7rqtwti-<project ID>.<region>.platformsh.site/ redirects to https://master-7rqtwti-<project ID>.<region>.platformsh.site/\n  https://master-7rqtwti-<project ID>.<region>.platformsh.site/ is served by application  ` jekyll ` \n The last output is your application\u2019s new URL. You can also check that the project has been successfully deployed on the web interface: \n Now, go the URL, and you\u2019ll be able to see your Jekyll site. You can quick-start this process by cloning our  Jekyll example on Github . \n Read the rest of the series:  Four days, four languages, four frameworks : \n \n Day 1, Java:  Running Brightspot CMS on Platform.sh \n Day 2, Go:  Hugo, a fast static site generator \n Day 3, React and Node:  GatsbyJS\u2014the React-based static site generator \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Apache Kafka now available \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Even more batteries included: Platform.sh configuration libraries \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks, Day 3: GatsbyJS\u2014the React-based static site generator \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Webinar", "title": "Front-end performance testing in practice ", "url": "https://platform.sh/webinars/2020/frontend-performance-testing-in-practice/", "documentId": "4b19626cb98f3e2a8420e4c805c2158137d8623b", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n             March, 2020 \n          \n         \n         Front-end performance testing in practice \n        \n       \n       \n        \n        \n          \n          \n           \n          \n          \n           \n             \n           \n          \n        \n        \n           \n             \n               \n             \n           \n          \n       \n     \n   \n     \n       \n         How can performance testing be integrated into your development process? Platform.sh Solution Architect Jonas Kr\u00f6ger demonstrates how to integrate tools like Lighthouse and WebPageTest via CI to automate performance testing with every Git push. \n\n       \n      \n       \n         \n         \n           \n            \n             Watch the video \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Get Access \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Webinar", "title": "Tools and tips for remote teams that protect your privacy ", "url": "https://platform.sh/webinars/2020/tools-and-tips-for-remote-teams-that-protect-your-privacy/", "documentId": "60351159551030cb68b44d14c46de9bfd39dcb43", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n             March, 2020 \n          \n         \n         Tools and tips for remote teams that protect your privacy \n        \n         \n          \n            \n             \n            \n             \n               Robert Douglass \n              \n               Chief DevRel Officer \n              \n             \n          \n         \n        \n       \n       \n        \n        \n          \n          \n           \n          \n          \n           \n             \n           \n          \n        \n        \n           \n             \n               \n             \n           \n          \n       \n     \n   \n     \n       \n         With COVID-19 raging around the globe, many schools, universities, companies, and conferences are moving their meetings online to avoid gathering in person. But many of the tools available to facilitate these meetings, such as Slack, put control of your data into the hands of large companies.\nOur webinar looks at a number of tools useful in remote teams that make you the master of your own data, including some tools that you can run right on Platform.sh. \n Tools covered: \n \n Mattermost \n Nextcloud \n Opigno \n Restyaboard \n \n\n       \n      \n       \n         \n         \n           \n            \n             Watch the video \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Get Access \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Webinar", "title": "Architecting cloud computing solutions with Java ", "url": "https://platform.sh/webinars/2020/architecting-cloud-computing-solutions-with-java/", "documentId": "c633c658385c183576dac0a19020f702142b8915", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n             March, 2020 \n          \n         \n         Architecting cloud computing solutions with Java \n        \n         \n          \n            \n             \n            \n             \n               Otavio Santana \n              \n               Developer Relations \n              \n             \n          \n         \n        \n       \n       \n        \n        \n          \n          \n           \n          \n          \n           \n             \n           \n          \n        \n        \n           \n             \n               \n             \n           \n          \n       \n     \n   \n     \n       \n         Cloud-native has become a big buzzword around the world. But what does it mean? What advantages does it bring to your application and to your life as a software developer or architect? What\u2019s new in the Java world, and what are the steps to follow for a native cloud app? In this webinar you\u2019ll learn how to create or move your Java app to the cloud quickly. \n Join this webinar to learn how to either create or move your Java application quickly to the cloud age. \n Topics \n \n Cloud computing concepts \n Cloud-native concepts \n Anatomy of cloud systems \n Eclipse MicroProfile \n Jakarta EE \n The Twelve-Factor App \n Java specifications \n How to launch a Java application to the cloud quickly \n A live demo about Jakarta EE with MongoDB and how to publish it to the cloud \n \n Post Webinar Resources \n Payara eBook \n \n Payara Platform and PaaS with Platform.sh \n Payara GitHub code \n \n Cloud Native \n \n Architecting Cloud Native Applications: Design high-performing and cost-effective applications for the cloud \n What is cloud-native? The modern way to develop software \n Cloud Native Development Patterns and Best Practices: Practical architectural patterns for building modern, distributed cloud-native systems \n Cloud Native Transformation: Practical Patterns for Innovation \n CNCF Cloud Native \n \n Best practices \n \n Patterns of Enterprise Application Architecture \n The Twelve-Factor App \n Clean Code: A Handbook of Agile Software Craftsmanship \n Clean Architecture: A Craftsman\u2019s Guide to Software Structure and Design (Robert C. Martin Series) \n Domain-Driven Design: Tackling Complexity in the Heart of Software \n Effective Java \n \n Microservices \n \n Microservice database migration guide \n \n Migration Java 11 \n \n Java: It\u2019s Time to Move Your Application to Java 11 \n How to Migrate your Java 8 application to Java 11 on Platform.sh \n \n Java Tools \n \n Eclipse MicroProfile \n Jakarta EE \n \n Container \n \n The container is a lie! \n \n\n       \n      \n       \n         \n         \n           \n            \n             Watch the video \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Get Access \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Webinar", "title": "Containerize your cloud applications in a few lines of code without Kubernetes ", "url": "https://platform.sh/webinars/2020/containerize-your-cloud-application-without-kubernetes/", "documentId": "f1ebefa99c9a21e8a1819f7da18efede381982a5", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n             April, 2020 \n          \n         \n         Containerize your cloud applications in a few lines of code without Kubernetes \n        \n         \n          \n            \n             \n            \n             \n               Robert Douglass \n              \n               Chief DevRel Officer \n              \n             \n          \n         \n        \n       \n       \n        \n        \n          \n          \n           \n          \n          \n           \n             \n           \n          \n        \n        \n           \n             \n               \n             \n           \n          \n       \n     \n   \n     \n       \n         Developers looking to launch applications in the cloud have amazing modern tools at their disposal. A popular route involves using Kubernetes for container-orchestration and application deployment. \n Platform.sh offers an alternative to Kubernetes with a unique set of benefits. With just a few lines of code, most web applications can run in Platform.sh containers and benefit from a complete CI/CD GitOps workflow. \n Join our live webinar to find out how to get started on Platform.sh. We will cover: \n \n What apps are suitable for Platform.sh \n How much effort it takes to set up \n The primary benefits \n What apps are not suitable \n Checklist for deciding to use Kubernetes vs Platform.sh \n \n\n       \n      \n       \n         \n         \n           \n            \n             Watch the video \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Get Access \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh launches white-label SaaS factory ", "url": "https://platform.sh/blog/platformsh-launches-whitelabel-saas-factory/", "documentId": "ceea24568baf1a1eb5dd6a6da251596d7907202f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh launches white-label SaaS factory \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Yates \n                  \n                   VP Marketing \n                  \n                  \n                 \n            \n          \n         \n         24 Oct 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         New rapid-launch capabilities and APIs enable software companies to move to the cloud and create new recurring revenue businesses in weeks, not years \n [October 24, San Francisco, CA] Platform.sh, the Idea-to-Cloud Application Platform that simplifies cloud infrastructure, today announced the availability of its  white-label platform , which enables software companies and SaaS entrepreneurs to transform their existing on-premise software or build new SaaS businesses with unprecedented speed. \n Organizations spend increasingly significant amounts of time and budget on the development and maintenance of infrastructure, distracting focus from the core value that they provide to their customers \u2013 amazing applications and digital experiences. Platform.sh allows them to put their energy towards exciting and engaging customers - rather than building teams and technical debt to manage tooling, servers, containers, and cloud infrastructure - and eliminates capital expenditures needed to launch new lines of business. \n In a matter of days, Platform.sh can provide a fully branded experience for the rapid deployment of SaaS software, commerce apps, mobile back-ends, and web applications at scale, built in multiple languages or frameworks. This capability leverages Platform.sh\u2019s API-first approach to development, its unique instant-cloning technology, and its complete \u201cbatteries included\u201d continuous deployment workflow, where infrastructure becomes composable and managed with the same tools as application code.\u00a0 \n Partners simply need to provide basic branding information, load their existing application code as a template, decide on which cloud they want to settle within the options that Platform.sh provides (AWS, Azure and Orange or all of them) and then leverage Platform.sh\u2019s robust billing and provisioning APIs to integrate with their existing business processes. \n Magento Commerce (recently acquired by Adobe for $1.68B), eZ Systems, Sensio Labs (software vendor for Symfony), Orange, a leading global cloud company, and many early-stage SaaS entrepreneurs have built new business models on the Platform.sh white-label SaaS factory, leading to massive valuation increases, higher deal win rates, and better margins. \n \n \u201cWe built Platform.sh to allow organizations to move faster and drive business transformation by investing in what their customers really care about: great experiences with their applications. Our white-label platform has driven valuation for software companies by helping them move from licensing to SaaS, and gives enterprises and digital agencies the ability to deliver reliably and consistently with less cost.\u201d \n \u2013 Frederic Plais, CEO, Platform.sh \n \n \u00a0 \n \n \u201cWith Platform.sh\u2019s new white-label platform, we\u2019re able to provide our customers with an end-to-end solution for the development, deployment, and management of their content-centric projects - within just a few business days. This enables our customers to create engaging content faster than ever before, and allows us to generate new revenue streams through a SaaS delivery model.\u201d \u00a0 \u00a0 \n \u2013 Roland Benedetti, Chief Product Officer, eZ Systems\u00a0 \n \n \u00a0 \n \n \u201cWe moved Magento from being just an on premises product, sending people code and launching it, to enabling them to buy a fully hosted version out-of-the-box. We enabled customers to do that really quickly, really easily, and really seamlessly.\u201d \n \u2013 Mark Lenhard, SVP Strategy, Magento Commerce, an Adobe Company \n \n Creating a true SaaS product no longer requires massive investments, capital, or distraction from your core mission. With Platform.sh, businesses can launch and generate recurring revenue in weeks, not years. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Demos", "title": "Production environments and services", "url": "https://platform.sh/product/demos/real-services/deck/", "documentId": "67a10afe84f20e73d5f06268eb26bb77be66aa45", "text": "", "rank": 4},
{"site": "website", "section": "Webinar", "title": "Beginner Probot: building and hosting GitHub Apps on Platform.sh ", "url": "https://platform.sh/webinars/2020/beginner-probot-building-and-hosting-github-apps-on-platform.sh/", "documentId": "a6745dcb16b0f7e44d5e32b70562190de443ebac", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n             March, 2020 \n          \n         \n         Beginner Probot: building and hosting GitHub Apps on Platform.sh \n        \n         \n          \n            \n             \n            \n             \n               Chad Carlson \n              \n               Technical Writer \n              \n             \n          \n         \n        \n       \n       \n        \n        \n          \n          \n           \n          \n          \n           \n             \n           \n          \n        \n        \n           \n             \n               \n             \n           \n          \n       \n     \n   \n     \n       \n         Chances are, you\u2019re already familiar with and using a number of GitHub Apps on your repositories\u2019 CI/CD pipelines. Have you ever considered creating an app of your own? Whether you want to create a simple app for your specific site\u2019s needs or move on to a full-fledged production app offered in the GitHub Marketplace, getting started has its own learning curve. \n At Platform.sh, we maintain a template GitHub App using Probot that will get you registered and deployed in minutes, so you can get on your way to developing an app to fit your exact needs. \n Topics: \n \n GitHub App basics. What they are, and what they do \n GitHub API. What endpoints your apps can control on repositories and organizations \n Probot basics. How to use it to quickly develop GitHub Apps \n Creating apps from manifest files with Probot; setting permissions and app configuration \n GitHub registration. What GitHub needs, and when \n Deploying on Platform.sh; completing registration to fully prepare your app \n Branching. Customizing your Probot app on a Platform.sh development environment, and testing your changes on a separately registered GitHub App before merging \n \n Resources \n \n Probot template for Platform.sh \n Probot documentation \n GitHub Apps documentation \n GitHub API documentation \n Creating GitHub Apps from a manifest \n \n\n       \n      \n       \n         \n         \n           \n            \n             Watch the video \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Get Access \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "Security", "url": "https://platform.sh/product/demos/security/deck/", "documentId": "a4f80b98293bd001255955be09f869e28dbf83de", "text": "", "rank": 4},
{"site": "website", "section": "Webinar", "title": "Your checklist for running thousands of websites ", "url": "https://platform.sh/webinars/2020/your-checklist-for-running-thousands-of-websites/", "documentId": "7a398aa654dfe0e18f5eff05ef78e5d0ad163c86", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n             April, 2020 \n          \n         \n         Your checklist for running thousands of websites \n        \n         \n          \n         \n        \n       \n       \n        \n        \n          \n          \n           \n          \n          \n           \n             \n           \n          \n        \n        \n           \n             \n               \n             \n           \n          \n       \n     \n   \n     \n       \n         Every challenge that presents itself when developing and running a single website becomes amplified at scale. Imagine running a fleet of 100 websites. Or 1,000 websites. The more websites you manage, the more difficult it can be. \n Join this live webinar to learn governance and tooling best practices that can help you successfully manage thousands of websites. We\u2019ll share examples from multinational global organizations with large fleets of websites. \n We will cover: \n \n Development workflow and deployment best practices at scale \n How to successfully manage your website fleet \n How to unify your CI/CD workflow across stacks and technologies \n \n Check out the other webinars in this FleetOps series: \n \n FleetOps: aligning business and technology for success at scale \n How the University of Missouri cost-effectively migrated its fleet of web apps to the cloud \n \n\n       \n      \n       \n         \n         \n           \n            \n             Watch the video \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Get Access \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Webinar", "title": "Jakarta EE Meets NoSQL at the cloud age ", "url": "https://platform.sh/webinars/2020/jakarta-ee-meets-nosql-at-the-cloud-age/", "documentId": "06ddb509dc94400fd1366fd97397e92cce533eed", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n             April, 2020 \n          \n         \n         Jakarta EE Meets NoSQL at the cloud age \n        \n         \n          \n            \n             \n            \n             \n               Otavio Santana \n              \n               Developer Relations \n              \n             \n          \n         \n        \n       \n       \n        \n        \n          \n          \n           \n          \n           \n             \n           \n          \n        \n        \n           \n             \n               \n             \n           \n          \n       \n     \n   \n     \n       \n         Let\u2019s be honest: the amount of data collected by applications nowadays is growing at a scary pace. Many of them need to handle billions of users generating and consuming data at an incredible speed. Maybe you are wondering how to create an application like this? What is needed? What benefits can you take from this reality to your project? \n This session shows how Jakarta EE can meet these needs when you\u2019re working with NoSQL databases in the cloud. It\u2019s the same approach used by some of the biggest companies in the world to store, analyze, and get results from really crazy amounts of data. No matter your project size, you can take it to the next level today. \n Topics: \n \n Java \n Clean Code \n DSL \n Fluent API \n NoSQL \n Jakarta EE \n Jakarta NoSQL \n Cloud \n MongoDB \n \n\n       \n      \n       \n         \n         \n           \n            \n             Watch the video \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Get Access \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Webinar", "title": "PaaS protection: how to keep your digital agency fit in challenging times ", "url": "https://platform.sh/webinars/2020/paas-protection-/", "documentId": "fbc433f00f6b83b9cb371a98b610ed6943ca7297", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n           Tue, 12 May, 2020\n           18:00 CEST / \n            \n           \n            var zone = new Date().toLocaleTimeString('en-us',{timeZoneName:'short', timeZone: \"America/Los_Angeles\"}).split(' ')[2];\n            var usaTime = new Date(\"2020-05-12T18:00:00+02:00\").toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n            usaTime = new Date(usaTime);\n            document.write(usaTime.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})+' '+zone);\n           \n           \n             \n          \n         \n         PaaS protection: how to keep your digital agency fit in challenging times \n        \n         \n          \n            \n             \n            \n             \n               Aaron Porter \n              \n               VP, Platform.sh Partner Program \n              \n             \n          \n         \n        \n         \n          \n            \n             \n            \n             \n               Patrick Klima \n              \n               Product Manager \n              \n             \n          \n         \n        \n       \n       \n        \n        \n          \n          \n           \n          \n          \n           \n             \n           \n          \n        \n        \n       \n     \n   \n     \n       \n         Your agency needs to be in the best shape possible to adjust to whatever comes your way\u2014even in the most challenging, unanticipated circumstances. \n Join our live webinar to find out how a Platform-as-a-Service (PaaS) can help you navigate through obstacles and take advantage of opportunities to keep your agency fit over the long haul. \n We\u2019ll share real-world examples of how agencies have leveraged the Platform.sh PaaS to gain flexibility and speed, while avoiding vendor lock-in. And how you can tap into special features and pricing, and build new revenue streams. So your agency will be ready for whatever comes next. \n We will cover: \n \n Why a PaaS? \n Three steps to agency fitness \n Conquering technology obsolescence and preparing for the future \n The tangible benefits of thinking about your digital experience sites and apps as a fleet \n \n\n       \n      \n       \n         \n         \n           \n            \n             Save your spot! \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Register \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Webinar", "title": "FleetOps: aligning business and technology for success at scale ", "url": "https://platform.sh/webinars/2020/what-is-fleetops/", "documentId": "7d89e032e8f176206a34ae24cca34e3edc63c0cd", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n             April, 2020 \n          \n         \n         FleetOps: aligning business and technology for success at scale \n        \n         \n          \n            \n             \n            \n             \n               Chris Yates \n              \n               VP Marketing \n              \n             \n          \n         \n        \n         \n          \n            \n             \n            \n             \n               Patrick Klima \n              \n               Product Manager \n              \n             \n          \n         \n        \n       \n       \n        \n        \n          \n          \n           \n          \n          \n           \n             \n           \n          \n        \n        \n           \n             \n               \n             \n           \n          \n       \n     \n   \n     \n       \n         Public-facing sites and applications have proliferated across organizations, from global CPG and life-sciences companies to colleges and universities, agencies, and software companies. These applications range from critical anchor properties\u2014like corporate or brand .coms and .edus\u2014to campaign microsites with limited lifespans and department or project sites that proliferate at universities. \n To put it bluntly, you\u2019ve got the task of making potentially thousands of different applications all run properly, all the time. Simple, right? \n That\u2019s why you need to start thinking about FleetOps\u2014running a fleet of hundreds (or thousands) of websites and applications across your organization: securely, with predictable costs, and across different teams and departments throughout an organization. \n You\u2019ll learn \n \n How organizations of all sizes are facing the challenge of managing fleets of websites and applications \n Why technology platforms matter for marketers and communicators \n How marketers can leverage product and engineering workflow best practices to move faster and more predictably \n What FleetOps means for speed to market, reliability, predictability, and flexibility \n How a FleetOps strategy and selection of the right tools helps organizations deal with uncertainty \n \n Check out the other webinars in this FleetOps series: \n \n Your checklist for running thousands of websites \n How the University of Missouri cost-effectively migrated its fleet of web apps to the cloud \n \n\n       \n      \n       \n         \n         \n           \n            \n             Watch the video \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Get Access \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "The diaries (and adventures) of a SaaS entrepreneur: entry one ", "url": "https://platform.sh/blog/the-diaries-and-adventures-of-a-saas-entrepreneur/", "documentId": "a6658ac5c16d6cd72c6b31c41e67f9fabf463cc8", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The diaries (and adventures) of a SaaS entrepreneur: entry one \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         28 May 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Diary: entry one . (Honestly, I\u2019ll be cramming the last few years of my experiences and knowledge gained into this blog series.) My plan: to chronicle some of the challenges and scenarios  Platform.sh  has encountered as a SaaS company  and  as a SaaS infrastructure provider to many companies of all sizes. Companies we\u2019ve been able to help through all the business model changes and shift in thinking that come with PaaS adoption. \n If you\u2019re in a C-level business role at a SaaS startup or if your organization is planning to migrate applications to the cloud,  and  you want some help thinking through various aspects of the SaaS business model, you can keep reading comfortably; this blog series isn\u2019t a technology deep-dive. I may touch upon cloud infrastructure occasionally, but only because it can be central to some other very important components of your business. I hope I can impart some of the lessons I\u2019ve learned along the way, so you can understand how to quickly launch your own SaaS business. \n This is me \n I\u2019d describe myself as a software entrepreneur. I have a 12-year history of buying and selling technology companies, with revenues ranging from zero to US$30 million. I\u2019ve been a programmer and a consultant. A global marketer, head of sales, and a CEO. I\u2019ve sold projects to midsize and large-size companies around the world. Currently, I\u2019m Chief Commercial Officer for my most exciting venture yet: Platform.sh, a very smart Platform-as-a-Service (PaaS) company. \n \n PaaS automates the very complex world of containers in the cloud, providing significant savings and gains (i.e., new ways of doing things). \n \n Platform.sh offers clients full-on step change in business model, and I love that. Working with businesses to vastly improve the way they deliver services, improve gross margins, and discover new revenue streams is very rewarding. Since 2014, I\u2019ve helped hundreds of organizations understand the value of the Platform.sh PaaS, adopt it, and shift their business approaches\u2014so they can develop new projects and make changes far more quickly and safely, at a much lower cost. In aggregate, these changes have translated into business agility. \n Build it, sell it, (operate it??) \n Building an application brings your business vision and ideas to life. Even if somebody else develops the code, the application is your core IP. Selling that application is another element core to your business. And your entire sales and marketing engine will have been carefully constructed around your unique value proposition. You\u2019ll want to keep functions pivotal to your application\u2019s success (and to your customers\u2019 satisfaction) in-house, like training, onboarding, application support, and issue resolution. But building a state-of-the-art container management platform and then operating it at scale within somebody else\u2019s global cloud infrastructure? Well, that\u2019s difficult and expensive. And very likely not in your wheelhouse. \n Let\u2019s take a step back. Historically, software vendors sold licences to customers and left them to host the live service. Those customers were burdened with expensive infrastructure management challenges. Nearly everything between the developer and a live service\u2014managing environments, testing, continuous integration and delivery, security updates, zero-downtime maintenance, disaster recovery\u2014was complex, cumbersome, and costly. \n Then, SaaS companies came along. And they took on customer hosting responsibilities. But it wasn\u2019t just hosting; they needed the know-how to tackle new and ever-evolving technologies. They had to get it right, at scale\u2014magnifying the challenges exponentially. Not their core business strength. And not in their budgets. \n This is exactly why SaaS companies like PaaS.  Because they don\u2019t have to build and maintain it themselves . \n Remove barriers, focus on what counts most \n Platform.sh has been helping C-levels and their companies get new SaaS businesses off the ground quickly\u2014with minimal effort and without massive investments. By eliminating the time, resources, and costs consumed by infrastructure management, our SaaS clients have turned their full attention back to critical aspects of their business model: new product features, go-to-market strategies, brand building. And actually implementing new (and oftentimes far better) ways of doing things, like providing support and accelerating their roadmaps. \n \n By moving to the Platform.sh PaaS, our SaaS clients have reduced their overall cost per client by as much as 70%. \n \n A PaaS not only solves some large-scale challenges, but it actually creates the foundation for doing many other things differently. At Platform.sh, we\u2019ve lived through many of our own implementations. Our new customers ask us what we\u2019ve seen elsewhere, what\u2019s worked\u2014and what hasn\u2019t. \n That\u2019s  what I plan to share with you. \n So, what\u2019s next? \n My next diary entry will cover several key aspects of the SaaS business model, and what\u2019s worth spending time on ahead of launching your new SaaS service. \n Here are some of the topics we\u2019ll cover in the blog series: \n \n 10x the value of your SaaS business value in two years \u2014 a case study \n Reduce your cost per SaaS client \n How to determine if a SaaS vendor is worth its weight \n How SaaS startups can get better funding \n Transition your licence model to SaaS \n Should you build your own PaaS? \n SaaS Business Planning workshops \n Single tenant/multitenant SaaS: the best of both worlds \n How to uplift your productivity 20x \n Make the SaaS transition, preserve partner relationships \n Identify the best IaaS cloud strategy/vendor for your SaaS startup \n \n I\u2019m looking forward to sharing what I\u2019ve learned with you. If you\u2019d like to connect or open a conversation about your SaaS business model, or the value of a PaaS cloud infrastructure, you can find me on  LinkedIn  or you can  contact me  directly. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             6,000+ applications, multiple content management systems, one platform \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Demos", "title": "Platform.sh overview", "url": "https://platform.sh/product/demos/platform-overview/deck/", "documentId": "8f3f8a617d658b168aa7d52908ed00d8f36e04de", "text": "", "rank": 4},
{"site": "website", "section": "Webinar", "title": "In the Cloud Economy, Containers are the New Currency ", "url": "https://platform.sh/webinars/2020/in-the-cloud-economy-containers-are-the-new-currency/", "documentId": "5e83b16ba4087ecbc0f48b5c3e910096a5dff958", "text": "\n     \n       \n         \n           All webinars \n         \n       \n       \n        \n         \n          \n           Tue, 5 May, 2020\n           18:00 CEST / \n            \n           \n            var zone = new Date().toLocaleTimeString('en-us',{timeZoneName:'short', timeZone: \"America/Los_Angeles\"}).split(' ')[2];\n            var usaTime = new Date(\"2020-05-05T18:00:00+02:00\").toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n            usaTime = new Date(usaTime);\n            document.write(usaTime.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})+' '+zone);\n           \n           \n             \n          \n         \n         In the Cloud Economy, Containers are the New Currency \n        \n         \n          \n            \n             \n            \n             \n               Kieron Sambrook-Smith \n              \n               Chief Commercial Officer \n              \n             \n          \n         \n        \n       \n       \n        \n        \n          \n          \n           \n          \n          \n           \n             \n           \n          \n        \n        \n       \n     \n   \n     \n       \n         Want to know how to get your apps into the cloud, without having to know anything about the cloud? Join us for a webinar where we\u2019ll share how a Platform-as-a-Service (PaaS) can give you all the benefits of container technology, without the pain of containerizing your apps first. \n We will cover: \n \n Why the cloud economy winners are taking advantage of automation and abstraction, and the losers are not \n Why self-build container management is difficult, expensive, and fraught with problems \n The easiest way to switch your apps into the cloud with little impact \n \n\n       \n      \n       \n         \n         \n           \n            \n             Save your spot! \n            \n             \n               \n               \n               \n                 First Name \n                 \n               \n               \n                 Last Name \n                 \n               \n               \n                 Email \n                 \n               \n               \n                 Company \n                 \n               \n               \n                 Country \n                 \n                   Country \n                  \n                     Afghanistan \n                  \n                     Albania \n                  \n                     Algeria \n                  \n                     American Samoa \n                  \n                     Andorra \n                  \n                     Angola \n                  \n                     Anguilla \n                  \n                     Antarctica \n                  \n                     Antigua And Barbuda \n                  \n                     Argentina \n                  \n                     Armenia \n                  \n                     Aruba \n                  \n                     Australia \n                  \n                     Austria \n                  \n                     Azerbaijan \n                  \n                     Bahamas \n                  \n                     Bahrain \n                  \n                     Bangladesh \n                  \n                     Barbados \n                  \n                     Belarus \n                  \n                     Belgium \n                  \n                     Belize \n                  \n                     Benin \n                  \n                     Bermuda \n                  \n                     Bhutan \n                  \n                     Bolivia \n                  \n                     Bosnia And Herzegovina \n                  \n                     Botswana \n                  \n                     Bouvet Island \n                  \n                     Brazil \n                  \n                     British Indian Ocean Territory \n                  \n                     Brunei Darussalam \n                  \n                     Bulgaria \n                  \n                     Burkina Faso \n                  \n                     Burundi \n                  \n                     Cambodia \n                  \n                     Cameroon \n                  \n                     Canada \n                  \n                     Cape Verde \n                  \n                     Cayman Islands \n                  \n                     Central African Republic \n                  \n                     Chad \n                  \n                     Chile \n                  \n                     China \n                  \n                     Christmas Island \n                  \n                     Cocos (keeling) Islands \n                  \n                     Colombia \n                  \n                     Comoros \n                  \n                     Congo \n                  \n                     Congo, The Democratic Republic Of The \n                  \n                     Cook Islands \n                  \n                     Costa Rica \n                  \n                     Cote D'ivoire \n                  \n                     Croatia \n                  \n                     Cuba \n                  \n                     Cyprus \n                  \n                     Czech Republic \n                  \n                     Denmark \n                  \n                     Djibouti \n                  \n                     Dominica \n                  \n                     Dominican Republic \n                  \n                     East Timor \n                  \n                     Ecuador \n                  \n                     Egypt \n                  \n                     El Salvador \n                  \n                     Equatorial Guinea \n                  \n                     Eritrea \n                  \n                     Estonia \n                  \n                     Ethiopia \n                  \n                     Falkland Islands (malvinas) \n                  \n                     Faroe Islands \n                  \n                     Fiji \n                  \n                     Finland \n                  \n                     France \n                  \n                     French Guiana \n                  \n                     French Polynesia \n                  \n                     French Southern Territories \n                  \n                     Gabon \n                  \n                     Gambia \n                  \n                     Georgia \n                  \n                     Germany \n                  \n                     Ghana \n                  \n                     Gibraltar \n                  \n                     Greece \n                  \n                     Greenland \n                  \n                     Grenada \n                  \n                     Guadeloupe \n                  \n                     Guam \n                  \n                     Guatemala \n                  \n                     Guinea \n                  \n                     Guinea-bissau \n                  \n                     Guyana \n                  \n                     Haiti \n                  \n                     Heard Island And Mcdonald Islands \n                  \n                     Holy See (vatican City State) \n                  \n                     Honduras \n                  \n                     Hong Kong \n                  \n                     Hungary \n                  \n                     Iceland \n                  \n                     India \n                  \n                     Indonesia \n                  \n                     Iran, Islamic Republic Of \n                  \n                     Iraq \n                  \n                     Ireland \n                  \n                     Israel \n                  \n                     Italy \n                  \n                     Jamaica \n                  \n                     Japan \n                  \n                     Jordan \n                  \n                     Kazakstan \n                  \n                     Kenya \n                  \n                     Kiribati \n                  \n                     Korea, Democratic People's Republic Of \n                  \n                     Korea, Republic Of \n                  \n                     Kosovo \n                  \n                     Kuwait \n                  \n                     Kyrgyzstan \n                  \n                     Lao People's Democratic Republic \n                  \n                     Latvia \n                  \n                     Lebanon \n                  \n                     Lesotho \n                  \n                     Liberia \n                  \n                     Libyan Arab Jamahiriya \n                  \n                     Liechtenstein \n                  \n                     Lithuania \n                  \n                     Luxembourg \n                  \n                     Macau \n                  \n                     Macedonia, The Former Yugoslav Republic Of \n                  \n                     Madagascar \n                  \n                     Malawi \n                  \n                     Malaysia \n                  \n                     Maldives \n                  \n                     Mali \n                  \n                     Malta \n                  \n                     Marshall Islands \n                  \n                     Martinique \n                  \n                     Mauritania \n                  \n                     Mauritius \n                  \n                     Mayotte \n                  \n                     Mexico \n                  \n                     Micronesia, Federated States Of \n                  \n                     Moldova, Republic Of \n                  \n                     Monaco \n                  \n                     Mongolia \n                  \n                     Montserrat \n                  \n                     Montenegro \n                  \n                     Morocco \n                  \n                     Mozambique \n                  \n                     Myanmar \n                  \n                     Namibia \n                  \n                     Nauru \n                  \n                     Nepal \n                  \n                     Netherlands \n                  \n                     Netherlands Antilles \n                  \n                     New Caledonia \n                  \n                     New Zealand \n                  \n                     Nicaragua \n                  \n                     Niger \n                  \n                     Nigeria \n                  \n                     Niue \n                  \n                     Norfolk Island \n                  \n                     Northern Mariana Islands \n                  \n                     Norway \n                  \n                     Oman \n                  \n                     Pakistan \n                  \n                     Palau \n                  \n                     Palestinian Territory, Occupied \n                  \n                     Panama \n                  \n                     Papua New Guinea \n                  \n                     Paraguay \n                  \n                     Peru \n                  \n                     Philippines \n                  \n                     Pitcairn \n                  \n                     Poland \n                  \n                     Portugal \n                  \n                     Puerto Rico \n                  \n                     Qatar \n                  \n                     Reunion \n                  \n                     Romania \n                  \n                     Russian Federation \n                  \n                     Rwanda \n                  \n                     Saint Helena \n                  \n                     Saint Kitts And Nevis \n                  \n                     Saint Lucia \n                  \n                     Saint Pierre And Miquelon \n                  \n                     Saint Vincent And The Grenadines \n                  \n                     Samoa \n                  \n                     San Marino \n                  \n                     Sao Tome And Principe \n                  \n                     Saudi Arabia \n                  \n                     Senegal \n                  \n                     Serbia \n                  \n                     Seychelles \n                  \n                     Sierra Leone \n                  \n                     Singapore \n                  \n                     Slovakia \n                  \n                     Slovenia \n                  \n                     Solomon Islands \n                  \n                     Somalia \n                  \n                     South Africa \n                  \n                     South Georgia And The South Sandwich Islands \n                  \n                     Spain \n                  \n                     Sri Lanka \n                  \n                     Sudan \n                  \n                     Suri- name \n                  \n                     Svalbard And Jan Mayen \n                  \n                     Swaziland \n                  \n                     Sweden \n                  \n                     Switzerland \n                  \n                     Syrian Arab Republic \n                  \n                     Taiwan, Province Of China \n                  \n                     Tajikistan \n                  \n                     Tanzania, United Republic Of \n                  \n                     Thailand \n                  \n                     Togo \n                  \n                     Tokelau \n                  \n                     Tonga \n                  \n                     Trinidad And Tobago \n                  \n                     Tunisia \n                  \n                     Turkey \n                  \n                     Turkmenistan \n                  \n                     Turks And Caicos Islands \n                  \n                     Tuvalu \n                  \n                     Uganda \n                  \n                     Ukraine \n                  \n                     United Arab Emirates \n                  \n                     United Kingdom \n                  \n                     United States \n                  \n                     United States Minor Outlying Islands \n                  \n                     Uruguay \n                  \n                     Uzbekistan \n                  \n                     Vanuatu \n                  \n                     Venezuela \n                  \n                     Viet Nam \n                  \n                     Virgin Islands, British \n                  \n                     Virgin Islands, U.s. \n                  \n                     Wallis And Futuna \n                  \n                     Western Sahara \n                  \n                     Yemen \n                  \n                     Zambia \n                  \n                     Zimbabwe \n                  \n                 \n               \n               \n                 State \n                 \n                   State \n                  \n                     AK \n                  \n                     AL \n                  \n                     AR \n                  \n                     AZ \n                  \n                     CA \n                  \n                     CO \n                  \n                     CT \n                  \n                     DE \n                  \n                     FL \n                  \n                     GA \n                  \n                     HI \n                  \n                     IA \n                  \n                     ID \n                  \n                     IL \n                  \n                     IN \n                  \n                     KS \n                  \n                     KY \n                  \n                     LA \n                  \n                     MA \n                  \n                     MD \n                  \n                     ME \n                  \n                     MI \n                  \n                     MN \n                  \n                     MO \n                  \n                     MS \n                  \n                     MT \n                  \n                     NC \n                  \n                     ND \n                  \n                     NE \n                  \n                     NH \n                  \n                     NJ \n                  \n                     NM \n                  \n                     NV \n                  \n                     NY \n                  \n                     OH \n                  \n                     OK \n                  \n                     OR \n                  \n                     PA \n                  \n                     RI \n                  \n                     SC \n                  \n                     SD \n                  \n                     TN \n                  \n                     TX \n                  \n                     UT \n                  \n                     VA \n                  \n                     VT \n                  \n                     WA \n                  \n                     WI \n                  \n                     WV \n                  \n                     WY \n                  \n                     NU \n                  \n                     QC \n                  \n                     NB \n                  \n                     NS \n                  \n                     PE \n                  \n                     NL \n                  \n                     BC \n                  \n                     SK \n                  \n                     NT \n                  \n                     MB \n                  \n                     YT \n                  \n                     AB \n                  \n                 \n               \n               \n                 \n                    \n                     Register \n                    \n                     \n                 \n               \n             \n             \n               Success! \n               Please check your email for more details on this webinar. \n             \n           \n         \n       \n      \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "6,000+ applications, multiple content management systems, one platform ", "url": "https://platform.sh/blog/2019/orange-fleet-management/", "documentId": "5aa8bdf95cdd7b1c717ecb92896f2dc8cf121496", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           6,000+ applications, multiple content management systems, one platform \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Yates \n                  \n                   VP Marketing \n                  \n                  \n                 \n            \n          \n         \n         29 Jul 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today we announced the expansion of our relationship with Orange\u2014one of the world\u2019s largest telecommunications companies\u2014to include a new project, Orange Cloud for Business Flexible Web Publisher. That\u2019s a long name, but the idea behind it is simple. \n The solution is built on top of Platform.sh for website fleet management, which gives you access to an out-of-the-box cloud platform that supports provisioning and updating everything from PHP content mangement and ecommerce solutions to enterprise Java apps, Node.js apps, and static site generators. Platform.sh partners and customers can focus on business agility instead of the underlying infrastructure. \n Orange Cloud for Business customers get the power of a modern, container-based developer experience to build and run their websites\u2014with the CMS they choose, like Drupal, WordPress, Joomla, and PrestaShop\u2014with the support of Orange, a brand they trust. \n For Orange, Platform.sh provides a platform to provision and manage thousands of web apps for their customers, integrated with the Orange Cloud for Business brand and management tools, making it easy to onboard new customers\u2014and scale current ones, as needed. \n You can  read more in our press release about Flexible Web Publisher here . Or  connect with the Platform.sh team  to find out more about our approach to website fleet management and how we help organizations scale. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             The diaries (and adventures) of a SaaS entrepreneur: entry one \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Four days, four languages, four frameworks, Day 3: GatsbyJS\u2014the React-based static site generator ", "url": "https://platform.sh/blog/four-days-four-languages-four-frameworks-day-3-gatsbyjsthe-reactbased-static-site-generator/", "documentId": "64c120ce8dfd24980b7168f3b4cb46434822f01c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Four days, four languages, four frameworks, Day 3: GatsbyJS\u2014the React-based static site generator \n         \n\n        \n         \n            \n              \n          \n         \n         28 Feb 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         It\u2019s day three of our four-part series of posts about running Static Site Generators (SSGs) and alternative Content Management Systems on Platform.sh. Today, we\u2019re looking at  GatsbyJS , an SSG publishing framework built on top of  React  Facebook\u2019s Javascript library. What makes Gatsby unique and interesting is that it\u2019s written as a  Progressive Web App  (PWA). \n Gatsby and other PWAs use a combination of client-side (Javascript) and server-side components, which can be both static assets and dynamic APIs. This gets to our third, three-letter-acronym: JAM or  JAMstack \u2014an architecture built on client-side Javascript, APIs, and Markup, as opposed to the LAMP (Linux, Apache, MySQL, PHP) server-side stack we know so well from Drupal, WordPress, and so on. \n While Gatsby uses a different language (Javascript) and server-side framework (Node) than the other SSGs we\u2019re demonstrating, setting it up on Platform.sh is very similar to  how we ran Hugo , the Go-based SSG. \n Let\u2019s run GatsbyJS on Platform.sh \n We\u2019ll start as we have before with a local version of our application. Since we\u2019re starting from scratch, we need a few prerequisites installed on our machine. If you have an existing Gatsby app, you can  skip ahead .  You can also download a  ready-to-run copy of a Gatsby  project for Platform.sh, if that\u2019s more your speed. \n 1. Set up your local machine \n You\u2019ll need four tools to deploy your Gatsby site on Platform.sh: \n \n Git:  install git  if it\u2019s not already on your machine \n Node 8+:  install node \n npx:  sudo npm install -g npx \n Optional (but really, you should):  the platform.sh cli tool \n \n For each of these tools, please refer to their own install pages. \n 2. Bootstrap your GatsbyJS project \n You need to create a new GatsbyJS folder from a template: \n $ npx gatsby new gatsby-hello https://github.com/gatsbyjs/gatsby-starter-blog\nnpx: installed  1384  in 33.248s\ninfo Creating new site from git: https://github.com/gatsbyjs/gatsby-starter-blog.git\nCloning into  'gatsby-hello' ...\n\n......  ( Lots of output here ) \n\nInitialized empty Git repository in /media/psh/customers/gatsby-hello/.git/\ninfo Create initial git commit in gatsby-hello\n You can now run the local development server: \n $  cd  gatsby-hello  &&  npm run develop\n\n> gatsby-starter-blog@0.1.0 develop /media/psh/customers/gatsby-hello\n> gatsby develop\n\n...  ( Lots of output here ) \n\nYou can now view Gatsby-starter-blog in the browser.\n\n  http://localhost:8000/\n\nView GraphiQL, an in-browser IDE, to explore your site ' s data and schema.\n\n  http://localhost:8000/___graphql\n\nNote that the development build is not optimized.\nTo create a production build, use npm run build.\n\n\u2139 \uff62wdm\uff63:\n\u2139 \uff62wdm\uff63: Compiled successfully.\n Browse  http://localhost:8000/  to check that everything is working as expected. \n The  npx  template already creates a basic Git repository: \n $ git log\ncommit cd34e2366e6c28de7e0db53b527d6d4ddb1b7952 (HEAD -> master)\nAuthor: Guillaume Moigneu <***@platform.sh>\nDate:   Mon Feb 18 12:33:26 2019 +0100\n\n    Initial commit from Gatsby: (https://github.com/gatsbyjs/gatsby-starter-blog.git)\n   3. Create your Platform.sh project \n Create a Platform.sh project by signing to  a trial account  or log in to your account. \n Select a  Standard  project,  then choose the region you want your project to be hosted in. \n Review and validate. You can now access your newly provisioned project. On the wizard, click  Git remote  and copy it. \n Add the remote to your local project: \n git remote add platform <project ID>@git.<region>.platform.sh:<project ID>.git\n Don\u2019t push anything for now .  You still need to add the Platform.sh configuration. \n 4. Set up the  .platform.app.yaml  configuration \n Platform.sh relies on  yaml  configurations to configure the different containers to deploy.\nCreate the  .platform.app.yaml  file at the root of your project, and add the following code: \n # .platform.app.yaml \n \n # The name of this application, which must be unique within a project. \n name :   'gatsbyjs' \n \n # The type key specifies the language and version for your application. \n type :   'nodejs:8.9' \n \n # The hooks that will be triggered when the package is deployed. \n hooks : \n      # Build hooks can modify the application files on disk but not access any services like databases. \n      build :   |\n         npm run build \n \n # The size of the persistent disk of the application (in MB). \n disk :   256 \n \n # The configuration of the application when it's exposed to the web. \n web : \n      commands : \n          start :   sleep   infinity \n      locations : \n          '/' : \n              # The public directory of the application relative to its root. \n              root :   'public' \n              index :   [ 'index.html' ] \n              scripts :   false \n              allow :   true \n The  web  section is nearly identical to the  Hugo version .  Really, serving any static site on Platform.sh is the same at runtime.  The build hook is a bit simpler in this case as it need only run  npm run build  to compile Gatsby. \n Because the container  type  is NodeJS, and the build flavor is left at the default, Platform.sh will automatically run  npm install  before the build hook automatically to ensure all dependencies are available. \n We need also two other files:  routes.yaml  and  services.yaml .  services.yaml  is used to configure additional services like databases, so we don\u2019t need it for that project. Just create the file: \n mkdir .platform\ntouch services.yaml\n Add  routes.yaml  in the  .platform  folder, and add the following configuration: \n \"https://{default}/\" : \n    type :   upstream \n    upstream :   \"gatsbyjs:http\" \n This file tells the Platform.sh router to direct all incoming requests to our  gatsbyjs  container. Commit these new files: \n git add .platform.app.yaml .platform\ngit commit -m  \"Add platform.sh configuration\" \n 5. Test and deploy \n You\u2019re now ready to deploy the project on Platform.sh. Push the repository to the new remote: \n git push platform master\n Platform.sh will then build and deploy your Gatsby application, with the following output: \n \n \nCounting objects: 44,  done .\nDelta compression using up to  4  threads.\nCompressing objects: 100%  ( 38/38 ) ,  done .\nWriting objects: 100%  ( 44/44 ) , 1.04 MiB  |  16.98 MiB/s,  done .\nTotal  44   ( delta 2 ) , reused  0   ( delta 0 ) \n\nValidating submodules\n\nValidating configuration files\n\nBuilding application  'gatsbyjs'   ( runtime type: nodejs:8.9, tree: fafb3d4 ) \n      Generating runtime configuration.\n\n      Building a NodeJS application, let 's make it fly.\n       Found a `package.json`, installing dependencies.\n \n         > sharp@0.21.3 install node_modules/sharp\n         > (node install/libvips && node install/dll-copy && prebuild-install) || (node-gyp rebuild && node install/dll-copy)\n         ...\n         up to date in 14.102s\n \n         success open and validate gatsby-configs \u2014 0.009 s\n         success load plugins \u2014 0.325 s\n         success onPreInit \u2014 0.895 s\n         success delete html and css files from previous builds \u2014 0.096 s\n         success initialize cache \u2014 0.016 s\n         success copy gatsby files \u2014 0.024 s\n         success onPreBootstrap \u2014 0.006 s\n         success source and transform nodes \u2014 0.104 s\n         success building schema \u2014 0.326 s\n         success createPages \u2014 0.056 s\n         success createPagesStatefully \u2014 0.032 s\n         success onPreExtractQueries \u2014 0.004 s\n         success update schema \u2014 0.185 s\n         success extract queries from components \u2014 0.134 s\n \n         success run graphql queries \u2014 0.694 s \u2014 9/9 13.00 queries/second\n         success write out page data \u2014 0.012 s\n         success write out redirect data \u2014 0.001 s\n \n \n \n         info bootstrap finished - 5.674 s\n \n         done generating icons for manifest\n         success onPostBootstrap \u2014 0.287 s\n         success Building production JavaScript and CSS bundles \u2014 11.784 s\n         success Building static HTML for pages \u2014 0.844 s \u2014 7/7 28.27 pages/second\n         Generated public/sw.js, which will precache 11 files, totaling 283621 bytes.\n         info Done building in 18.685 sec\n \n          Executing pre-flight checks...\n \n       Compressing application.\n       Beaming package to its final destination.\n \n     W: Route ' { default } ' doesn' t map to a domain of the project, mangling the route.\n\n    Provisioning certificates\n      Validating  1  new domain\n      Provisioned new certificate  for   1  domains of this environment\n       ( Next refresh will be at 2019-04-20 20:19:01+00:00. ) \n      Environment certificates\n      - certificate 18bf626: expiring on 2019-05-18 20:19:01+00:00, covering master-7rqtwti-<project ID>.<region>.platformsh.site\n\n\n    Creating environment <project ID>-master-7rqtwti\n      Environment configuration\n        gatsbyjs  ( type: nodejs:8.9, size: M, disk: 5120 ) \n\n      Environment routes\n        http://master-7rqtwti-<project ID>.<region>.platformsh.site/ redirects to https://master-7rqtwti-<project ID>.<region>.platformsh.site/\n        https://master-7rqtwti-<project ID>.<region>.platformsh.site/ is served by application  ` gatsbyjs ` \n \n Let\u2019s review the output of your  push . After a basic Git push output, Platform.sh kicks in and runs the build script.  Under where it says  Executing build hook  you can see it downloading npm packages and then running Gatsby. \n Building application  'gatsbyjs'   ( runtime type: nodejs:8.9, tree: fafb3d4 ) \n      Generating runtime configuration.\n\n      Building a NodeJS application, let ' s make it fly.\n      Found a  ` package.json ` , installing dependencies.\n\n        > sharp@0.21.3 install node_modules/sharp\n        >  ( node install/libvips  &&  node install/dll-copy  &&  prebuild-install )   ||   ( node-gyp rebuild  &&  node install/dll-copy ) \n        ...\n        up to date in 14.102s\n\n        success open and validate gatsby-configs \u2014 0.009 s\n        success load plugins \u2014 0.325 s\n        success onPreInit \u2014 0.895 s\n        success delete html and css files from previous builds \u2014 0.096 s\n        success initialize cache \u2014 0.016 s\n        success copy gatsby files \u2014 0.024 s\n        success onPreBootstrap \u2014 0.006 s\n        success  source  and transform nodes \u2014 0.104 s\n        success building schema \u2014 0.326 s\n        success createPages \u2014 0.056 s\n        success createPagesStatefully \u2014 0.032 s\n        success onPreExtractQueries \u2014 0.004 s\n        success update schema \u2014 0.185 s\n        success extract queries from components \u2014 0.134 s\n\n        success run graphql queries \u2014 0.694 s \u2014 9/9 13.00 queries/second\n        success write out page data \u2014 0.012 s\n        success write out redirect data \u2014 0.001 s\n\n\n\n        info bootstrap finished - 5.674 s\n\n         done  generating icons  for  manifest\n        success onPostBootstrap \u2014 0.287 s\n        success Building production JavaScript and CSS bundles \u2014 11.784 s\n        success Building static HTML  for  pages \u2014 0.844 s \u2014 7/7 28.27 pages/second\n        Generated public/sw.js, which will precache  11  files, totaling  283621  bytes.\n        info Done building in 18.685 sec\n (It\u2019s not as fast as Hugo, but still decently fast.) \n Platform.sh then checks that everything seems correct and deploys the container to a host. Again, it generates Let\u2019s Encrypt TLS certificates for every route automatically and ends with the URLs of the application: \n       Environment routes\n        http://master-7rqtwti-<project ID>.<region>.platformsh.site/ redirects to https://master-7rqtwti-<project ID>.<region>.platformsh.site/\n        https://master-7rqtwti-<project ID>.<region>.platformsh.site/ is served by application  ` gatsbyjs ` \n The last output is your application\u2019s new URL. You can also check that the project has been successfully deployed on the web interface. If you\u2019ve got the Platform.sh CLI installed, jumping to the web interface from your project is simple; no need to remember project IDs, just type  platform web . \n Now your basic GatsbyJS site is up and running! \n As a side note, we\u2019ve been focused this week on showing how you can run alternate frameworks and a variety of languages on Platform.sh. Did you know that you can run multiple applications inside the same project? This  multi-app setup  is a subject for another post, however it\u2019s worth noting that combining purpose-built services, like a site built with an SSG, with a blog powered by WordPress, or a headless e-commerce back end powered by Magento or Drupal Commerce, is quite straightforward. Gatsby makes it especially easy, since it\u2019s client-side framework was designed to consume APIs directly. \n Tomorrow , we\u2019ll take a look at our final SSG, and the most popular,  Jekyll  a SSG written in Ruby. \n Read the series:  Four days, four languages, four frameworks \n \n Day 1, Java:  Running Brightspot CMS on Platform.sh \n Day 2, Go:  Hugo, a fast static site generator \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Apache Kafka now available \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Even more batteries included: Platform.sh configuration libraries \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks, Day 4: Jekyll - the SSG that started it all \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Solutions", "title": "White-label PaaS for SaaS, software vendors, and agencies ", "url": "https://platform.sh/solutions/software-vendors/?utm_source=blog&utm_medium=landing_page&utm_campaign=events&utm_content=saas_factory", "documentId": "1f85a234ccbdba5473f5a3e4deb51f3f2dffb25d", "text": "\n   \n     \n       \n     \n         White-label SaaS Factory \n\n        \n\n        \n         Your software. Launched as a profitable SaaS business in days\u2014not years. Without massive investments. \n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           .bd9bb9d8-739f-489a-99ed-96a1e328bf3f{font-size:22.36px;font-family:Moderat-Mono-Medium, Moderat;font-weight:500;}.ebb7f417-bc24-4139-aba9-41eda4b77a67{fill:none;}.bd4a0a21-b1d7-42cf-9eeb-b40cd8e9c5e3{fill:#fcc938;}.e240cba8-6286-4b72-8c92-056c01e20c4f{fill:#ffd9d9;}.b34aaadc-0670-4c13-9066-efade4ba1fff{fill:#171719;} Header Your code here \n        \n      \n     \n   \n \n   \n     \n       What White-Label SaaS looks like \n       This used to mean building a complex multi-tenant system. Learning to scale it to peak usage. Or hiring new people with the cloud expertise needed to build and run a new type of business. Or diverting your focus from the features your customers care about. But that\u2019s not the case with Platform.sh\u2019s White-Label SaaS. \n     \n   \n \n   \n     \n       \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Bring your code \n    \n    \n     Add your app code as-is, without re-architecting. Configure the customer experience with your look and feel. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Connect your systems \n    \n    \n     Use our API to provision with your existing billing & accounting tools, or leverage ours. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Focus on your business \n    \n    \n     Put your efforts towards customer care and features instead of worrying about infrastructure. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       \n     \n     \n       Are you a candidate for white label? \n       Software companies \n       Ready to move from license to SaaS models \n       Cloud service providers \n       Able to deliver a differentiated PaaS on top of IaaS or managed cloud \n       Digital agencies \n       Motivated to drive repeatability and brand affinity \n     \n   \n \n   \n     \n       \n         \n           workshop \n           Ready to speed your journey to SaaS profitability? \n           A Platform.sh  SaaS business planning and implementation workshop  \u2014based on our collaborations with many clients to successfully deliver profitable SaaS offerings\u2014can help you understand and leverage a PaaS  to realize tangible business value.  \n           Tailored to your unique business needs, our  workshops target your company\u2019s specific areas of interest . \n             \n  Find out more\n \n\n         \n       \n     \n   \n \n   \n     \n       \n         \n           Focus on your app. We do the rest. \n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Go beyond licensing, support, and professional services \n    \n    \n     Create new channels to generate recurring revenue streams with a hosted offering. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Become a multitenant SaaS with no hassle \n    \n    \n     Transform your single-tenant application into a fully fledged, multitenant SaaS offering in no time. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Manage your system consistently, no matter the setup \n    \n    \n     Whether you run a system as a one-size-fits-all SaaS or have clients run custom, bespoke versions of your software, you can push updates to all. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Attain better, more profitable partnerships \n    \n    \n     Simplify your relationship with your delivery partners and integrators while retaining control of your channels and achieving better monetization. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Zero upfront investment needed \n    \n    \n     With zero DevOps investment get a modern Linux container-based platform that\u2019s fully automated and future resistant. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       Easily manage 1,000 applications \n       A fully managed lifecycle for every application instance that includes testing new versions, deploying new features, scaling, backups, and disaster recovery, means you run your software as a true SaaS\u2014without taking away focus from your go-to-market strategy. \n     \n     \n       \n     \n   \n \n   \n     \n       \n         \n           \n  \n   \n    \n     A Git-driven approach \n    \n    \n     Use a Git-driven approach for a simple branch-merge workflow that goes all the way to the infrastructure. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n     Protecting your data \n    \n    \n     Unique, read-only architecture and sovereign clouds to protect data privacy. Our network topology assures deep segregation between end customers for security. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n     High performance \n    \n    \n     Our grid of high-availability, high-density Linux containers, with optimized file-system and network overlays delivers higher performance. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n     Consistent automated datastores \n    \n    \n     Run arbitrarily complex clusters in automated, highly available, persistent datastores that are guaranteed to be consistent. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n     Industry-leading support \n    \n    \n     Your clients get 24x7 support from leading industry experts. We provide the support, so you can focus on your business. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       Focus on your app, instead of DevOps. \n      \n      \n       \n         Contact our team \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Demos", "title": "Operating at scale", "url": "https://platform.sh/product/demos/operating-scale/deck/", "documentId": "2cf71a1b03124e05d62957d0c8528686d93741f0", "text": "", "rank": 4},
{"site": "website", "section": "Blog", "title": "Four days, four languages, four frameworks, Day 2: Running Hugo ", "url": "https://platform.sh/blog/four-days-four-languages-four-frameworks-day-2-running-hugo/", "documentId": "0158c0737538b570ca3f710f48fd43cb2de441ff", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Four days, four languages, four frameworks, Day 2: Running Hugo \n         \n\n        \n         \n            \n              \n          \n         \n         27 Feb 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Yesterday  we looked at running a \u201ctraditional\u201d CMS on Platform.sh \u2014 Brightspot, a Java-based CMS backed by a relational database ( MySQL ) and search index ( Apache Solr ). Lots of applications run in this way\u2013 Drupal , Magento,  Wordpress , and Django to name a few. \n But what if you want something really fast and light, with no database at all? That\u2019s where  Static Site Generators  (SSGs) come in handy. \n Static Site Generators take raw content files and generate a complete static HTML site from them that can deploy easily on any number of hosts. You don\u2019t need any special database support. You\u2019ll find one written in just about any language you can imagine. We\u2019ll start with one of the fastest:  Hugo , written in Go. \n Go, or \u201cGolang\u201d if you\u2019re searching for articles, is a statically typed, compiled language with some syntactic similarities to C. It\u2019s also  incredibly easy to run on Platform.sh . \n SSGs and Platform.sh go together like peanut butter and jelly. Or peanut butter and chocolate. Or pretzels and beer. (Your preference, of course.). Why? Since Platform.sh is  built around Git , an SSG like Hugo is a natural fit. Multiple developers and editors can work on their own branches within a Hugo website. And, through version control, merge all of their changes flawlessly into production\u2014without stepping on each others toes. \n Let\u2019s get started \n If you want to see the final product, we have a ready-to-run  project template  available.  We\u2019ll link to some portions of it throughout this process.  If you have an existing Hugo app, you can  skip ahead . \n 1. Setup your local machine \n You\u2019ll need 3 tools to deploy your Hugo site on Platform.sh: \n \n git:  install git  if it\u2019s not already on your machine \n hugo:  install Hugo \n Optional  (but really cool) :  the platform.sh cli tool \n \n 2. Bootstrap your Hugo project \n Once you\u2019ve got Hugo installed locally, you\u2019ll need to set up a project. \n Create a new Hugo folder with the basic files: \n $ hugo new site hugo-platformsh\nCongratulations! Your new Hugo site is created in <path>/hugo-platformsh.\n\nJust a few more steps, and you ' re ready to go:\n\n1. Download a theme into the same-named folder.\n   Choose a theme from https://themes.gohugo.io/, or\n   create your own with the  \"hugo new theme <THEMENAME>\"  command.\n2. Perhaps you want to add some content. You can add single files\n   with  \"hugo new <SECTIONNAME>/<FILENAME>.<FORMAT>\" .\n3. Start the built-in live server via  \"hugo server\" .\n\nSee https://gohugo.io/  for  a quickstart guide and full documentation.\n Now, you need a first article/post: \n hugo new posts/hello-world.md\n The most common way to write and edit content with a SSG is in  Markdown , a markup syntax. There are numerous tools to edit and preview Markdown, and you can even use CMS-like tools such as  Forestry.io  to make it easy for content creators to write and edit without knowing any markup at all. \n For now, let\u2019s just make a simple change in our text editor of choice: \n Open  content/posts/hello-world.md , change the  draft: true  to  draft: false  and add some content to the file. \n Once this is done, we need to initialize our project Git repository: \n git init .\ngit add .\ngit commit -m  \"Init hugo\" \n The last step to having a fully working Hugo site is to choose a theme that provides all the layouts needed to render the different pages. \n We\u2019ll use  hello-friend  for this example.  Download it into your  themes  directory: \n cd  themes\ngit clone https://github.com/panr/hugo-theme-hello-friend.git themes/hello-friend\nrm -rf hello-friend/.git\n Hugo is managed through a configuration file that supports a number of formats, but the most widely used is  TOML  (aka, \u201cTom\u2019s Obvious, Minimal Language\u201d).  The  Hugo documentation covers  its options in detail. \n For this project, the bare minimum configuration would be something like this: \n baseurl   =   \"/\" \n relativeurls   =   true \n languageCode   =   \"en-us\" \n title   =   \"Hello Hugo\" \n theme   =   \"hello-friend\" \n The  relativeurls  flag is important to allow Hugo to generate URLs that are portable between different Platform.sh environments.  If a build doesn\u2019t change when redeploying to a new environment, we reuse the existing build artifact, which saves time, but means links need to be domain-agnostic. \n A more complete and  robust configuration  is included in the example project. \n Add these changes:  git add . \n You should have the following files modified: \n $ git status\nOn branch master\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n\tnew file:   .gitmodules\n\tmodified:   config.toml\n\tnew file:   themes/hello-friend\n Commit the modifications: \n git commit -m  \"Add hello-friend theme\" \n Launch the Hugo local server, and verify that everything is working as expected: \n hugo server\n Open  http://localhost:1313/ . You should see the posts list and a link to your article:  http://localhost:1313/posts/hello-world/ .  Hugo is all ready! \n 3. Create your Platform.sh project \n Yesterday, we used the Platform.sh web UI to create a new project. Did you know that anything you can do through the UI you can also do through our Command Line Interface (CLI)? Follow the instructions you saw at the beginning of this article to download and install the CLI. Then, creating a new project on Platform.sh is as simple as: \n platform project:create\n \n Select a  Standard  project,  then choose the region you want your project to be hosted in. \n You can now access your newly provisioned project. \n Add the remote to your local project: \n git remote add platform <project ID>@git.<region>.platform.sh:<project ID>.git\n Don\u2019t push anything for now .  You still need to set up your configuration files. \n 4. Set up the .platform.app.yaml configuration \n Platform.sh relies on  yaml  configurations to configure the different containers to deploy.\nCreate the  .platform.app.yaml  file at the root of your project, and add the following code: \n # .platform.app.yaml \n \n # The name of this application, which must be unique within a project. \n name :   'hugo' \n \n # This could actually be any container since there's no runtime. \n type :   'golang:1.11' \n \n # The hooks that will be triggered when the package is deployed. \n hooks : \n      # Build hooks can modify the application files on disk, but not access any services like databases. \n      build :   |\n         wget https://github.com/gohugoio/hugo/releases/download/v0.54.0/hugo_0.54.0_Linux-64bit.tar.gz \n        tar   xvzf   hugo_0 .54 .0_Linux-64bit.tar.gz \n        rm   hugo_0 .54 .0_Linux-64bit.tar.gz \n        ./hugo \n \n # The size of the persistent disk of the application (in MB). \n # You don't need much here at all for a static site as it won't be used. \n disk :   256 \n \n # The configuration of the application when it's exposed to the web. \n web : \n      commands : \n          start :   sleep   infinity \n      locations : \n          '/' : \n              # The public directory of the application relative to its root. \n              root :   'public' \n              index :   [ 'index.html' ] \n              scripts :   false \n              allow :   true \n The critical parts of the file are: \n \n The build hook downloads the Hugo binary on the fly, unpacks it, and then runs Hugo against the source files in the project.  That means Hugo itself never needs to be part of your Git repository!  By default, Hugo will put all of its generated files in the  public  directory. \n The  web.locations  block then points the site\u2019s docroot at the generated  public  directory, with a typical index file, allows all file types to be served, but no scripts can be run.  (There aren\u2019t any, so that\u2019s just extra careful security.) \n In practice, there\u2019s no need for a persistent application process since the site is just static files.  That means we can either use a PHP-based container (which starts PHP-FPM in the background that never gets used) or use any other container type and explicitly set the  web.commands.start  key to  sleep infinity , which is a UNIX command.  There\u2019s still a background process, but it will do nothing. \n \n Also of note: even a static site needs to have a writeable disk defined, but it won\u2019t be used.  256 MB is the smallest it can be, so set it to that, and don\u2019t define any mount points. \n We also need two other files:  routes.yaml  and  services.yaml .  services.yaml  is used to configure additional services like databases, so we don\u2019t need it for that project. Just create the file: \n mkdir .platform\ntouch services.yaml\n Add  routes.yaml  in the  .platform  folder and add the following configuration: \n \"https://{default}/\" : \n    type :   upstream \n    upstream :   \"hugo:http\" \n This file tells the Platform.sh router to direct all incoming requests to our  hugo  container. Commit these new files: \n git add .platform.app.yaml .platform\ngit commit -m  \"Add platform.sh configuration\" \n 5. Test and deploy \n We\u2019re now ready to deploy the project on Platform.sh. Push the repository to the new remote: \n git push -u platform master\n Then Platform.sh will build the project, with the full output shown below. \n \n Counting objects: 36,  done .\nDelta compression using up to  4  threads.\nCompressing objects: 100%  ( 26/26 ) ,  done .\nWriting objects: 100%  ( 36/36 ) , 3.77 KiB  |  1.26 MiB/s,  done .\nTotal  36   ( delta 8 ) , reused  0   ( delta 0 ) \n\nValidating submodules\nValidating configuration files\nProcessing activity: Guillaume Moigneu pushed to Master\n    Found  8  commits\n\nBuilding application  'hugo'   ( runtime type: golang:1.11, tree: 4a2255e ) \n      Generating runtime configuration.\n\n      Executing build hook...\n        W: --2019-02-17 21:18:48--  https://github.com/gohugoio/hugo/releases/download/v0.54.0/hugo_0.54.0_Linux-64bit.tar.gz\n        W: Resolving github.com  ( github.com ) ... 192.30.253.112, 192.30.253.113\n        W: Connecting to github.com  ( github.com ) | 192.30.253.112 | :443... connected.\n        W: HTTP request sent, awaiting response...  302  Found\n        W: Location: https://github-production-release-asset-2e65be.s3.amazonaws.com/11180687/20035e00-260e-11e9-8a69-0dcf2eda5a47?X-Amz-Algorithm = AWS4-HMAC-SHA256 & X-Amz-Credential = AKIAIWNJYAX4CSVEH53A%2F20190217%2Fus-east-1%2Fs3%2Faws4_request & X-Amz-Date = 20190217T211848Z & X-Amz-Expires = 300 & X-Amz-Signature = 4e1d055aeb0947dcd74b04e7b9e477547d5d8ae44bc3e6e5fff1f7ed87a6f115 & X-Amz-SignedHeaders = host & actor_id = 0 & response-content-disposition = attachment%3B%20filename%3Dhugo_0.54.0_Linux-64bit.tar.gz & response-content-type = application%2Foctet-stream  [ following ] \n        W: --2019-02-17 21:18:48--  https://github-production-release-asset-2e65be.s3.amazonaws.com/11180687/20035e00-260e-11e9-8a69-0dcf2eda5a47?X-Amz-Algorithm = AWS4-HMAC-SHA256 & X-Amz-Credential = AKIAIWNJYAX4CSVEH53A%2F20190217%2Fus-east-1%2Fs3%2Faws4_request & X-Amz-Date = 20190217T211848Z & X-Amz-Expires = 300 & X-Amz-Signature = 4e1d055aeb0947dcd74b04e7b9e477547d5d8ae44bc3e6e5fff1f7ed87a6f115 & X-Amz-SignedHeaders = host & actor_id = 0 & response-content-disposition = attachment%3B%20filename%3Dhugo_0.54.0_Linux-64bit.tar.gz & response-content-type = application%2Foctet-stream\n        W: Resolving github-production-release-asset-2e65be.s3.amazonaws.com  ( github-production-release-asset-2e65be.s3.amazonaws.com ) ... 52.216.97.123\n        W: Connecting to github-production-release-asset-2e65be.s3.amazonaws.com  ( github-production-release-asset-2e65be.s3.amazonaws.com ) | 52.216.97.123 | :443... connected.\n        W: HTTP request sent, awaiting response...  200  OK\n        W: Length:  7767211   ( 7.4M )   [ application/octet-stream ] \n        W: Saving to: \u2018hugo_0.54.0_Linux-64bit.tar.gz\u2019\n        W:\n        W:      0K .......... .......... .......... .......... ..........  0% 27.9M 0s\n         [ ... ] \n        W:   7550K .......... .......... .......... .....                100%   140M = 0.1s\n        W:\n        W: 2019-02-17 21:18:48  ( 61.5 MB/s )  - \u2018hugo_0.54.0_Linux-64bit.tar.gz\u2019 saved  [ 7767211/7767211 ] \n        W:\n        LICENSE\n        README.md\n        hugo\n        Building sites \u2026\n                            |  EN\n        +------------------+----+\n          Pages             |    9 \n          Paginator pages   |    0 \n          Non-page files    |    0 \n          Static files      |   16 \n          Processed images  |    0 \n          Aliases           |    4 \n          Sitemaps          |    1 \n          Cleaned           |    0 \n\n        Total in  14  ms\nExecuting pre-flight checks...\n\n      Compressing application.\n      Beaming package to its final destination.\n\n    W: Route  '{default}'  doesn ' t map to a domain of the project, mangling the route.\n\n    Provisioning certificates\n      Validating  1  new domain\n      Provisioned new certificate  for   1  domains of this environment\n       ( Next refresh will be at 2019-04-20 20:19:01+00:00. ) \n      Environment certificates\n      - certificate 18bf626: expiring on 2019-05-18 20:19:01+00:00, covering master-7rqtwti-<project ID>.<region>.platformsh.site\n\n\n    Creating environment <project ID>-master-7rqtwti\n      Environment configuration\n        hugo  ( type: golang:1.11, size: M, disk: 5120 ) \n\n      Environment routes\n        http://master-7rqtwti-<project ID>.<region>.platformsh.site/ redirects to https://master-7rqtwti-<project ID>.<region>.platformsh.site/\n        https://master-7rqtwti-<project ID>.<region>.platformsh.site/ is served by application  ` hugo ` \n \n Let\u2019s review the output of your  push .   After a basic Git push output, Platform.sh kicks in and runs the build script.  Under where it says  Executing build hook  you can see it downloading Hugo and then running it: \n   Building sites \u2026\n                           | EN\n        +------------------+----+\n          Pages            |  9\n          Paginator pages  |  0\n          Non-page files   |  0\n          Static files     | 16\n          Processed images |  0\n          Aliases          |  4\n          Sitemaps         |  1\n          Cleaned          |  0\n\n        Total in 14 ms\n There\u2019s Hugo doing its thing (and very quickly, too!) \n Platform.sh then checks that everything seems correct and deploys the container to a host. Finally it shows the URLs for the created environment: \n       Executing pre-flight checks...\n\n      Compressing application.\n      Beaming package to its final destination.\n\n    W: Route  '{default}'  doesn ' t map to a domain of the project, mangling the route.\n\n    Provisioning certificates\n      Validating  1  new domain\n      Provisioned new certificate  for   1  domains of this environment\n       ( Next refresh will be at 2019-04-20 20:19:01+00:00. ) \n      Environment certificates\n      - certificate 18bf626: expiring on 2019-05-18 20:19:01+00:00, covering master-7rqtwti-<project ID>.<region>.platformsh.site\n\n\n    Creating environment <project ID>-master-7rqtwti\n      Environment configuration\n        hugo  ( type: golang:1.11, size: M, disk: 5120 ) \n\n      Environment routes\n        http://master-7rqtwti-<project ID>.<region>.platformsh.site/ redirects to https://master-7rqtwti-<project ID>.<region>.platformsh.site/\n        https://master-7rqtwti-<project ID>.<region>.platformsh.site/ is served by application  ` hugo ` \n The last output is your application\u2019s new URL. You can also check that the project has been successfully deployed on the web interface: \n Now go the URL, and you\u2019ll be able to see your Hugo site! \n Want a quick start? You can  clone our Hugo template repo on Github  and follow the instructions we\u2019ve included in the readme. \n Tomorrow , we\u2019ll explore another SSG,  Gatsbyjs , an SSG written in React, and we\u2019ll add more  TLA s to our lexicon:  JAM ,  PWA . \n Read the series:  Four days, four languages, four frameworks \n \n Day 1, Java:  Running Brightspot CMS on Platform.sh \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Go[lang] forth and deploy \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             The Platform.sh build-and-deploy pipeline \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Going Local with Lando ", "url": "https://platform.sh/blog/going-local-with-lando/", "documentId": "ad09d3026b1d8a971683b0353a351dcaf4ff4d8d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Going Local with Lando \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         18 Oct 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh aims to be a complete solution for web development and hosting, while at the same time offering the flexibility to slot into your own development tools and methodologies.  That's a tricky balance to strike at times: Providing a complete solution while offering maximum flexibility at the same time. \n \n One area where we generally favor flexibility is in your local development environment.  You can use whatever local development tools you're most comfortable with: MAMP, WAMP, VirtualBox, Docker, or just a native local install of your needed tools. \n For those who fear analysis-paralysis from so many choices, though, we've decided to start reviewing and green-lighting recommended tools that we've found work well.  And the first local development tool we can recommend is Lando. \n Lando  is a Docker-based local development environment that grew out of Kalabox, a VirtualBox-based local dev tool for Drupal.  Lando is much more flexible and lighter-weight than a virtual machine-based solution, and has direct support for a variety of systems including Drupal, Laravel, Backdrop, and WordPress.  It even goes beyond PHP with support for Node.js, Python, and Ruby as well, just as we do. \n Like Platform.sh, Lando is controlled by a YAML configuration file.  Although being Docker-based it cannot directly mimic how a Platform.sh project works, it can approximate it reasonably well. \n We've included a  recommended Lando configuration  file in our documentation.  It's fairly straightforward and easy to adapt for your particular application.  It's also possible to synchronize data from a Platform.sh environment to your local Lando instance in just a few short commands.   Lando's own documentation  provides more details on how to trick out your local system with whatever you may need. \n We still believe in allowing you to pick your own development workflow, so you don't have to change anything if you already have a workflow that works for you; if you want our advice, though, Lando is a solid option that should get you up and running locally in minutes, while Platform.sh handles all of your staging and production needs. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Open source software ROI for your organization \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "It's July 2018, do you know what your PHP is? ", "url": "https://platform.sh/blog/its-july-2018-do-you-know-what-your-php-is/", "documentId": "bd5e0403bdf413e74c5c70f5b6a58cbebc025229", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           It's July 2018, do you know what your PHP is? \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         03 Jul 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         PHP is a rapidly-evolving language.  Recent years have seen the adoption of a very clear and mostly consistent release process with a new version coming out every fall, with previous versions falling to maintenance support, then security-only support, then unsupported on a regular, predictable schedule. \n That\u2019s great for those who appreciate the new language features that continually come down the pipeline, and the performance improvements they bring.  It does mean it\u2019s important to stay up to date, though.  PHP 5.6, the last release of the PHP 5 series, got an extra year of security support for people that would have a hard time updating to the new PHP 7, but even that expires at the end of this year. \n In fact, as of the end of this year the oldest supported version of PHP will be PHP 7.1.   Yeah, really . \n Which begs the question\u2026 Do you know what your PHP version is? \n How to check \n On Platform.sh it\u2019s easy.  Just check your  .platform.app.yaml  file for the  type  key.  If it looks like this: \n type: php:7.1\n or this: \n type: php:7.2\n Then you\u2019re good!  If it says  php:7.0  then you should really start planning your update to 7.2.  If it says anything older\u2026 well, you\u2019re missing out. \n What happens on 31 December 2018? \n Aside from uncorking some champagne, nothing.  Platform.sh still offers container images all the way back to PHP 5.4, and we have no immediate plans to drop those images any time soon.  However, they are completely unsupported.  If there\u2019s a bug in them, no one is going to fix them.  In some cases they\u2019re still built using older versions of Debian, so other related software is out of date as well.  We won\u2019t be updating those. \n If security vulnerabilities are found in PHP versions older than 7.1 no one is going to be fixing them.  There are, in fact,  known security holes  in older versions of PHP that are no longer supported, and thus have never been fixed.  That\u2019s normal and it\u2019s what unsupported means.  Over time no doubt other issues will be found in PHP 5.6 and 7.0 that will also not be fixed as they are no longer supported. \n If you want to keep your site secure, it\u2019s time to upgrade. \n Why else should I upgrade? \n Glad you asked!  Security is a good reason to keep your software up to date, but it\u2019s far from the only reason.  If you\u2019re still running PHP 5.x, then the even bigger reason is speed. \n PHP 7.anything blows PHP 5 out of the water on performance.  Benchmarks from dozens of companies have shown over and over again that twice the requests/second and half the memory usage is a normal improvement; some code bases can see even more.  Rasmus Lerdorf (creator of PHP) publishes benchmarks periodically.  His most recent, from earlier this year, shows PHP 7 smoking PHP 5 on WordPress performance, specifically: \n \n \n Other benchmarks show similar (although not quite as dramatic) impact on Drupal, Magento, Symfony, Moodle, and various other systems. \n It\u2019s rare in tech that any \u201csilver bullet\u201d appears, but upgrading from PHP 5 to PHP 7 is about as close to a performance silver bullet as you\u2019re ever going to see. \n Of course, there\u2019s ample new functionality available for developers, too: \n PHP 7.0  brought scalar type hints, return types, anonymous classes, and vastly improved error handling. \n PHP 7.1  brought the void and iterable types, nullable types, and multi-catch exceptions. \n PHP 7.2  brought the strongest security and encryption library available to the core language, along with even more improvements to the type system. \n For a full rundown of the  best parts of PHP 7 , see my presentation from this year\u2019s php[tek] conference. \n And of course PHP 7.3 is coming out this fall.  (We\u2019ll support it when it comes out, too.) \n OK, so how do I upgrade? \n It\u2019s Platform.sh, which means upgrading is easy.  Just change your  type  key in  .platform.app.yaml  to  php:7.2 , and push.  You\u2019re done. \n Well, you really should test it in a branch first.  Push that change to a branch and give it a whirl.  Assuming everything is good, click Merge. \n There\u2019s tooling available to help audit your code for future compatibility, too.  For instance, the  PHPCompatibility  extension for PHP_CodeSniffer can flag most places where you may want to tweak your code to keep it compatible with newer versions.  You can run it locally over your code base to ensure you\u2019re ready to update, then update. \n If you\u2019re using Drupal, WordPress, Symfony, Zend, Laravel, or most other major systems, their latest versions are already tested and stable on PHP 7.2.  That makes upgrading even easier.  In fact, several systems have already made PHP 7.1 a minimum requirement for their latest version, which gives both their developers and you more power in your PHP. \n Enjoy your faster, more robust PHP!  Don\u2019t get left behind on unsupported versions, especially when the benefits of upgrading are so high and the cost is so low.  And don\u2019t forget to plan for upgrading to PHP 7.3 later this year.  It should be just as easy then, too. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Supersize app containers in your dev environments ", "url": "https://platform.sh/blog/2019/supersize-app-containers-in-your-dev-environments/", "documentId": "bde895e81cd0a7738d475ad059b92b30f7197725", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Supersize app containers in your dev environments \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chad Carlson \n                  \n                   Technical Writer \n                  \n                  \n                 \n            \n          \n         \n         20 Nov 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         If there was one feature that most distinguishes Platform.sh, it would be complete branches and environments. Platform.sh makes it possible for every new feature in development to have its own testing server. And since our entire platform is built on Git, branching your application not only clones your production application, but it also clones all of its data. \n Development environments are exact replicas of production environments, but, in practice, they often demand very different resources. For example, a development environment will serve much less traffic than the production site because their resource requirements are much less. Until now, Platform.sh development environments have defaulted to the Standard size\u2014regardless of the plan selected for your production site. \n Lately, however, we\u2019ve started to reconsider this basic assumption. Larger applications (like Magento) and compiled languages (like Java) require considerable resources, whether they\u2019re production or development branches. \n That\u2019s why we\u2019re proud to announce the availability to extend your application container size in development environments. It comes with an additional price, but can very easily be updated by editing your projects in your management console. \n How do I supersize my app containers on my Platform.sh development environments? \n Go to the project you want to change in your management console. At the top right-hand corner of the page, there\u2019s a menu icon with three vertical dots. Click the icon, and select \u201cEdit plan.\u201d At the bottom of the plan page there\u2019s a section called \u201cDevelopment Application Size.\u201d \n \n You\u2019ll see the Standard size selected by default for your application containers, but there\u2019s a drop-down menu shown above that lets you increase that size\u2014even to match production, if you want to. \n Modify the development environment application container size, and the console will present you with an updated total monthly cost for the plan. When you\u2019re finished, click \u201cUpdate plan\u201d to save your changes. \n Any new development environment you create will now have a default application container size matching your updated settings. To update your existing development environments, you\u2019ll just need to trigger a redeploy using the  Platform.sh CLI  command  platform redeploy . \n The option is now open to have your development environments match production even more closely. So go on and customize, and get deploying! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Solutions", "title": "White-label PaaS for SaaS, software vendors, and agencies ", "url": "https://platform.sh/solutions/software-vendors/", "documentId": "db9fd748eb73f2873e0f9760e9f06e95ede279fc", "text": "\n   \n     \n       \n     \n         White-label SaaS Factory \n\n        \n\n        \n         Your software. Launched as a profitable SaaS business in days\u2014not years. Without massive investments. \n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           .bd9bb9d8-739f-489a-99ed-96a1e328bf3f{font-size:22.36px;font-family:Moderat-Mono-Medium, Moderat;font-weight:500;}.ebb7f417-bc24-4139-aba9-41eda4b77a67{fill:none;}.bd4a0a21-b1d7-42cf-9eeb-b40cd8e9c5e3{fill:#fcc938;}.e240cba8-6286-4b72-8c92-056c01e20c4f{fill:#ffd9d9;}.b34aaadc-0670-4c13-9066-efade4ba1fff{fill:#171719;} Header Your code here \n        \n      \n     \n   \n \n   \n     \n       What White-Label SaaS looks like \n       This used to mean building a complex multi-tenant system. Learning to scale it to peak usage. Or hiring new people with the cloud expertise needed to build and run a new type of business. Or diverting your focus from the features your customers care about. But that\u2019s not the case with Platform.sh\u2019s White-Label SaaS. \n     \n   \n \n   \n     \n       \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Bring your code \n    \n    \n     Add your app code as-is, without re-architecting. Configure the customer experience with your look and feel. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Connect your systems \n    \n    \n     Use our API to provision with your existing billing & accounting tools, or leverage ours. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Focus on your business \n    \n    \n     Put your efforts towards customer care and features instead of worrying about infrastructure. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       \n     \n     \n       Are you a candidate for white label? \n       Software companies \n       Ready to move from license to SaaS models \n       Cloud service providers \n       Able to deliver a differentiated PaaS on top of IaaS or managed cloud \n       Digital agencies \n       Motivated to drive repeatability and brand affinity \n     \n   \n \n   \n     \n       \n         \n           workshop \n           Ready to speed your journey to SaaS profitability? \n           A Platform.sh  SaaS business planning and implementation workshop  \u2014based on our collaborations with many clients to successfully deliver profitable SaaS offerings\u2014can help you understand and leverage a PaaS  to realize tangible business value.  \n           Tailored to your unique business needs, our  workshops target your company\u2019s specific areas of interest . \n             \n  Find out more\n \n\n         \n       \n     \n   \n \n   \n     \n       \n         \n           Focus on your app. We do the rest. \n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Go beyond licensing, support, and professional services \n    \n    \n     Create new channels to generate recurring revenue streams with a hosted offering. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Become a multitenant SaaS with no hassle \n    \n    \n     Transform your single-tenant application into a fully fledged, multitenant SaaS offering in no time. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Manage your system consistently, no matter the setup \n    \n    \n     Whether you run a system as a one-size-fits-all SaaS or have clients run custom, bespoke versions of your software, you can push updates to all. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Attain better, more profitable partnerships \n    \n    \n     Simplify your relationship with your delivery partners and integrators while retaining control of your channels and achieving better monetization. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Zero upfront investment needed \n    \n    \n     With zero DevOps investment get a modern Linux container-based platform that\u2019s fully automated and future resistant. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       Easily manage 1,000 applications \n       A fully managed lifecycle for every application instance that includes testing new versions, deploying new features, scaling, backups, and disaster recovery, means you run your software as a true SaaS\u2014without taking away focus from your go-to-market strategy. \n     \n     \n       \n     \n   \n \n   \n     \n       \n         \n           \n  \n   \n    \n     A Git-driven approach \n    \n    \n     Use a Git-driven approach for a simple branch-merge workflow that goes all the way to the infrastructure. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n     Protecting your data \n    \n    \n     Unique, read-only architecture and sovereign clouds to protect data privacy. Our network topology assures deep segregation between end customers for security. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n     High performance \n    \n    \n     Our grid of high-availability, high-density Linux containers, with optimized file-system and network overlays delivers higher performance. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n     Consistent automated datastores \n    \n    \n     Run arbitrarily complex clusters in automated, highly available, persistent datastores that are guaranteed to be consistent. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n     Industry-leading support \n    \n    \n     Your clients get 24x7 support from leading industry experts. We provide the support, so you can focus on your business. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       Focus on your app, instead of DevOps. \n      \n      \n       \n         Contact our team \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Blog ", "url": "https://platform.sh/blog/page/11/", "documentId": "6771b18417b6a11c797f8fae952b891f254ea06d", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             15 Apr 2020 \n           \n          \n\n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         Recent posts \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n       Commerce Guys Launches Platform.sh, Continuous Delivery Cloud on Amazon Web Services \n\n      \n       \n         13 May 2014\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Converting Your Existing Platform.sh Development Environment to a Makefile \n\n      \n       \n         12 May 2014\u00a0 \n           \n              Author:\n              Nicholas Vahalik\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       With Platform.sh, Commerce Guys announces Cloud 2.0! \n\n      \n       \n         12 May 2014\u00a0 \n           \n              Author:\n              Antoine Crochet-Damais\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n \n    \n     \n         \u00ab\u00ab \n     \n    \n     \n     \u00ab \n     \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     1 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     2 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     3 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     10 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     11 \n    \n    \n     \n     \u00bb \n     \n    \n     \n         \u00bb\u00bb \n     \n    \n \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Blog ", "url": "https://platform.sh/blog/page/2/", "documentId": "815336d79311027b24e942b0d6b7885d318822d6", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             15 Apr 2020 \n           \n          \n\n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         Recent posts \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Ready to have fun? Try Kotlin and Spring! \n\n      \n       \n         15 Nov 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       PHP devs: Platform.sh protects you from CVE-2019-11043 \n\n      \n       \n         30 Oct 2019\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       New Services Page: more shininess, as promised \n\n      \n       \n         15 Oct 2019\u00a0 \n           \n              Author:\n              Chad Carlson\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Scale your application with Spring and RabbitMQ \n\n      \n       \n         15 Oct 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Admiral: How to keep your fleet afloat \n\n      \n       \n         11 Oct 2019\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Source Operations: automate maintenance, from single sites to fleets \n\n      \n       \n         11 Oct 2019\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Three ways to manage a website fleet \n\n      \n       \n         11 Oct 2019\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Website fleet management: challenges and opportunities \n\n      \n       \n         11 Oct 2019\u00a0 \n           \n              Author:\n              Chris Yates\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Perpetually polyglot: .NET on Platform.sh \n\n      \n       \n         10 Oct 2019\u00a0 \n           \n              Author:\n              Chad Carlson\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Apache Kafka: streamline communication across your microservices \n\n      \n       \n         09 Oct 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Planting the seeds of social good \n\n      \n       \n         03 Oct 2019\u00a0 \n           \n              Author:\n              Aaron Porter\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Strong Customer Authentication will be required for European credit and bank card payments \n\n      \n       \n         26 Sep 2019\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Spring Data Redis in the cloud \n\n      \n       \n         20 Sep 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Security updates for PHP: rolling out now \n\n      \n       \n         11 Sep 2019\u00a0 \n           \n              Author:\n              Platform-sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Simplify your script build with Gradle \n\n      \n       \n         05 Sep 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       New: Go release 1.13 on Platform.sh \n\n      \n       \n         04 Sep 2019\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       PHP 7.4 is here: Try out the future of PHP on Platform.sh today! \n\n      \n       \n         27 Aug 2019\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Microservices in the cloud, part two \n\n      \n       \n         23 Aug 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Microservices in the cloud, part one \n\n      \n       \n         13 Aug 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       We are happy, relieved and somewhat amused to announce the availability of Common Lisp on Platform.sh \n\n      \n       \n         08 Aug 2019\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh documentation: new guides, new look \n\n      \n       \n         01 Aug 2019\u00a0 \n           \n              Author:\n              Chad Carlson\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Jakarta EE: Generation IV - a new hope \n\n      \n       \n         30 Jul 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       6,000+ applications, multiple content management systems, one platform \n\n      \n       \n         29 Jul 2019\u00a0 \n           \n              Author:\n              Chris Yates\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Pick a MySQL, any MySQL \n\n      \n       \n         23 Jul 2019\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Version will be required in  type:  what it means for your projects \n\n      \n       \n         22 Jul 2019\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh launches Developer Community! \n\n      \n       \n         17 Jul 2019\u00a0 \n           \n              Author:\n              Robert Douglass\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Why are people switching hosting platforms to run modern Drupal? \n\n      \n       \n         17 Jul 2019\u00a0 \n           \n              Author:\n              Chris Yates\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Building high-performance organizations for cloud application development \n\n      \n       \n         15 Jul 2019\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Eclipse MicroProfiles: gain agility, release faster \n\n      \n       \n         15 Jul 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       New API docs help you automate workflows \n\n      \n       \n         10 Jul 2019\u00a0 \n           \n              Author:\n              Nick Anderegg\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n \n    \n     \n         \u00ab\u00ab \n     \n    \n     \n     \u00ab \n     \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     1 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     2 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     3 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     11 \n    \n    \n     \n     \u00bb \n     \n    \n     \n         \u00bb\u00bb \n     \n    \n \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Blog ", "url": "https://platform.sh/blog/page/3/", "documentId": "9e84796970f32d51b15b326fbc95af92cd2fc54d", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             15 Apr 2020 \n           \n          \n\n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         Recent posts \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Elasticsearch vs. Solr: have both with Spring Data and Platform.sh \n\n      \n       \n         28 Jun 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Umami distribution testing automation with Diffy and Platform.sh \n\n      \n       \n         28 Jun 2019\u00a0 \n           \n              Author:\n              Yuriy Gerasimov\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Web dev + IT: unique roles, equal partners in application success \n\n      \n       \n         24 Jun 2019\u00a0 \n           \n              Author:\n              Fred Plais\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Spring MVC and MongoDB: a match made in Platform.sh heaven \n\n      \n       \n         19 Jun 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       SOC 2 certification: challenges and opportunities \n\n      \n       \n         17 Jun 2019\u00a0 \n           \n              Author:\n              Joey Stanford\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Off with its head! Headless Chrome as a service. \n\n      \n       \n         12 Jun 2019\u00a0 \n           \n              Author:\n              Chad Carlson\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       We have updated our privacy policy \n\n      \n       \n         10 Jun 2019\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Java: Hello, World! at Platform.sh \n\n      \n       \n         06 Jun 2019\u00a0 \n           \n              Author:\n              Otavio Santana\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Apache Kafka now available \n\n      \n       \n         05 Jun 2019\u00a0 \n           \n              Author:\n              Chris Yates\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh CEO Fred Plais on Digital Trends Live \n\n      \n       \n         29 May 2019\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       The diaries (and adventures) of a SaaS entrepreneur: entry one \n\n      \n       \n         28 May 2019\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       New Germany region: more speed, more capability, lower cost, same data protection standards \n\n      \n       \n         22 May 2019\u00a0 \n           \n              Author:\n              Andrew Melck\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Learning to trust the machines and the process in DevOps \n\n      \n       \n         25 Apr 2019\u00a0 \n           \n              Author:\n              Chris Yates\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       We have updated our policies \n\n      \n       \n         25 Apr 2019\u00a0 \n           \n              Author:\n              Joey Stanford\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Shared network storage now available \n\n      \n       \n         17 Apr 2019\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Shiny, new Platform.sh management console \n\n      \n       \n         11 Apr 2019\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Adobe Summit 2019: take-aways \n\n      \n       \n         01 Apr 2019\u00a0 \n           \n              Author:\n              Doug Goldberg\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Even more batteries included: Platform.sh configuration libraries \n\n      \n       \n         07 Mar 2019\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Four days, four languages, four frameworks, Day 4: Jekyll - the SSG that started it all \n\n      \n       \n         01 Mar 2019\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Four days, four languages, four frameworks, Day 3: GatsbyJS\u2014the React-based static site generator \n\n      \n       \n         28 Feb 2019\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Four days, four languages, four frameworks, Day 2: Running Hugo \n\n      \n       \n         27 Feb 2019\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Four days, four languages, four frameworks on Platform.sh \n\n      \n       \n         26 Feb 2019\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Tightening TLS \n\n      \n       \n         07 Feb 2019\u00a0 \n           \n              Author:\n              Joey Stanford\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh full speed ahead into 2019 \n\n      \n       \n         29 Jan 2019\u00a0 \n           \n              Author:\n              Fred Plais\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Spread some Varnish on your site \n\n      \n       \n         17 Jan 2019\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Open source software ROI for your organization \n\n      \n       \n         02 Jan 2019\u00a0 \n           \n              Author:\n              Chris Yates\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       The new and newer PostgreSQL \n\n      \n       \n         20 Dec 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Give the gift of Ruby this season \n\n      \n       \n         18 Dec 2018\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n\n      \n       \n         12 Dec 2018\u00a0 \n           \n              Author:\n              Chris Yates\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       How to deploy your Django project on Platform.sh \n\n      \n       \n         11 Dec 2018\u00a0 \n           \n            Author: Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n \n    \n     \n         \u00ab\u00ab \n     \n    \n     \n     \u00ab \n     \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     1 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     2 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     3 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     4 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     11 \n    \n    \n     \n     \u00bb \n     \n    \n     \n         \u00bb\u00bb \n     \n    \n \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Company", "title": "Platform.sh delivers web application fleet management solution for 6,000+ of Orange Business Services\u2019 SMB customers ", "url": "https://platform.sh/company/press/2019/platformsh-delivers-web-application-fleet-management-solution-for-6000-of-orange-business-services-smb-customers/", "documentId": "8fc1864594a7c3c33caf5fc70235bd6c1397f30a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         press \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh delivers web application fleet management solution for 6,000+ of Orange Business Services\u2019 SMB customers \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         As result of the partnership, Orange Business Services\u2019 thousands of SMB customers (including hotels, craftsmen, consulting, health providers) and hundreds of web agency partners will benefit from simplified site management, a superior developer experience, and improved total cost of ownership for their digital presence. \n Paris, July 29, 2019 \u2013  Platform.sh, the Idea-to-Cloud Application Platform that simplifies could infrastructure, today announced an extension to the company\u2019s partnership with Orange Cloud for Business through a significant, new contract to migrate and manage more than 6,000 WordPress, Joomla, Prestashop, and Drupal sites onto the Platform.sh Platform-as-a-Service (PaaS). The partnership aims to streamline the current web hosting offering, which supports thousands of subscribers using websites on a shared hosting infrastructure, the majority of which will be upgraded to full, standalone projects on the Platform.sh PaaS. \n \u201cOur primary goal is to help enterprises leverage the power of the cloud to deliver a stellar customer experience,\u201d said Orange Cloud for Business CEO Stefan Kanis. \u201cWith this new offering, our customers can utilize advanced PaaS functionality to boost developer productivity and deliver business-critical apps and services at scale\u2014all of this on a local cloud and at a lower overall cost. As a result, our customers can increase revenue while achieving core business objectives, including accelerating their digital transformation initiatives.\u201d \n This significant new contract comes three years after the companies announced Platform.sh availability on Orange Business Services\u2019 public cloud. This new step enables Orange to relaunch its Flexible Web Publisher offering as an advanced, container-based \u2018CMS as a Service\u2019 (CMSaaS). \n Platform.sh provides Orange with governance and management tools for their growing fleet of customer websites and applications within a single platform, entirely managed and secure. The Platform.sh solution includes automated updates of the CMS software, automated backups, a unique instant-cloning system for testing application changes, and the ability to integrate with the Orange Flexible Web Publisher product to provide customers with a seamless user experience. \n \u201cWe\u2019re very pleased to extend the scope of the partnership with Orange Business Services\u2019 Cloud entity. For three years, our teams have worked effectively together, and this new project is getting some very strong traction in the enterprise market. It will also allow us to help smaller businesses benefit from the huge productivity and performance improvements, and the significant cost savings Platform.sh provides\u201d said Fred Plais, Platform.sh CEO and co-founder. \u201cFrom now on, Platform.sh will support  Orange on both sides of the spectrum\u2014from SMBs to large enterprises.\u201d \n Find out more about Platform.sh for Orange Business Services:  https://cloud.orange-business.com/hebergement-web/ \n Connect with us on LinkedIn:  https://www.linkedin.com/company/platformsh/ \n Follow us on Twitter:  https://twitter.com/platformsh \n About Platform.sh \n Platform.sh enables teams to develop and deliver web applications at scale, with an end-to-end Platform-as-a-Service. With Platform.sh, organizations can focus 100 percent of their time on building amazing experiences\u2013and zero time managing infrastructure. With headquarters in San Francisco and Paris, Platform.sh serves more than 5,000 clients and their 65,000+ developers worldwide. Customers like Unity, The Economist, Kaplan, CFL, Reiss, Pinterest, and The British Council rely on Platform.sh to launch, scale, and manage their fleets of websites and applications. \n\n Press contact: EZPR \n Ed Zitron  ed@ezpr.com  +1 (347) 844-2149 \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Confidence in your ecommerce platform makes Black Friday a non-event ", "url": "https://platform.sh/blog/2019/black-friday-deploy-friday/", "documentId": "3a351e8b0bf25b60c550a8edffcdc47a3923e11c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Confidence in your ecommerce platform makes Black Friday a non-event \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Yates \n                  \n                   VP Marketing \n                  \n                  \n                 \n            \n          \n         \n         02 Dec 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     What should digital retailers be focused on to prepare for events like Black Friday? \n       \n         Be ready to scale with a resilient ecommerce architecture. \n         Have a development pipeline that guarantees the shopping experience you build is going to work in production. \n         Build and test for high performance, but be ready to scale on demand \n       \n     \n     Your biggest days should be uneventful \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         For many retailers, the success\u2014or failure\u2014of Black Friday and Cyber Monday represent the success or failure of their entire year. While  Forbes  reports that this Black Friday was the biggest ever, with digital sales up nearly 20% over 2018 totals, the stakes are higher than ever for retailers to get it right. \n More people than ever before are shopping from home rather than trekking out to the malls and shopping centers. That means that retail digital experiences have to be flawless. Flawless means fast, and above all, fail-safe. \n Unfortunately, increased traffic often leads to unexpected failures. Even the Platform.sh team had their holiday shopping interrupted on a number of occasions when attempting to check out at digital retailers. Here are just a few of the errors we encountered.  [None of these brands run on Platform.sh\u2026yet \ud83d\ude09] \n \n \n \n \n \n On the other hand, Platform.sh delivered  a sustained traffic rate  of more than 55,000 requests-per-second on Black Friday for our fleet of ecommerce customers, and did so with a tiny error rate and no infrastructure outages. \n \n Ecommerce experiences are computationally demanding. That is, they take lots of memory, CPU, and disk throughput in addition to bandwidth you\u2019d get from a content delivery network (CDN). They\u2019re also served to an increasingly demanding end user. Customers are sensitive to performance lags and outages, and will move on to other merchants, if they have a bad experience. \n What should digital retailers be focused on to prepare for events like Black Friday? \n Be ready to scale with a resilient ecommerce architecture. \n We\u2019ve engineered our systems to offer  triple redundancy at every layer of the application stack . That means even if a database or app server fails, there are at least two other copies running in parallel at all times, and upsizes can happen on the fly, with zero downtime. \n Have a development pipeline that guarantees the shopping experience you build is going to work in production. \n \u201cDeploy Friday\u201d isn\u2019t just a slogan; it\u2019s a way of life for Platform.sh customers who are freed from traditional restrictions on when and how they can deliver advancements to  their  customers and stay ahead of their competition. Platform.sh enables teams to clone their  entire  application in moments (even complex ecommerce sites with massive databases). They can develop new campaigns and functionality on those perfect, byte-for-byte clones knowing that their changes are guaranteed to work when they push to production. \n Build and test for high performance, but be ready to scale on demand \n Much like  last year , we also scaled up many customers in advance of the Black Friday rush to cope with the seasonal load. For some merchants, that meant scaling up to as many as 196 CPU cores or 768 GB of memory across their application clusters. Not every app needs that horsepower all the time, but Platform.sh ensured that customers had the capacity they needed, when they needed it. \n Your biggest days  should  be uneventful \n One of the best measures for our customers\u2019 successes [beyond the flow of dollars of course] came from our VP of Customer Success Maria Antinkaapo: it was, quite simply, a quiet weekend for our global support teams. \n Platform.sh customers were prepared for scale and able to adapt, remaining agile and available for their customers [and ahead of their competitors]. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "PHP 7.4 is just a <code>git push</code> away ", "url": "https://platform.sh/blog/2019/php-7.4-is-just-a-git-push-away/", "documentId": "a66d59882d60ee7c03cb1158b79e9ab08769bac0", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           PHP 7.4 is just a  git push  away \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         28 Nov 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The latest and greatest release of the world\u2019s most widely used web development language is now in the wild.  The PHP development team has  removed the packing peanuts  from PHP 7.4.0, the most exciting release in several years. \n As you\u2019d expect, it\u2019s also ready to deploy on Platform.sh, whether Friday or any other day.  Doing so involves the highly difficult task of replacing a \u201c3\u201d with a \u201c4\u201d in your  .platform.app.yaml  file: \n type :   \"php:7.4\" \n Update your  .platform.app.yaml  file, push it to a new branch, and try it out.  If everything seems to be in good working order, you\u2019re clear to merge that to your  master  branch.  Congratulations, you\u2019re now running the latest version of PHP. \n So what\u2019s new in PHP 7.4? \n PHP 7.4 has a host of additions and changes, more than we have space to go into here.  The most notable for developers include: \n \n Typed properties in objects:   Class members can now have an explicit type attached, which prevents them from being assigned any other value. \n \n class Employee\n{\n    protected Employee $manager = null;\n    protected string $firstName;\n    protected string $lastName;\n    protected int $employeeId;\n\n    public function __construct(int $id, string $first, string $last)\n    {\n          $this->employeeId = $id;\n          $this->firstName = $first;\n          $this->lastName = $last;\n    }\n}\n \n Short-lambda syntax:   Similar to parallel constructs in Javascript, Python, or Rust, single-line anonymous functions can now be written with a more compact, single-line statement.  The following two statements are exactly identical: \n \n $arr = [1, 2, 3, 4, 5];\n$factor = 5;\n\narray_map(function(int $item) use ($factor) {\n    return $item * $factor;\n}, $arr);\n\n\narray_map(fn($x) => $x * $factor, $arr);\n \n Null coalesce assignment:   PHP 7.0 brought the \u201cnull coalesce\u201d operator,  ?? , which returns the left side if it\u2019s defined and not null, otherwise the right side.  That greatly reduces boilerplate typing, but still requires some duplication in common scenarios where you want to assign a default value.  In PHP 7.4, that can be shortened even further, like so: \n \n // This one liner...\n$config['some']['key'] ??= $default;\n\n// ... is the same as this mess\nIf (is_null($config['some']['key'])) {\n    $config['some']['key'] = $default;\n}\n Preloading: the perfect feature for Platform.sh \n From a Platform.sh point of view, though, the most exciting feature in PHP 7.4 is  Opcache preloading.   Under normal circumstances, PHP executes by re-including every needed file on each request.  The contents of the file are compiled once to opcodes (a very low-level platform agnostic format, similar to Java bytecode) and cached in memory, saving an enormous amount of time.  On each request, however, the cached file still needs to be reloaded from the cache into the process memory, connected with any parent classes, and so on.  That still involves triggering the autoload process, too.  For large applications that time adds up, despite being largely wasted as the code doesn\u2019t change. \n With opcache preloading, you can specify a special script to run once when PHP-FPM starts up.  That script can specify certain files to be loaded into shared memory once, compiled, linked, and made available instantly to all processes.  They\u2019re just as available as functions and classes that ship with PHP itself; there\u2019s no re-linking cost, no autoload executed, and the memory is used only once for all processes. \n The larger your application, the bigger a deal that is.  The one catch is that those files will not be reloaded from disk without restarting PHP-FPM.  That would be a problem in a development environment, or an old-style shared host, but if you\u2019re using a production environment with a read-only file system (which you should be) that restarts PHP-FPM on a new deploy anyway (which you should), then there is no downside at all.  And guess what hosting system works exactly that way?  (Hint: It\u2019s Platform.sh.) \n To leverage opcache preloading, first set the new  php.ini  value  opcache.preload  to a file that will run once on startup and specify which files to preload.  On Platform.sh the easiest way to do that is via the  .platform.app.yaml  file: \n variables : \n      php : \n          opcache.preload :   'preload.php' \n The  opcache.preload  value will be evaluated relative to the application root.  Then  preload.php  can look something like this: \n $directory = new RecursiveDirectoryIterator(getenv('PLATFORM_APP_DIR') . '/vendor');\n$iterator = new RecursiveIteratorIterator($directory);\n$regex = new RegexIterator($iterator, '/^.+\\.php$/i', RecursiveRegexIterator::GET_MATCH);\n\nforeach ($regex as $key => $file) {\n    // This is the important part!\n    opcache_compile_file($file[0]);\n}\n This example will load all PHP files in the  vendor/  directory into the preload cache, where they will be available to all requests with zero additional overhead. \n How much of your application should be preloaded is an open question.  The PHP community in general is still experimenting to figure out an optimal configuration, or if \u201cinclude everything all the time\u201d is close enough to optimal to be the best approach.  To Platform.sh, it doesn\u2019t matter.  Whatever preloading strategy you want to include in your application will work just the same for us.  Overall though, it boils down to \u201cfree performance upgrade\u201d\u2014 tailor-made for a setup like Platform.sh.  We call that a win. \n PHP 7.4 deprecations \n As usual, PHP 7.4 does have a few deprecations.  Most of them won\u2019t impact most users, but it\u2019s worth [reviewing the list](URL to come) in case you need to make any adjustments. \n As one additional Platform.sh-specific note: starting with PHP 7.4, we\u2019re no longer including the  redis  PECL extension with the PHP application image.  Unfortunately, that library has had some unfortunate API breaks recently that make it much harder for us to support reliably.  Instead, we recommend users install the  predis  package, which will work across all supported PHP versions. \n Speaking of supported, be aware that the release of PHP 7.4 means that PHP 7.1 is now out of support, and PHP 7.2 moves down to security-only support.  If you\u2019re still running one of those versions (or even older), now is an excellent time to upgrade your application.  (Instructions at the top of this blog post.) \n Happy deploying! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Announcing streaming deploy hooks and SSH access ", "url": "https://platform.sh/blog/2019/streaming-deploy-hooks/", "documentId": "5290d0e29bae974ead40dbab03ee0679e7ebfcbe", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Announcing streaming deploy hooks and SSH access \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chad Carlson \n                  \n                   Technical Writer \n                  \n                  \n                 \n            \n          \n         \n         04 Dec 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Increase visibility, watch deployments unfold in real time \n Streaming deploy hooks and SSH access is a new feature that increases your visibility over your projects when they deploy. Previously,  logs  generated from your deploy hooks were available only after deployment, and your SSH access to the application container was blocked during deployment. Now, logs are streamed in real time, and you can SSH in and watch how things unfold. This will help you better understand what actually happens during the deployment, making it easier to troubleshoot. \n Deploy hooks are now streamed both to the management console and to your terminal. It\u2019s now also possible to  SSH  into your application containers while the deploy hook is running. \n\n \n   \n \n\n \u00a0 \n Platform.sh wants to give  more visibility  to your build and deploy processes. And with these new features in place, you now have greater control to monitor them. You can more quickly diagnose problems with your deploy process, formulate solutions, and get back to developing your application. \n Deploy often, deploy Friday, and check the logs. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Faster, friendlier analytics for your PHP project ", "url": "https://platform.sh/blog/2019/faster-friendlier-analytics-for-your-php-project/", "documentId": "8fd89d3de3cf6ce0829fc9615b78700a840511ae", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Faster, friendlier analytics for your PHP project \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Mathias Bolt Lesniak \n                  \n                   Guest blogger and Consultant, Pixelant \n                  \n                  \n                 \n            \n          \n         \n         12 Dec 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     Mapping your memory usage \n       \n         Memory usage \n       \n     \n     Visually detecting project health issues \n       \n         Memory usage \n       \n     \n     Response code distribution \n       \n         Response codes \n       \n     \n     Looking at all HTTP requests \n     Visions of the future \n     About the author \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         To make your life easier, we are open-sourcing our graphical analysis tool for Platform.sh PHP projects. Though written for our own needs at  Pixelant , it should help you optimize your configuration and PHP code for Platform.sh. \n The  Platform.sh Log Analyzer  tool runs locally, and we have tried to make it easy to install and run. It wraps around the  platform  CLI and generates a self-contained report as a single HTML file that you can view in you browser and distribute to your team. \n After downloading the code, run  php platformPhpAnalyzer.php  from within the  platformsh-analytics  directory to get started. It will walk you through selecting the project and and environment to analyze. \n Here are some of the ways the  Pixelant  team uses the log analyzer. \n \n Mapping your memory usage \n Too few PHP workers will lead to 503 errors. By knowing your app\u2019s expected memory usage, you can maximize the number of concurrent requests by specifying PHP-FPM sizing hints in  platform.app.yaml . For us, the default sizing hint of 45 MB was far above the 10\u201315 MB required for most of our TYPO3 CMS projects in PHP 7.x. (You will find  details about memory hinting  in the Platform.sh documentation.) \n The PHP Analyzer\u2019s Memory Usage graph helps you find the sweet spot. Our goal is to place 90 \u2013 95% of all requests below the hinted memory usage threshold. Usage above the hint will cause swapping and slow down the scripts, but they will still work. \n Memory usage \n \n The green bars  draw a histogram of the total number of requests for a specific memory usage. In this example, 60% of the requests use only 4 MB of memory. That\u2019s a sign of a well-optimized site and the result of TYPO3\u2019s excellent caching. \n The blue line graph  is the one to use to determine where to set the memory hinting. It shows the reverse cumulative percentage of total requests. In the illustration above, 26.1% of the requests (i.e., the requests to the right of the selected point) use more than 4M of memory. In this example, the sweet spot is around 12 MB (4.6%), so we set  runtime.sizing_hints.request_memory: 12MB . \n The red and yellow line graphs  can help you spot issues with CPU usage and execution time. However, it is important to note the difference in statistical significance between a peak, where there are many requests, and one with almost none. High CPU time and low execution time indicate lots of requests being handled successfully. High execution time without a change in CPU usage indicates a few very slow requests. \n Visually detecting project health issues \n The memory usage graph is also good for detecting other issues with your install. For a live environment, a tidy set of graphs is a sign of predictable resource usage. \n Memory usage \n \n The above graph is painful. There are three problem flags: \n \n \n Memory usage is spread out  in the space between 2 \u2013 76 MB. The 90 \u2013 95% sweet spot is almost all the way to the right, somewhere around 60 \u2013 66 MB! \n \n \n Spikes in error responses  are frequent. The gray graph shows requests with HTTP response codes 501, 502, 503, etc, for example at 24 MB and 30 MB. \n \n \n Multiple memory usage peaks  stand out along the way from left to right, for example at 14 MB and 18 MB. These could indicate popular uncached requests and possibly inefficient memory usage. Something worth optimizing. \n \n \n You\u2019ll also see fluctuations in average execution time and CPU. \n Response code distribution \n Another easy health check is the relative distribution of response codes. The analytics tool displays this information in five ways: \n \n Across total requests \n Average memory usage \n Average CPU usage \n Average execution time \n Over time \n \n The first four are pie charts, and the last one is a bar chart. Looking at the distribution of response codes over time is especially useful for noticing operational events and trends. The chart below shows spikes in 404 and 500 responses. \n Response codes \n \n Looking at all HTTP requests \n Looking at PHP-related requests will only get you so far. That\u2019s why the Platform.sh Log Analyzer for PHP requests has a smaller sibling, called  platformGoAccess.php . It wraps the  GoAccess  HTTP log analyzer and also outputs a portable HTML file, ready for your team. (You\u2019ll have to  install GoAccess  first.) \n Visions of the future \n These two log analyzers were written as self-help tools for us at Pixelant. Open source is a core philosophy of ours, so we have licensed it under GPL. Such a project should be a common interest, and we would love your contribution as a fellow Platform.sh user.  Check out the repository . \n Tidying up the code base is one upcoming focus, but other ideas are surfacing on a daily basis. Here are just a few: \n \n Persisting logs locally, and implementing before/after comparisons \n Better scriptability, so you can automate the script and generate statistics at regular intervals \n Clicking on a point in a chart displays more relevant information, such as specific log entries \n Better calculation of recommended Platform.sh plan size \n \n Check out Platform.sh Log Analyzer on Github \n About the author \n Mathias Bolt Lesniak lives outside of Oslo, Norway with his wife and two kids. He works with Platform.sh deployment at  Pixelant  and is an avid fan of TYPO3 CMS, and open-source contribution. You can reach Mathias  @ProvenPudding . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Next-gen Platform.sh Partner Program launches ", "url": "https://platform.sh/blog/2019/next-gen-platformsh-partner-program-launches/", "documentId": "e59462b375afcd7b3c8b2fc84d2f5d5161af0a2b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Next-gen Platform.sh Partner Program launches \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Aaron Porter \n                  \n                   VP, Platform.sh Partner Program \n                  \n                  \n                 \n            \n          \n         \n         10 Dec 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         New benefits, potential for web development agency partners \n Platform.sh was born from the belief that we could improve the process of software development, enhance developer experience, and create an amazing product. We believed there was a better way to do things that would add efficiencies, and, if successful, we could change how agencies and developers think, build, and create. \n Since our initial launch\u2014or even prior to\u2014we\u2019ve relied on partners to help guide us on our journey. We\u2019ve experienced tremendous growth and evolution since that launch, and we feel it\u2019s time to deepen our partner engagement further. \n We\u2019re pleased to announce the next generation of the Platform.sh Partner Program, dedicated to establishing an even more collaborative approach to working with our web development agency partners. \n The goal of this next-gen program is to enable partners to be even more successful when choosing Platform.sh as their preferred PaaS for development. To accomplish this, we\u2019re committed to fostering strategic business alignment, creating a sense of community, and providing opportunities for partner growth through training, support, preferred pricing, and potential business opportunities. \n Even greater partner benefits \n With the new Partner Program, we\u2019re introducing additional tiers\u2014Registered, Silver, Gold, Platinum, and Diamond (Reseller)\u2014and benefits to accommodate all types of agencies, creating additional value at each step of engagement. \n The Platform.sh Partner Portal offers a one-stop shop for a variety of resources, from training and certification to marketing and sales benefits, in addition to learning modules to help your team grow. \n Strategic business alignment: looking ahead to 2020 \n The new Partner Program provides opportunities to help further position our mutual vision and business value through co-marketing and referral business. \n The launch of our new Partner Program opens opportunities to create additional business value for our partners. To this end, we\u2019re in the planning stages of kicking off two primary initiatives: Market Development Funds (MDF) and Application Support. \n The MDF initiative will launch in Q2 2020 and will make funds available to partners to subsidize some of the costs incurred through various business activities, such as marketing campaigns, client events, and in some cases, even conference attendance. MDF will be available to all Silver Tier partners and above through an application process in the Partner Portal. \n Also set to launch in 2020: the Platform.sh Application Support Program. At Platform.sh, we\u2019ve steered away from offering application support, so we\u2019re not competing with our partners for these services. Historically, however, we missed some opportunities by not providing a full-service customer experience. To help ensure a win-win for both partners and Platform.sh, we\u2019ve begun to plan out an application support service, where Plarform.sh subcontracts the application support portions of contracts directly to our partners. \n We invite your team to become an extension of ours through the Application Support Program. Once we\u2019ve worked out all of the details for this initiative, we\u2019ll update the Partner Portal with instructions about how to apply. \n How to get started \n We are always looking to partner with the best of the best. If you manage or work for a digital agency and would like to experience the benefits of becoming a Platform.sh Partner, we\u2019d love to hear from you. \n Explore  why Platform.sh is the most flexible platform for digital agencies, then dive into complete Partner Program details in our Program Guide. \n If you\u2019d like to see the product for yourself prior to registering for the program, you can start a  free trial . \n Join us  for a walkthrough of the next-gen Platform.sh Partner Program. We\u2019ll review the guidelines, benefits, and how to take advantage of the wealth of resources in our just-launched Partner Portal. \n \n Date: 13 January 2020 \n Time: 1:00 PM EST/10:00 AM PST \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Sharpen your tusks: it's time for Python 3.8 ", "url": "https://platform.sh/blog/2019/sharpen-your-tusks-it-is-time-for-python-3.8/", "documentId": "4e624e24b2e3fa64c63a8c0bac880e9cbd4fc557", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Sharpen your tusks: it's time for Python 3.8 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Nick Anderegg \n                  \n                   Developer Relations Engineer \n                  \n                  \n                 \n            \n          \n         \n         18 Dec 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     What\u2019s new in Python 3.8? \n       \n         Assignment expressions \n         Self-documenting f-strings \n         Positional-only parameters \n       \n     \n     Many new features and language improvements \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         The latest version of Python is now available on Platform.sh! In addition to the deluge of bug fixes and improvements you\u2019d expect with every release, Python 3.8 is packed with new features designed to make your code simpler and the development process easier. \n To get your existing applications up and running with Python 3.8 right now, just swap out \u201c3.7\u201d with \u201c3.8\u201d in your  .platform.app.yaml  file: \n      type :   \"python:3.8\" \n Commit your changes, push them to a new branch in your repository, and in a matter of moments you\u2019ll be able to test out how your application runs on Python 3.8 in an isolated development environment. Once you\u2019re sure that your application is ready for the version bump, merge it into  master , and your upgraded application will be ready for the world to see. \n What\u2019s new in Python 3.8? \n Sure, it\u2019s nice that you can now  use a  continue  statement within a  finally  clause , but let\u2019s get right to the feature we know you want to hear about: the walrus operator. \n Assignment expressions \n The  walrus operator   := , formally known as the \u201cassignment expression,\u201d lets you assign a value to a variable at the same time you\u2019re using the variable. This way, you can avoid double function and object calls. The simplest use case is when you need to test a value in an  if  statement, but also need to refer back to the value within the  if  block: \n items   =   [ 10 ,   20 ,   30 ] \n if   ( n   : =   len ( items ) )   < =   3 : \n     print ( f \" Not enough values! List only has {n} items, must have at least 4! \" ) \n This approach is an alternative to either assigning  n = len(items)  prior to the  if  statement or calling  len(items)  a second time in the print statement. Assignment expressions can also be used in  while  loops where you need to test a condition and also use the tested value inside the loop: \n # Process one hex character at a time, stop when a null character is read \n while   ( val   : =   f . read ( 1 ) )   !=   chr ( 0x0 ) : \n     process_input ( val ) \n A word of caution: assignment expressions should be reserved for cases where they\u2019ll simplify code and reduce redundant calls. If using this operator will make your code harder to read, stick with assigning the variable in a separate statement. You can check out  PEP 527  for the full specification. \n Self-documenting f-strings \n Keeping with the theme of making code more readable,  Python 3.8 introduces the  =  operator within f-strings  to cause them to self-document. Take this example of wanting to print a selection of variable values: \n print ( f ' idx={idx}, value={val} ' ) \n By adding  =  to the end of an expression within an f-string, the expression itself\u2014as well as the resulting value\u2014will both be printed: \n idx   =   20 \n val   =   { ' status ' :   ' operational ' } \n print ( f ' {idx=}, {val[ \" status \" ]=} ' ) \n results in the output  idx=20, val[\"status\"]='operational' . Now, you don\u2019t have to type out every expression twice! \n Positional-only parameters \n Two new operators have been introduced to function definition syntax:  /  and  * . The  /  operator declares that all parameters defined before it in a function definition must be specified positionally, while the  *  operator declares that all parameters defined after it must be specified as keyword arguments. Any parameters between these two operators can be passed as positional or keyword arguments. Take this function definition, for example: \n def   f ( a ,   b = None ,   / ,   c = None ,   d = None ,   * ,   e ,   f = None ) : \n     print ( a ,   b ,   c ,   d ,   e ,   f ) \n These function calls are valid: \n >>> f ( 1, 2, 3,  d = 4,  e = 5,  f = 6 )   # c and d can be positional or keyword args \n 1   2   3   4   5   6 \n>>> f ( 1,  e = 5 )   # b, c, d, and f are optional arguments \n 1  None None None  5  None\n>>> f ( 1, 2, 3,  e = 5 )   # c can be positional and d can be optional \n 1   2   3  None  5  None\n However, none of these calls are: \n >>> f ( 1, 2, 3, 4, 5 ) \nTypeError: f ( )  takes from  1  to  4  positional arguments but  5  were given\n>>> f ( 1,  b = 2 ) \nTypeError: f ( )  got some positional-only arguments passed as keyword arguments:  'b' \n>>> f ( 1, 2 ) \nTypeError: f ( )  missing  1  required keyword-only argument:  'e' \n One of the biggest benefits of requiring that a function parameter be passed as a positional argument is that you can safely change the names of parameters in the future without breaking any code that calls that function. If a function is defined as  def f(a, b=None, /) , it can be safely redefined as  def f(x, y=None, /)  in the future. This is because any call to this function that passes  a  or  b  as keyword arguments will raise a  TypeError . \n Many new features and language improvements \n Python 3.8 is packed with so many changes that it\u2019s hard to cover them all in the span of one blog post! If you\u2019re ready to get started with this update, check out the  full changelog  in the Python docs. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Apache Kafka now available \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Even more batteries included: Platform.sh configuration libraries \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "What's new with Jakarta NoSQL? (Part I) ", "url": "https://platform.sh/blog/2019/what-is-new-with-jakarta-nosql/", "documentId": "32d554bd0ec74f3e0a33ba2f14d9807177f9f2c8", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           What's new with Jakarta NoSQL? (Part I) \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         11 Dec 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Introduction to Document with MongoDB \n Jakarta EE picks up where Java EE 8 left off, but the roadmap going forward will be focused on modern innovations like microservices, modularity, and NoSQL databases. This post will talk about the newest milestone version of this new specification and the subsequent actions to make the Jakarta EE community even greater in the cloud. \n \n Why Jakarta NoSQL? \n Vendor lock-in is one of the things any Java developer needs to consider when choosing NoSQL databases. If there\u2019s a need for a switch, other considerations include time spent on the change, the learning curve of a new API to use with this database, the code that will be lost, the persistence layer that needs to be replaced. Jakarta NoSQL avoids most of these issues through Communication APIs. Jakarta NoSQL also has template classes that apply the design pattern \u2018template method\u2019 to database operations. And the  Repository  interface allows Java developers to create and extend interfaces, with implementation automatically provided by Jakarta NoSQL\u2014support method queries built by developers will automatically be implemented for them. \n To make it clear, let\u2019s create some sample code. The picture below shows four different databases: \n \n ArangoDB \n MongoDB \n Couchbase \n OrientDB \n \n \n What do those databases have in common? \n Yup, they\u2019re all document NoSQL databases, and they\u2019re trying to create a document, a tuple with a name, and the information itself. They\u2019re all doing the exact same thing, with the same behavior goal, however, with a different class, method name, and so on. So, if you want to move your code from one database to another, you need to learn a new API and update the whole database code to the database API code target. \n \n Through the communication specification, we can easily change between databases jusb by using the driver databases that look like JDBC drivers. So, you can be more comfortable learning a new NoSQL database from the software architecture perspective; we can easily and quickly jump to another NoSQL. \n Show me the  code  API \n To demonstrate how the Jakarta NoSQL works, let\u2019s create a small REST API; that API will run in cloud with Platform.sh. The API will handle the heroes, and all the information will be stored into MongoDB. As a first step, we need to set the dependencies Jakarta NoSQL needs: \n \n Jakarta Context Dependency Injection 2.0 . Jakarta Contexts Dependency Injection specifies a means for obtaining objects that maximize reusability, testability, and maintainability\u2014compared to traditional approaches such as constructors, factories, and service locators. Think of it as a glue for the entire Jakarta EE world. \n Jakarta JSON Binding . Defines a binding framework for converting Java objects to and from JSON documents. \n Jakarta Bean Validation 2.0  (optional). Jakarta Bean Validation defines a metadata model and API for JavaBean and method validation. \n Eclipse MicroProfile Configuration  (optional). Eclipse MicroProfile Config is a solution to externalize configuration from Java applications. \n \n <project   xmlns= \"http://maven.apache.org/POM/4.0.0\"   xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n     \t xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > \n\t <modelVersion > 4.0.0 </modelVersion> \n\t <groupId > org.soujava </groupId> \n\t <artifactId > heroes </artifactId> \n\t <version > 1.0-SNAPSHOT </version> \n\t <packaging > war </packaging> \n\t <name > heroes-demo </name> \n\t <url > https://soujava.org.br/ </url> \n\t <properties > \n    \t <project.build.sourceEncoding > UTF-8 </project.build.sourceEncoding> \n    \t <maven.compiler.source > 1.8 </maven.compiler.source> \n    \t <maven.compiler.target > 1.8 </maven.compiler.target> \n    \t <failOnMissingWebXml > false </failOnMissingWebXml> \n    \t <project.build.sourceEncoding > UTF-8 </project.build.sourceEncoding> \n    \t <version.microprofile > 2.2 </version.microprofile> \n    \t <version.payara.micro > 5.193.1 </version.payara.micro> \n    \t <payara.version > 1.0.5 </payara.version> \n    \t <platform.sh.version > 2.2.3 </platform.sh.version> \n    \t <jakarta.nosql.version > 1.0.0-b1 </jakarta.nosql.version> \n\t </properties> \n\n\t <dependencies > \n    \t <dependency > \n        \t <groupId > jakarta.platform </groupId> \n        \t <artifactId > jakarta.jakartaee-web-api </artifactId> \n        \t <version > 8.0.0 </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.eclipse.microprofile.config </groupId> \n        \t <artifactId > microprofile-config-api </artifactId> \n        \t <version > 1.3 </version> \n        \t <scope > provided </scope> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.eclipse.jnosql.artemis </groupId> \n        \t <artifactId > artemis-document </artifactId> \n        \t <version > ${jakarta.nosql.version} </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.eclipse.jnosql.diana </groupId> \n        \t <artifactId > mongodb-driver </artifactId> \n        \t <version > ${jakarta.nosql.version} </version> \n    \t </dependency> \n\t </dependencies> \n\t <build > \n    \t <finalName > heros </finalName> \n    \t <plugins > \n        \t <plugin > \n            \t <groupId > org.apache.maven.plugins </groupId> \n            \t <artifactId > maven-war-plugin </artifactId> \n            \t <version > 3.2.2 </version> \n            \t <configuration > \n                \t <failOnMissingWebXml > false </failOnMissingWebXml> \n                \t <packagingExcludes > pom.xml </packagingExcludes> \n            \t </configuration> \n        \t </plugin> \n        \t <plugin > \n            \t <groupId > fish.payara.maven.plugins </groupId> \n            \t <artifactId > payara-micro-maven-plugin </artifactId> \n            \t <version > ${payara.version} </version> \n            \t <configuration > \n                \t <payaraVersion > ${version.payara.micro} </payaraVersion> \n                \t <autoDeployEmptyContextRoot > true </autoDeployEmptyContextRoot> \n            \t </configuration> \n        \t </plugin> \n    \t </plugins> \n\t </build> \n </project> \n One amazing aspect of using  Platform.sh  is that we don\u2019t need to worry about the infrastructure installation that includes the  MongoDB  server itself; it will create several containers that include the application and the database. We\u2019ll talk more about Platform.sh and its relationship with cloud-native soon. \n The first step is to create the Hero entity, in the annotations package now as  jakarta.nosql.mapping . \n import   jakarta.nosql.mapping.Column ; \n import   jakarta.nosql.mapping.Entity ; \n import   jakarta.nosql.mapping.Id ; \n\n import   javax.json.bind.annotation.JsonbVisibility ; \n import   java.io.Serializable ; \n import   java.util.Objects ; \n import   java.util.Set ; \n\n @Entity \n @JsonbVisibility ( FieldPropertyVisibilityStrategy . class ) \n public   class   Hero   implements   Serializable   { \n\n\t @Id \n\t private   String   name ; \n\n\t @Column \n\t private   Integer   age ; \n\n\t @Column \n\t private   Set < String >   powers ; \n\n\t @Override \n\t public   boolean   equals ( Object   o )   { \n    \t if   ( this   = =   o )   { \n        \t return   true ; \n    \t } \n    \t if   ( ! ( o   instanceof   Hero ) )   { \n        \t return   false ; \n    \t } \n    \t Hero   hero   =   ( Hero )   o ; \n    \t return   Objects . equals ( name ,   hero . name ) ; \n\t } \n\n\t @Override \n\t public   int   hashCode ( )   { \n    \t return   Objects . hashCode ( name ) ; \n\t } \n\n\t @Override \n\t public   String   toString ( )   { \n    \t return   \"Hero{\"   + \n            \t \"name='\"   +   name   +   '\\''   + \n            \t \", age=\"   +   age   + \n            \t \", powers=\"   +   powers   + \n            \t '}' ; \n\t } \n } \n\n import   javax.json.bind.config.PropertyVisibilityStrategy ; \n import   java.lang.reflect.Field ; \n import   java.lang.reflect.Method ; \n\n public   class   FieldPropertyVisibilityStrategy   implements   PropertyVisibilityStrategy   { \n\n\t @Override \n\t public   boolean   isVisible ( Field   field )   { \n    \t return   true ; \n\t } \n\n\t @Override \n\t public   boolean   isVisible ( Method   method )   { \n    \t return   true ; \n\t } \n } \n The next step is to create a connection to the NoSQL database, so we\u2019ll create a  DocumentCollectionManager  instance. Think of  EntityManager  as a Document database. We know that hard-coded information isn\u2019t safe nor is it a t good practice. That\u2019s why the  twelve-factor  mentions it in the  third section . Further, the application doesn\u2019t need to know where this information comes from. To follow the good practices of the twelve-factor and to support the cloud-native principle, Jakarta NoSQL has support for the Eclipse MicroProfile Configuration. \n import   jakarta.nosql.document.DocumentCollectionManager ; \n import   org.eclipse.microprofile.config.inject.ConfigProperty ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.enterprise.inject.Disposes ; \n import   javax.enterprise.inject.Produces ; \n import   javax.inject.Inject ; \n\n @ApplicationScoped \n class   DocumentManagerProducer   { \n\n\t @Inject \n\t @ConfigProperty ( name   =   \"document\" ) \n\t private   DocumentCollectionManager   manager ; \n\n\t @Produces \n\t public   DocumentCollectionManager   getManager ( )   { \n    \t return   manager ; \n\t } \n\n\t public   void   destroy ( @Disposes   DocumentCollectionManager   manager )   { \n    \t manager . close ( ) ; \n\t } \n } \n Once this is done, we create a connection class that makes a  DocumentCollectionManager  instance available to CDI, thanks to the method annotated with  Produces . \n The database configuration is ready to run locally. For this application beyond the CRUD, let\u2019s create three more queries: \n \n Find all Heroes \n Find Heroes older than a certain age \n Find heroes younger than a certain age \n Find Heroes by the name, the id \n Find Heroes by the power \n \n We have several ways to create this query into Jakarta NoSQL. Let\u2019s introduce the first way with  DocumentTemplate . The template classes execute operations into NoSQL database in the  Mapper  layer, so there\u2019s a template class for each NoSQL type that Jakarta NoSQL supports:  DocumentTemplate  for document,  KeyValueTemplate  for key-value database, and so on. \n Even with  Document Template , we have two paths to consult information into NoSQL databases. The first one is programmatically. The API has a fluent way to create a  DocumentQuery  instance. \n package   jakarta.nosql.demo.hero ; \n\n import   jakarta.nosql.document.DocumentDeleteQuery ; \n import   jakarta.nosql.document.DocumentQuery ; \n import   jakarta.nosql.mapping.document.DocumentTemplate ; \n import   com.google.common.collect.Sets ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.inject.Inject ; \n import   java.util.Optional ; \n import   java.util.stream.Collectors ; \n import   java.util.stream.Stream ; \n\n import static   jakarta.nosql.document.DocumentDeleteQuery.delete ; \n import static   jakarta.nosql.document.DocumentQuery.select ; \n import static   java.util.Arrays.asList ; \n\n @ApplicationScoped \n public   class   FluentAPIService   { \n\n\t @Inject \n\t private   DocumentTemplate   template ; \n\n\t public   void   execute ( )   { \n\n    \t Hero   iron   =   new   Hero ( \"Iron man\" ,   32 ,   Sets . newHashSet ( \"Rich\" ) ) ; \n    \t Hero   thor   =   new   Hero ( \"Thor\" ,   5000 ,   Sets . newHashSet ( \"Force\" ,   \"Thunder\" ,   \"Strength\" ) ) ; \n    \t Hero   captainAmerica   =   new   Hero ( \"Captain America\" ,   80 ,   Sets . newHashSet ( \"agility\" , \n            \t \"Strength\" ,   \"speed\" ,   \"endurance\" ) ) ; \n    \t Hero   spider   =   new   Hero ( \"Spider\" ,   18 ,   Sets . newHashSet ( \"Spider\" ,   \"Strength\" ) ) ; \n\n    \t DocumentDeleteQuery   deleteQuery   =   delete ( ) . from ( \"Hero\" ) \n            \t . where ( \"_id\" ) . in ( Stream . of ( iron ,   thor ,   captainAmerica ,   spider ) \n                    \t . map ( Hero : : getName ) . collect ( Collectors . toList ( ) ) ) . build ( ) ; \n    \t template . delete ( deleteQuery ) ; \n\n\n    \t template . insert ( asList ( iron ,   thor ,   captainAmerica ,   spider ) ) ; \n    \t //find by id\n     \t Optional < Hero >   hero   =   template . find ( Hero . class ,   iron . getName ( ) ) ; \n    \t System . out . println ( hero ) ; \n\n    \t //query younger\n     \t DocumentQuery   youngQuery   =   select ( ) . from ( \"Hero\" ) \n            \t . where ( \"age\" ) . lt ( 20 ) . build ( ) ; \n\n    \t //query seniors\n     \t DocumentQuery   seniorQuery   =   select ( ) . from ( \"Hero\" ) \n            \t . where ( \"age\" ) . gt ( 20 ) . build ( ) ; \n\n            //query powers\n     \t DocumentQuery   queryPower   =   select ( ) . from ( \"Hero\" ) \n            \t . where ( \"powers\" ) . in ( Collections . singletonList ( \"Strength\" ) ) \n            \t . build ( ) ; \n\n    \t Stream < Hero >   youngStream   =   template . select ( youngQuery ) ; \n\n    \t Stream < Hero >   seniorStream   =   template . select ( seniorQuery ) ; \n\n    \t Stream < Hero >   strengthStream   =   template . select ( queryPower ) ; \n\n    \t String   yongHeroes   =   youngStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n    \t String   seniorsHeroes   =   seniorStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n    \t String   strengthHeroes   =   strengthStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n\n    \t System . out . println ( \"Young result: \"   +   yongHeroes ) ; \n    \t System . out . println ( \"Seniors result: \"   +   seniorsHeroes ) ; \n    \t System . out . println ( \"Strength result: \"   +   strengthHeroes ) ; \n\t } \n } \n To talk about the \u2018find all heroes\u2019 query, we\u2019ll create a specific class because when we talk about returning all information in a database, we need to avoid an impact on performance. Given a database might have more than one million information points, it doesn\u2019t make sense to bring all this information at the same time (in most cases). \n \n import   jakarta.nosql.document.DocumentDeleteQuery ; \n import   jakarta.nosql.document.DocumentQuery ; \n import   jakarta.nosql.mapping.document.DocumentTemplate ; \n import   com.google.common.collect.Sets ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.inject.Inject ; \n import   java.util.Arrays ; \n import   java.util.Optional ; \n import   java.util.stream.Collectors ; \n import   java.util.stream.Stream ; \n\n import static   jakarta.nosql.document.DocumentDeleteQuery.delete ; \n import static   jakarta.nosql.document.DocumentQuery.select ; \n import static   java.util.Arrays.asList ; \n\n @ApplicationScoped \n public   class   FluentAPIFindAllService   { \n\n\t @Inject \n\t private   DocumentTemplate   template ; \n\n\t public   void   execute ( )   { \n\n    \t Hero   iron   =   new   Hero ( \"Iron man\" ,   32 ,   Sets . newHashSet ( \"Rich\" ) ) ; \n    \t Hero   thor   =   new   Hero ( \"Thor\" ,   5000 ,   Sets . newHashSet ( \"Force\" ,   \"Thunder\" ) ) ; \n    \t Hero   captainAmerica   =   new   Hero ( \"Captain America\" ,   80 ,   Sets . newHashSet ( \"agility\" , \n            \t \"strength\" ,   \"speed\" ,   \"endurance\" ) ) ; \n    \t Hero   spider   =   new   Hero ( \"Spider\" ,   18 ,   Sets . newHashSet ( \"Spider\" ) ) ; \n\n    \t DocumentDeleteQuery   deleteQuery   =   delete ( ) . from ( \"Hero\" ) \n            \t . where ( \"_id\" ) . in ( Stream . of ( iron ,   thor ,   captainAmerica ,   spider ) \n                    \t . map ( Hero : : getName ) . collect ( Collectors . toList ( ) ) ) . build ( ) ; \n    \t template . delete ( deleteQuery ) ; \n    \t template . insert ( Arrays . asList ( iron ,   thor ,   captainAmerica ,   spider ) ) ; \n\n    \t DocumentQuery   query   =   select ( ) \n            \t . from ( \"Hero\" ) \n            \t . build ( ) ; \n\n    \t Stream < Hero >   heroes   =   template . select ( query ) ; \n    \t Stream < Hero >   peek   =   heroes . peek ( System . out : : println ) ; \n    \t System . out . println ( \"The peek is not happen yet\" ) ; \n    \t System . out . println ( \"The Heroes names: \"   +   peek . map ( Hero : : getName ) \n            \t . collect ( Collectors . joining ( \", \" ) ) ) ; \n\n    \t DocumentQuery   querySkipLimit   =   select ( ) \n            \t . from ( \"Hero\" ) \n            \t . skip ( 0 ) \n            \t . limit ( 1 ) \n            \t . build ( ) ; \n\n    \t Stream < Hero >   heroesSkip   =   template . select ( querySkipLimit ) ; \n    \t System . out . println ( \"The Heroes names: \"   +   heroesSkip . map ( Hero : : getName ) \n            \t . collect ( Collectors . joining ( \", \" ) ) ) ; \n\t } \n } \n Also, the API has the pagination feature that easily accommodates pagination and functions with large sets of data. \n import   jakarta.nosql.document.DocumentDeleteQuery ; \n import   jakarta.nosql.document.DocumentQuery ; \n import   jakarta.nosql.mapping.Page ; \n import   jakarta.nosql.mapping.Pagination ; \n import   jakarta.nosql.mapping.document.DocumentQueryPagination ; \n import   jakarta.nosql.mapping.document.DocumentTemplate ; \n import   com.google.common.collect.Sets ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.inject.Inject ; \n import   java.util.Arrays ; \n import   java.util.stream.Collectors ; \n import   java.util.stream.Stream ; \n\n import static   jakarta.nosql.document.DocumentDeleteQuery.delete ; \n import static   jakarta.nosql.document.DocumentQuery.select ; \n\n @ApplicationScoped \n public   class   FluentAPIPaginationService   { \n\n     @Inject \n     private   DocumentTemplate   template ; \n\n     public   void   execute ( )   { \n\n         Hero   iron   =   new   Hero ( \"Iron man\" ,   32 ,   Sets . newHashSet ( \"Rich\" ) ) ; \n         Hero   thor   =   new   Hero ( \"Thor\" ,   5000 ,   Sets . newHashSet ( \"Force\" ,   \"Thunder\" ) ) ; \n         Hero   captainAmerica   =   new   Hero ( \"Captain America\" ,   80 ,   Sets . newHashSet ( \"agility\" , \n                 \"strength\" ,   \"speed\" ,   \"endurance\" ) ) ; \n         Hero   spider   =   new   Hero ( \"Spider\" ,   18 ,   Sets . newHashSet ( \"Spider\" ) ) ; \n\n         DocumentDeleteQuery   deleteQuery   =   delete ( ) . from ( \"Hero\" ) \n                 . where ( \"_id\" ) . in ( Stream . of ( iron ,   thor ,   captainAmerica ,   spider ) \n                         . map ( Hero : : getName ) . collect ( Collectors . toList ( ) ) ) . build ( ) ; \n         template . delete ( deleteQuery ) ; \n         template . insert ( Arrays . asList ( iron ,   thor ,   captainAmerica ,   spider ) ) ; \n\n         DocumentQuery   query   =   select ( ) \n                 . from ( \"Hero\" ) \n                 . orderBy ( \"_id\" ) \n                 . asc ( ) \n                 . build ( ) ; \n\n         DocumentQueryPagination   pagination   = \n                 DocumentQueryPagination . of ( query ,   Pagination . page ( 1 ) . size ( 1 ) ) ; \n\n         Page < Hero >   page1   =   template . select ( pagination ) ; \n\n         System . out . println ( \"Page 1: \"   +   page1 . getContent ( ) . collect ( Collectors . toList ( ) ) ) ; \n\n         Page < Hero >   page2   =   page1 . next ( ) ; \n\n         System . out . println ( \"Page 2: \"   +   page2 . getContent ( ) . collect ( Collectors . toList ( ) ) ) ; \n\n         Page < Hero >   page3   =   page1 . next ( ) ; \n         System . out . println ( \"Page 3: \"   +   page3 . getContent ( ) . collect ( Collectors . toList ( ) ) ) ; \n     } \n } \n A fluent API is amazing and safe to write and reads queries for a NoSQL database, but how about query by text? While a fluent API is safer, it\u2019s sometimes verbose. You know what, though? Jakarta NoSQL has support to query by text that includes  PrepareStatement  where, as a Java Developer, you can set the parameter dynamically. \n import   jakarta.nosql.mapping.PreparedStatement ; \n import   jakarta.nosql.mapping.document.DocumentTemplate ; \n import   com.google.common.collect.Sets ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.inject.Inject ; \n import   java.util.Arrays ; \n import   java.util.stream.Collectors ; \n import   java.util.stream.Stream ; \n\n @ApplicationScoped \n public   class   TextService   { \n\n\t @Inject \n\t private   DocumentTemplate   template ; \n\n\t public   void   execute ( )   { \n\n    \t Hero   iron   =   new   Hero ( \"Iron man\" ,   32 ,   Sets . newHashSet ( \"Rich\" ) ) ; \n    \t Hero   thor   =   new   Hero ( \"Thor\" ,   5000 ,   Sets . newHashSet ( \"Force\" ,   \"Thunder\" ) ) ; \n    \t Hero   captainAmerica   =   new   Hero ( \"Captain America\" ,   80 ,   Sets . newHashSet ( \"agility\" , \n            \t \"strength\" ,   \"speed\" ,   \"endurance\" ) ) ; \n    \t Hero   spider   =   new   Hero ( \"Spider\" ,   18 ,   Sets . newHashSet ( \"Spider\" ) ) ; \n\n    \t template . query ( \"delete from Hero where _id in ('Iron man', 'Thor', 'Captain America', 'Spider')\" ) ; \n    \t template . insert ( Arrays . asList ( iron ,   thor ,   captainAmerica ,   spider ) ) ; \n    \t //query younger\n     \t PreparedStatement   prepare   =   template . prepare ( \"select * from Hero where age < @age\" ) ; \n    \t prepare . bind ( \"age\" ,   20 ) ; \n\n    \t Stream < Hero >   youngStream   =   prepare . getResult ( ) ; \n\n    \t Stream < Hero >   seniorStream   =   template . query ( \"select * from Hero where age > 20\" ) ; \n\n    \t Stream < Hero >   powersStream   =   template . query ( \"select * from Hero where powers in ('Strength')\" ) ; \n\n    \t Stream < Hero >   allStream   =   template . query ( \"select * from Hero\" ) ; \n\n    \t Stream < Hero >   skipLimitStream   =   template . query ( \"select * from Hero skip 0 limit 1 order by _id asc\" ) ; \n\n    \t String   yongHeroes   =   youngStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n    \t String   seniorsHeroes   =   seniorStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n    \t String   allHeroes   =   allStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n    \t String   skipLimitHeroes   =   skipLimitStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n    \t String   powersHeroes   =   powersStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n\n    \t System . out . println ( \"Young result: \"   +   yongHeroes ) ; \n    \t System . out . println ( \"Seniors result: \"   +   seniorsHeroes ) ; \n    \t System . out . println ( \"Powers Strength result: \"   +   powersHeroes ) ; \n    \t System . out . println ( \"All heroes result: \"   +   allHeroes ) ; \n    \t System . out . println ( \"All heroes skip result: \"   +   skipLimitHeroes ) ; \n\t } \n } \n What do you think? Too complex? Don\u2019t worry, we can simplify it for you with a Repository. A repository abstraction is here to significantly reduce the amount of boilerplate code required to implement data access layers for various persistence stores. \n import   jakarta.nosql.mapping.Page ; \n import   jakarta.nosql.mapping.Pagination ; \n import   jakarta.nosql.mapping.Repository ; \n\n import   java.util.stream.Stream ; \n\n public   interface   HeroRepository   extends   Repository < Hero ,   String >   { \n\n\t Stream < Hero >   findAll ( ) ; \n\n\t Page < Hero >   findAll ( Pagination   pagination ) ; \n\n\t Stream < Hero >   findByPowersIn ( String   powers ) ; \n\n\t Stream < Hero >   findByAgeGreaterThan ( Integer   age ) ; \n\n\t Stream < Hero >   findByAgeLessThan ( Integer   age ) ; \n } \n\n\n import   jakarta.nosql.mapping.Page ; \n import   jakarta.nosql.mapping.Pagination ; \n import   com.google.common.collect.Sets ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.inject.Inject ; \n import   java.util.Optional ; \n import   java.util.stream.Collectors ; \n import   java.util.stream.Stream ; \n\n import static   java.util.Arrays.asList ; \n\n @ApplicationScoped \n public   class   RepositoryService   { \n\n\t @Inject \n\t private   HeroRepository   repository ; \n\n\t public   void   execute ( )   { \n\n    \t Hero   iron   =   new   Hero ( \"Iron man\" ,   32 ,   Sets . newHashSet ( \"Rich\" ) ) ; \n    \t Hero   thor   =   new   Hero ( \"Thor\" ,   5000 ,   Sets . newHashSet ( \"Force\" ,   \"Thunder\" ,   \"Strength\" ) ) ; \n    \t Hero   captainAmerica   =   new   Hero ( \"Captain America\" ,   80 ,   Sets . newHashSet ( \"agility\" , \n            \t \"Strength\" ,   \"speed\" ,   \"endurance\" ) ) ; \n    \t Hero   spider   =   new   Hero ( \"Spider\" ,   18 ,   Sets . newHashSet ( \"Spider\" ,   \"Strength\" ) ) ; \n\n\n    \t repository . save ( asList ( iron ,   thor ,   captainAmerica ,   spider ) ) ; \n    \t //find by id\n     \t Optional < Hero >   hero   =   repository . findById ( iron . getName ( ) ) ; \n    \t System . out . println ( hero ) ; \n\n    \t Stream < Hero >   youngStream   =   repository . findByAgeLessThan ( 20 ) ; \n    \t Stream < Hero >   seniorStream   =   repository . findByAgeGreaterThan ( 20 ) ; \n    \t Stream < Hero >   strengthStream   =   repository . findByPowersIn ( \"Strength\" ) ; \n    \t Stream < Hero >   allStream   =   repository . findAll ( ) ; \n\n    \t String   yongHeroes   =   youngStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n    \t String   seniorsHeroes   =   seniorStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n    \t String   strengthHeroes   =   strengthStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n    \t String   allHeroes   =   allStream . map ( Hero : : getName ) . collect ( Collectors . joining ( \",\" ) ) ; \n\n    \t System . out . println ( \"Young result: \"   +   yongHeroes ) ; \n    \t System . out . println ( \"Seniors result: \"   +   seniorsHeroes ) ; \n    \t System . out . println ( \"Strength result: \"   +   strengthHeroes ) ; \n    \t System . out . println ( \"All heroes result: \"   +   allHeroes ) ; \n\n    \t //Pagination\n     \t Pagination   pagination   =   Pagination . page ( 1 ) . size ( 1 ) ; \n    \t Page < Hero >   page1   =   repository . findAll ( pagination ) ; \n    \t System . out . println ( \"Page 1: \"   +   page1 . getContent ( ) . collect ( Collectors . toList ( ) ) ) ; \n    \t Page < Hero >   page2   =   page1 . next ( ) ; \n    \t System . out . println ( \"Page 2: \"   +   page2 . getContent ( ) . collect ( Collectors . toList ( ) ) ) ; \n    \t Page < Hero >   page3   =   page1 . next ( ) ; \n    \t System . out . println ( \"Page 3: \"   +   page3 . getContent ( ) . collect ( Collectors . toList ( ) ) ) ; \n\t } \n } \n This concludes the first part of our post, introducing the concept behind Jakarta and NoSQL, and the document API with MongoDB. In part two, we\u2019ll talk about cloud-native, and how to easily move this application to the cloud using Platform.sh. If you\u2019re curious and don\u2019t mind a spoiler, you can take a look at the  sample code on your repository . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Scale your application with Spring and RabbitMQ \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Multisite on Platform.sh: the how and why ", "url": "https://platform.sh/blog/2020/multisite-on-platform.sh-the-how-and-why/", "documentId": "27375b0d44ac034a8652dbe12dcb1e9d145c2b73", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Multisite on Platform.sh: the how and why \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         06 Jan 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     Why not go multisite? \n     When is multisite appropriate? \n     Making multisite manageable \n       \n         Set up the routes \n         Set up the database \n         Expose the relationships \n         Application configuration \n       \n     \n     Another option: launch a fleet \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         Many applications and frameworks have the ability to host multiple application instances on a single code base.  Usually such applications are older, and date from when hosting a site was considerably more expensive than it is today.  That made squeezing many small sites onto one code base a good cost-cutting measure in some cases. \n Today, with more efficient, container-based hosting systems (like Platform.sh), such functionality is much less useful.  The challenges such a configuration poses become a bigger concern when they\u2019re not offset by large cost savings, making it rarely a good idea to leverage such multisite capability anymore. \n Why not go multisite? \n Hosting multiple sites on a single code base means: \n \n Code updates (including configuration) apply to all of them at once; you have to QA, deploy, and test all of them at once. \n Code customizations (including configuration) per site are impossible (or, depending on the system, very difficult). \n A bug that takes down one site is going to take down all of them. \n A scheduled downtime that takes down one site is going to take down all of them. \n Because containers usually have more limited resources than the large VM they\u2019re running on, the sites will be competing for resources more often. \n All of the sites are sharing the same resources, so extra load on one popular site will impact all of them. \n Backups may become more difficult. \n Some back-end services may become harder to segment between sites. \n \n Another problem is that the \u201csite router\u201d functionality, which decides which of the many hosted sites to load, is usually domain-name based.  On Platform.sh, by necessity, every branch has a different domain name.  That means the domain-matching logic gets considerably more complex, since the domain itself is highly variable depending on the branch you\u2019re on. \n In general, at Platform.sh we discourage people from using such multisite configurations.  Usually, they end up being more trouble than they\u2019re worth.  That said, there are use cases where they make sense and in those cases we do support them. \n When is multisite appropriate? \n I would argue a multisite configuration is appropriate when: \n \n All of the sites are individually low traffic. \n All of the sites are legitimately \u201cthe same site,\u201d just for different data.  For instance, multiple small departments or multiple nearly identical products. \n The number of sites is reasonably low, say under a dozen. \n The same person or team is responsible for maintenance on all of the sites. \n You have a robust enough QA process in place to QA all of the sites at once when there\u2019s an update. \n \n If that\u2019s the case, then a multisite setup may be worth considering.  But how do you configure it? \n Making multisite manageable \n For demonstration purposes, we\u2019ll show the key moving parts of a multisite configuration using Drupal 8, one of the most common systems used for multisite configurations.  The process for Drupal 7 is largely similar, but with some adjustments.  For other applications, the tasks will be largely the same, but the code will, of course, be different. \n For simplicity. we\u2019ll assume that all of the sites we\u2019re hosting are subdomains off of a single common domain.  If that\u2019s not the case then it gets a bit more complex.  As long as there is a regular pattern, though, it should be possible. \n You can follow-along at home with our  Drupal 8 Multisite template , available on GitHub. \n We\u2019ll walk through setting up a two-site installation,  first.example.com  and  second.example.com .  That helps keep the code straightforward. \n Set up the routes \n We\u2019ll start with a separate route per subsite in  routes.yaml , like so: \n \"https://first.{default}/\" : \n      type :   upstream \n      upstream :   \"app:http\" \n      cache : \n          enabled :   true \n          # Base the cache on the session cookie and custom Drupal cookies. Ignore all other cookies. \n          cookies :   [ '/^SS?ESS/' ,   '/^Drupal.visitor/' ] \n \n \"https://second.{default}/\" : \n      type :   upstream \n      upstream :   \"app:http\" \n      cache : \n          enabled :   true \n          # Base the cache on the session cookie and custom Drupal cookies. Ignore all other cookies. \n          cookies :   [ '/^SS?ESS/' ,   '/^Drupal.visitor/' ] \n That\u2019s the same route, repeated multiple times.  You can\u2019t use a wildcard route for two reasons: first, Platform.sh will  not be able to provision  Let\u2019s Encrypt TLS certificates automatically; second, we need discrete routes later for the application parsing to work. \n Note that Let\u2019s Encrypt only allows up to 100 certificates to be requested at once, so that\u2019s effectively the hard limit on how many multisites you can host this way.  (You\u2019re likely to run into other issues long before that, however.) \n Set up the database \n Next, any services that support multiple databases should be configured with a separate database per site instance.  For  MySQL or MariaDB , for example, you would put the following in  services.yaml : \n db : \n      type :   'mariadb:10.2' \n      disk :   2048 \n      configuration : \n          schemas : \n              - firstdb \n              - seconddb \n          endpoints : \n              first : \n                  default_schema :   firstdb \n                  privileges : \n                      firstdb :   admin \n              second : \n                  default_schema :   seconddb \n                  privileges : \n                      seconddb :   admin \n This configuration creates two separate databases on a single instance of MariaDB, with an endpoint for each.  While you could put each site on its own service instance, that\u2019s largely a waste of resources and not recommended. \n Note that we\u2019re using the name of the subdomain as the name of the endpoint.  That\u2019s not strictly required, but by using the same identifier key all the way through the system, we make the configuration much easier and less manual. \n If you plan to use another service that supports multiple databases, such as  Solr , do the same configuration there.  Other services, such as  Redis  or  Elasticsearch , handle separate databases entirely at runtime.  You\u2019ll need to ensure your application code is setup to handle that correctly. \n Expose the relationships \n Each database endpoint needs to then be exposed to the application.  Again, we\u2019ll name the relationships according to the site prefix ( first  and  second ) so we can look them up dynamically.  From  .platform.app.yaml : \n relationships : \n    rediscache :   'cache:redis' \n    first :   'db:first' \n    second :   'db:second' \n Application configuration \n The steps above apply to any application.  The rest of this example will be Drupal 8-specific, but the requirements and concepts apply to any application. \n Drupal handles multisite by mapping the incoming domain and path to a  sites/X  directory, and then loading the  settings.php  file it finds in that directory.  If one isn\u2019t found, it uses  sites/default , which is the directory a single-site setup always uses.  Drupal\u2019s logic for mapping the request to a directory is a bit involved, but fortunately can be overridden by a lookup array produced by the  sites/sites.php  file.  That\u2019s where the core of the Platform.sh logic lives.  In our example it looks like this: \n $platformsh = new \\Platformsh\\ConfigReader\\Config();\nif (!$platformsh->inRuntime()) {\n  return;\n}\n\nforeach ($platformsh->getUpstreamRoutes($platformsh->applicationName) as $route) {\n  $host = parse_url($route['url'], PHP_URL_HOST);\n  if ($host !== FALSE) {\n\t$subdomain = substr($host, 0, strpos($host,'.'));\n\t$sites[$host] = $subdomain;\n  }\n}\n The first part loads the  Platform.sh Config Reader , which simplifies access to the environment variables.  In particular, the  getUpstreamRoutes()  call retrieves a filtered list of the routes defined in the  PLATFORM_ROUTES  environment variable, and specifically just those pointing at the currently running application.  (Recall that Platform.sh auto-generates various redirect routes for HTTP->HTTPS redirection and so forth; this function filters those out for you.) \n The routes in  PLATFORM_ROUTES  will, at this point, already be expanded to the full domain appropriate for the current environment.  This is where the \u201cany branch\u201d logic comes in.  The list of domains Drupal will respond to is built dynamically at runtime from the list of available routes. \n The domain list is then processed to build a lookup table of hostnames to just the left-most portion of the domain name.  In our example, the lookup table will have two entries: one pointing to  first  and one to  second .  If you were using some other pattern for your subsites, you would modify this code accordingly.  (And if you have no pattern at all, this code gets very ugly and manual.) \n Drupal will then include the  sites/first/settings.php  or  sites/second/settings.php  file as appropriate, and assume that its configuration is ready.  Both files must. therefore, exist, but in our case they\u2019re short stubs.  In a typical Drupal 8 site on Platform.sh,  settings.php  is fairly minimal and just includes  sites/default/settings.platformsh.php , which is where the Platform.sh-specific bits live. \n In a multisite configuration, we have opted to have a single, combined  sites/settings.platformsh.php  file that gets included by both/all sites.  However, that means setting a variable first so that the combined file knows what subsite is active.  The code for that looks like: \n $platformsh_subsite_id = basename(__DIR__);\n\n$config_directories[CONFIG_SYNC_DIRECTORY] = '../config/sync/' . $platformsh_subsite_id;\n\n// Automatic Platform.sh settings.\nif (file_exists($app_root . '/' . $site_path . '/../settings.platformsh.php')) {\n  include $app_root . '/' . $site_path . '/../settings.platformsh.php';\n}\n The \u201csubsite ID\u201d is the name of the directory, which fortuitously lines up perfectly with the subdomain name and with the database relationship.  (That\u2019s why we did that.)  We can then use that value when setting the  $config_directories  setting value, and it\u2019s also available in  settings.platformsh.php .  That way, the database configuration can use the  $platformsh_subsite_id  value to find the right database credentials for that site: \n $creds = $platformsh->credentials($platformsh_subsite_id);\nif ($creds) {\n  $databases['default']['default'] = [\n\t'driver' => $creds['scheme'],\n\t'database' => $creds['path'],\n\t'username' => $creds['username'],\n\t'password' => $creds['password'],\n\t'host' => $creds['host'],\n\t'port' => $creds['port'],\n\t'pdo' => [PDO::MYSQL_ATTR_COMPRESS => !empty($creds['query']['compression'])]\n  ];\n}\n The subsite ID can also be used in the Redis configuration as a cache prefix so that both sites aren\u2019t writing to the same cache pool and stomping all over each other\u2019s caches. \n $settings['cache_prefix'] = $platformsh_subsite_id . '_';\n And for splitting up the upload file directories: \n if (!isset($settings['file_public_path'])) {\n  $settings['file_public_path'] = 'files/' . $platformsh_subsite_id;\n}\n And so on.  See the  settings.platformsh.php  file in its entirety for the full story. \n The specifics will vary if you\u2019re using a system other than Drupal 8, or a different subsite pattern, or just prefer to handle it differently.  The basic model, though, is the same: \n \n Use the  PLATFORM_ROUTES  list to build a map from the dynamically generated, branch-specific domain to a known key. \n Use that key to connect the application to the right relationship endpoints.  The more regular and predictable the pattern of subsites, the easier this step is. \n Whenever possible, use separate databases on a single service. \n Remember that the application may have many other site-specific configuration values beyond just the database connection. \n \n Another option: launch a fleet \n If you really do have a good use case for a multisite application, that\u2019s the overall way to do it.  For Drupal 8 you can use our ready-made template.  For other applications you\u2019ll need to apply the same process. \n Alternatively, a frequently better approach is to set up a \u201cfleet\u201d of single-instance sites instead, using a common code base.   Managing a fleet on Platform.sh  is highly flexible, and there are many ways to do so, depending on your use case. \n Not sure what approach is best for your site?   Drop us a line , and our Solutions team can help you architect the best fit for your collection of sites. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "PHPun with FFI: Just enough C ", "url": "https://platform.sh/blog/2020/php-fun-with-ffi-just-enough-c/", "documentId": "73b95721aad9aea8f2ba880848b4fe0a4c860b5f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           PHPun with FFI: Just enough C \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         20 Feb 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         One of the new and exciting features of PHP 7.4 is its support for Foreign Function Interface, or FFI.  FFI provides a much easier way to load code from other, faster languages into PHP than writing an extension.  That said, easier doesn\u2019t mean trivial.  There is some work involved, and it\u2019s not appropriate in all situations. \n Anatomy of a C library \n The most common language for FFI integration is C, in part because of its ubiquity and in part because it\u2019s the most common language for people who want to squeeze the most performance out of their computer.  C doesn\u2019t work like PHP, though, so let\u2019s go over some basics of C. \n To be clear, this is not a tutorial on C.  It\u2019s a tutorial on building C, and covers just barely enough to get you running with PHP-FFI.   How Stuff Works  has a reasonable crash course on C itself if you are interested. \n C is a compiled language.  That means you write source code in one file and then run a compile command on it, which produces a separate, machine-readable-only file.  That\u2019s in contrast to PHP and other interpreted languages, which will compile the source file into executable code on the fly and keep it in memory, discarding it when done. \n C source code lives in a file that ends in  .c .  The code can be compiled into several different forms: \n \n A stand-alone executable, or \u201cbinary\u201d \n A static library, which can then be combined with other static libraries into a stand-alone executable \n A shared library, which can be loaded at runtime by a stand-alone executable or several stand-alone executables \n \n A single binary is the easiest to build, but for PHP-FFI we need a shared library.  We\u2019ll build both for demonstration purposes. \n Another aspect of C is that the source file alone is not enough.  C also has \u201cheader files,\u201d which end in  .h , that define the interface of a package.  It\u2019s a similar concept to interfaces in C, but more general.  The header file defines the functions and data types that a library exposes to other libraries.  PHP doesn\u2019t really have an equivalent, but it\u2019s somewhat akin to \u201cexports\u201d for Javascript modules; not every function or data type needs to be made public. \n Write your own \n Let\u2019s start with a simple header file to demonstrate how it all works.  Here\u2019s our initial  points.h : \n struct   point   { \n    int       x ; \n    int       y ; \n } ; \n\n double   distance ( struct   point   first ,   struct   point   second ) ; \n This file defines one  struct  called  point .  A struct is similar to a class, but it has no methods.  (Historically, a class is \u201ca struct with methods\u201d rather than the other way around.)  This struct is composed of 2 integers,  x  and  y . \n The header also declares one public function,  distance , that takes two  point  structs and returns a  double .  That\u2019s C-speak for \u201cdouble-precision floating point number,\u201d which PHP developers will recognize as \u201cfloat.\u201d  Just like a PHP interface it does not define the body, just the signature.  The point of the header file is to tell other code, \u201cThis is what I\u2019m going to look like when compiled.\u201d \n We\u2019ll come back to the header file when we talk about FFI, but that\u2019s enough for C. \n Now we need a file for the implementation of  distance : \n # include   \"points.h\" \n # include   <math.h> \n \n double   distance ( struct   point   first ,   struct   point   second )   { \n    double   a_squared   =   pow ( ( second . x   -   first . x ) ,   2 ) ; \n    double   b_squared   =   pow ( ( second . y   -   first . y ) ,   2 ) ; \n\n    return   sqrt ( a_squared   +   b_squared ) ; \n } \n The  #include  lines specify what dependencies this library has.  The first, in quotes, indicates the  points.h  file in the same directory.  That\u2019s what we wrote a moment ago.  The second,  <math.h> , means the  math.h  header file that\u2019s available in the system\u2019s standard library directory.  The standard C library\u2019s complex math functions are provided in a separate library from the baseline, because when they were first defined in the 1980s, math features on CPUs were expensive and rare, so people would often skip them and reimplement just the few bits they needed themselves.  That\u2019s no longer the case, but old standards die hard. \n The  distance  method computes the distance between two points using our old friend the Pythagorean Theorem.  The  pow()  and  sqrt()  functions come from the math library.  (Side note: The  sqrt()  function is pronounced \u201csquirt.\u201d  I will tolerate no disagreement on this point.) \n Finally, we have a third file that will make use of the  distance()  function.  A stand-alone executable needs to have a function named  main() , which is what gets executed when the program runs.  Ours looks like this: \n # include   <stdio.h> \n # include   \"./points.h\" \n \n int   main ( )   { \n\n    struct   point   p1 ; \n    struct   point   p2 ; \n\n    p1 . x   =   3 ; \n    p1 . y   =   4 ; \n    p2 . x   =   7 ; \n    p2 . y   =   9 ; \n\n    printf ( \" Distance is: %f \\n \\n \" ,   distance ( p1 ,   p2 ) ) ; \n\n    return   0 ; \n } \n It should be fairly familiar at this point.   #include <stdio.h>  provides the function signatures for the standard input/output library, while  #include \"./points.h\"  gives this file access to the functions from our points library.  The  main()  function creates two points and then computes and prints their distance.   printf()  is part of the  stdio  library and works basically the same as in PHP.  (Or rather, PHP\u2019s  printf()  is just a thin wrapper on C\u2019s.) \n Make  it build \n Now that we have our source files, we need to build them.  This is actually a multi-step process in C.  Of course, you\u2019ll need a C compiler and other build tools.  On a typical Linux system there is a package named  build-essentials  (or similar) that you can install that will include everything we mention here.  For other platforms consult their documentation as installing them yourself can be a bit involved. \n Because there\u2019s several steps involved we\u2019re going to use a \u201cmake file.\u201d  GNU Make is the original granddaddy task runner; Ant, Phing, Grunt, Gulp, DoIt, and the rest are all reimplementations of Make.  Make is itself a very thin layer on top of shell scripting, for better or worse.  (I would link you to its documentation, but unfortunately its documentation is shockingly arcane given how simple Make itself is.) \n We\u2019ll start with a file named  Makefile  (capitals matter) with a single \u201cbuild target\u201d: \n # Makefile\n\npoints.o: points.h points.c\n  gcc -c points.c\n That creates a single build target,  points.o , which depends on two files:  points.h  and  points.c .  It\u2019s typical for build targets to be the name of the file they produce.  Indented under that line is one or more shell commands to run.  (Note: The indentation  must  use a tab character, not spaces.  Them\u2019s the rules, I didn\u2019t make \u2018em.) \n gcc  is the  GNU Compiler Collection  and is the most widely used C compiler, but not the only.  It has about  14 million possible options , of which we\u2019re going to use about four.  The  -c  switch means \u201cCompile this file, but don\u2019t do any of the other steps.\u201d  The output of that command is a new file named (surprise!)  points.o .  This is the \u201cobject file,\u201d or the raw machine code version of  points.c . \n If we run  nm points.o , it will list the \u201csymbols\u201d in the object file.  ( nm  is short for \u201cname\u201d and dates from an era where memory was so tight and keyboards so hard to use that programmers didn\u2019t believe in vowels.) \n 0000000000000000 T distance\n             \tU _GLOBAL_OFFSET_TABLE_\n             \tU pow\n             \tU sqrt\n That lists four functions encoded into the object file: Our  distance  function has its source code included (hence the T), while  pow , sqrt`, and some internal bookkeeping are also mentioned but not defined internally.  That\u2019s an indication to the next step, \u201cHey, I need these things.\u201d \n We also want a target to compile the  main.c  file: \n main.o: main.c\n  gcc -c main.c\n Next we have a choice.  We can build a stand-alone executable for  main , or we can turn our points code into a shared library.  For demonstration\u2019s sake we\u2019ll do both: \n main: main.o points.o\n  gcc -o main main.o points.o -lm\n This  gcc  command reads \u201ccompile to the output ( -o ) file  main , using object files  main.o  and  points.o , and link against library  m .\u201d  The target  main  depends on the other targets  main.o  and  points.o  so will run those targets if necessary to produce those files if they don\u2019t already exist. \n The  m  warrants extra mention; it can be read as \u201cHere\u2019s another object file to include, named libm, in the standard library directory on the system.\u201d  The \u201clib\u201d part of the name gets dropped in the  -l  command.  (That\u2019s lowercase L, for those reading this in a sans-serif font.)   m  in this case is the C standard math library we mentioned before.  (See previous note about programmers in the 80s being allergic to typing full words.) \n The process of taking multiple object files and plugging them into each other is called \u201clinking.\u201d  When they\u2019re all plugged together into a single executable file, it\u2019s called \u201cstatic linking.\u201d \n We can now run  make main  at the command line.  That will: \n \n Compile  points.c  to a machine code file  points.o . \n Compile  main.c  to a machine code file  main.o . \n Superglue those two files together, along with the C standard math library, and wrap it up into a format that the operating system knows how to execute. \n \n Now running  ./main  on the command line should produce the following output: \n $ ./main\nDistance is: 6.403124\n Yay. \n There\u2019s two more steps we need, though.  First,  main  is not useful for PHP-FFI.  For that we need a shared library.  That will take another build target in  Makefile : \n points.so: points.o\n\t# Wrap the object file into a shared object.\n\tgcc -shared -o points.so points.o -lm\n That command reads, \u201cCreate a shared library, output to  points.so , by combining  points.o  and the lib m  library.\u201d  It\u2019s very similar to the command for main, but this time we produce a  .so  file, or \u201cShared Object\u201d file.  That takes the same code as the stand-alone binary, but packages it up differently with hooks for other C programs to load it into memory separately and access it on-demand.  It\u2019s the  .so  file that we\u2019ll need for PHP-FFI. \n There\u2019s also one other target we need to be complete, and that\u2019s  clean : \n clean:\n  rm -f *.o *.so main\n Any time you\u2019re compiling code, you want to be able to wipe out your compiled versions and start from a clean slate.  In this case we just  rm  all compiled files.  Make sure you add  .o  and  .so  to your  .gitignore  file, too, since you don\u2019t want to commit those to Git. \n Here\u2019s our final  Makefile  so far: \n points.o: points.h points.c\n  gcc -c points.c\n\npoints.so: points.o\n  gcc -shared -o points.so points.o -lm\n\nmain.o: main.c\n  gcc -c main.c\n\nmain: main.o points.o\n  gcc -o main main.o points.o -lm\n  chmod +x main\n\nclean:\n  rm -f *.o *.so main\n Onward to PHP! \n Building a C program can easily get vastly more involved and complex than this trivial example.  The goal today has been to get our feet wet and explain enough of the anatomy of a C library that we can start plugging it into PHP\u2019s FFI layer.  The most important parts in the end will be  points.so  and  points.h , both of which we\u2019ll need for PHP. \n We\u2019ll cover FFI in the  next chapter . \n (Many thanks to  Anthony Ferrara  for his help explaining how to build C.) \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Modern PHP Dev and Ops Field Guide - The Technical Perspective ", "url": "https://platform.sh/downloads/modern-php-dev-and-ops-field-guide/", "documentId": "d0b0430694d1e4e4c907b2588374611cfb3fc0c3", "text": "", "rank": 4},
{"site": "website", "section": "Blog", "title": "Migrating your applications made simple ", "url": "https://platform.sh/blog/2019/migrating-your-applications-made-simple/", "documentId": "c76e5b60b0a9d3ce0174a0081b4f8623157e6a13", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Migrating your applications made simple \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chad Carlson \n                  \n                   Technical Writer \n                  \n                  \n                 \n            \n          \n         \n         19 Dec 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh provides a host of useful tools that simplify the lives of the good people in DevOps. Features in development can have their own isolated environments, complete with exact copies of production data. Every time you create and test a feature, you\u2019re simultaneously testing the build and deploy process of your application. Great! \n \n   \n     You might be asking yourself how to get started with your existing application. Don\u2019t worry, migrating can be simple using the newest tools in our  management console : our new, streamlined Project Creation, with our all new Project Setup Wizard. \n   \n   \n   \n \n How to get started \n Create a free trial account  with Platform.sh. You\u2019ll have 30 days to test out a development project. By the end of that trial, you\u2019ll evaluate how our tools will fit in with and improve your existing workflow. We think you\u2019ll be over the moon. \n First, let\u2019s work with a local copy of your codebase in isolation. We\u2019ll use that as a starting point for now, but integrating with your existing remote repository (on  GitHub ,  GitLab , or  Bitbucket ) is just as simple once you\u2019ve gotten used to configuring an app on Platform.sh. \n Once you\u2019ve signed up, our Project Creation will allow you to set the code base for the soon-to-be-created project, and for that you have two options. First, you can initialize the project with one of our many official template projects, pre-configured to build and deploy smoothly on Platform.sh. \n While we won\u2019t select this option now, consulting a template project can be a great reference to guide you through the details of configuring your application. Who knows? Maybe we already have a maintained template that\u2019s a close match to what you\u2019re trying to deploy! Check out the  Templates Organization  to see. \n Since we\u2019re migrating your existing project select the first option on the left, \u201cNew Project,\u201d to create an empty remote repository on Platform.sh, ready to have your code added to it. \n \n In the final step, name the project and choose the region it will exist in. Select the region closest to where the bulk of your visitors are, then click the \u201cCreate project\u201d button. A prompt will appear that describes the features of your plan: it\u2019s size, price, as well as the number of development environments and users come with it. Once you\u2019ve read through these features, click \u201cContinue\u201d to initialize the project. \n The Project Setup Wizard \n With your first project created, you\u2019ll now have access to our new  management console , which is the front page of your project. On the left, you\u2019ll see some additional information that comes with your free trial: \n \n You\u2019ve selected the \u201cDevelopment\u201d plan and named it \u201cMy project.\u201d \n The project comes with four environments. Each branch of your repository can become its own live site, and the  master  branch is your production application environment. \n \n To help you migrate your project onto Platform.sh, we recently introduced a new tool to the management console to help simplify the process: the Project Setup Wizard. It will take you through the steps to configure your application, and it will be there as a guide each time you create a new project. \n \n Setting up the project \n After  installing the Platform.sh CLI , you\u2019ll have to add your public SSH key to your account to interact with the project repository. In the Project Setup Wizard, you can paste in the public key and move onto the next step. \n \n If you don\u2019t already have a public SSH key to add, follow the tutorial link at the bottom of the slide to do so. \n Since you have a local copy of your codebase, you\u2019ll need to set Platform.sh as a remote for it. The Project Setup Wizard provides the command: \n platform project:set-remote <project ID>\n where the  project ID  is the primary identifier for a project on Platform.sh. \n Now that your local repository knows about the project, it\u2019s time to start configuration. Every project needs at least three configuration files to deploy on Platform.sh: \n \n .platform/services.yaml  Defines the services the application will have access to \n .platform.app.yaml  Configures how the application will build and deploy \n .platform/routes.yaml  Configures how requests will be directed to the application \n \n The Project Setup Wizard will take you through the steps to configure each of these files individually, so create empty ones directly in your project root from the onset. \n mkdir .platform  &&  touch .platform/routes.yaml  &&  touch .platform/services.yaml  &&  touch .platform.app.yaml\n Configuring services \n Now, let\u2019s say you want to migrate a ExpressJS app, one that uses PostgreSQL as the primary database. The first configuration step enables you to interactively select PostgreSQL configuration for your  services.yaml  file: \n \n You can copy the content of the generated file directly into your  .platform/services.yaml . \n # The name given to the PostgreSQL service (lowercase alphanumeric only). \n dbpostgres : \n      # The type of your service (postgresql), which uses the format \n      # 'type:version'. Be sure to consult the PostgreSQL documentation \n      # (https://docs.platform.sh/configuration/services/postgresql.html#supported-versions) \n      # when choosing a version. If you specify a version number that isn\u2019t available, \n      # the CLI will return an error. \n      type :   postgresql : 11 \n      # The disk attribute is the size of the persistent disk (in MB) allocated to the service. \n      disk :   256 \n If PostgreSQL is the only service your application requires, then your basic service configuration is complete. Of course, depending on the service, some additional fine-grained configuration is also available and can be found for each of our services in the  public documentation . \n Configuring your application \n The next thing the Project Setup Wizard will help you configure is the  .platform.app.yaml  file. Once again, there\u2019s a dropdown bar that will take care of the first step: selecting a runtime environment for the application container. \n \n The Project Setup Wizard automatically chooses the most recently supported version of the runtime for your application (named  app ). It also matches your service configuration from the previous step to connect the PostgreSQL database to the application using the  relationship  key. \n Depending on the language you choose, the Wizard may also include a key by default that you can use to control how your build and deploy processes run on Platform.sh:  hooks . That key will then contain two possible attributes: \n \n A  build  hook , that defines what you want downloaded to build the application while the file system is writable. \n A  deploy  hook  that\u2019s run after the application has been started, but before it\u2019s started accepting requests. The filesystem is read-only at this point, but services are accessible. \n \n One of the other important concepts the Project Setup Wizard introduces you to through this file is\n mounts . During the build phase, you can download and save anything your application requires to build. But once it starts its deploy phase, the file system becomes read-only. If your deployed application requires write access at runtime, you can define mounts for those directories. If your app doesn\u2019t require write access,  mounts  can be removed. \n Finally, the  web  key configures how the application is exposed. For a Node.js application, this defaults to directly serving the entry point  index.js .Since our simple Node.js application doesn\u2019t require hooks at the moment, we can remove that section and use the rest of the generated configuration file: \n # The name of this app. Must be unique within a project. \n name :   app \n \n # The runtime the application uses. The 'type' key defines the base container \n # image that will be used to run the application. There is a separate base \n # container image for each primary language for the application, \n # in multiple versions. Check the Node.js documentation \n # (https://docs.platform.sh/languages/nodejs.html#supported-versions) \n # to find the supported versions for the 'nodejs' type. \n type :   'nodejs:10' \n \n # The following block defines a single writable directory, 'web/uploads' \n # The 'source' specifies where the writable mount is. The 'local' source \n # indicates that the mount point will point to a local directory on the \n # application container. The 'source_path' specifies the subdirectory \n # from within the source that the mount should point at. \n mounts : \n    'web/uploads' : \n      source :   local \n      source_path :   uploads \n \n # The relationships of the application with services or other applications. \n # \n # The left-hand side is the name of the relationship as it will be exposed \n # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand \n # side is in the form '<service name>:<endpoint name>'. \n relationships : \n      postgresdatabase :   'dbpostgres:postgresql' \n \n # The 'web' key defines a single web instance container running a single web server \n # process (currently Nginx), behind which runs your application. It configures \n # the web server, including what requests should be served directly \n # (such as static files) and which should be passed to your application. \n # DOCS: https://docs.platform.sh/configuration/app/web.html \n web : \n      # The 'commands' key defines the command to launch the application. \n      # DOCS: https://docs.platform.sh/configuration/app/web.html#commands \n      commands : \n          # The 'start' key specifies the command to use to launch your application. \n          # If the command specified by the 'start' key terminates it will \n          # be restarted automatically. \n          start :   node   index.js \n Configuring routes \n The final configuration file that needs to be written for your application to deploy is the\n routes.yaml  file. From this file, you can configure subdomains,  wildcard routes , and the  caching  for every route of your application. \n By default, the Project Setup Wizard gets you started with the simplest route configuration, one that sets up an upstream and redirect route for a single primary application,  app . \n \n Pushing to Platform.sh \n Now that all of the configuration files have been written, you can commit and push them to the remote project on Platform.sh. \n git push -u platform master\n When the build has completed and the application has been deployed, you can visit the live site using the CLI command: \n platform url\n That\u2019s it! Your entire codebase has been migrated to a project, and configured to run on Platform.sh. If your application has failed to deploy, there may still be some additional configuration steps specific to your application that have to be included. Make sure to visit the  documentation  and consult one of our  template projects  to determine what changes may need to be made. \n Data and files \n Now that the codebase has been deployed on Platform.sh, it isn\u2019t a successful migration until your uncommitted data goes with it. The Project Setup Wizard will take you through the commands you\u2019ll need to import it all. \n \n Create a PostgreSQL dump, and import it to the  dbpostgres  service with the command: \n platform sql < my_database_snapshot.sql\n If your application requires write-access\u2014and you configured mounts that need to contain additional files\u2014the last step of the Project Setup Wizard provides the command to do so: \n platform mount:upload --mount web/uploads --source ./uploads\n Here, files located in the  uploads  subdirectory of the local project are  imported  into the  web/uploads  mount. \n That\u2019s it! As you followed through the Project Setup Wizard steps, we trust migrating your application to Platform.sh has been that much easier. \n Now, feel free to play around a bit with your new project. Create a new active environment by pushing a local branch to Platform.sh and activating it using the CLI command  platform environment:activate <branch_name> . You\u2019ll see that an exact copy of all of your data is available in the environment, despite being completely isolated from Master. You can use development environments to update your version of PostgreSQL by committing a change to your  services.yaml  file and running your tests on that environment. \n If you like what you see, you can apply your configuration changes to a pull request on your primary  GitHub ,  GitLab , or  Bitbucket  repository. Setup the integration linked above, run your tests, and merge. \n Now you\u2019ve fully migrated! From now on, every subsequent pull request can be its own isolated live environment, complete with an exact copy of all of your production data. Need to upgrade your database? Edit your  services.yaml  file for the new version you want, open a pull request, and an environment will be deployed to test the change. \n Platform.sh isn\u2019t just hosting, after all, but a complete DevOps tooling platform. It\u2019s been engineered to leverage Git from the start. You don\u2019t have to spend any time pulling production data to test a new feature because exact copies are automatically created as a consequence of branching. Your configuration is committed, so onboarding new developers takes days instead of weeks\u2014all they need to do is look at the codebase, and they can view or update the infrastructure with another commit. Test the new environment, and when it passes your QA process, you can be confident the app will run the same way when merged into production (even on Friday). \n These tools will save you time and headaches, so you can focus your energies on your application in the long run. So, welcome to Platform.sh: deploy fast, deploy often, deploy Friday. \n Resources \n Now that you\u2019ve migrated, check out the number of resources provided by Platform.sh that will help you leverage all we have to offer: \n \n Create a free trial account \n Public Documentation \n Platform.sh Community \n Public Slack channel \n Project Templates \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "What\u2019s new with Jakarta NoSQL? (Part II) ", "url": "https://platform.sh/blog/2020/what-is-new-with-jakarta-nosql-part-ii/", "documentId": "ae814fcde7049b0f5e62a87ce9ee45e250f1170c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           What\u2019s new with Jakarta NoSQL? (Part II) \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         08 Jan 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Moving to cloud-native \n Cloud computing has brought many methodologies and techniques that have revolutionized both the business and technical worlds. Among the terms that came up was cloud-native. To meet and cover these expectations in the Java universe, Jakarta EE emerged. The purpose of this post is to talk about the concept of cloud-native and to run an application with this concept using the latest milestone version of Jakarta EE NoSQL. \n What\u2019s cloud-native? \n Like any new concept, there are several concepts with the same name; if you read books or articles about cloud-native, you may not find consensus about it. For example: \n \n   \n     Cloud-native is an approach to building and running applications that exploits the advantages of the cloud computing model.\n Pivotal \n   \n   \n   \n \n\n \n   \n     Cloud-native is a different way of thinking and reasoning about software systems. It embodies the following concepts: powered by disposable infrastructure, composed of bounded, scales globally, embraces disposable architecture.\n Architecting Cloud Native Applications: Design high-performing and cost-effective applications for the cloud \n   \n   \n   \n \n\n \n   \n     In general usage, \u201ccloud-native\u201d is an approach to building and running applications that exploits the advantages of the cloud-computing delivery model. \u201cCloud-native\u201d is about how applications are created and deployed, not where.\n Infoworld \n   \n   \n   \n \n\n In a mutual consensus around the definitions from several articles, we can say that  cloud-native  is a term used to describe container-based environments. So cloud-native isn\u2019t related to specific programming languages or frameworks or even to a cloud provider company, but to  containers . \n What are cloud-native best practices? \n When we start to learn a new concept, we usually run to read about best practices to avoid mistakes and any  code smell . With Object-Oriented Programming ( OOP ), we have the  design patterns from the gang of four , in Java we have  Effective Java , and when talking about architecture, we have both  Clean Code  and  Clean Architecture . So the question is: what are the best practices for cloud-native? \n As far as we know, there aren\u2019t best practices related specifically to cloud-native. But since the  cloud is close to Agile methodology , there are several practices we can leverage to have a healthy, pain-free application: \n \n Manifesto for Agile Software Development \n Continuous integration \n Continuous delivery \n Domain-Driven Design \n \n The most well-known practices related to any application that includes cloud computing are inspired by Martin Fowler\u2019s  Patterns of Enterprise Application Architecture and Refactoring . \n The Twelve-Factor App \n \n Codebase : One codebase tracked in revision control, many deploys \n Dependencies : Explicitly declare and isolate dependencies \n Config : Store config in the environment \n Backing services : Treat backing services as attached resources \n Build, release, run : Strictly separate build and run stages \n Processes : Execute the app as one or more stateless processes \n Port binding : Export services via port binding \n Concurrency : Scale out via the process model \n Disposability : Maximize robustness with fast startup and graceful shutdown \n Dev/prod parity : Keep development, staging, and production as similar as possible \n Logs : Treat logs as event streams \n Admin processes : Run admin/management tasks as one-off processes \n \n In summary, there aren\u2019t specific best practices for cloud-native yet, but there are patterns from Agile, microservices, and the twelve-factor app that are useful to follow. \n Back to the code \n In the introduction we explained in detail what cloud-native means, now let\u2019s return to our application and convert it as a cloud-native application. In the first post, we explained the model, the entity, and how Jakarta NoSQL works. So we\u2019ll take it from here and use the easiest way to handle queries with NoSQL and MongoDB with a repository. \n \n import   jakarta.nosql.mapping.Column ; \n import   jakarta.nosql.mapping.Entity ; \n import   jakarta.nosql.mapping.Id ; \n\n import   javax.json.bind.annotation.JsonbVisibility ; \n import   java.io.Serializable ; \n import   java.util.Objects ; \n import   java.util.Set ; \n\n @Entity \n @JsonbVisibility ( FieldPropertyVisibilityStrategy . class ) \n public   class   Hero   implements   Serializable   { \n\n\t @Id \n\t private   String   name ; \n\n\t @Column \n\t private   Integer   age ; \n\n\t @Column \n\t private   Set < String >   powers ; \n\n } \n\n\n import   jakarta.nosql.mapping.Page ; \n import   jakarta.nosql.mapping.Pagination ; \n import   jakarta.nosql.mapping.Repository ; \n\n import   java.util.stream.Stream ; \n\n public   interface   HeroRepository   extends   Repository < Hero ,   String >   { \n\n\t Stream < Hero >   findAll ( ) ; \n\n\t Page < Hero >   findAll ( Pagination   pagination ) ; \n\n\t Stream < Hero >   findByPowersIn ( String   powers ) ; \n\n\t Stream < Hero >   findByAgeGreaterThan ( Integer   age ) ; \n\n\t Stream < Hero >   findByAgeLessThan ( Integer   age ) ; \n } \n\n To make these services available, we\u2019ll create a rest application with JAX-RS as a resource class. \n \n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.inject.Inject ; \n import   javax.ws.rs.Consumes ; \n import   javax.ws.rs.DELETE ; \n import   javax.ws.rs.GET ; \n import   javax.ws.rs.POST ; \n import   javax.ws.rs.PUT ; \n import   javax.ws.rs.Path ; \n import   javax.ws.rs.PathParam ; \n import   javax.ws.rs.Produces ; \n import   javax.ws.rs.WebApplicationException ; \n import   javax.ws.rs.core.MediaType ; \n import   javax.ws.rs.core.Response ; \n import   java.util.List ; \n import   java.util.function.Supplier ; \n\n import static   java.util.stream.Collectors.toList ; \n\n @ApplicationScoped \n @Path ( \"heroes\" ) \n @Produces ( MediaType . APPLICATION_JSON ) \n @Consumes ( MediaType . APPLICATION_JSON ) \n public   class   HeroResource   { \n\n\t private   static   final   Supplier < WebApplicationException >   NOT_FOUND   = \n        \t ( )   - >   new   WebApplicationException ( Response . Status . NOT_FOUND ) ; \n\n\t @Inject \n\t private   HeroRepository   repository ; \n\n\t @GET \n\t public   List < Hero >   findAll ( )   { \n    \t return   repository . findAll ( ) \n            \t . collect ( toList ( ) ) ; \n\t } \n\n\t @GET \n\t @Path ( \"/{id}\" ) \n\t public   Hero   findById ( @PathParam ( \"id\" )   String   id )   { \n    \t return   repository . findById ( id ) . orElseThrow ( NOT_FOUND ) ; \n\t } \n\n\t @GET \n\t @Path ( \"seniors/{age}\" ) \n\t public   List < Hero >   findByOlder ( @PathParam ( \"age\" )   Integer   age )   { \n    \t return   repository . findByAgeGreaterThan ( age ) \n            \t . collect ( toList ( ) ) ; \n\t } \n\n\t @GET \n\t @Path ( \"youngs/{age}\" ) \n\t public   List < Hero >   findByYounger ( @PathParam ( \"age\" )   Integer   age )   { \n    \t return   repository . findByAgeLessThan ( age ) \n            \t . collect ( toList ( ) ) ; \n\t } \n\n\t @POST \n\t public   void   save ( Hero   hero )   { \n    \t repository . save ( hero ) ; \n\t } \n\n\t @PUT \n\t @Path ( \"/{id}\" ) \n\t public   void   update ( @PathParam ( \"id\" )   String   id ,   Hero   hero )   { \n    \t repository . save ( hero ) ; \n\t } \n\n\t @Path ( \"/{id}\" ) \n\t @DELETE \n\t public   void   delete ( @PathParam ( \"id\" )   String   name )   { \n    \t repository . deleteById ( name ) ; \n\t } \n } \n\n\n The application is ready; the last step we\u2019ll create is the configuration class that allows the connection with MongoDB. This is simple, we\u2019ll use  Eclipse MicroProfile Configuration  that has tight integration capabilities with Eclipse JNoSQL, the reference implementation of Jakarta NoSQL. The Eclipse MicroProfile Config is a solution to externalize configuration from Java applications and makes the  third factor  easy to follow. \n import   jakarta.nosql.document.DocumentCollectionManager ; \n import   org.eclipse.microprofile.config.inject.ConfigProperty ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.enterprise.inject.Disposes ; \n import   javax.enterprise.inject.Produces ; \n import   javax.inject.Inject ; \n\n @ApplicationScoped \n class   DocumentManagerProducer   { \n\n\t @Inject \n\t @ConfigProperty ( name   =   \"document\" ) \n\t private   DocumentCollectionManager   manager ; \n\n\t @Produces \n\t public   DocumentCollectionManager   getManager ( )   { \n    \t return   manager ; \n\t } \n\n\t public   void   destroy ( @Disposes   DocumentCollectionManager   manager )   { \n    \t manager . close ( ) ; \n\t } \n } \n\n\n The current configuration of an application can be accessed via ConfigProvider#getConfig(). \n A Config consists of the information collected from the registered org.eclipse.microprofile.config.spi.ConfigSource s. These ConfigSource s get sorted according to their ordinal. That way we can overwrite the configuration with lower importance from outside. \n By default there are 3 ConfigSources: \n \n System.getProperties() (ordinal=400) \n System.getenv() (ordinal=300) \n all META-INF/microprofile-config.properties files on the ClassPath. (default ordinal=100, separately configurable via a config_ordinal property inside each file) \n \n Therefore, the default values can be specified in the above files packaged with the application and the value can be overwritten later for each deployment. A higher ordinal number takes precedence over a lower number. \n That implies we can have the configuration for the local environment as a file, one to test also as a file, and finally we can override all this information when we move it to the cloud. \n document=document\ndocument.database=conferences\ndocument.settings.jakarta.nosql.host=localhost:27017\ndocument.provider=org.eclipse.jnosql.diana.mongodb.document.MongoDBDocumentConfiguration\n We now have a local configuration, so let\u2019s move our application with Jakarta EE based on the cloud-native approach. To make it really easy, we\u2019ll use a Platform-as-a-Service (PaaS) because you can move your application  container-based  style in cloud through  infrastructure as code  (IaC). \n Infrastructure as code , or programmable infrastructure, means writing code, which can be done using a high-level language or any descriptive language to manage configurations and automate the provisioning of the infrastructure in addition to deployments. \n Platform.sh structure \n The Java application is ready to go! The next step is to set the Platform.sh files required to manage and deploy the application. In our  first Java post , we took a deep dive into each of these three files in detail: \n \n One Router (.platform/routes.yaml). Platform.sh allows you to define the  routes . \n Zero or more service containers (.platform/services.yaml). Platform.sh allows you to completely define and configure the topology and services you want to use on your  project . \n One or more application containers (.platform.app.yaml). You control your application and the way it will be built and deployed on Platform.sh via a  single configuration file . \n \n The file that will change on this post is the  service file , allowing you to define a database, search engine, cache, and so on. For this project, we\u2019ll set  MongoDB  instead of  MySQL . \n mongodb : \n    type :   mongodb : 3.6 \n    disk :   1024 \n To read the environment configuration, Platform.sh supports the  configuration-reader  that allows easy integration. Platform.sh also supports an array frameworks and languages, including Java. In this post, we\u2019ll override the  MongoDB  configuration with the Java properties that will add transparency to the application\u2014thanks to the Eclipse MicroProfile Configuration. With these files ready and pushed to the master, Platform.sh will  create a set of containers within a cluster . \n # This file describes an application. You can have multiple applications \n # in the same project. \n # \n # See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html \n \n # The name of this app. Must be unique within a project. \n name :   app \n \n # The runtime the application uses. \n type :   \"java:8\" \n \n disk :   800 \n \n # The hooks executed at various points in the lifecycle of the application. \n hooks : \n    build :   |\n     wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 \n    mv   jq-linux64   jq \n    chmod   +x   jq \n    mvn   -U   -DskipTests   clean   package   payara-micro : bundle \n \n # The relationships of the application with services or other applications. \n # \n # The left-hand side is the name of the relationship as it will be exposed \n # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand \n # side is in the form `<service name>:<endpoint name>`. \n relationships : \n    mongodb :   'mongodb:mongodb' \n \n # The configuration of app when it is exposed to the web. \n web : \n    commands : \n      start :   |\n         export MONGO_PORT=`echo $PLATFORM_RELATIONSHIPS|base64 -d|json_pp|./jq -r \".mongodb[0].port\"` \n        export   MONGO_HOST=`echo   $PLATFORM_RELATIONSHIPS|base64   -d|json_pp|./jq   -r   \".mongodb[0].host\" ` \n        export   MONGO_ADDRESS= \"${MONGO_HOST}:${MONGO_PORT}\" \n        export   MONGO_PASSWORD=`echo   $PLATFORM_RELATIONSHIPS|base64   -d|json_pp|./jq   -r   \".mongodb[0].password\" ` \n        export   MONGO_USER=`echo   $PLATFORM_RELATIONSHIPS|base64   -d|json_pp|./jq   -r   \".mongodb[0].username\" ` \n        export   MONGO_DATABASE=`echo   $PLATFORM_RELATIONSHIPS|base64   -d|json_pp|./jq   -r   \".mongodb[0].path\" ` \n        java   -jar   -Xmx1024m   -Ddocument.settings.jakarta.nosql.host=$MONGO_ADDRESS   \\ \n        -Ddocument.database=$MONGO_DATABASE   -Ddocument.settings.jakarta.nosql.user=$MONGO_USER   \\ \n        -Ddocument.settings.jakarta.nosql.password=$MONGO_PASSWORD   \\ \n        -Ddocument.settings.mongodb.authentication.source=$MONGO_DATABASE   \\ \n        target/heroes-microbundle.jar   --port   $PORT \n The application is now ready, so it\u2019s time to move it to the cloud with Platform.sh using the following  steps : \n \n Create a new  free trial account . \n Sign up with a new username and password, or login using a current GitHub, Bitbucket, or Google account. If you use a third-party login, you\u2019ll be able to set a password for your Platform.sh account later. \n Select the region of the world where your site should live. \n Select the blank template. \n \n After this wizard, Platform.sh will provision the whole infrastructure to you, and it will offer your project a remote Git repository. The Platform.sh Git-driven infrastructure means it will automatically manage everything your application needs to push it to the master remote repository. After you set up your  SSH keys , you only need to write your code\u2014including a few YAML files that specify your desired infrastructure\u2014then commit it to Git, and push. \n git remote add platform <platform.sh@gitrepository>\ngit commit -m \"Initial project\"\ngit push -u platform master\n In this post, we talked about the  principles and best practices around cloud-native , which is still an area that needs improvement when we\u2019re talking about a new software development technique. Cloud facilitates software development, and we can see an application running quite simply through Platform.sh and integrated with Jakarta EE. All to say, it\u2019s a great time (happy new year!) to bring your project to a mature cloud PaaS like Platform.sh. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Scale your application with Spring and RabbitMQ \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Go[lang] forth and deploy ", "url": "https://platform.sh/blog/golang-forth-and-deploy/", "documentId": "b52b025dfb8d9a0372deea23a6da09389f395911", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Go[lang] forth and deploy \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         29 Oct 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh aims to support your applications, whatever they may be.  We\u2019ve supported PHP, Python, Ruby, and Node.js for quite some time now.  Golang support has also been available as a beta for over a year. \n Why just beta all this time?  It worked and ran fine, but there was a catch: The bane of every Go developer\u2019s existence, the GOPATH.  Making the GOPATH design play nicely with a build pipeline that focused on your code, rather than on code in some fixed parent directory, wasn\u2019t easy.  It was possible with some intricate Makefile dancing but it was never something we really felt comfortable calling fully supported. \n Fortunately, the new release of  Go 1.11  has solved that problem for us.  Amongst its other improvements are support for  Go modules .  The link there has far more detail for Go developers, but in short Go dependencies can now be managed in almost the same way as in other dependecy-managed languages like PHP (Composer), Ruby (Bundler), or Node.js (npm).  No GOPATH required! \n Specifically: \n \n Dependencies can be specified in a separate file ( go.mod ), and don\u2019t have to be checked into Git. \n Dependencies can be downloaded on the fly during build, reliably and repeatably. \n Everything is local-directory relative.  No more GOPATH! \n Compiling Go is still embarrassingly fast. \n \n I'm sold, how do I use it? \n It\u2019s surprisingly easy now. \n First, include a  go.mod  file in your project.  You can create one with  go mod init  and then modify it yourself or have Go populate it for you based on your source code. \n When you run  go build  locally, it will generate a  go.sum  file that is a hash of the code you\u2019ve downloaded for later validation checks.   Add both the  go.mod  file and  go.sum  file to Git . \n Now you can setup your  .platform.app.yaml  file like so: \n name :   app \n type :   golang : 1.11 \n \n hooks : \n      build :   |\n           go build -o bin/app \n \n disk :   1024 \n \n web : \n      upstream : \n          socket_family :   tcp \n          protocol :   http \n      commands : \n          start :   ./bin/app \n \n      locations : \n          / : \n              allow :   false \n              passthru :   true \n That configuration says: \n \n Use the Go 1.11 container image. \n Use  go build  as normal in the build step; because the Go modules files are in Git it will detect them and use those to locate and download dependencies, then stick the resulting binary at  bin/app .  (Feel free to change that output location if you want.) \n At runtime, start the Go application we build and forward all requests of any kind to it. \n \n If the Go app stops for any reason, Platform.sh will automatically restart it. \n That\u2019s it that\u2019s all, you now have a working Go app on Platform.sh. \n But wait, how do I wire Go to Platform.sh? \n You do need to tell your HTTP server in Go what port to listen on.  Fortunately, that\u2019s easy!  We have a  Go helper library  available (which is now super easy to install with Go modules) that gives you a clean struct to access all of the Platform.sh-specific environment information you need, including the port.  If you\u2019re using the  net/http  web server from the standard library, it\u2019s as simple as: \n package   main \n\n import   ( \n\t \"net/http\" \n\n\t psh   \"github.com/platformsh/gohelper\" \n ) \n\n func   main ( )   { \n\t p ,   err   :=   psh . NewPlatformInfo ( ) \n\t if   err   !=   nil   { \n\t\t panic ( \"Not in a Platform.sh Environment.\" ) \n\t } \n\n\t http . HandleFunc ( \"/bar\" ,   func ( w   http . ResponseWriter ,   r   * http . Request )   { \n\t\t // ...\n \t } ) \n\n\t // Note the Port value used here.\n \t http . ListenAndServe ( \":\" + p . Port ,   nil ) \n } \n And now your Go server will accept requests forwarded from Platform.sh.  Beyond that, the sky\u2019s the limit. \n Welcome, Gophers, to the joys of safely deploying on Friday! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "With Platform.sh, Commerce Guys announces Cloud 2.0! ", "url": "https://platform.sh/2014/05/commerce-guys-announce-cloud-2-0/", "documentId": "610cad422c47d6b3fd170c30fc8a1db0a6fc32ea", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           With Platform.sh, Commerce Guys announces Cloud 2.0! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Antoine Crochet-Damais \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         12 May 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         This is the promise of Platform.sh. Based on the Amazon cloud, this PaaS in container should surpass the agility of virtualization. \n Commerce Guys, developers of Drupal Commerce, the eCommerce based website management system based on Drupal CMS, prepares to unveil a service cloud platform (PaaS) in a whole new category. Named Platform.sh, this offer, hosted on Amazon Web Services, is distinguished by two innovations. \n \n The first innovation is that the continuous integration infrastructure is based on the Git code repositories management tool, which allows you to clone a site or a web application with the associated software stack (configuration files, database, web server, etc.), in a few seconds. \n \u201cIt is possible to clone as necessary, which provides a great flexibility for development and testing\u201d, explains Fr\u00e9d\u00e9ric Plais, co-founder of Commerce Guys. \u201cSo by having the ability to create multiple branches, we can for example create a clone of a project in response to an urgent change request, even if an important revision is already in preparation within the main code branch\u201d. Git is there to manage the code in a consistent way, and Platform.sh controls access permissions to any particular part of the project. \n The second innovation of Platform.sh is deeper. Beyond the virtualization that makes up the usual flexible PaaS and IaaS offerings, Platform.sh utilizes infrastructure containers and is inspired directly from the open source Docker project. Its logic? Each layer of the site (business logic, database, etc.) can be placed into a container, which can then be deployed on a cluster of instances, with the ability of executing several containers on a single instance! \u201cThe infrastructure in the containers represents the second generation of the cloud. It allows a much more granular, adaptive architecture, and an orchestration of service-by-service management\u201d, summarizes Fr\u00e9d\u00e9ric Plais. \n This promises much shorter development times. \n For the time being, Platform.sh has been optimized for Drupal, Drupal Commerce and the PHP Symfony framework (which will be incorporated into Drupal 8). But the objective of Commerce Guys is to extend its offer to other tools. For that purpose, the company intends to call on its partners, whom include Capgemini and Smile. The integration of an integrated code editor is, for example, being considered. \n \u201cFrom testing with our partners, we believe that Platform.sh can save 25% in development time,\u201d said Fr\u00e9d\u00e9ric Plais. Designed in collaboration with the Amazon Web Services (AWS) team, the solution represents 8 to 10 man-years of development. \u201cOver 2013, we put 75% of our investment into R&D \u201c, says the co-founder. \n Platform.sh will be officially launched on Tuesday, 13 May, at the AWS Summit 2014 in Paris. The solution will be available in two versions on the Amazon Web Services Marketplace: a basic version and an Enterprise version that is designed for websites requiring triple redundancy. Platform Enterprise will appeal to those who need to host their site in geographically different data centres (or zones of availability) from Amazon. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Converting Your Existing Platform.sh Development Environment to a Makefile ", "url": "https://platform.sh/blog/2014/05/12/convert-to-makefile/", "documentId": "1ab78f6bdfd15e8ccdf8d5aac474c0eb8003fafc", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Converting Your Existing Platform.sh Development Environment to a Makefile \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Nicholas Vahalik \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         12 May 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \n One of the most exciting features of Platform.sh is its ability to use Drush makefiles to rapidly prototype sites. By default, new projects can start with a makefile that will automatically add Commerce Kickstart or vanilla Drupal. Then, using the makefile, you can add new modules, themes, and libraries, by simply adding a few lines to the makefile and commiting. When you push the changes to your platform, the entire site will be rebuilt. Plus, whenever you\u2019re in \u201cmakefile mode\u201d any extra files that are in the root of the respository get pushed into sites/all/default. So if you have any custom modules, you can just stick them in\u00a0  modules/  \u00a0and they\u2019ll end up in\u00a0  sites/all/default/modules  . This can make your code bases not only small, but far more manageable. You can convert a site that isn\u2019t a makefile into a makefile. And in this post, that\u2019s exactly what we\u2019re going to do. \n NB: \u00a0This guide was written assuming that the Platform.sh CLI tool_ and\u00a0 Drush \u00a0are installed and that the site to be converted is a single site (not a multi-site) and that it is currently in a Platform.sh environment. Ideally, this entire process would take place in a branch. You can find\u00a0 more information on Platform.sh \u00a0or\u00a0 start a Platform.sh Project . \n \n Process Outline \n \n\t Backup your database. \n\t Check for modified modules. \n\t Generate Drush makefile. \n\t Clear out the base files. \n\t Move custom modules and themes. \n\t Migrate the contents of files. \n\t Commit the changes. \n\t Rebuild the registry. \n \n Backup Your Database \n First things first, your database needs to be backed up. The reality is that this process can result in a\u00a0 completely broken \u00a0site. Since all of the modules are being moved, Drupal won\u2019t know where anything is. Without a backup, you could be completely hosed. To backup your site, just use Drush\u2019s\u00a0 archive-dump feature . \n \n What about disabling modules? \u00a0Great question! In the past, to move a module you could just disable a module, move it, and then re-enable it. For live sites, it may not be possible to disable each and every module. This is especially true for Commerce modules which will complain if you try to disable them once data has been added. The process outlined here doesn\u2019t require that you do that, but if you can disable all of your modules, then give it a go. \n \n Check For Modified Modules \n Since the makefile build process will grab pristine copies of modules, any modifications that have been made will be erased. In order to make sure that the site doesn\u2019t break once we convert, it\u2019s imperative that each module be checked for modifications. Luckly, the\u00a0 Hacked! module \u00a0can save a\u00a0 lot \u00a0of time here by scanning every module on the site to see if there are changes. While this works great for modules that are downloaded directly from Drupal.org, modules that are pulled in from remote Git repositories won\u2019t work properly. Regardless, this could take the job of checking every module from taking days to hours (or minutes). \n For modules that pass, nothing else is required. Modules that do not pass will need some extra TLC. Let\u2019s go through the process now. \n Install Hacked! \n So, in order for Hacked! to work, it needs to added to your site ( there is a patch to run it outside of a working install, though ). It doesn\u2019t need to be activated, but it will need to be available. You can install Hacked! by running the following command: \n \n $ drush dl hacked\n \n \n Once it is downloaded, you need to get a report of the modules that are installed on the site. To generate the report, use this command from the project root directory: \n \n $ drush hlp\n \n \n You should see output that looks like the following: \n \n Rebuilding Hacked! report\n...\nFinished processing: Views Slideshow                                    [ok]\nFinished processing: Voting API                                         [ok]\nFinished processing: Webform                                            [ok]\nWD hacked: Could not download project: Spotlight                        [error]\nWD hacked: Could not hash remote project: Spotlight                     [error]\nWD hacked: Could not hash local project: Spotlight                      [error]\nFinished processing: Spotlight                                          [ok]\nDone.\nTitle             Name             Version         Status     Changed  Deleted\nSpotlight         spotlight        7.x-1           Unchecked  0        0\nPathauto          pathauto         7.x-1.2         Changed    2        0\nAddress Field     addressfield     7.x-1.0-beta5   Unchanged  0        0\n...\n \n \n The key information here is located in that fourth column labeled\u00a0 Status . Anything that is labled as\u00a0 Unchanged \u00a0should be good to go with no further work required. However, anything that says\u00a0 Changed \u00a0or\u00a0 Unchecked \u00a0requires further digging. \n Changed (Hacked!) Modules \n It\u2019s not uncommon for someone to be developing a site and come across a bug and for a patch to be applied that resolves said bug. Many people feel okay with using a patch applied to the last recommended (i.e. not -dev, -rc, or -beta) release. What matters is that it does happen. Also, people change stuff. Many times a bug might be fixed by a developer without having looked at the issue queue. At any rate, to find out what has been changed, run the following command (substituting pathauto with any module that showed up as changed): \n \n drush hlp pathauto\n \n \n The output will be a patch. This patch simply lists the changes between the version you have and the version it says it is (in the module\u2019s .info file). \n When you have a changed file, the right thing to do is to find out what is going on and take one of the following next steps: \n \n\t Identify the patch(es) involved and write them down. When building the makefile, there is a place to add patches that can be applied to each module. So if the patches are already in the issue queue but haven\u2019t been added to the repository, make a list of them so that they can be added to the makefile. \n\t Update the module. If the module is out of date, consider updating the module so that the patches aren\u2019t required anymore. This could require some more testing, but it is cleaner in the long run. \n\t If the patches fix a bug that is in the issue queue and doesn\u2019t have a patch (or doesn\u2019t exist), upload the patch to the issue queue and create the bug report. Use discretion on this one, but if you have the time, upload the patch and then use that uploaded patch in your makefile. Others might be interested in the patch as well! \n\t Lastly, just build a local copy of the patch so you can include it. While not generally recommended, sometimes the only choice is to create a local patch that includes the changes in the module and then putting them in a local patch directory.\u00a0 This is a last resort. \n \n Unchecked or Custom Modules \n Modules that listed as Unchecked are be sourced from areas outside of Drupal.org. This includes purchased themes, Github-based projects, or custom modules written for this site. These are special cases and need to be written down for later on in the process. \n Generate Drush makefile \n Okay, so there should be a list of modules that are stock, patches (if any), and custom modules. With all of that in hand, the next step is to generate a makefile using Drush. What this command does is creates a makefile that records the current version of the modules that are currently on your site along with libraries and then outputs a complete Drush make file. This command will do the job: \n \n drush make-generate\n \n \n You can copy-and-paste the output or you can pipe it to an external file by adding\u00a0  > project.make  \u00a0at the end of it. \n Depending on the number of external libraries in the code base, this could take a little while, but once the library definitions have been defined, those can be kept in a shared list somewhere and pulled in as this process is completed for other sites. \n In the output, if there are eternal libraries in the code base,\u00a0  drush make-generate  \u00a0will output blocks that resemble this: \n \n ; Please fill the following out. Type may be one of get, git, bzr or svn,\n; and url is the url of the download.\nlibraries[jquery_cycle][download][type] = \"\"\nlibraries[jquery_cycle][download][url] = \"\"\nlibraries[jquery_cycle][directory_name] = \"jquery_cycle\"\nlibraries[jquery_cycle][type] = \"library\"\n \n \n These blocks will need to be updated to link to their proper destination. Usually this means adding the URL to the downloadable version of the library. For instance, the block above (at time of writing) becomes this: \n \n libraries[jquery.cycle][download][type] = \"file\"\nlibraries[jquery.cycle][download][url] = \"http://malsup.github.io/jquery.cycle.all.js\"\n \n \n The final result will resemble the following and should be placed into the project as\u00a0  project.make  : \n \n ; This file was auto-generated by drush make\ncore = 7.x\napi = 2\nprojects[drupal][version] = \"7.28\"\n; Modules\nprojects[views_bulk_operations][version] = \"3.2\"\nprojects[addressfield][version] = \"1.0-beta5\"\nprojects[admin_menu][version] = \"3.0-rc4\"\n...\nlibraries[jquery.cycle][download][type] = \"file\"\nlibraries[jquery.cycle][download][url] = \"http://malsup.github.io/jquery.cycle.all.js\"\n...\n \n \n Once you\u2019ve added updated all of the libraries or items that require user input and removed modules and themes that are custom, save it and add it to the project repository. \n Clear Out the Repository \n So now that a makefile has been added, the repository can be cleaned out. To start, remove all of the core Drupal files and directories. You can run the following command to remove all of the root Drupal \n \n rm -r authorize.php CHANGELOG.txt COPYRIGHT.txt cron.php includes index.php INSTALL.mysql.txt INSTALL.pgsql.txt install.php INSTALL.sqlite.txt INSTALL.txt LICENSE.txt MAINTAINERS.txt misc modules profiles README.txt robots.txt scripts themes update.php UPGRADE.txt web.config xmlrpc.php\n \n \n Once this is done, the only directory remaining to should be\u00a0  sites/  . Now, with the list of modules that was generated earlier, the ones that were unchanged can be removed from the\u00a0  sites/all/modules/  \u00a0or\u00a0  sites/default/modules/  . While in these directories, make sure to remove any libraries as well. Optionally, the libraries could be removed from the makefile and instead the\u00a0  libraries/  \u00a0directory could be kept in the repository. But it\u2019s cleaner just to leave them in the makefile. The whole goal here is simply to get rid of everything out of the repository that\u2019s included in the makefile. \n Move Custom Modules and Themes \n At the end of the purging process, all that should remain are the custom/non-drupal.org modules, usually inside of\u00a0  sites/default/modules/  \u00a0and\u00a0  sites/default/themes/  . If that is the case, then all that is needed now is to move the modules/ and\u00a0  themes/  \u00a0directory to the root of the repository. Whenever a project makefile is being built, the contents of repository root (minus the make files) are put into sites/default/. This includes a settings.local.php file which can include site specific settings.php changes. \n The repository should now look something like this: \n \n project.make\nsites/\nmodules/\nthemes/\n \n \n Migrating files/ \n Whenever a platform build is done, the code gets mounted on the PHP container in a read-only state. But the files are managed in a separate partition. To migrate them over, your best bet is to rsync them over. This will likely have already been done during the import of the project initially, but in case it hasn\u2019t been done yet, you can find out more information in Platform.sh\u2019s\u00a0 site migration documentation . \n Once the\u00a0  files/  \u00a0directory is empty, remove the\u00a0  sites/  \u00a0directory from the repository root and go to the next step. \n Try the Build and Commit the Site \n At this point, the build can be attempt and initial kinks (if any) worked out. To do a build, use the following command from the repository root: \n \n platform build\n \n \n Once this command finishes, the output will contain the result of the build. If there are errors, those should be fixed. Make sure that libraries are linked properly and that any changes that were made manually use the\u00a0 proper makefile syntax . \n If the build was successful, the the end result will be a complete drupal site in the\u00a0  www/  \u00a0directory in the parent directory of the repository. Refreshing the site in a local development environment will likely fail with a white-screen and drush commands will also likely fail. Never fear, there is still a single step remaining. \n Rebuild Drupal\u2019s Registry \n Drupal 7 uses something called a\u00a0 code registry \u00a0here\u2019s a brief description (emphasis added): \n \n Drupal 7 introduces a code registry - an inventory of all classes and interfaces for all enabled modules and Drupal\u2019s core files. The registry\u00a0 stores the path to the file \u00a0a given class or interface is defined in, and loads the file when necessary. \n \n The makefile build process guarantees to most (if not all) of the site modules to a different place. While it is possible for this process to break a site, more than likely the registry will need to be rebuilt so that Drupal knows where to find all of the files that have been moved. \n To do this, the\u00a0 Registry Rebuild \u00a0module accomplish this task. The module page has instructions on how to use it, but to make the process work on Platform, the following should suffice. \n \n $ drush @<platform>.<branch> ssh\nWelcome to Platform.\nThis is environment <branch>\nof project <project>.\nweb@<project>-<branch>--php:~/public$ cd ../tmp\nweb@<project>-<branch>--php:~/tmp$ drush dl registry_rebuild\nweb@<project>-<branch>--php:~/tmp$ cd ../public\nweb@<project>-<branch>--php:~/tmp$ php ../tmp/registry_rebuild/registry_rebuild.php\n \n \n And now the registry should be rebuilt. Next, make sure you clear caches:\u00a0  drush cc all  . \n Now refresh the site. If it\u2019s a simple site, the process should be done. But for more complex sites, further tweaking for modules like [AES]( https://www.drupal.org/project/aes ) or other modules that store things outside of the code base (like keys or secrets files) might need to be manually put into the\u00a0  ~/private/  \u00a0directory on the Platform.sh environment. Those modules will also likely need to have their configuration updated as well. \n Wrap Up \n Now your site should be in makefile format and you can enjoy quickly adding and updating modules along with the super maintainability that comes with this project workflow. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Commerce Guys Launches Platform.sh, Continuous Delivery Cloud on Amazon Web Services ", "url": "https://platform.sh/2014/05/commerce-guys-launches-platform/", "documentId": "a1cdf3dd3e2c6d99d266f81284e3d9508b2db47a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Commerce Guys Launches Platform.sh, Continuous Delivery Cloud on Amazon Web Services \n         \n\n        \n         \n            \n              \n          \n         \n         13 May 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Paris, France, May 13, 2014 \u00a0\u2013\u00a0 Commerce Guys , creators of\u00a0 Drupal Commerce , announces the launch of Platform.sh, a powerful continuous delivery cloud hosting solution available for systems integrators, digital agencies and individual websites. Platform.sh supports Drupal, Symfony, and other PHP-based applications. \n Platform.sh has an optimized development-to-production workflow that is revolutionary in the market, enabling Continuous Integration (CI) and Continuous Delivery (CD) during development, at launch, and throughout a site\u2019s life. Unique snapshot technology enables cloning at the speed of thought, replicating full-stack environments on demand and radically improving production return-to-operations (RTO) metrics. Up to 25% savings on developer and systems integration effort are being achieved on beta projects, with the return on investment (ROI) increasing exponentially the larger and more complex the site. \n \n Key Platform.sh Features and Benefits: \n \n\t Perfect cloning. \u00a0Snapshot cloning takes an exact byte-level copy of upstream environments (code, configuration files and data), providing 100% consistency for development, testing, migration and integration. \n\t Unlimited cloning. \u00a0Developers can create, merge, and destroy an unlimited number of development, branch or test environments at the touch of a button in seconds, no matter how large the system. \n\t Collaborative, Agile. \u00a0Accept contributions from an unlimited number of contributors, each with variable permissioning capabilities. Platform.sh leverages Agile methodologies. \n\t Git. \u00a0Integration with the Git version control system allows for safe and seamless merging. \n\t AWS. \u00a0Built to work on Amazon Web Services for enterprise-class bandwidth, storage, and security. \n\t 2nd Generation Platform as a Service. \u00a0A container-based server-grid architecture separates each service, enabling scalability and eliminating performance degradation from neighboring operations. The first generation generalized the server virtualization concept. Containers are the second generation. \n\t Applications. \u00a0Non-LAMP stack services are also supported, reducing the complexity associated with integration, testing and management of 3rd party integrations. \n\t Monitoring. \u00a0User-friendly dashboard allows full visibility in real time to all development environments and contributor work, including activities such as backups, cloning, branching, merging, commits, etc. \n \n Commerce Guys has also launched Platform Enterprise, a high-availability, highly redundant premium version of Platform.sh. For the most demanding Enterprise-level websites, Platform Enterprise enables sites to stay online even if there are physical failures of significant parts of the infrastructure. By utilizing triple redundancy potentially across three separate AWS Availability Zones and running clusters across all of these machines, Platform Enterprise can survive even the most unlikely catastrophic failures without suffering downtime. \n Platform.sh will be available on AWS Marketplace. \n \u201cWe are pleased that Commerce Guys is offering Platform.sh on AWS,\u201d said Brian Matsubara, Head of Global Technology Alliances at Amazon Web Services, Inc. \u201cPlatform.sh provides customers and partners with a valuable solution to help grow their businesses. Commerce Guys Platform.sh takes advantage of AWS\u2019 global footprint to provide customers with the performance, security and scaling for high demand and hard-to-predict peak traffic requirements.\u201d \n \u201cPlatform.sh will change the way web development is done \u201d said Fr\u00e9d\u00e9ric Plais, CEO of Commerce Guys. \u201cPlatform.sh delivers a simple \u2018develop, deploy and deliver\u2019 model that launches seamlessly no matter how much a site needs to scale to meet its unique needs.\u201d \n Platform.sh is designed to complement Commerce Guys\u2019 Commerce Marketplace and Commerce Kickstart. Commerce Marketplace provides third-party vendor solutions designed to integrate with Drupal Commerce sites, including sales and tax compliance, site optimization, content translation and more, while Commerce Kickstart makes eCommerce sites faster and easier to adopt, launch and administer. \n Attendees at the AWS Summit in Paris and DrupalCon Austin will get a first look at Platform.sh during the conferences on May 13th and June 3rd respectively. \n About Commerce Guys \u00a0 Commerce Guys is the creator of Drupal Commerce, one of the fastest growing eCommerce solutions with over 38,000 active sites worldwide. Drupal Commerce is a revolutionary software application framework integrating commerce, content and community to create engaging Web experiences that bring e-retailers more traffic to drive more results. Commerce Guys\u2019 technology and expertise provides online merchants with the powerful, responsive and innovative eCommerce solutions they need to thrive.s \n Commerce Guys won eight awards in 2013, including the overall Grand Prize and the Gold Prize in the technology category at the E-commerce Paris Awards. The company was also awarded the Gold Prize for best new electronic software solution at the American Business Awards, also known as The Stevies. \n Develop on\u00a0 Platform.sh \n Visit us at\u00a0 CommerceGuys.com \n Follow us on\u00a0 Twitter \u00a0and\u00a0 Facebook \n Be a part of the movement at\u00a0 DrupalCommerce.org \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "PHPun with FFI: C PHP run ", "url": "https://platform.sh/blog/2020/php-fun-with-ffi-c-php-run/", "documentId": "dbfa96f40aceb6bb59f41d8a1e52ccaa7650cf1f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           PHPun with FFI: C PHP run \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         26 Feb 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         In our  last exciting episode , we covered the basics of compiling C code, both as a stand-alone executable and as a shared library.  Today we\u2019re going to plug that C library into PHP and get it all running on Platform.sh. \n FFI FFI fo PHPum \n FFI, or  Foreign Function Interface , is a feature of many languages to allow that language to call code written in another language.  PHP got that functionality in the new PHP 7.4, although as one might expect there are some bumps in the road. \n One concern is that PHP is, by nature, accessed by remote systems.  That creates a natural security risk.  With FFI, if you could exploit any sort of hole in an application, then you could potentially achieve a remote code execution hole for system level code.  On a security scale from 1\u201310 that ranks a \u201choly crap!\", so by default PHP doesn\u2019t even support that.  FFI is only enabled by default from the CLI or in preloaded code. \n There\u2019s a caveat there, however.  Preloading (also new in PHP 7.4, more on that in a bit) relies on the opcache.  So does FFI.  The opcache, however, is disabled by default since on the CLI it has nowhere to persist cached opcodes from one execution to the next.  To use FFI with the CLI, therefore, we\u2019re going to need to manually enable the opcache. \n FFI on the CLI \n Let\u2019s start with some code to use the  points  library we created earlier.  First, we\u2019ll want a structure in PHP to mimic the  point  struct.  (That\u2019s not required, but mirroring value objects on both sides makes the API easier to follow.) \n class Point\n{\n   public int $x;\n   public int $y;\n\n   public function __construct(int $x, int $y)\n   {\n       $this->x = $x;\n       $this->y = $y;\n   }\n}\n The next step is to tell PHP about the library.  There\u2019s a couple of ways of doing so, but we\u2019ll start with  cdef() : \n $ffi = FFI::cdef(file_get_contents('points.h'), __DIR__ . '/points.so');\n FFI::cdef()  is not an alphabet lesson gone wrong; it stands for \u201cC definition\u201d and takes two parameters: a string that defines the C structures to expose and the path to the  .so  file in which they can be found. \n In this case, it\u2019s easiest to just read in the  .h  file for the definition.  However, PHP\u2019s FFI doesn\u2019t use a standard C header parser.  It has its own, which as of this writing is\u2026 rather weak.  It doesn\u2019t support a lot of syntax that is completely legal in modern C code and is in fact quite common in most real C programs today.  While custom written libraries like this can reuse their header, most real production C libraries will have headers that are too complex for PHP\u2019s FFI to handle.  That means you\u2019ll need to reimplement your own. \n That\u2019s actually fine; the coupling between a header file and a library is much weaker than, say, a PHP interface and class.  The header file is just saying, \u201cThere exists, somewhere, a function named  distance  that takes 2  point s.\u201d  The  .so  file itself publishes \u201cBTW, I\u2019ve got a function named  distance  that takes 2  points .\u201d  As long as those line up at loading time, it will work out. \n It also means that if we want to expose only a small portion of a larger library, we can write a header file that only declares those functions and structs we want to expose to PHP, leaving the rest inaccessible.  That can be useful with larger libraries. \n We won\u2019t go into it here, but Anthony Ferrara has written a tool called  FFIMe  that wraps the FFI API to make it easier to work with and also handles preprocessing C headers into the subset of the language that PHP supports.  It\u2019s not perfect, but it\u2019s worth investigating for serious FFI use. \n We can now use that  $ffi  variable to access the parts of the  .so  file that are exposed. \n // inline.php\n\n// ...\n\n$p1 = new Point(3, 4);\n$p2 = new Point(7, 9);\n\n$cp1 = $ffi->new('struct point');\n$cp2 = $ffi->new('struct point');\n\n$cp1->x = $p1->x;\n$cp1->y = $p1->y;\n$cp2->x = $p2->x;\n$cp2->y = $p2->y;\n\n$d = $ffi->distance($cp1, $cp2);\n\nprint \"Distance is $d\\n\";\n First, we make two  Point  objects.  Then we create two variables that are bridges to the  point  struct from the header file.  Those variables are of type  FFI\\CData  and act as an adapter between PHP land and C land.  As they\u2019re objects we can use them as objects and they handle the translation back to C, so copying our  Point  PHP object values to them is a straightforward and boring process. \n Finally, we can call the  distance  method on the  $ffi  object, which is an adapter for the C function.  The data gets handed off to the C library which produces a  double  (aka a  float ), and returns it.  Running this code dutifully prints out  Distance is 6.4031242374328 . \n Or, well, almost.  Recall that we said above that FFI requires a working opcache, which the CLI doesn\u2019t have by default.  We can either enable it in  php.ini  or on the command line itself.  The latter is easier: \n $ php -d opcache.enable_cli=true inline.php\nDistance is 6.4031242374328\n Now we get the output we want. \n Setting up in advance \n There\u2019s one problem here, though.  Instantiating the FFI library, parsing the header file, and setting up the appropriate adapters in the background takes a non-trivial amount of time, especially if the C library is larger than this simple example.  On the CLI there\u2019s no good way to avoid that cost on every request, but once we connect this code to a web request we want to skip that overhead if possible. \n Fortunately, FFI offers an alternative way to bridge to a C library that has no runtime overhead that leverages preloading.  Preloading is another new PHP 7.4 feature that lets you load class and function definitions into PHP-FPM\u2019s memory once at server startup and then never reload them again.  We\u2019ve  written about preloading before , and it\u2019s a really neat addition. \n You can also initialize a C library via preloading and keep it in memory, avoiding the initialization cost in future requests.  By default, that is the only way you can use it in a web request, for the aforementioned security reasons.  It\u2019s possible to enable  FFI::cdef()  to work in web requests for development, but please  never ever  do so in production. \n We\u2019ll show preloading on the command line first.  Since we\u2019re using preloading anyway, we\u2019ll move the  Points  class definition to another file named  classes.php , like it\u2019s 2006 all over again.  (It\u2019s retro.)  Next, we need to make some additional changes to the header file by adding these two lines at the beginning: \n #define FFI_SCOPE \"POINTS\"\n#define FFI_LIB \"./points.so\"\n The  FFI_SCOPE  specifies a unique identifier by which PHP FFI will recognize this library.   FFI_LIB  specifies the library file that it refers to.  Note that the path is evaluated relative to the system library path, which does  not  include the current directory by default.  That means the  ./  is required, and if missing it will fail to load. \n Another important caveat for the header file: As of this writing, a  bug in PHP  prevents it from parsing the header file if there are any comment lines prior to a  #define  line.  All  #define  statements must come before any comments.  We\u2019ve reported this bug to PHP (see previous link) and hopefully it will get resolved, or at least documented, in a future version. \n Now we can go about setting up a preload script.  In this case it\u2019s a very simple file: \n <?php \n // preloader.php\n \n declare ( strict_types = 1 ); \n\n FFI :: load ( __DIR__   .   \"/points.h\" ); \n opcache_compile_file ( __DIR__   .   \"/classes.php\" ); \n The  opcache_compile_file()  call tells the preloader to load everything in  classes.php  into PHP\u2019s shared memory.  The other call,  FFI::load() , tells PHP to load the header file then create and save the FFI adapter for that definition.  The library file to use and the identifier for that library are specified in the header file. \n Finally, we can setup another test script to see the preloaded version in action; it can be nearly identical to the inline version, just with a change to the FFI setup code: \n <?php \n // preload.php\n \n $ffi   =   \\FFI :: scope ( \"POINTS\" ); \n\n $p1   =   new   Point ( 3 ,   4 ); \n $p2   =   new   Point ( 7 ,   9 ); \n\n $cp1   =   $ffi -> new ( 'struct point' ); \n $cp2   =   $ffi -> new ( 'struct point' ); \n\n $cp1 -> x   =   $p1 -> x ; \n $cp1 -> y   =   $p1 -> y ; \n $cp2 -> x   =   $p2 -> x ; \n $cp2 -> y   =   $p2 -> y ; \n\n $d   =   $ffi -> distance ( $cp1 ,   $cp2 ); \n\n print   \"Distance is  $d\\n \" ; \n The  $ffi  adapter is now created using  FFI::scope()  and specifying the previously loaded library ( POINTS ) that we want to use.  Because the library is already loaded into memory in the preload step, this is a much cheaper call.  The rest of the code is identical. \n Also note that since we preloaded it, there\u2019s no need to  require  the  classes.php  file.  It\u2019s already in memory and usable. \n To run this script from the command line, we need to specify the preload script to use, again either inline or via  php.ini : \n $php -d opcache.preload=\"preloader.php\" -d opcache.enable_cli=true preload.php\nDistance is 6.4031242374328\n Et voil\u00e0. \n Improving the API \n The FFI API can feel a bit unnatural at times; in fact a lot of the time, especially once you start using its more advanced features that we\u2019re not going to get into here.  Fortunately, as programmers we have a standard solution for clunky APIs: \u201cHey look, an abstraction!\u201d \n There\u2019s two main tweaks we\u2019re going to make to our code base. First, we\u2019ll let  Point  objects convert themselves to an FFI variable: \n class Point\n{\n   public int $x;\n   public int $y;\n\n   public function __construct(int $x, int $y)\n   {\n       $this->x = $x;\n       $this->y = $y;\n   }\n\n   public function toStruct($ffi)\n   {\n       $cp = $ffi->new('struct point');\n       $cp->x = $this->x;\n       $cp->y = $this->y;\n       return $cp;\n   }\n}\n Second, we\u2019ll wrap the FFI logic up into another object.  There\u2019s a dozen ways to do so depending on the context of what you\u2019re doing, but we\u2019ll go for simple now just to make a point (no pun intended): \n class PointApi\n{\n   private static $ffi = null;\n\n   public function __construct()\n   {\n       static::$ffi ??= \\FFI::scope(\"POINTS\");\n   }\n\n   public function distance(Point $p1, Point $p2): float\n   {\n       $cp1 = $p1->toStruct(static::$ffi);\n       $cp2 = $p2->toStruct(static::$ffi);\n\n       return static::$ffi->distance($cp1, $cp2);\n   }\n}\n A given FFI scope is safe to reference multiple times, so rather than try to make it a global singleton and inject it, we\u2019ll just stash it into a private static variable. \n Now, we can simplify our example script to just this: \n <?php \n declare ( strict_types = 1 ); \n\n $p1   =   new   Point ( 3 ,   4 ); \n $p2   =   new   Point ( 7 ,   9 ); \n\n $api   =   new   PointApi (); \n\n $d2   =   $api -> distance ( $p1 ,   $p2 ); \n\n print   \"Distance is  $d2\\n \" ; \n No FFI in sight, but that\u2019s what\u2019s happening behind the scenes. \n Compiling on FFIday \n The next question, of course, is how to get all of this code working for web requests.  It\u2019s fairly straightforward on Platform.sh, but the moving parts are essentially the same on any server. \n We\u2019ll start with our latest code in a project repository and assume the  routes.yaml  and an empty  services.yaml  are already setup.  Then we\u2019ll add a  web  directory with a simple web script that is just the  preload.php  script from a moment ago, with our cleaned up API. \n The interesting part is in the  .platform.app.yaml  file, where there\u2019s a few moving parts.  We\u2019re going to compile the shared library on every build so we always have the latest version of it.  Fortunately  gcc  is already available on all Platform.sh environments so that\u2019s trivial to do.  Here\u2019s the complete example, with relevant comments: \n name :   app \n \n type :   php : 7.4 \n \n # FFI is an extension. It must be explicitly enabled. \n runtime : \n     extensions : \n         - ffi \n \n # Setting a variable in the `php` namespace makes it an ini setting. This block \n # tells PHP-FPM to run `preloader.php` on startup. It's the same file we saw before. \n variables : \n     php : \n         opcache.preload :   'preloader.php' \n \n hooks : \n     build :   |\n          # Using the Makefile we defined in part 1, compile the `points.so` file. \n         set   -e \n         make   points.so \n \n web : \n     locations : \n         \"/\" : \n             root :   \"web\" \n             passthru :   \"/index.php\" \n \n disk :   128 \n Now on every  git push  the points library will be recompiled to a new  .so  file.  Then at deploy time, PHP-FPM will start up, load the FFI extension, and run the one-time  preloader.php  script to initialize our  POINTS  FFI scope (plus whatever else we want to do).  The web configuration is as simple as can be; every request goes to our basic  index.php  file, which is the same code we\u2019ve already seen. \n If we wanted to ensure that the FFI library worked from the command line, say for a  cron  task, the easiest way to do it is to make sure the  cron  command includes both the  opcache.preload  and  opcache.enable_cli  directives as above.  Both are required. \n But is it wise?  That\u2019s iFFI \n Whew!  Not much code, but a lot of concepts.  Is it worth it? \n As is usually the case, the answer is \u201cIt depends\u201d.   Most  of the time?  No, it\u2019s not.  For a trivial case like this it\u2019s counter productive. \n For one, modern PHP is pretty darned fast in its own right.  The performance benefits of moving mundane PHP code to C are marginal at best most of the time; eliminating a database call or two will give a much better speed up for much less effort. \n For another, FFI has its own overhead.  Every time you call across the PHP/C boundary, there is a translation overhead converting data structures from one style to the other.  Just accessing a variable through FFI can be twice as slow as if the variable were in PHP.  For trivial code like this example, it is almost certainly slower than just implementing  distance()  in PHP directly. \n So when is it appropriate to move logic from PHP to C using FFI?  I see two main use cases: \n \n \n When you have a significant amount of heavy processing to do.  Often that will be done offline in a command line script or a  worker process , but it might be done in a web request if it needs to be dynamic.  Think image processing, machine learning, heavy graph manipulation, and other tasks that might entail hundreds or thousands of objects or loop iterations if done in PHP.  Those will be faster in a precompiled library. \n \n \n When you have an existing library from someone else that you want to leverage.  Historically this would require writing a PHP extension, which is much harder and more involved than using FFI.  With FFI, however, you can now take an existing C library, wrap it in FFI, and use it from PHP just as you would were it an extension.  The use cases are similar: image processing, machine learning, and other CPU intensive tasks for which there is a plethora of existing code written in C or C++ already.  In this case, you\u2019ll almost certainly need to custom-write a header file or use FFIMe to bridge it to PHP.  I would strongly recommend also building a nicer API atop FFI, as we did in this example, to make it easier for end users to use. \n \n \n If your use case falls into one of those areas, you now have a new tool with which to tackle the problem. \n Gabriel Couto has collected a series of  examples of using FFI with existing libraries  where reimplementing them in PHP would make no sense at all.  Now that you have a good grasp of FFI basics, the examples there offer the next level up. \n Of course, C isn\u2019t the only way to build shared libraries.  More on that in our  next chapter . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "PHPun with FFI: Getting Rust-ic ", "url": "https://platform.sh/blog/2020/php-fun-with-ffi-getting-rust-ic/", "documentId": "138594d4c05712a2b0a8a75645ec7ffd7862e413", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           PHPun with FFI: Getting Rust-ic \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         02 Mar 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         So far in our FFI series, we\u2019ve covered how to  compile a C library  and  plug it into FFI  on Platform.sh. \n However, FFI doesn\u2019t only work with C.  It works with anything that can compile to the C ABI.  Many languages can, although the best to use are those that do not have their own runtime or garbage collection as that can result in very odd mismatches when sharing data structures.  The most popular runtime-free C-alternative language these days is Rust, and guess what?  It works with FFI, too. \n More alphabet soup \n ABI stands for  Application Binary Interface .  It\u2019s the same concept as an Application Programming Interface (API), but more low-level.  Whereas an API specifies things like \u201cThis function takes an integer as its first parameter and a string as the second,\u201d an ABI specifies things like \u201cThe first four bits mean this thing, the next three mean this other thing, and the bits are in  Little Endian  order.\u201d \n To make things even more difficult, ABIs also depend on the CPU architecture, operating system, and a few other factors.  That\u2019s why code compiled for a 64-bit x86 architecture on Linux won\u2019t work on a 32-bit ARM processor running FreeBSD: The ABI is different, even if the source code is the same, so the bits are literally not in the place the operating system expects. \n On the upside, it means that two compiled languages can interact as long as they use the same ABI, and many compiled languages let you pick what ABI to compile to. \n Rust in a nutshell \n As with C we won\u2019t cover all of Rust; the  official Rust documentation  is already quite good and covers both the language and how to build Rust in detail, so we\u2019ll just cover the relevant bits here.  I\u2019m also going to assume that you\u2019ve installed Rust on your system, per  the documentation . \n Let\u2019s start by porting our points library from C to Rust.  Unlike C, Rust does not have a separate header file.  Instead, like most modern languages, it has a module and package system that lets you explicitly expose certain symbols to others.  It also really wants to build code as part of a package, which in Rust is called a \u201cCrate.\u201d  We\u2019ll follow its lead. \n We\u2019ll put our crate into a directory called  points  for better organization.  A crate\u2019s definition starts with a  Cargo.toml  file.  (Cargo is the Rust package manager, akin to Composer for PHP folks.)  In ours, we\u2019ll say we\u2019re creating both a \u201clib\u201d package type (for building native Rust) and a \u201ccdynlib\u201d package type (for building a C-compatible library). \n [ package ] \n name   =   \"points\" \n version   =   \"0.1.0\" \n authors   =   [ \"Larry Garfield\" ] \n description   =   \"A demonstration library to show how to build Rust for use with PHP-FFI.\" \n edition   =   \"2018\" \n build   =   \"build.rs\" \n\n [ dependencies ] \n\n [ lib ] \n crate - type   =   [ \"cdylib\" ,   \"lib\" ] \n Most of it is pretty self-explanatory, but note the  crate-type , which is the only non-default value.  As with C, we don\u2019t really need to build a stand-alone executable, but I\u2019m including it for completeness. \n Code in a cargo package lives in a  src  directory, and the main file for the library is named  lib.rs .  Here\u2019s our point library ported to it: \n pub   struct   Point   { \n     pub   x :  i8 , \n     pub   y :  i8 , \n } \n \n pub   fn   compute_distance ( p1 :  Point ,   p2 :  Point )   ->  f64   { \n     let   a_squared   =   ( p2 . x   as   f64   -   p1 . x   as   f64 ) . powf ( 2.0 ) ; \n     let   b_squared   =   ( p2 . y   as   f64   -   p1 . y   as   f64 ) . powf ( 2.0 ) ; \n \n     ( a_squared   +   b_squared ) . sqrt ( ) \n } \n \n #[ cfg(test) ] \n mod   tests   { \n     use   super :: * ; \n \n     #[ test ] \n     fn   test_distance ( )   { \n         let   p1   =   Point { x :  3 ,   y :  2 } ; \n         let   p2   =   Point { x :  6 ,   y :  6 } ; \n         assert_eq ! ( compute_distance ( p1 ,   p2 ) ,   5.0 ) ; \n     } \n } \n compute_distance()  is the same as our previous  distance()  function, just renamed for reasons I\u2019ll explain in a moment.  The  Point  struct is nearly the same but capitalized per Rust standards.  It also explicitly specifies an 8-bit integer, as Rust requires us to specify the size of an int type. Of note, both the struct and the function are marked as  pub , meaning code outside of the crate will be able to access it.  Without that, they\u2019d be hidden from other libraries such as FFI itself. \n Rust also includes a built-in testing framework as part of the language tooling, so we\u2019ve included a simple test here on principle, because that\u2019s just sweet. \n Now let\u2019s add our main executable, which we\u2019ll call  main.rs : \n use   points ; \n \n fn   main ( )   { \n \n     let   p1   =   points :: Point { x :  3 ,   y :  4 } ; \n     let   p2   =   points :: Point { x :  7 ,   y :  9 } ; \n \n     println ! ( \"Distance is: {}\" ,   points :: compute_distance ( p1 ,   p2 ) ) ; \n } \n Nothing really exciting here from our perspective, but of note the main file is part of a different logical crate than the library, so it needs to  use  the  points  library in order to have access to it. \n We can now run our simple test with  cargo test  and build the application with  cargo build --release , the latter indicating to produce a release-targeted version of the program rather than a debug build (the default).  The compiled output will live in a  target/debug  or  target/release  directory, accordingly. \n Running the resulting  points/target/release/points  file will dutifully print  Distance is: 6.4031242374328485 . \n Rust for C \n Compiling our new Rust library into a C-compatible library takes a few tweaks.  First, we need to tell Rust that certain parts of the code should be compiled to the C-ABI, so that they \u201clook like C\u201d to other libraries.  Update  lib.rs  like so: \n #[ repr(C) ] \n pub   struct   Point   { \n     pub   x :  i8 , \n     pub   y :  i8 , \n } \n \n #[ no_mangle ] \n pub   unsafe   extern   \"C\"   fn   distance ( p1 :  Point ,   p2 :  Point )   ->  f64   { \n     compute_distance ( p1 ,   p2 ) \n } \n The  #[repr(C)]  on  Point  tells the compiler to \u201crepresent\u201d it as \u201cC\u201d code. \n The second part is a simple wrapper function for our  compute_distance()  function.  It\u2019s not strictly necessary to separate them in this case, but it\u2019s good practice.  That\u2019s because we need to mark the function in a couple of ways: \n \n #[no_mangle]  means Rust should not mess with the name of the function. Normally the compiler is free to rename things as part of internal code generation, but this flag tells it not to so that the name as seen from C is predictable. \n extern \"C\"  means \u201cCompile this bit in an external format, specifically C.\u201d  There are other  extern  options that aren\u2019t relevant for us here. \n unsafe  means \u201cYou know all that intensive memory safety checking that Rust is famous for? Don\u2019t bother.\u201d  It\u2019s the \u201cTrust me, I know what I\u2019m doing\u201d flag.  It\u2019s not strictly necessary in this case but often is when you need to manually marshall, say, strings from C to Rust and back again, which requires doing things Rust won\u2019t normally let you do because they\u2019re dangerous. \n \n Now when we run  cargo build --release , we\u2019ll get an additional file named  target/release/libpoints.so .  The name is slightly different, but it\u2019s the same idea as the  points.so  file we built with C, and PHP will recognize it just the same. \n PHP still needs a header file, though.  We\u2019re again going to get caught by PHP\u2019s weak header file parser.  There are tools to produce a C-compatible header file from a Rust library, but sadly they use syntax that is beyond the bare bones version supported by PHP.  For completeness we\u2019ll show how to hook that up, but we\u2019re going to have to manually modify it afterward. \n Generating the header file \n First, add the following to the  Cargo.toml  file: \n [build-dependencies]\ncbindgen = \"^0.6.0\"\n That adds a new dependency during build only, so it won\u2019t be included in the library itself.  It installs the \u201cC Binding Generator\u201d (cbindgen) package.  On build, Cargo will download that package if necessary, compile it if necessary, and then let you use it. \n Second, we need a program to use it.  There\u2019s a special program that gets built and used during compilation that we can leverage.   build.rs  goes in the main package directory, not in the  src  directory: \n extern   crate   cbindgen ; \n \n fn   main ( )   { \n     let   crate_dir   =   std :: env :: var ( \"CARGO_MANIFEST_DIR\" ) . unwrap ( ) ; \n \n     cbindgen :: generate ( crate_dir ) \n         . expect ( \"Unable to generate C bindings.\" ) \n         . write_to_file ( \"points.h\" ) ; \n } \n This is fairly boilerplate code.  All it does is load the cbindgen library, then tell it \u201canalyze the current crate and write its equivalent C header file to  points.h .\u201d \n Now when we compile the code, we\u2019ll get an extra  points.h  file produced in the crate directory: \n # include   <cstdarg> \n # include   <cstdint> \n # include   <cstdlib> \n \n struct   Point   { \n  int8_t   x ; \n  int8_t   y ; \n } ; \n\n extern   \" C \"   { \n\n double   distance ( Point   p1 ,   Point   p2 ) ; \n\n }   // extern \"C\"\n It\u2019s very similar to the one we wrote before, but with some notable differences: \n \n It  #include s several other libraries by default that we don\u2019t need. It doesn\u2019t hurt anything. \n The  Point  struct uses  int8_t  values instead of  int .  They end up being close enough to the same thing. \n There\u2019s an extra  extern  block around the  distance()  definition.  That sadly breaks the PHP FFI header parser. \n The parameters to  distance()  are missing the  struct  keyword.  This is also legal in modern C but breaks the FFI parser. \n \n While it\u2019s in concept possible to manipulate the output as it\u2019s being generated from  build.rs , it\u2019s frankly less work to just copy the file and modify it ourselves.  We can commit our modified version to Git and just ignore the generated one, unless we change the code in the future and need to regenerate it. \n Here\u2019s the modified header file: \n # define FFI_SCOPE \"POINTS\" \n # define FFI_LIB \". / points / target / release / libpoints.so\" \n \n struct   Point   { \n  int8_t   x ; \n  int8_t   y ; \n } ; \n\n double   distance ( struct   Point   p1 ,   struct   Point   p2 ) ; \n It looks nearly identical to the one for C (which shouldn\u2019t be surprising), but with the size-specific integer type and a different path for the  FFI_LIB  variable. \n Speaking of ignoring things, ensure the generated  points.h  file and the  target  directory are excluded via  .gitignore . \n Rusty PHP \n The PHP code for leveraging our new Rust-ic  libpoints.so  is virtually identical to what we [saw before for C](link to 2nd article).  The only difference is that when the code refers to  struct point , it now needs to say  struct Point  (note the capital), and the paths to where the header and  .so  files live are different.  Otherwise, nothing changes. \n Score. \n Rust on Platform.sh \n There\u2019s a bit more work to do in order to build Rust on Platform.sh, as currently the Rust compiler does not come standard on app containers.  It\u2019s not difficult to install, though.  We have a  HowTo on installing Rust  posted on our community forum.  In short, we need only modify our build hook to this: \n       set  -e\n      curl https://sh.rustup.rs > rustup.sh\n      sh rustup.sh -y --default-toolchain stable\n      rm rustup.sh\n      .  \" $HOME /.cargo/env \" \n       cd  points\n      cargo build --release\n (It\u2019s almost identical to the post above, but we have to change into the right directory first.) \n That will compile the Rust library on every build, using a freshly downloaded copy of the Rust toolchain. \n There\u2019s one catch, though: compiling Rust (or any compiled language, really) may be non-fast.  The Rust compiler does a pretty good job of caching intermediate steps to minimize wasted time, but in the current setup that cache isn\u2019t available on the next build as it only exists in the build and later.  Is there a way to preserve that? \n The Build Cache \n There is.  The Platform.sh build environment includes a \u201cbuild cache\u201d directory, defined in the  $PLATFORM_CACHE_DIR  environment variable, that persists from one build to the next.  That makes it a useful place to stash build data that is not needed at runtime but we do want to reuse from one build to another.  Take note, though, that the build environment is branch-agnostic, meaning the cache will be used by all builds, regardless of what branch they\u2019re on. \n There\u2019s a number of ways one could leverage the build cache.  For our case to keep it simple what we\u2019re going to do is: \n \n Install Rust in a directory in the build cache. \n Copy our source code to the build cache. \n Compile our source code in the build cache. \n Copy the build cache back to the application directory, now that it includes the build  libpoints.so  file. \n \n It would be slightly more efficient to only copy back the compiled file we want, but that may impact the path the file lives at.  This approach keeps things simple at the cost of a few extra files.  If our compilation were much larger than this simple example that might be worth the effort, but for now this is sufficient to demonstrate the concept. \n Here\u2019s our new, cached build hook: \n set  -e\n\n cd   $PLATFORM_CACHE_DIR \nmkdir -p rust\n # Tell Rust to install to the build cache, not to the home dir. \n export   CARGO_HOME = $PLATFORM_CACHE_DIR /rust/.cargo\n export   RUSTUP_HOME = $PLATFORM_CACHE_DIR /rust\n\n # Copy the latest source into the build cache directory. \n cd  rust\nrsync -r  $PLATFORM_APP_DIR /points/ .\n # Only install Rust if it's not already installed. \n if   [  ! -f rustup.sh  ] ;   then \n   curl https://sh.rustup.rs > rustup.sh\n   sh rustup.sh -y --default-toolchain stable\n fi \n export   PATH = /mnt/cache/app/rust/.cargo/bin: $PATH \n\n # Build the library. \ncargo build --release\n\n # Copy the build cache result back to the application directory. \n cd   $PLATFORM_APP_DIR /points\nrsync -r  $PLATFORM_CACHE_DIR /rust/ .\n Et voil\u00e0.  If we ever want to clear the cache and start over, the  Platform CLI  command  platform project:clear-build-cache  will wipe it clean for the next build. \n In closing \n As with C libraries, Rust-through-FFI should not be taken lightly.  In most use cases it\u2019s not going to be worth it to port your application to Rust, as IO will swamp any benefits you see. \n If you have an existing library to leverage, however, or you\u2019re doing something especially CPU intensive, then FFI may be worth considering.  It\u2019s a bit clunky for now but it does work, and it works well on Platform.sh. \n A  complete, working example  of both the C and Rust versions is available on our examples site.  Just push it to a new Platform.sh project to see it in action or to reference it for your own work. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Blog ", "url": "https://platform.sh/blog/page/10/", "documentId": "d87de33a28ced509484fda7e0273066caaffe288", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             15 Apr 2020 \n           \n          \n\n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         Recent posts \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n       European cloud leadership is being born before our very own eyes in France \n\n      \n       \n         23 Jun 2015\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Bitbucket add-on released \n\n      \n       \n         10 Jun 2015\u00a0 \n           \n              Author:\n              Patrick Dawkins\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Continuous Deployment Using Bitbucket Connect and Platform.sh \n\n      \n       \n         10 Jun 2015\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       UI version 2.0 released \n\n      \n       \n         27 May 2015\u00a0 \n           \n              Author:\n              Aaron Dudenhofer\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Groundbreaking Drupal 8 news portal goes live on Platform.sh \n\n      \n       \n         13 May 2015\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Automatically deploy your GitHub branches and pull requests \n\n      \n       \n         04 May 2015\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       First Look at Platform.sh \u2013 a Development and Deployment SaaS \n\n      \n       \n         21 Apr 2015\u00a0 \n           \n              Author:\n              Chris Ward\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh CLI developments \n\n      \n       \n         16 Mar 2015\u00a0 \n           \n              Author:\n              Patrick Dawkins\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       How the Platform.sh PaaS works \n\n      \n       \n         03 Mar 2015\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Containers are the new static binaries \n\n      \n       \n         26 Feb 2015\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       File Structure for a Platform.sh Application \n\n      \n       \n         11 Feb 2015\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Support for Blackfire Profiler \n\n      \n       \n         02 Feb 2015\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       UI version 1.10 released \n\n      \n       \n         26 Jan 2015\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       CLI version 1.7 released \n\n      \n       \n         20 Jan 2015\u00a0 \n           \n              Author:\n              Patrick Dawkins\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Recommended hosting solution for Symfony applications \n\n      \n       \n         08 Jan 2015\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh 2014, a year in review! \n\n      \n       \n         05 Jan 2015\u00a0 \n           \n              Author:\n              Robert Douglass\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Git clients vulnerable \n\n      \n       \n         19 Dec 2014\u00a0 \n           \n              Author:\n              Damien Tournoud\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       CLI version 1.6 released \n\n      \n       \n         10 Dec 2014\u00a0 \n           \n              Author:\n              Patrick Dawkins\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       UI version 1.9 released \n\n      \n       \n         03 Dec 2014\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       HTTP caching, custom PHP configurations, build dependencies \n\n      \n       \n         10 Nov 2014\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Leading digital agencies adopt Platform.sh to support Continuous Delivery \n\n      \n       \n         05 Nov 2014\u00a0 \n           \n              Author:\n              PR Newswire\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       CLI version 1.2 released \n\n      \n       \n         29 Oct 2014\u00a0 \n           \n              Author:\n              Patrick Dawkins\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       1000 tickets strong \n\n      \n       \n         22 Oct 2014\u00a0 \n           \n              Author:\n              Shannon Vettes\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Protecting your apps \n\n      \n       \n         21 Oct 2014\u00a0 \n           \n              Author:\n              Damien Tournoud\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh and Drupal 7.32 Core SQL Injection \n\n      \n       \n         15 Oct 2014\u00a0 \n           \n              Author:\n              Shannon Vettes\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Wunderkraut adopts Platform.sh for all of its 14 international offices \n\n      \n       \n         30 Sep 2014\u00a0 \n           \n              Author:\n              PR Newswire\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       SensioLabs, creators of Symfony, announces global strategic partnership with Platform.sh \n\n      \n       \n         25 Sep 2014\u00a0 \n           \n              Author:\n              Am\u00e9lie DEGUERRY\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       FlixBus launches new eCommerce Service on Platform.sh Enterprise \n\n      \n       \n         23 Sep 2014\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       CLI version 1.1 released \n\n      \n       \n         09 Sep 2014\u00a0 \n           \n              Author:\n              Patrick Dawkins\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       How the Platform.sh PaaS removes developer overhead \n\n      \n       \n         31 Jul 2014\u00a0 \n           \n              Author:\n              Nick Hardiman\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n \n    \n     \n         \u00ab\u00ab \n     \n    \n     \n     \u00ab \n     \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     1 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     2 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     3 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     9 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     10 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     11 \n    \n    \n     \n     \u00bb \n     \n    \n     \n         \u00bb\u00bb \n     \n    \n \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "How to deploy your Django project on Platform.sh ", "url": "https://platform.sh/blog/how-to-deploy-your-django-project-on-platformsh/", "documentId": "5f9ca96a1e1315c42fd09a014ce0e0ce3e17f8a9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           How to deploy your Django project on Platform.sh \n         \n\n        \n         \n            \n         \n         11 Dec 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Django \u2014a high-level framework\u2014makes web development in Python easy. Platform.sh\u2014a second-generation Platform-as-a-Service\u2014makes the deployment easy. Together, they\u2019re unbeatable combination. \n When starting your project on Platform.sh, you can deploy an arbitrarily complex cluster with a single git push. Clone a production cluster into staging environment to try out a new feature, and when you\u2019re satisfied with the result, just merge your changes into the production (master) environment. \n Platform.sh supports a broad range of application languages and frameworks, and provides starter kits for many popular applications, including Django. That makes getting started with Django on Platform.sh as simple as a push of a button. \n Which Django version should I choose? \n Before you decide which Django version will best meet your needs, you need to determine which version of Python you\u2019ll use. The choice is relatively simple. The Python 2 end of life is approaching. The only rationales to use Python 2 in 2018? Any specific third-party dependencies that don\u2019t have a Python 3-compatible release. \n The release of Django 2.0 dropped Python 2 support. Django 1.11 will  receive security and data loss fixes  until April 2020. This is pretty much aligned with Python 2 end of life. \n In general, if you\u2019re going to have a hard dependency on Python 2, start with  Django 1 template ; otherwise go for  version 2  or  version 3 . \n Project setup \n Space is a mysterious place, where plenty of planets, asteroids, and moons are moving around different objects, creating huge systems. In this tutorial, we\u2019re going to show you how to turn our Django 2 template into a simple service collecting data about the moons. \n The first step is to clone the template repository locally by running: \n $ git clone git@github.com:platformsh-templates/django2.git space-app\n$ cd space-app\n Now you should re-initialize git to have a clean history: \n $ rm -rf .git && git init\n$ git add -A && git commit -m \"Initial commit\"\n You need to set up a  virtual environment  to be able to run Django administration and database migration tools locally. Managing virtual environments for your applications, and installing and tracking Python dependencies can be a bit of a challenge.  Pipenv , the higher-level Python packaging tool, was designed to take this burden off your shoulders. Follow  instructions  in the documentation to install it on your system. \n The default Python version used in the template is 3.7. In case you want to use a different version, set  type  in  .platform.app.yaml  file and  python_version  in your  Pipfile  to reflect the version you\u2019ll be using. When you\u2019re sure all the versions matches, run: \n $ pipenv install\n$ pipenv shell\n The virtual environment will be created and activated, and you can add a new  Django application  to the project. This Python package will be dedicated to the moons orbiting their planets: \n (space-app) $ django-admin startapp moons\n The new application has to be added into the list of installed applications, overwriting example  hello  application; it\u2019s not needed at this moment.\n myapp/settings.py : \n INSTALLED_APPS   =   [ \n     . . . \n     ' django.contrib.staticfiles ' , \n     ' moons ' , \n ] \n The next step? Deploy! \n At this point, the template can\u2019t really do anything useful, but it contains all the configuration to be deployed to Platform.sh. \n First, install Platform.sh Command Line Interface following the  CLI section  of the official documentation. After CLI is installed and set up, you can create a new project through the Platform.sh user interface. \n Sign in or create a new Platform.sh account . When you\u2019re successfully logged in, click on the \u201cADD A PLATFORM\u201d button on the top of the page, and choose the right Platform.sh plan and region to fulfill your needs. Creation of the new project will take a while. When it\u2019s ready, and you get to the \u201cSetting up your project\u201d screen, select \u201cImport your existing code,\u201d which gives you the git commands to run from the template directory. Use the first command to add a git remote called \u201cplatform\u201d, which points to your new Platform.sh project and run: \n  $ git push -u platform master\n The plain Django project is up and running in about a minute, and you can devote all your attention and energy to your code. \n Database model \n The basic setup is done, and you can start to build the pillars of your new service. The very first thing you need to define is a database model to store the data. The definition of Django models is pretty simple and straightforward. \n moons/models.py : \n from   django.db   import   models \n\n\n class   Moon ( models . Model ) : \n     name   =   models . CharField ( max_length = 255 ,   null = False ) \n     planet   =   models . CharField ( max_length = 255 ,   null = False ) \n     discovered   =   models . DateField ( ) \n     volume   =   models . FloatField ( ) \n At this point, it\u2019s the right time to create initial migration: \n (space-app) $ python manage.py makemigrations moons\n Commit the changes, including the generated migration file under \u2018planets/migrations,\u2019 and push the new code to your Platform.sh project: \n $ git add -A\n$ git commit -m \"Add concept of database model\"\n$ git push platform master\n You can see ongoing activity on your master environment. The application was rebuilt, and redeployment of the cluster has started. Your first impression might be that not much has changed since your first deployment, but let\u2019s take more precise look at the master environment cluster. \n When you open  .platform.app.yaml  file in the root directory of the project, you can see the following lines: \n # The relationships of the application with services or other applications. \n # \n # The left-hand side is the name of the relationship as it will be exposed \n # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand \n # side is in the form `<service name>:<endpoint name>`. \n relationships : \n      database :   \"postgresqldb:postgresql\" \n This section creates a connection between the application and the PostgreSQL service. The PostgreSQL service is defined in the   .platform/services.yaml  file. See the  configuration section  in the documentation for a more detailed explanation. \n Another interesting bit is at the very end of  myapp/setting.py  file: \n relationships   =   os . getenv ( ' PLATFORM_RELATIONSHIPS ' ) \n if   relationships : \n     relationships   =   json . loads ( base64 . b64decode ( relationships ) . decode ( ' utf-8 ' ) ) \n     db_settings   =   relationships [ ' database ' ] [ 0 ] \n     DATABASES   =   { \n         ' default ' :   { \n             ' ENGINE ' :   ' django.db.backends.postgresql ' , \n             ' NAME ' :   db_settings [ ' path ' ] , \n             ' USER ' :   db_settings [ ' username ' ] , \n             ' PASSWORD ' :   db_settings [ ' password ' ] , \n             ' HOST ' :   db_settings [ ' host ' ] , \n             ' PORT ' :   db_settings [ ' port ' ] , \n         } , \n         . . . \n     } \n The credentials of the PostgreSQL service running as part of the cluster are assigned to the default Django database. This means you can immediately start interacting with the database from your application. \n To make the \u201cjust works\u201d user experience complete, there\u2019s a deploy hook running database migrations during each redeployment of the cluster in  .platform.app.yaml  file. This also happened after you added database model in the last commit and pushed it to the project. \n Let\u2019s ensure everything worked as intended. You can run  psql  directly on the remote database container using following command: \n $ platform db:sql\n You should see a psql shell prompt, and you can run a bunch of SQL commands to verify that moon table was created, and it\u2019s ready to be filled by the data: \n psql (11.1 (Debian 11.1-1.pgdg80+1), server 9.6.1)\nType \"help\" for help.\n\nmain=> SELECT * FROM moons_moon;\n id | name | planet | discovered | volume\n----+------+--------+------------+--------\n(0 rows)\n Now, let\u2019s insert a testing data sample manually: \n main=> INSERT INTO moons_moon VALUES('1', 'Phobos', 'Mars', '1877-08-17', '5729');\n RESTful API \n With the growing popularity of microservices architecture, being able to make RESTful API for your application back end has become more important than ever. We\u2019ll use Django REST Framework (DRF) to build an API on top of the database model. A nice thing about DRF is that it gives us a lot of functionality, like serializers and views, right out of the box. \n First, create a dedicated branch for development of this feature: \n $ git checkout -b rest\n Now you need to install DRF and add it to the list of installed applications. \n $ pipenv install djangorestframework\n And in  myapp/settings.py : \n INSTALLED_APPS   =   [ \n            . . . \n     ' django.contrib.staticfiles ' , \n     ' rest_framework ' , \n     ' moons ' , \n ] \n The REST framework is now available, and you can create a serializer for your  Moon  model.\nIn  moons/serializers.py : \n from   rest_framework   import   serializers \n\n from   .models   import   Moon \n\n\n class   MoonSerializer ( serializers . HyperlinkedModelSerializer ) : \n     def   create ( self ,   validated_data ) : \n         return   Moon . objects . create ( * * validated_data ) \n\n     def   update ( self ,   instance ,   validated_data ) : \n         instance . name   =   validated_data . get ( ' name ' ,   instance . name ) \n         instance . planet   =   validated_data . get ( ' planet ' ,   instance . planet ) \n         instance . discovered   =   validated_data . get ( ' discovered ' ,   instance . discovered ) \n         instance . volume   =   validated_data . get ( ' volume ' ,   instance . volume ) \n\n     class   Meta : \n         model   =   Moon \n         fields   =   ( ' name ' ,   ' planet ' ,   ' discovered ' ,   ' volume ' ) \n This class will automatically serialize and deserialize native Python data types of  Moon  model into JSON format. \n Now you can create views with only a few lines of code using DRF. \n moons/views.py : \n from   rest_framework   import   generics \n\n from   .models   import   Moon \n from   .serializers   import   MoonSerializer \n\n\n class   MoonList ( generics . ListCreateAPIView ) : \n     queryset   =   Moon . objects . all ( ) \n     serializer_class   =   MoonSerializer \n\n\n class   MoonDetail ( generics . RetrieveUpdateDestroyAPIView ) : \n     queryset   =   Moon . objects . all ( ) \n     serializer_class   =   MoonSerializer \n The first view provides a list of stored moon resources; the second one provides a detailed view of a single moon. \n You also need to create routes to expose the API endpoints. \n moons/urls.py : \n from   django.urls   import   path \n from   django.conf.urls   import   url \n from   django.views.generic.base   import   RedirectView \n\n from   .   import   views \n\n urlpatterns   =   [ \n     path ( ' ' ,   RedirectView . as_view ( pattern_name = ' moon-list ' ,   permanent = False ) ,   name = ' index ' ) , \n     url ( r ' ^api/moons/$ ' ,   views . MoonList . as_view ( ) ,   name = ' moon-list ' ) , \n     url ( r ' ^api/moons/(?P<pk>[0-9]+)$ ' ,   views . MoonDetail . as_view ( ) ,   name = ' moon-detail ' ) , \n ] \n Finally, remember to include  moons.urls  in the global  myapp.urls  patterns overwrite path, including  hello.urls . \n myapp/urls.py : \n from   django.contrib   import   admin \n from   django.urls   import   include ,   path \n\n urlpatterns   =   [ \n     path ( \" \" ,   include ( \" moons.urls \" ) ) , \n     path ( ' admin/ ' ,   admin . site . urls ) , \n ] \n Commit the latest changes, and push them to the dedicated branch of the project: \n $ git add -A\n$ git commit -m \"Add REST API for moons\"\n$ git push platform rest\n Now, activate the rest environment of your Platform.sh project by running: \n $ platform environment:activate\n In a few moments, the new  rest  environment cluster will be setup on Platform.sh, and you can start testing the API. Your service can now communicate with the outer world via HTTP requests. Copy the  rest  environment route serving the application from the CLI output and run: \n $ curl -iL -H \"Accept: application/json\" \\\n   URL_OF_YOUR_REST_ENVIRONMENT/api/moons/1\n\nHTTP/2 200\nallow: GET, PUT, PATCH, DELETE, HEAD, OPTIONS\ncontent-type: application/json\n\n{\"name\":\"Phobos\",\"planet\":\"Mars\",\"discovered\":\"1877-08-17\",\"volume\":5729.0}\n Once you\u2019ve verified that everything is working, open the  rest  environment overview in the user interface and hit the \u201cMerge\u201d button. Doing so will merge your latest changes into the master environment and redeploy it with your latest changes. \n That\u2019s it! You can easily create more branches, implement new features, and see them running in a production-like environments almost immediately. You can make sure that only well-tested code will be merged into your master branch. Remember: you can always roll back to the latest stable revision whenever you feel your latest release isn\u2019t quite ready for production. \n\n        \n\n\n\n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Sharpen your tusks: it's time for Python 3.8 \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Apache Kafka now available \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Even more batteries included: Platform.sh configuration libraries \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Give the gift of Ruby this season ", "url": "https://platform.sh/blog/give-the-gift-of-ruby-this-season/", "documentId": "40fffc05cda5ae1c692b181514cdaf9a4072753c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Give the gift of Ruby this season \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         18 Dec 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We\u2019ve had Ruby 2.5 in beta for a while now, although we haven\u2019t talked about it much.  It\u2019s been working wonderfully, though, and rubies make great holiday gifts for the geologists in your life. So it\u2019s time to go General Availability! \n What gems does this version have? \n Ruby 2.5 has a bunch of very cool language features, and probably the most interesting is  yield_self ;  it rather resembles the pipe operator from Elixir, and pipes are cool.  Method chaining is also a great way to simplify syntax, and this basically gives you a more general approach then the  .map  and  .select  we\u2019re already used to. \n Also nice in day-to-day life \u201crescue in  do  blocks\u201d it reduces clutter and unnecessary indentation. \n things . each   do   | thing | \n   thing . evil_method_that_bombs \n rescue   VeryBadError   = >   exception \n   p   exception \n   next \n end \n Short and sweet. \n Is it expensive like a real ruby? \n Not at all!  As always, migrating your Ruby apps is as easy as changing a single character in your  .platform.app.yaml  file: \n so instead of : \n type :   \"ruby:2.4\" \n Go for the brand new: \n type :   \"ruby:2.5\" \n Create a branch, push, and test that everything works on your development environment. If it all checks out, merge.  Now you\u2019re running Ruby 2.5 in production. (And you probably just gained around 10% performance, too. Go you!) \n A number of Ruby applications already require 2.5 or higher, such as the latest Discourse betas.  So if this is your jam\u2026go forth and deploy. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Apache Kafka now available \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Even more batteries included: Platform.sh configuration libraries \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks, Day 4: Jekyll - the SSG that started it all \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "The new and newer PostgreSQL ", "url": "https://platform.sh/blog/the-new-and-newer-postgresql/", "documentId": "f7dd8ae7b5abd5079d06354340e1353695865b44", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The new and newer PostgreSQL \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         20 Dec 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         PostgreSQL 9.6 has been available for quite some time and has served our websites valiantly.  But technology never stops moving, and neither does the PostgreSQL development team.  In the last year or so, they\u2019ve released two new versions of the Free Software database. \n To close out the holiday season, we\u2019re happy to report that we now support both of them. Hello, PostgreSQL 10 and 11! \n What\u2019s new? \n Compared to PostgreSQL 9.6, 10 and 11 have added a number of new features to help with scaling data sets. \n Most notably, they\u2019ve improved feature support for table partitioning natively.  Rather than partitioning with complex constraints, tables can now be defined explicitly as a partition of another. \n For the XML crowd, PostgreSQL now supports  XMLTable , an SQL-standard feature that lets view your XML as a table, and thus, mix and match it with other relational data.  That can be especially helpful when doing ongoing imports or \u201cextract-transform-load\u201d (ETL) processes. \n JSON fans, meanwhile, can look forward to full text search on JSON and JSONB fields.  And everyone can appreciate transaction-safe stored procedures in PostgreSQL 11. \n There are also a wide array of improvements relating to performance to help make PostgreSQL 11 the fastest and most tunable release yet. \n See the release notes for  PostgreSQL 10  and  PostgreSQL 11  for more details, as well as our  own documentation . \n How do I use it? \n As usual, upgrading to a new version of a service on Platform.sh is delightfully simple.  Just go into your  services.yaml  file and change  9.6  to  11 .  Like so: \n mydb:\n    type: postgresql:9.6\n    disk: 2048\n becomes: \n mydb:\n    type: postgresql:11\n    disk: 2048\n PostgreSQL includes an upgrade utility that can convert databases from previous versions to version 10 or 11, and we run that automatically, if needed.  That means no extra work is required to upgrade your database to the latest version of PostgreSQL.  (Note: the utility works only when migrating  to  versions 10 or 11; upgrading from 9.3 to 9.6 is not turnkey.  We recommend just upgrading to version 11.) \n Please be aware that downgrades aren\u2019t supported by PostgreSQL or by us, so we suggest testing your upgrade in a separate branch before upgrading production. \n Fortunately, Platform.sh makes it super easy to clone your entire site (data and all) to test upgrades before they go live.  Happy upgrading! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Spread some Varnish on your site ", "url": "https://platform.sh/blog/spread-some-varnish-on-your-site/", "documentId": "c3e19be60d5a169619be1b4543b5cfad2220c62f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Spread some Varnish on your site \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         17 Jan 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         HTTP itself includes fairly robust rules around caching of web requests.  For most applications that\u2019s completely fine, and the  router  built into every Platform.sh project includes an HTTP reverse proxy cache that can be easily configured for most situations. \n Sometimes, though, you just need more power.  When the caching gets tough, most developers today turn to  Varnish , a highly configurable, high-performance proxy cache server.  And as of today, you can add it to your Platform.sh projects. \n Huzzah!  How? \n Varnish is configured similar to any other service, but with some caveats.  Rather than sitting behind your application like your database does, it sits between the router and your application.  You also need to provide a Varnish VCL file to configure it. \n In practice that ends up being quite straightforward.  First, you create a Varnish service in your  services.yaml  file and tell it to use your application as its back end: \n # services.yaml\n\nvarnish:\n    type: varnish:6.0\n    relationships:\n        application: 'app:http'\n    configuration:\n        vcl: !include\n            type: string\n            path: config.vcl\n That snippet creates the service and gives it a single relationship named  application , which points at the application container.  You can also have Varnish front for multiple application containers at once, but you\u2019ll then need to configure when to forward requests to each. \n Second, tell the router to send requests to Varnish rather than to the application directly, and disable the router\u2019s cache (as it\u2019s redundant with Varnish): \n # routes.yaml\n\n\"https://{default}/\":\n    type: upstream\n    upstream: \"varnish:http\"\n    cache: \n        enabled: false\n Finally, you need to provide the VCL file for Varnish to use.  Our system will auto-create a back end for each relationship so you don\u2019t need to do so and, in fact, cannot declare a  vcl_init()  function.  We take care of that for you.  You also must include at least a single line of logic in your  vcl_recv()  function to determine what back end (relationship) to forward requests to. \n Beyond that, it\u2019s your VCL file.  Make it as simple or complex as you need for your application. \n We have much more detailed information in our  documentation . \n So should I use it? \n That\u2019s up to you, but not everyone needs to.  If all you want is a reverse proxy cache for better performance of your site then the existing router cache we already provide will happily handle your needs and require fewer resources to do so.  For most users, that\u2019s more than ample. \n However, if your application needs arbitrarily complex logic at the caching layer (such as partial page caching, conditional cookie handling, etc.), then you can now slap a layer of Varnish on your application and have it your way. \n Happy caching! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh full speed ahead into 2019 ", "url": "https://platform.sh/blog/platformsh-full-speed-ahead-into-2019/", "documentId": "ce3fb04743848b23044f53127cfef1c2c737ae7b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh full speed ahead into 2019 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Fred Plais \n                  \n                   CEO \n                  \n                  \n                 \n            \n          \n         \n         29 Jan 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         2018 was an incredible year for Platform.sh. In fact, it was probably the most important year in the company\u2019s short history. And I\u2019d like to begin this post by sending a big thank you to our clients and partners for their trust, patience, and constructive feedback.  \n Some of you have trusted Platform.sh for five consecutive years, while some of you have been using our services for only a few months. In both cases, we care a lot about helping you achieve your goals. At Platform.sh, our mission is to offer the most powerful and simple cloud experience for digital teams. We enable developers to focus their time and energy on building amazing web experiences, while spending zero time on managing the underlying cloud services. We\u2019re committed to delivering more on that mission every day.  \n The amount of change we experienced in 2018 was massive \u2014 and deeply transformative .  We\u2019re starting 2019 with the feeling of a job well done, but also with a renewed appetite for even more positive change to come! In this post, I\u2019d like to share what we were able to achieve in 2018 and the goals that will keep us busy and focused in 2019. \n Looking back on 2018 \n In 2018, we completed several major endeavors: \n Built a full-fledged Customer Success team.  At the end of 2017, we had 15 people on our Customer Success team. This small but mighty team managed all customers\u2019 success activities: pre-sales, customer onboarding on the platform, proactive customer care, and support ticket management\u2014constantly switching tasks, trying to keep on top of things, but\u00a0falling short for a sheer lack of human resources. We had grown fast, and keeping up with the demand became a challenge. We needed to solve the problem quickly. Under the leadership of Platform.sh VP of Customer Success, Rob Douglass, recruiting and training new Customer Success staff became a top priority; Rob asked\u00a0the larger team (ops and engineers) to take a part in regular \u201cticket sprints.\u201d Looking back, we feel good about the progress made. Today, we have a team of 41 Customer Success agents, led by Maria Antinkaapo, our new VP of Customer Success, who has three directors reporting to her, creating a more specialized team. Our  public-facing documentation , internal training curriculum, and internal processes have greatly matured, decreasing time to response three-fold and getting back to a queue that often tends to zero backlog.  \n A much more robust product.  Through massive changes in the platform\u2019s architecture, made over the course of 2018, our PaaS is now highly available. Since the end of 2017, we\u2019ve deployed a number of important features to provide a strong degree of resilience, notably fast and automatic failover for all services and automatic failure recovery. We now have the ability to move projects from one host to another host, enabling many scenarios, for example, fast upscale in the event of an unexpected increase in peak traffic.  \n Financing\u00a0our ambition.  In May 2018, we announced a  $34M fund raise  led by Partech, with a mix of smart US and European funds. Since then, we\u2019ve started deploying this capital, notably by doubling the size of our Product/Engineering team, and we plan to increase this team by another 50% by the end of the second quarter of 2019. We\u2019ve set a really ambitious roadmap that we\u2019ve already begun to deliver on (expect some shiny, new features in the first half of 2019).  \n Scale our distributed-first team.  By the numbers: \n \n\t 120 team members working from 18 countries across 14 timezones.  \n\t 6,000 Slack messages/day \n\t 1,000 automated PagerDuty alerts/week, monitored by support and ops \n\t 706 enterprise customers onboarded in 2018  \n\t 50% revenue generated in North America, 40% in Europe, 10% across other geos, with China and Australia leading the way \n \n SaaS Factory.  We also launched a product to deliver more value to SaaS companies. Leveraging our product, SaaS entrepreneurs can launch new businesses much faster and less expensively, scaling their software teams without having to figure out the cloud infrastructure. Without the need to recruit DevOps. And moving faster/scaling linearly for a fraction of the cost they would incur building their own platforms. \n 2019: continuing our transformation \n There are many areas where we're like to see significant\u00a0improvements,\u00a0including:  \n Developer experience.  A brand new developer community portal. A more usable and (prettier) user interface. Partnerships with teams delivering local experiences. Better template management to help developers deploy more use cases, run times, and frameworks on Platform.sh. \n Customer success.  Improve our response time on support, and notably, improve the discussion flow. Our customers want speed and reactivity; they want conversations rather than email interaction. We hear this loud and clear and are working hard at making it a reality.  \n Fleet management.  During the course of the year, we\u2019ll deliver additional features for application fleet management. Many of our fleet management capabilities were geared towards our larger partners that leveraged our extensive APIs. We\u2019re now integrating those features directly in the UI, and we\u2019re opening the API for everyone to use as we add more robust and productivity enhancing.\u00a0 \n More cloud infrastructure.  Worldwide coverage. Scale our business on more clouds (big news to come soon on that front, too). \n We feel very grateful for the trust.\u00a0And hope to become an even more positive and integral part of your professional lives. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Blog ", "url": "https://platform.sh/blog/page/4/", "documentId": "7234bec22f6180c2a54f1efedc06a123b04a6d55", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             15 Apr 2020 \n           \n          \n\n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         Recent posts \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Deploy with PHP 7.3 this Friday, er, Thursday \n\n      \n       \n         06 Dec 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n\n      \n       \n         04 Dec 2018\u00a0 \n           \n              Author:\n              Fred Plais\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Update to our Privacy Policy \n\n      \n       \n         19 Nov 2018\u00a0 \n           \n              Author:\n              Joey Stanford\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Our Black Friday gift: 10,000 CPUs, overnight without downtime \n\n      \n       \n         16 Nov 2018\u00a0 \n           \n              Author:\n              Chris Yates\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Good morning, Australia: we\u2019re back in business \n\n      \n       \n         15 Nov 2018\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Why you should care about WeChat before it's too late! \n\n      \n       \n         31 Oct 2018\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Go[lang] forth and deploy \n\n      \n       \n         29 Oct 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       We're improving our communications tools at Platform.sh \n\n      \n       \n         26 Oct 2018\u00a0 \n           \n              Author:\n              Joey Stanford\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh launches white-label SaaS factory \n\n      \n       \n         24 Oct 2018\u00a0 \n           \n              Author:\n              Chris Yates\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Deploy your Python 3.7 code to the Moon \n\n      \n       \n         05 Sep 2018\u00a0 \n           \n            Author: Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh Wins 2018 Stratus Award for Cloud Computing \n\n      \n       \n         30 Aug 2018\u00a0 \n           \n              Author:\n              Global Newswire\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Of Cicadas and cron jobs \n\n      \n       \n         21 Aug 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh deploys to Canada \n\n      \n       \n         14 Aug 2018\u00a0 \n           \n              Author:\n              Gauthier Garnier\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       How micro is your microservice? \n\n      \n       \n         07 Aug 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       It's July 2018, do you know what your PHP is? \n\n      \n       \n         03 Jul 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Some gifts for the JSON fans \n\n      \n       \n         28 Jun 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       A great Kubernetes alternative \n\n      \n       \n         08 Jun 2018\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Your Guide to GDPR Compliance: Training your employees \n\n      \n       \n         08 Jun 2018\u00a0 \n           \n              Author:\n              Ivana Kotur\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       The Github acquisition: it's all about cloud for Microsoft \n\n      \n       \n         05 Jun 2018\u00a0 \n           \n              Author:\n              Fred Plais\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Your Guide to GDPR Compliance: Transfers of personal data to third countries \n\n      \n       \n         30 May 2018\u00a0 \n           \n              Author:\n              Ivana Kotur\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Your Guide to GDPR Compliance: Data protection impact assessment and security measures for processing data \n\n      \n       \n         25 May 2018\u00a0 \n           \n              Author:\n              Ivana Kotur\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Speed, confidence and simplicity: what our $34m raise means for you \n\n      \n       \n         24 May 2018\u00a0 \n           \n              Author:\n              Fred Plais\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh l\u00e8ve 28 millions d'euros pour apporter rapidit\u00e9 et performance aux d\u00e9ploiements cloud en entreprise \n\n      \n       \n         23 May 2018\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh Raises $34M to Bring Speed and Confidence to Enterprise Cloud Deployments \n\n      \n       \n         23 May 2018\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh \u52df\u5f973400\u4e07\u7f8e\u5143\uff0c\u53d1\u5c55\u66f4\u5feb\u66f4\u53ef\u9760\u7684\u4f01\u4e1a\u4e91\u5e94\u7528\u90e8\u7f72\u4e1a\u52a1 \n\n      \n       \n         23 May 2018\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Schnellere und sicherere Enterprise Cloud Deployments:  L\u00f6sungsanbieter Platform.sh erh\u00e4lt 28 Millionen Euro zus\u00e4tzliches Kapital \n\n      \n       \n         23 May 2018\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Your Guide to GDPR Compliance: Data subject rights \n\n      \n       \n         23 May 2018\u00a0 \n           \n              Author:\n              Ivana Kotur\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Data protection by design and default \n\n      \n       \n         07 May 2018\u00a0 \n           \n            Author: Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh confirms that it is ready for the GDPR \n\n      \n       \n         02 May 2018\u00a0 \n           \n              Author:\n              Joey Stanford\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Another Drupal security update: We've still got you covered \n\n      \n       \n         25 Apr 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n \n    \n     \n         \u00ab\u00ab \n     \n    \n     \n     \u00ab \n     \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     1 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     2 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     3 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     4 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     5 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     11 \n    \n    \n     \n     \u00bb \n     \n    \n     \n         \u00bb\u00bb \n     \n    \n \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Tightening TLS ", "url": "https://platform.sh/blog/tightening-tls/", "documentId": "2160ed69d7481f7aeaaf2bb5fb38db312ad22810", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Tightening TLS \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Joey Stanford \n                  \n                   Security, Compliance and Data Protection Officer \n                  \n                  \n                 \n            \n          \n         \n         07 Feb 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         As part of our ongoing efforts to protect our clients\u2019 and partners\u2019 privacy and digital security, we\u2019re planning to drop support for older, insecure cryptographic protocols. As of 1 April 2019, we\u2019re disabling support for Transport Layer Security (TLS) versions older than 1.2 and adding support for TLS 1.3. \n What\u2019s changing? \n TLS is what provides the \u201cS\u201d in HTTPS.  It has replaced the older SSL (Secure Socket Layer) encryption standard even though it\u2019s common for people to still refer to them both as \u201cSSL.\u201d \n Today, HTTPS connections on Platform.sh can use TLS 1.0, 1.1, or 1.2, and it\u2019s up to the browser to determine which is the most recent version it can support.  That said, currently every browser supports TLS 1.2, so, in practice, almost all connections already use 1.2. \n Users can also require connections to Platform.sh to use only newer TLS versions, which is mandated by some security auditing requirements. \n As of April, however, we\u2019ll be dropping all encrypted connections using anything older than TLS 1.2.  Users who have a specific minimum TLS version specified in their configuration file will still be unaffected as that setting will, effectively, become redundant. \n Why the change? \n The Payment Card Industry\u2019s Data Security Standard (PCI DSS) requires that sites avoid older versions of TLS with known security issues.  There have been numerous reports of severe vulnerabilities in early TLS versions that could put organizations and users at risk; case in point,  the widely reported  POODLE  and  BEAST  attacks. \n These vulnerabilities are of particular importance to e-commerce websites, where credit card payment information is transmitted, and to sites where personal information is being collected or sent over the web. \n Given how prevalent TLS 1.2 support is in major browsers, we determined it was safest for our users to require TLS 1.2 across the entire network.  We\u2019re also adding support for the newer TLS 1.3, which, although not as widely deployed, offers even tighter security. \n How will this change affect you? \n TLS 1.2 was released in 2006, and all major browsers have supported it for many years.  For the vast majority of users nothing will change at all.  Customers who have a minimum TLS version in their configuration file are free to remove it after 1 April.  While we\u2019ll support setting a TLS 1.3 minimum version at that time, it\u2019s not recommended without extensive testing as TLS 1.3 was only  approved in August of 2018 , and client support may lag behind for some time. \n It\u2019s possible that some custom client applications may be using an older TLS library that doesn\u2019t have 1.2 support.  Those applications will need to be updated to use a current security library.  To easily test if that\u2019s the case,  set a minimum TLS version  of 1.2 on a branch environment, and point the custom client at that branch.  If it works normally, everything is fine.  If it fails to connect, you\u2019ll need to update your client application. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Shiny, new Platform.sh management console ", "url": "https://platform.sh/blog/shiny-new-platformsh-web-management-console/", "documentId": "08887339de7c59810293d069a49a98135b50cfb9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Shiny, new Platform.sh management console \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         11 Apr 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We\u2019re thrilled to announce that our new management console is now available to all Platform.sh customers. It\u2019s all new, but should also feel familiar and intuitive to current Platform.sh users.\u00a0 \n You can try our new console right now:\u00a0 https://console.platform.sh .\u00a0And we\u2019d love your feedback!\u00a0 \n \n What\u2019s new in the Platform.sh console \n **A stronger foundation\u00a0**\nWe\u2019ve rewritten the Platform.sh console from the ground up to be faster, more responsive, and to provide better access to core features of the Platform.sh API. Staying true to our polyglot ethos, it\u2019s a 100 percent decoupled application, written in React. The new console\u2014now standardized across all of our global regions\u2014makes the interface to your projects universal, regardless of where they\u2019re running. \n **Visualization of your services: macro, micro, or anything in-between\u00a0**\nPlatform.sh has always been about giving you flexibility and freedom to deliver your greatest-ever applications\u2014without having to worry about supporting the infrastructure behind them. Now, we\u2019ve made it easier to see multiple apps and services with our service grid that visualizes the relationships between the containers Platform.sh creates for each environment. It\u2019s great for teams developing microservices projects: you can tell at a glance how the topology of your app has changed in different branches. And this is just a teaser; we plan on building out more functionality in this services graph in the near future! \n Usability features\u2014based on your input \nOur research and extensive conversations with current and prospective customers deepened insights to help shape the new console. With these insights and through rigorous development and testing, we feel great that we\u2019ve built a solid foundation for future features. And we\u2019ve made it easier to move between the console and the  Platform.sh Command Line Interface (CLI) , with easy-to-copy commands at your fingertips. \n Get ready for more shininess \nOur new web management console is just the beginning! In the near future, look for product enhancements for agencies and enterprises with large dev teams who manage many different projects. And there\u2019s much more on the way! \n We\u2019re really looking forward to hearing what you think about the new console. Let us\u00a0know!! \n Need help?  Submit a support ticket . Or chat with us on  our public Slack channel  by using  @platform  to tag us. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Shared network storage now available ", "url": "https://platform.sh/blog/2019/shared-network-storage-now-available/", "documentId": "e8a0dab03bd15d538f5b8700443f2456de4f2279", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Shared network storage now available \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         17 Apr 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Since Platform.sh launched support for  worker instances  last year, the number-one feature request has been a way to share file mounts between the web application and its workers.  We\u2019re happy to announce that it can now be done! \n Cool!  How? \n The solution is the new  network-storage  service container, which runs like any other service in your cluster and offers up mount points instead of network ports.  You can add one to your cluster through  services.yaml  just this easily: \n files:\n    type: network-storage:1.0\n    disk: 2048\n That creates a new network service named  files  (you can name it anything), with a disk capacity of 2 GB. \n Now, in  .platform.app.yaml , you can declare file mounts that point at that network service rather than at the local disk. \n mounts : \n      'web/uploads' : \n          source :   service \n          service :   files \n          source_path :   uploads \n That creates a mount point in the  web/uploads  directory, which points at the  files  service.  The  source_path  is the subdirectory in the service.  If you have multiple applications mount the same  source_path  on the same service, poof, they have access to the same files over the network. \n It works for workers \n That includes workers, too.  A  local  mount source creates a container-specific mount on each app container\u2014one on the web instance and one on the worker instance.  A  service  mount source, however, inherits to both instances and points to the same directory on the storage service.  No extra work needed. \n It\u2019s also possible to define custom mounts for the workers and web instance separately, which can be local or network mounts.  And you can mix and match local and service mounts however you need.  See the  Network Storage documentation  for more details. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "New Germany region: more speed, more capability, lower cost, same data protection standards ", "url": "https://platform.sh/blog/2019/new-german-region/", "documentId": "a44d9c3251c3d7da229de116ff3d61a8796e456e", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           New Germany region: more speed, more capability, lower cost, same data protection standards \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Andrew Melck \n                  \n                   Regional Business Development Manager DACH \n                  \n                  \n                 \n            \n          \n         \n         22 May 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh took the lead among Platform-as-a-Service (PaaS) vendors in 2017 with our  announcement of a region in Germany , offering developers and enterprises strict compliance with Germany\u2019s data protection regulations (Bundesdatenschutzgesetz\u2013BDSG) and the European General Data Protection Regulation (GDPR EU-DSVGO). \n What could possibly make our offering better? \n How about more speed and capability? \n Platform.sh Enterprise in the Germany now offers our XL and 2XL project sizes. What does that mean for you? Support for bigger and more complex applications, especially ecommerce and  multiapp projects  like decoupled  Drupal ,  WordPress , or  Typo3  architectures. \n That capability is delivered with our  Enterprise support and uptime SLA \u2013the best in the business at 99.9% or 99.99%, depending on your architectural needs. Our customer solutions team will work with you to migrate your applications to the Germany region in no time. \n All that power, with stringent data control \n With roots in Europe, but with a global perspective and a global team that spans 14 time zones, we take security and compliance with regional standards seriously. \n \n Customer data is encrypted and resides solely in German data centers. \n Innovative data localization controls and capabilities\u2014realized, in part, through a  Horizon 2020 European Commission Grant \u2014are audited rigorously. \n Our German data centers are operated with Google Cloud Platform. Our automation and security mechanisms (employed in  every  Platform.sh region) ensure your data will be encrypted and remain in German data centers\u2014and that no unauthorized access can take place.  If you\u2019re counting, that makes four different IaaS partners that Platform.sh now officially supports! \n Our German entity, Platform.sh GmbH, is a wholly owned subsidiary of our French entity, Platform.sh SAS. As a German customer, you\u2019ll have a contract with a German entity\u2014all governed by EU law. \n \n Oh, did we mention it\u2019s less expensive? \n That\u2019s right. In addition to new capabilities and reliable compliance, we\u2019ve cut the price by 20%, working with our infrastructure partners at Google to deliver more value for fewer  \u20ac . \n When can I have it? \n You can start using Platform.sh in Germany  today .  Get started now  with Platform.sh Professional, or  Contact our team in Germany  to get a quote on Platform.sh Enterprise. \n Whether you\u2019ve got a single app, or a fleet of sites, we\u2019re ready to help you focus on delivering great digital\u2013without worrying about infrastructure or compliance. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh CEO Fred Plais on Digital Trends Live ", "url": "https://platform.sh/blog/2019/fred-plais-digital-trends-live/", "documentId": "fd8e21726572476ecae8cbee4cbb54799b157b32", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh CEO Fred Plais on Digital Trends Live \n         \n\n        \n         \n            \n              \n          \n         \n         29 May 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n           \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh\u2013deploying the future of content with one click \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Our Black Friday gift: 10,000 CPUs, overnight without downtime ", "url": "https://platform.sh/blog/our-black-friday-gift-10000-cpus-overnight-without-downtime/", "documentId": "03ee9ec52500716db24644cc8f9871fd0747a43d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Our Black Friday gift: 10,000 CPUs, overnight without downtime \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Yates \n                  \n                   VP Marketing \n                  \n                  \n                 \n            \n          \n         \n         16 Nov 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Black Friday may be just a week away, but shoppers have already started descending on ecommerce sites everywhere. \u201cThe new normal\u201d in online retail is that bargain hunters are starting earlier than ever. With thousands of Magento, Drupal Commerce, and custom storefronts running on Platform.sh, that means it\u2019s time to add capacity to handle that demand. \n In the DIY world, adding capacity often means either downtime, or unpredictable changes in cost as auto-scaling algorithms do their thing\u2014or sometimes both. Regardless, setup and management of scaling, with high availability for each tier of an application, comes at a cost in terms of DevOps time and technology. \n Platform.sh customers have been able to have their ecommerce storefronts upsized for the Black Friday/Cyber Monday week seamlessly, with no effort or investment on their part\u2014and without downtime for their customers.\u00a0 \n Just last night, we launched more than 10,000 CPUs worth of capacity, across hundreds of customers, in seven different regions worldwide. When the traffic crush is over, returning to normal levels will be just as easy and seamless\u2013delivering both the performance online shoppers expect and the budget predictability merchants need. \n And of course, our customer success team will be fully staffed to support our customers on Black Friday. \n Are you expecting big traffic changes? Just  open a ticket with our team  and let them know. Tired of operating on brittle infrastructure? You can  contact our sales team  to find out you can Deploy on Friday with confidence\u2013even on Black Friday. \n\u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "We have updated our policies ", "url": "https://platform.sh/blog/2019/tos-privacy-update/", "documentId": "7d1ce6281afcd64a3663db9733350135ae38dd45", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           We have updated our policies \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Joey Stanford \n                  \n                   Security, Compliance and Data Protection Officer \n                  \n                  \n                 \n            \n          \n         \n         25 Apr 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We have updated our  Terms of Service , located at  https://platform.sh/tos  and  Privacy Policy , located at  https://platform.sh/privacy-policy . \n We made these specific changes to our Privacy Policy: \n \n Expanded Article 7 in regard to transferring your private data and information \n \n We made these specific changes to our Terms of Service: \n \n Clarification of security responsibilities for customer accounts that do not involve Platform.sh products and services. \n Clarification of responsibilities for use of third-party software \n \n If you have questions about these updates, please  contact us . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Learning to trust the machines and the process in DevOps ", "url": "https://platform.sh/blog/2019/it-worked-in-staging/", "documentId": "cface6d1a510f5e5b6a8c4f02ee1eecc23c22b3a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Learning to trust the machines and the process in DevOps \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Yates \n                  \n                   VP Marketing \n                  \n                  \n                 \n            \n          \n         \n         25 Apr 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \u201cIt worked in staging\u201d \n \u2026 says the dev team. And the ops team replies: \u201cit must be a code issue.\u201d \n Developers and ops people sometimes have different perspectives on why a deployment went wrong. Was it the code? Or the infrastructure? In the end, it\u2019s the user that suffers, and that user doesn\u2019t care about  why  your product was broken.  They just want it to work, so they can do their work. \n It really did work in staging \n Everyone on the team wants to get things right the first time, deploying a quality product with every feature release. That\u2019s why development teams adhere to deployment best practices. They write tests. They write code. They test that code in staging environments that mimic the production environments that code will run in \u2026  as closely as possible . \n Every member of the team approaches projects with not only best practices, but with best intentions. But, as the saying goes, we\u2019re all only human. \n \n \"Sometimes, humans miss things.\u201d \n \u2013 Computers \n \n A slightly different network configuration here, an older version of a PHP extension or NPM module there, and suddenly the places where code is being tested before launching it to the world aren\u2019t quite perfectly in sync. And the code that ran fine in QA falls down in production. \n It gets worse when teams meet bottlenecks. For example, a limited set of environments, or worse, a single staging environment that code has to pass through. Who hasn\u2019t done a \u2018hotfix\u2019 to resolve a critical problem in prod (without the same testing process we\u2019d normally use) because we couldn\u2019t wait to send it through QA or staging environment in use by others? \n It really was a code change \n Or maybe it was a different version of the XYZ module after all? How do we know? Often management of code and infrastructure configuration are siloed, sometimes driven and managed by separate teams. \n Though software development has come a long way\u2014test-driven development (TDD), rigorous code review processes, automated testing, and more\u2014it remains rare to manage the whole  system  including infrastructure and data with the same tools and process. \n As a result, it\u2019s difficult to tell at a glance which change to the system was the direct cause of a fault, and sometimes it\u2019s hard to know that the system state has changed at all. That\u2019s due, in large part, to having separate tools and processes to manage change in code versus infrastructure, dev versus ops. \n Driving Dev/Ops alignment \n Developers are measured by the features they ship. Ops is measured by uptime and performance. The most important person, the user, doesn\u2019t differentiate between who\u2019s at fault if the product/site/service/experience you\u2019re offering them falls short of their expectations. \n How do we solve for the user\u2019s concern and deliver features they want, and reliability they expect? \n Stop working in silos \n Development and Ops need to take a unified approach to managing change. The scripts and tools that manage infrastructure should be subject to the same process and rigor, and managed as a system, instead of independent parts. At a glance, you should be able to tell when a version of a runtime was updated, or an application code update was made. \n \n Platform.sh takes silo-smashing to a new level.  Everything\u2014from the app code, to the routing between services, the version of a runtime (e.g. PHP, Python, Node), the continuous integration (CI) scripts, and the system topology\u2014is managed in Git, making those changes transparent and auditable by all. \n \n Trust the machines \n When humans are involved, drift happens. Changes that are made to a production configuration don\u2019t always make it back to staging and development environments. Humans take shortcuts. Humans forget things. Sometimes it\u2019s a cost concern, sometimes it\u2019s a technical one, sometimes it\u2019s just human error. But when differences emerge, systems break, and tests are no longer valid. Automation is the answer. Replicate all changes made to production environment configurations to your staging and dev, from infrastructure configuration to code. \n Oh, and let\u2019s not forget about the impact of data. You\u2019ll want to sync your production data (scrubbed as needed) back to your other environments to get a true \u201clike for like\u201d test. All of this automation can be difficult and time consuming, not to mention expensive. Therefore, it\u2019s uncommon. Further, due to organizational, process, and tooling silos, \u201cdev,\u201d \u201cstage,\u201d and \u201cprod\u201d are only loosely linked in many organizations. So it\u2019s a challenge just to get access to the systems that need to match. \n \n Platform.sh makes perfect clones, with zero effort.  We\u2019ve built Platform.sh as an end-to-end platform for developing and delivering applications. Because we\u2019re in the production runtime, and we\u2019ve built around Git, we give our users the ability to instantly synchronize their production environments\u2014including infrastructure configuration, CI scripts, and  all the data \u2014to their development and staging environments, with a single click or command, in seconds. \n \n Get nonlinear \n System stability is often negatively impacted by human activity. We humans break rules. We find workarounds. We do things ever-so-slightly differently each time, especially when we\u2019re tired or stressed or hungry. \n When we\u2019re faced with a demand to ship, under pressure, we may overlook some testing. Or work around a congested staging environment and commit to prod. \n To prevent this, dev and ops teams should again work towards greater automation and deploy tools that allow them to work in parallel, rather than in series, on environments that closely mimic production systems. \n \n Platform.sh gives you infinite staging capacity.  We\u2019ve taken our Git-driven workflow to its logical conclusion. When you create a branch in Git, we create an environment. In moments. Including a byte-for-byte copy of stateful services like databases, queues, and search. This way, every feature, every developer, and every team can work in their own perfect clone of prod. Teams can test changes to code, topology, or dependencies. When they\u2019re sure it works, a Git merge deploys those changes to production, automatically, so developes can feel confident. \n \n Getting predictable \n The mantra of a DevOps culture should be \u201cAutomate everything.\u201d Trust the machines. Once deployments become sufficiently automated, they become non-events. You should be able to deploy your  system  at any time\u2014even on a Friday afternoon. \n Getting there requires both organizational alignment around the goal of predictability  with  speed, as well as the right toolkit. That combination enables teams to deliver what users care about\u2014reliable, featureful apps that run well, all the time. \n Read more \n \n Platform.sh CEO and co-founder Fred Plais on how Platform.sh runs 15,000 clones each day and helps developers release code faster \n APAC director Chris Skene on the Platform.sh build-and-deploy pipeline \n How repeatable deployments work \n Production is an artifact of development \n The container is a lie! How cloud infrastructure really works \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             The container is a lie! \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building high-performance organizations for cloud application development \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A great Kubernetes alternative \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Solutions", "title": "Hosting and workflow for digital agencies and development companies ", "url": "https://platform.sh/solutions/agency/", "documentId": "61e8ae04a6b321bc488d25f25559fe1c0cf5aed2", "text": "\n   \n     \n       \n     \n         Digital agencies \n\n        \n\n        \n         Transform the way your team builds web apps \n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n        \n      \n     \n   \n \n   \n     \n       The most flexible hosting platform    for digital agencies \n       With Platform.sh, you can increase developer productivity, agency profitability, and client satisfaction. \n     \n   \n   \n     \n       \n         \n           \n             A cloud environment for every branch \n             Free agency website hosting \n             Strict data localization \n           \n         \n         \n           \n             Zero infrastructure management tasks \n             Project dashboard \n             24x7 support \n           \n         \n         \n           \n             Free user licenses for  your team \n             99.99% uptime SLA on the Enterprise stack \n           \n         \n       \n     \n   \n   \n     \n       \n   \n     Explore our Partner Program \n     \n   \n \n\n       \n   \n \n   \n     \n       Capabilities to meet ever-evolving demand \n     \n   \n   \n     \n       \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Exercise your flexibility \n    \n    \n     Out-of-the-box support for an array of languages and frameworks empowers your developers to tailor solutions to customer needs. All while freeing you from technology lock-in, mitigating your risk, and increasing your competitive advantage. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Simplify your workflow \n    \n    \n     With Platform.sh, your team can focus on what\u2019s important: creating amazing customer experiences that drive revenue. Eliminate workflow bottlenecks by instantly cloning your entire production stack (including services and their data) to speed new apps and features to market; streamline client reviews, approvals, and UAT in the process. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Take your business to new heights \n    \n    \n     Propel your agency\u2019s growth by tapping into new opportunities and by expanding your offering into new markets. Align your sales and marketing strategies with Platform.sh capabilities to expand your portfolio, and easily scale your business to meet client demand. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n\n     \n       Digital agencies love Platform.sh \n       \n   Read their stories \n   \n \n\n     \n\n     \n       \n         \n           \n             \n             Previous \n           \n           \n             \n             Next \n           \n         \n\n         \n           \n             \n               \n                 \n                   Platform.sh enables us to use a single solution provider for all the different technologies and approaches we use for our projects. We see this as our number-one Platform.sh benefit. We can also handle a higher volume of projects\u2014and work on more projects concurrently\u2014than we could before.\u201d \n                 \n                 \n                   Rainer Friederich , CTO and Managing Partner, WONDROUS \n                 \n               \n             \n           \n           \n             \n               \n                 \n                   We can set up a prototype branch in minutes, test, and share new features with our clients, and immediately get their feedback. We can do all of our work more quickly, and that\u2019s a cost savings to our clients. That means happier clients who will (hopefully) keep coming back to us.\u201d \n                 \n                 \n                   Glenn Hodgkinson , Co-founder, Thinkbean \n                 \n               \n             \n           \n           \n             \n               \n                 \n                   We searched for a solution and found that Platform.sh offered the most extensive feature set and has technical tools that are missing from other Drupal-focused PaaS providers. Having a fixed monthly cost model is appreciated by our clients, so they can budget consistently; Platform.sh provides all the benefits of a cloud service without the cost uncertainties.\u201d \n                 \n                 \n                   Barry Fisher , Director, Real Life Digital \n                 \n               \n             \n           \n           \n             \n                \n                  \n                    It\u2019s not often that Oxbow Labs and Platform.sh can say that we literally save puppies and kittens, but in this case, it\u2019s not hyperbole. In the years since we built the Humane Society of the Pike's Peak Region website, adoption rates have increased an average of 23 percent per year. And more than 30,000 pets have been reunited with their families. Platform.sh sustained reliability, performance, and improved development workflow were certainly contributing factors in the society's success.\u201d \n                  \n                  \n                    Winn Jewett , Founder, Oxbow Labs \n                  \n                \n              \n            \n          \n         \n       \n     \n   \n   \n     \n       Learn more about becoming a partner \n      \n      \n       \n         Explore our Partner Program \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "We have updated our privacy policy ", "url": "https://platform.sh/blog/2019/privacy-policy-update/", "documentId": "5bf3499476949ececb854a836b0402ed7a7a1cf2", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           We have updated our privacy policy \n         \n\n        \n         \n            \n              \n          \n         \n         10 Jun 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We\u2019ve made a minor update to our privacy policy, to update the list of domains from which customer sites are served. We want to make it clear which properties are governed by the  Platform.sh privacy policy , and which are excluded from that policy (because they are properties run by our customers). \n This update changes Section 1 of the policy to make the distinction more expicit. \n The Platform.sh privacy policy is available at  https://platform.sh/privacy-policy . \n As always, if you have questions or concerns you contact us  here . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "SOC 2 certification: challenges and opportunities ", "url": "https://platform.sh/blog/2019/soc-2-certification-challenges-and-opportunities/", "documentId": "31103db67cc3f11f8779ffd0ebe7444751f2fc48", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           SOC 2 certification: challenges and opportunities \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Joey Stanford \n                  \n                   Security, Compliance and Data Protection Officer \n                  \n                  \n                 \n            \n          \n         \n         17 Jun 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, I wanted to share some thoughts about Platform.sh Service Organization Control (SOC) 2 Security and Availability certification (2017 TSC). We\u2019ve completed a SOC 2 Type 1 audit, and the Type 2 audit is now underway. If you aren\u2019t familiar with the SOC 2 terminology, the Type 1 audit is a point-in-time audit; in contrast, Type 2 audits are monthly, verifying that an organization maintains compliance. \n The challenges \n Undergoing an SOC 2 audit has its challenges. The most significant for us? Employee and financial investments. \n \n Employee investment.  We\u2019re a fast-moving scale-up that runs as lean as possible. Interrupting our normal cadence (for weeks on end) to undergo the audit\u2014and to close the few gaps we had\u2014consumed a lot of staff time. The process put a tangible strain on the organization as they responded to audit requests and modified current documentation and procedures. Thankfully, no serious gaps were uncovered, and we were able to complete our audit six months ahead of schedule. \n Financial investment.  SOC 2 audits aren\u2019t inexpensive. At the low end, the investment can be staggering: tens of thousands of dollars. Other cost factors include additional services, such as third-party scanning and pen testing, and employee background checks. Some customer requests may need to be put on the back burner as the team focuses on the audit. \n \n The opportunities \n There must be tangible benefits to SOC 2 for SMBs to justify the expenses. We certainly think so. For Platform.sh, the most important benefits were: \n \n Third-party audits.  Being audited by a third party validates that we adhere to a standard; it\u2019s a verified, impartial result. To our team, this validation confirms we\u2019re on the correct course. For our customers, it provides a sense of security stemming from demonstrated competence. \n Satisfying contractual requirements.  SOC 2 is a business requirement for many of our prospective and current customers. To meet their needs and preserve and nurture those critical relationships, SOC 2 certification was a must-do. And it helps us validate GDPR compliance activities. \n Risk mitigation for security events.  Every company has security events, and Platform.sh is no different. The SOC 2 audit forced full disclosure of our processes, incident logs, internal and customer communications, impacts on availability, software update processes, and more. Having a holistic review by an audit firm told us that we were doing things in a good manner. The review also gave us reassurance that we were correctly mitigating security risk exposures. \n Reviewing vendor-management practices.  SOC 2 and ongoing GDPR compliance mandate that we have a policy and process to periodically review vendor security. Putting a regularly scheduled health check on our vendor-management practices enables us to meet these requirements. \n \n For Platform.sh, undergoing SOC 2 was a highly relevant, worthwhile investment. The process confirmed our policies and practices measure up to today\u2019s security standards. And we\u2019re happy with the results. We trust our customers will be equally satisfied. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Web dev + IT: unique roles, equal partners in application success ", "url": "https://platform.sh/blog/2019/web-dev-plus-it-unique-roles-equal-partners-in-application-success/", "documentId": "b0e60298e427a99ad30b9aad2ab9c6e3e859636c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Web dev + IT: unique roles, equal partners in application success \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Fred Plais \n                  \n                   CEO \n                  \n                  \n                 \n            \n          \n         \n         24 Jun 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         When web teams build a site, DevOps is one of the least visible tasks\u2014and one of the most time consuming. A shiny, user-friendly site, with relevant features and a well-structured content hierarchy, garners all the attention. In the background, approximately 30 percent of the typical web dev team\u2019s time is devoted to plumbing: cloud infrastructure, the database, the search engine, and the so-called services layers the application requires to run. \n The plumbing generally falls within the realm of the IT department (or more recently, the DevOps team  within  the IT department). Traditionally, the digital application team and the IT team have collaborated to build and run a web project. \n With Platform.sh, digital teams have now the ability to work in full autonomy without requiring any build work from the IT team. That independence comes with significant benefits and hugely accelerates the delivery of an application. Think of it: no need to wait for IT to provide the development and staging environments. With Platform.sh, it comes right out of the box\u2014in seconds. No need for the painful process of sending tickets back and forth. And no need to set up the machine of each developer on the team. It\u2019s all fully automated. Yay! (This is  so  much better for everyone.) \n But, as with most things, there\u2019s a limit. Even if the IT department doesn\u2019t have to build anything, they still have mission-critical work to perform. And Platform.sh has built a platform that supports and enhances an IT team\u2019s requirements. \n What\u2019s IT\u2019s role in a web project built on Platform.sh? \n Define governance.  There are a few fundamental questions that need to be answered in every project. Who has permissions to push to production? Who has access to the data? Who has access to confidential data? Who can commit code and in which branch? Determining governance is crucial. At the end of the day, IT is responsible for access management, and every project will need to be compliant with a company\u2019s general  guidelines. Platform.sh accommodates these requirements very nicely. Environments (including production) will be made available only to the right team members, who will either be a viewer, a contributor, or an admin. This approach enables very fine-grained user management and maps to the company\u2019s governance policy. \n Ensure security.  In today\u2019s world, security is the primary responsibility of any IT team. Most companies have in-house security specialists who are in charge of reviewing external parties\u2019 and vendors\u2019 security practices and policies. At Platform.sh, we take security extremely seriously. Among the really cool things we offer? Robust traffic routing controls, DDoS mitigation, and a web application firewall. All of our containers are read-only. We use hardened kernels and have auto-updated services ( and many other really nice features ). It\u2019s the job of the security team to review these features to ensure compliance with their internal policies. \n Manage compliance guidelines.  In the enterprise world, IT will also define criteria their vendors must meet. Here at Platform.sh, we\u2019re on a rigorous compliance track of our own. We\u2019ve already secured SOC-2 certification and maintain GDPR compliance. This is just the beginning; PCI compliance is now in progress, and there\u2019s more to come. \n One platform for all \n At Platform.sh, we see many customer projects kick off as shadow IT. We understand the need for speed, and why digital teams under time constraints may want to take shortcuts. But web dev teams can confidently involve their IT counterparts in their projects. IT staff play a critical role in demanding web projects and beyond.  Our  team prides itself on being strong partners to IT staff; we understand their needs and their concerns. To support them, we\u2019re building a platform that\u2019s absolutely IT-aware and IT-friendly. So, together, digital and IT teams can collectively drive project success. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Java: Hello, World! at Platform.sh ", "url": "https://platform.sh/blog/2019/java-hello-world-at-platform.sh/", "documentId": "733ed6e45180e47d83354b15650d84e355fc99ac", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Java: Hello, World! at Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         06 Jun 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, Platform.sh is announcing support for Java technologies. And in this post, we\u2019ll cover how easy it is to either create or move your Java application to Platform.sh. \n A quick refresher: a second-generation Platform-as-a-Service, Platform.sh is built especially for continuous deployment. With Platform.sh, you can host web applications in the cloud while making your development and testing workflows more productive. As the premier tool for developing and delivering applications in Drupal, WordPress, Symfony, Typo3, EZ, and Magento, Platform.sh also supports an array of  languages, including PHP, Node.js, Python, Ruby, and Go. \n Now, back to Java! We\u2019ll show a Spring-Boot application connected to a MySQL database instance using Maven to automate the build and install. In the Java world, Spring Boot makes it easy to create stand-alone, production-grade, Spring-based applications that you can just run. \n Show me the code \n Platform.sh supports common Java tools, and so we\u2019ll use the  Spring Initializr  to create a Spring Maven Project with Java 8, and append the MySQL driver as a dependency. There\u2019s also a  Platform.sh configuration library  that reads Platform.sh-specific details, like routes and environmental variables, and exposes them to the application. Here\u2019s the pom.xml file: \n <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n <project   xmlns= \"http://maven.apache.org/POM/4.0.0\"   xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n     \t xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > \n\t <modelVersion > 4.0.0 </modelVersion> \n\n\t <groupId > com.mycompany </groupId> \n\t <artifactId > template-spring-boot-maven-mysql </artifactId> \n\t <version > 0.0.1 </version> \n\n\t <properties > \n    \t <java.version > 1.8 </java.version> \n\t </properties> \n\n\t <parent > \n    \t <groupId > org.springframework.boot </groupId> \n    \t <artifactId > spring-boot-starter-parent </artifactId> \n    \t <version > 2.1.5.RELEASE </version> \n\t </parent> \n\n\t <dependencies > \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-web </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-data-jpa </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > mysql </groupId> \n        \t <artifactId > mysql-connector-java </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > sh.platform </groupId> \n        \t <artifactId > config </artifactId> \n        \t <version > 2.2.0 </version> \n    \t </dependency> \n\t </dependencies> \n\n\t <build > \n    \t <finalName > spring-boot-maven-mysql </finalName> \n    \t <plugins > \n        \t <plugin > \n            \t <groupId > org.springframework.boot </groupId> \n            \t <artifactId > spring-boot-maven-plugin </artifactId> \n        \t </plugin> \n    \t </plugins> \n\t </build> \n\n\t <repositories > \n    \t <repository > \n        \t <id > oss.sonatype.org-snapshot </id> \n        \t <url > http://oss.sonatype.org/content/repositories/snapshots </url> \n    \t </repository> \n\t </repositories> \n </project> \n Spring Data JPA , part of the larger Spring Data family, makes it easy to quickly implement JPA-based repositories. This module deals with enhanced support for JPA-based data access layers, making it easier to build Spring-powered applications that use data access technologies. In this example, you store Person objects annotated as a JPA entity. \n \n import   javax.persistence.Column ; \n import   javax.persistence.Entity ; \n import   javax.persistence.GeneratedValue ; \n import   javax.persistence.GenerationType ; \n import   javax.persistence.Id ; \n import   java.util.Objects ; \n\n @Entity \n public   class   Person   { \n\n\t @Id \n\t @GeneratedValue ( strategy   =   GenerationType . IDENTITY ) \n\t private   Long   id ; \n\n\t @Column \n\t private   String   name ; \n\n\t @Column \n\t private   Integer   age ; \n\n\n  //getter and setter\n } \n Spring Data JPA focuses on using JPA to store data in a relational database. Its most compelling feature is the ability to create repository implementations automatically, at runtime, from a repository interface. \n import   org.springframework.data.repository.PagingAndSortingRepository ; \n\n public   interface   PersonRepository   extends   PagingAndSortingRepository < Person ,   Long >   { \n } \n\n After creating the model and the repository, the last step in the Java application is the controller with a REST. The  @RequestMapping  annotation provides \u201crouting\u201d information. It tells Spring that any HTTP request with the / path should be mapped to the home method. The  @RestController  annotation tells Spring to render the resulting string directly back to the caller. \n import   org.springframework.beans.factory.annotation.Autowired ; \n import   org.springframework.http.HttpStatus ; \n import   org.springframework.web.bind.annotation.DeleteMapping ; \n import   org.springframework.web.bind.annotation.GetMapping ; \n import   org.springframework.web.bind.annotation.PathVariable ; \n import   org.springframework.web.bind.annotation.PostMapping ; \n import   org.springframework.web.bind.annotation.PutMapping ; \n import   org.springframework.web.bind.annotation.RequestBody ; \n import   org.springframework.web.bind.annotation.RequestMapping ; \n import   org.springframework.web.bind.annotation.ResponseStatus ; \n import   org.springframework.web.bind.annotation.RestController ; \n\n\n @RestController \n @RequestMapping ( \"people\" ) \n public   class   PersonController   { \n\n\t @Autowired \n\t private   PersonRepository   repository ; \n\n\n\t @PostMapping \n\t @ResponseStatus ( code   =   HttpStatus . CREATED ) \n\t public   String   save ( @RequestBody   Person   person )   { \n    \t repository . save ( person ) ; \n    \t return   \"Saved- \"   +   person . getName ( ) ; \n\t } \n\n\t @GetMapping ( value   =   \"/{id}\" ,   produces   =   \"application/json\" ) \n\t public   Person   get ( @PathVariable ( \"id\" )   long   id )   { \n    \t return   repository . findById ( id ) . orElseThrow ( ( )   - >   new   RuntimeException ( \"Not found\" ) ) ; \n\t } \n\n\t @GetMapping ( produces   =   \"application/json\" ) \n\t public   Iterable < Person >   get ( )   { \n    \t return   repository . findAll ( ) ; \n\t } \n\n\n\t @PutMapping ( value   =   \"/{id}\" ,   produces   =   \"application/json\" ) \n\t public   Person   update ( @PathVariable ( \"id\" )   long   id ,   @RequestBody   Person   person )   { \n    \t repository . save ( person ) ; \n    \t return   person ; \n\t } \n\n\t @DeleteMapping ( value   =   \"/{id}\" ,   produces   =   \"application/json\" ) \n\t public   Person   delete ( @PathVariable ( \"id\" )   long   id )   { \n    \t Person   person   =   repository . findById ( id ) . orElseThrow ( ( )   - >   new   RuntimeException ( \"Not found\" ) ) ; \n    \t repository . deleteById ( id ) ; \n    \t return   person ; \n\t } \n } \n\n import   org.springframework.boot.SpringApplication ; \n import   org.springframework.boot.autoconfigure.SpringBootApplication ; \n\n @SpringBootApplication \n public   class   App   { \n\t public   static   void   main ( String [ ]   args )   { \n    \t SpringApplication . run ( App . class ,   args ) ; \n\t } \n\n } \n The final part of our application is a startup. It\u2019s a standard method that follows the Java convention for an application entry point. SpringApplication bootstraps the app, starting Spring on a Tomcat web server. \n Platform.sh structure \n The Java application is ready to go! The next step is to set the Platform.sh files required to manage and deploy the demo. Every application you deploy on Platform.sh is built as a virtual cluster, containing a set of containers. There are three types of containers within your cluster: \n \n One Router (.platform/routes.yaml). Platform.sh allows you to define the  routes . \n Zero or more service containers (.platform/services.yaml). Platform.sh allows you to completely define and configure the topology and services you want to use on your  project . \n One or more application containers (.platform.app.yaml). You control your application and the way it will be built and deployed on Platform.sh  via a single configuration file . \n \n The  services  file allows you to define the services such as database, search engine, cache and so on; in this project demo, it will be a MySQL instance. \n database : \n    type :   mysql : 10.2 \n    disk :   1024 \n The routes file defines the environment\u2019s routes; there are several options, such as cache and redirects, but we won\u2019t cover these in this post. For more information,  see the documentation . \n https : //{ default}/ : \n    type :   upstream \n    upstream :   \"app:http\" \n The final configuration file,  .platform.app.yaml , specifies a single application, and defines how to build and execute it. Here\u2019s the structure: \n \n name.  Sets the unique name of the application container. \n type.  Sets the container base image to use, including application language. We\u2019re using Java version 8, but there are more Java versions that Platform.sh supports. \n hooks.  Controls how the application gets compiled. This example uses a Maven command to compile, but there\u2019s support for Gradle and Ant. \n relationships.  Defines connections to other services, such as the MySQL database instance. \n web.  Controls how the web application is served. As an uber-jar, the application will execute a Spring Jar file. Also, the application must use the port that\u2019s provided from the container through a  $PORT  variable. \n \n name :   app \n type :   \"java:8\" \n \n disk :   1024 \n \n hooks : \n    build :   mvn   clean   install \n \n relationships : \n    database :   \"database:mysql\" \n web : \n    commands : \n      start :     java   -jar   target/spring-boot-maven-mysql.jar   --server.port=$PORT \n Platform.sh and Java \n For the database, we need to define where the connection comes from. Platform.sh provides connection credentials to services using the PLATFORM_RELATIONSHIPS environmental variable. \n import   org.springframework.context.annotation.Bean ; \n import   org.springframework.context.annotation.Configuration ; \n import   sh.platform.config.Config ; \n import   sh.platform.config.MySQL ; \n\n import   javax.sql.DataSource ; \n\n @Configuration \n public   class   DataSourceConfig   { \n\n\t @Bean ( name   =   \"dataSource\" ) \n\t public   DataSource   getDataSource ( )   { \n    \t Config   config   =   new   Config ( ) ; \n    \t MySQL   database   =   config . getCredential ( \"database\" ,   MySQL : : new ) ; \n    \t return   database . get ( ) ; \n\t } \n } \n The Java Config offers classes that will read the information from the variable and return an object that represents the services, like  a DataSource for MySQL, PostgreSQL, MongoClient, Redis, or any other services you\u2019ve  defined in .platform/services.yaml! \n The application is now ready, so it\u2019s time to move it to the cloud with Platform.sh using the  following steps : \n \n Create a new  free trial account . \n Sign up with a new user and password, or login using a current  GitHub, Bitbucket, or Google account. If you use a third-party login, you\u2019ll be able to set a password for your Platform.sh account later. \n Select the region of the world where your site should live. \n Select the blank template. \n \n After this wizard, Platform.sh will provision the whole infrastructure to you, and Platform.sh will offer a Git remote repository. Before access, remember to set the SSH keys. The Platform.sh Git-driven infrastructure means it will automatically manage everything your application needs to push it to the master remote repository. You only need to write your code\u2014including a few YAML files that specify your desired infrastructure\u2014then commit it to Git and push. \n git remote add platform <platform.sh@gitrepository>\ngit commit -m  \"Initial project\" \ngit push -u platform master\n Code pushed will create both the Java application, a MySQL instance, and, when it\u2019s done, will return an IP address to the service. Let\u2019s test the application. To test a REST application, any HTTP client is OK. \n curl -X POST -H  \"Content-Type: application/json\"   -d  '{\"name\": \"Paulo\", \"age\": 50}'  https://<service.ip>/people\ncurl -X POST -H  \"Content-Type: application/json\"   -d  '{\"name\": \"Otavio\", \"age\": 30}'  https://<service.ip>/people\ncurl -X POST -H  \"Content-Type: application/json\"   -d  '{\"name\": \"Poliana\", \"age\": 25}'  https://<service.ip>/people\ncurl https://<service.ip>/people\n #result output here \n You\u2019ve now seen how a native integration between Java and Platform.sh works, and the result code confirms it! As a Java developer, you can bring your application to the cloud quickly with Platform.sh once that application uses either Maven, Gradle, and Ant as build management. \n There are templates for Java and other languages in our SaaS. We\u2019re working to have even more facilities, templates models, and services to help grow the Java and Platform.sh community. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "New API docs help you automate workflows ", "url": "https://platform.sh/blog/2019/new-api-docs-help-you-automate-workflows/", "documentId": "1b2c83dd35d6f08fdf5a89c35235b5e774458e61", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           New API docs help you automate workflows \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Nick Anderegg \n                  \n                   Developer Relations Engineer \n                  \n                  \n                 \n            \n          \n         \n         10 Jul 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Look ma! No hands! \n Although our main API is Git itself, Platform.sh has a powerful RESTful API that enables you to manage nearly every aspect of your account and the projects you host with us. \n Today, we\u2019re happy to announce that we\u2019re launching a new documentation site that details  our entire RESTful API, so you can use it to build robust development and management workflows, as well as integrations with your CI systems and internal services. \n You can  check out these docs right now . \n What can I do with the API? \n Everything! If you\u2019re already a Platform.sh customer, you\u2019re likely accustomed to interacting with your projects through our  management console  or our  CLI tool . With our API, you can automate all of those interactions! You can  create a new project  to run your app, and  manage snapshots  of your production and development environments. Or integrate your project with  third-party services , like Git repositories, health notification services, and webhooks. \n How you actually use this API is totally up to you. From a simple action\u2014like adding new domains to a project\u2014to a complex task\u2014like automating the process of creating and configuring new projects for each of your clients\u2019 applications\u2014there\u2019s virtually no limit to  what you can build. \n How do I get started? \n Because this is a REST API, all you need to get started is an API token. Once you have that, you can start making calls directly, or you can check out one of our libraries on GitHub that make it easier to access the API, such as our  PHP API client  or our  JavaScript API client . \n If you already have an account with us, you can visit your accounts-setting page to  generate a new API token . \n Your API token can be exchanged for an access token with a  POST  request from your tool of choice. Here\u2019s an example using cURL: \n curl -X POST  \\\n   https://accounts.platform.sh/oauth2/token  \\\n   -H  'Content-Type: application/json'   \\\n   -d  '{\n          \"client_id\": \"platform-api-user\",\n          \"grant_type\": \"api_token\",\n          \"api_token\": \"YOUR_API_TOKEN\"\n   }' \n The response to your request will include an access token you can use to authenticate subsequent API requests. \n { \n     \"access_token\" :   \"abcdefghij1234567890\" , \n     \"expires_in\" :   3600 , \n     \"token_type\" :   \"Bearer\" , \n     \"scope\" :   \"account\" \n } \n If you don\u2019t already have an account on Platform.sh, and you want to see what our API can do, we have a  free trial  available, so you can start building right now! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Umami distribution testing automation with Diffy and Platform.sh ", "url": "https://platform.sh/blog/2019/umami-distribution-testing-automation-diffy-platformsh/", "documentId": "78396e0efcfc112961f5770c31263812fd9291ac", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Umami distribution testing automation with Diffy and Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Yuriy Gerasimov \n                  \n                   Founder, Diffy \n                  \n                  \n                 \n            \n          \n         \n         28 Jun 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         One of the big things that drives Drupal 8 adoption is an easy ability to \u201ctry it out.\u201d That is a fantastic Umami distribution project. \n \n Umami is part of the  Drupal 8 Out of the Box (OOTB) initiative , which aims to provide a demo of Drupal\u2019s capabilities\u2014complete with sample content and a well-designed custom theme. \n \n Recently, we were working on automating visual regression testing so maintainers have an easy way to check the patches. \n The only thing that is needed right now is to copy patch\u2019s URL, paste it into one of the test branches in GitHub project\u200a\u2014\u200aand in 5 \u2013 10 minutes, you\u2019ll get a report with all visual changes that this patch brings. And even more\u200a\u2014\u200avisual testing covers both anonymous users view and an admin as well. \n GitHub setup \n The main repository is available at  https://github.com/gareth-fivemile/umami-build . \n As you can see, it is fairly standard  Composer -based Drupal setup. \n The main logic resides in composer.json file. It uses latest Drupal 8.7 dev branch, and whenever you\u2019d like to test the patch there, you\u2019d simply add it in \u201cpatches\u201d section: \n \"patches\" :   { \n   \"drupal/core\" :   { \n     \"Fix styling of Umami for layout builder\" :   \"https://www.drupal.org/files/issues/2019-04-24/ootb-layout-builder-buttons-checkbox-3044366-38.patch\" \n   } \n } \n Platform.sh setup \n Platform.sh has provided an account for testing purposes. Thanks to Platform.sh  out-of-the-box integration with GitHub , we have configured \u201ctracking\u201d on three testing branches.\nOnce any commit lands (i.e., testing a patch), the related Platform.sh environment gets rebuilt. All logic resides in  .platform.app.yaml  file. \n Here are the hooks that get triggered on each deployment: \n hooks : \n    # The deploy hook runs after your application has been deployed and started. \n    deploy :   |\n       cd web \n      drush   si   demo_umami   -y   --account-pass=nKraDzZq8ZUq747Bn9PaXAB83   --account-mail= \"gareth@fivemilemedia.co.uk\" \n      drush   cron \n      drush   status   >   sites/default/files/drush-status.txt \n      php   ../scripts/diffy-visual-testing.php \n So you can see that we: \n \n Reinstall the site from scratch by using the Umami distribution \n Run cron \n Set up some debugging information \n Trigger visual regression testing \n \n Visual regression testing with Diffy \n The script that triggers visual regression testing jobs  does a few things: \n \n It gets all the credentials from Platform.sh variables \n It checks if the current branch is master or one of the test branches \n If it is a master branch, simply create screenshots \n If it is a test branch, create screenshots and compare them with latest screenshots from master branch environment (production in terms of Diffy) \n \n Once jobs are completed, we send a  notification email. Also, the diff gets renamed based on the branch name. So it is easy to track what environment was tested and when. \n \n Diff report for test branch \n As we are testing Umami with an authenticated user, Diffy is configured to have two separate projects: one project for an anonymous user and one for an authenticated user. \n \n Admin authenticated user \n Security and passing variables from Platform.sh to Diffy \n There was one very valid argument raised by  Mark Conroy , what about security? We do publish admin password in public GitHub repository. \n The way we solved it is by setting up HTTP basic authentication in Platform.sh and passing credentials to our script that triggers jobs. \n \n Platform.sh allows passing variables to your build scripts \n So, even with a public GitHub repository, only individuals with a  password would be able to access our builds and login. \n Other use cases \n Because this setup uses Composer, it is fairly easy to use for other Drupal projects/distributions. You can test themes, modules, or any other products that have some changes in UI that you\u2019d like to track. \n\n        \n\n\n\n  \n    \n     \n       \n        \n           \n        \n\n        \n           Yuriy Gerasimov \n        \n\n        \n           Skilled in back end, front end (vuejs fan), and DevOps work, Yuriy has presented at DrupalCon and at various camps across Europe and US. He\u2019s also a founder of  Diffy \u2014a visual regression testing tool that helps dozens of companies ship higher-quality sites with less stress. \n        \n       \n      \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Spring MVC and MongoDB: a match made in Platform.sh heaven ", "url": "https://platform.sh/blog/2019/spring-mvc-and-mongodb-a-match-made-in-platform.sh-heaven/", "documentId": "b17aba600e7ce32189c8c6af6cff75312f44c1be", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Spring MVC and MongoDB: a match made in Platform.sh heaven \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         19 Jun 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         How difficult is it for  a Java developer to create an application that needs to handle front-end technology? It\u2019s a difficult question\u2014and one that I hear every single day from back-end developers. So, how can we solve it in Spring world? With Spring MVC. \n Spring MVC makes it easy to create stand-alone, production-grade, Spring-based applications that you can just run. In this post, we\u2019ll show the perfect union between Spring MVC and MongoDB database, the NoSQL database most popular around the globe, running in the cloud on Platform.sh. \n The initial web framework built on the Servlet API, Spring MVC has been included in the Spring Framework from day one. Spring Web MVC follows the  Model-View-Controller  design pattern and implements all the basic features of a core Spring framework, including Inversion of Control and Dependency Injection. \n Show me the code \n Platform.sh supports common Java tools, and so we\u2019ll use the  Spring Initializr  to create a Spring Maven Project with Java 8, and append the  Spring Data MongoDB . There\u2019s also a  Platform.sh configuration library  that reads Platform.sh-specific details, like routes and environmental variables, and exposes them to the application. Here\u2019s the pom.xml file: \n <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n <project   xmlns= \"http://maven.apache.org/POM/4.0.0\"   xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n     \t xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > \n\t <modelVersion > 4.0.0 </modelVersion> \n\n\t <groupId > sh.platform.template </groupId> \n\t <artifactId > template-spring-mvc-maven-mongodb </artifactId> \n\t <version > 0.0.1 </version> \n\n\t <parent > \n    \t <groupId > org.springframework.boot </groupId> \n    \t <artifactId > spring-boot-starter-parent </artifactId> \n    \t <version > 2.1.5.RELEASE </version> \n\t </parent> \n\n\t <properties > \n    \t <java.version > 1.8 </java.version> \n\t </properties> \n\n\t <dependencies > \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-web </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-thymeleaf </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-devtools </artifactId> \n        \t <optional > true </optional> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-test </artifactId> \n        \t <scope > test </scope> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.data </groupId> \n        \t <artifactId > spring-data-mongodb </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > sh.platform </groupId> \n        \t <artifactId > config </artifactId> \n        \t <version > 2.2.0 </version> \n    \t </dependency> \n\t </dependencies> \n\n\t <build > \n    \t <finalName > spring-mvc-maven-mongodb </finalName> \n    \t <plugins > \n        \t <plugin > \n            \t <groupId > org.springframework.boot </groupId> \n            \t <artifactId > spring-boot-maven-plugin </artifactId> \n        \t </plugin> \n    \t </plugins> \n\t </build> \n </project> \n </code:xml> \n Spring Data MongoDB  is part of the umbrella Spring Data project, which provides  a familiar, consistent, Spring-based programming model for new datastores while retaining store-specific features and capabilities. \n import   org.springframework.data.annotation.Id ; \n import   org.springframework.data.mongodb.core.mapping.Document ; \n\n import   javax.validation.constraints.Email ; \n import   javax.validation.constraints.NotBlank ; \n\n @Document \n public   class   User   { \n\n\t @Id \n\t private   String   id ; \n\n\t @NotBlank ( message   =   \"Name is mandatory\" ) \n\t private   String   name ; \n\n\t @NotBlank ( message   =   \"Email is mandatory\" ) \n\t @Email ( message   =   \"Email is not valid\" ) \n\t private   String   email ; \n\n             //getter and setter\n } \n We have a User class with three attributes: ID, name, and email. The identifier is primarily designated for MongoDB internal use. The validate fields of the User class in this post will use  Bean Validation . Bean Validation\u2014part of JavaEE and JavaSE \u2014ensures that the properties of a Bean meet specific criteria by using annotations. \n Spring Data MongoDB focuses on storing data in MongoDB. It also inherits functionality from the Spring Data Commons project, like the ability to derive queries. For the most part, you don\u2019t have to learn the query language of MongoDB; you can write a handful of methods, and the Spring Boot MongoDB handles it for you. \n import   org.springframework.data.repository.CrudRepository ; \n import   org.springframework.stereotype.Repository ; \n\n @Repository \n public   interface   UserRepository   extends   CrudRepository < User ,   String >   { \n\n } \n Once Spring uses the MVC approach to building a website, the HTTP requests are handled by a controller. To control these requests, we\u2019ll create UserController that will have a @Controller annotation. Each HTTP verb has an annotation, such as GetMapping, thathandles GET HTTP requests, PostMapping that handles POST HTTP requests, and so on. \n import   org.springframework.beans.factory.annotation.Autowired ; \n import   org.springframework.stereotype.Controller ; \n import   org.springframework.ui.Model ; \n import   org.springframework.validation.BindingResult ; \n import   org.springframework.web.bind.annotation.GetMapping ; \n import   org.springframework.web.bind.annotation.PathVariable ; \n import   org.springframework.web.bind.annotation.PostMapping ; \n\n import   javax.validation.Valid ; \n\n\n @Controller \n public   class   UserController   { \n\n\t @Autowired \n\t private   UserRepository   userRepository ; \n\n\t @GetMapping ( \"/\" ) \n\t public   String   start ( Model   model )   { \n    \t model . addAttribute ( \"users\" ,   userRepository . findAll ( ) ) ; \n    \t return   \"index\" ; \n\t } \n\n\t @GetMapping ( \"/signup\" ) \n\t public   String   showSignUpForm ( User   user )   { \n    \t return   \"add-user\" ; \n\t } \n\n\t @PostMapping ( \"/adduser\" ) \n\t public   String   addUser ( @Valid   User   user ,   BindingResult   result ,   Model   model )   { \n    \t if   ( result . hasErrors ( ) )   { \n        \t return   \"add-user\" ; \n    \t } \n\n    \t userRepository . save ( user ) ; \n    \t model . addAttribute ( \"users\" ,   userRepository . findAll ( ) ) ; \n    \t return   \"index\" ; \n\t } \n\n\t @GetMapping ( \"/edit/{id}\" ) \n\t public   String   showUpdateForm ( @PathVariable ( \"id\" )   String   id ,   Model   model )   { \n    \t User   user   =   userRepository . findById ( id ) . orElseThrow ( ( )   - >   new   IllegalArgumentException ( \"Invalid user Id:\"   +   id ) ) ; \n    \t model . addAttribute ( \"user\" ,   user ) ; \n    \t return   \"update-user\" ; \n\t } \n\n\t @PostMapping ( \"/update/{id}\" ) \n\t public   String   updateUser ( @PathVariable ( \"id\" )   String   id ,   @Valid   User   user ,   BindingResult   result ,   Model   model )   { \n    \t if   ( result . hasErrors ( ) )   { \n        \t user . setId ( id ) ; \n        \t return   \"update-user\" ; \n    \t } \n\n    \t userRepository . save ( user ) ; \n    \t model . addAttribute ( \"users\" ,   userRepository . findAll ( ) ) ; \n    \t return   \"index\" ; \n\t } \n\n\t @GetMapping ( \"/delete/{id}\" ) \n\t public   String   deleteUser ( @PathVariable ( \"id\" )   String   id ,   Model   model )   { \n    \t User   user   =   userRepository . findById ( id ) . orElseThrow ( ( )   - >   new   IllegalArgumentException ( \"Invalid user Id:\"   +   id ) ) ; \n    \t userRepository . delete ( user ) ; \n    \t model . addAttribute ( \"users\" ,   userRepository . findAll ( ) ) ; \n    \t return   \"index\" ; \n\t } \n } \n Thymeleaf parses the HTML templates and evaluates all expressions to render the value that was set in the controller. \n <!DOCTYPE html> \n < html   xmlns:th = \"http://www.thymeleaf.org\" > \n < head > \n\t < meta   charset = \"utf-8\" > \n\t < meta   http-equiv = \"x-ua-compatible\"   content = \"ie=edge\" > \n\t < title > Users < / title > \n\t < meta   name = \"viewport\"   content = \"width=device-width, initial-scale=1\" > \n\t < link   rel = \"stylesheet\"   href = \"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\"   integrity = \"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\"   crossorigin = \"anonymous\" > \n\t < link   rel = \"stylesheet\"   href = \"https://use.fontawesome.com/releases/v5.4.1/css/all.css\"   integrity = \"sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz\"   crossorigin = \"anonymous\" > \n\t < link   rel = \"stylesheet\"   href = \"../css/shards.min.css\" > \n < / head > \n < body > \n < div   th:switch = \"${users}\"   class = \"container my-5\" > \n\t < div   class = \"row\" > \n    \t < div   class = \"col-md-6\" > \n        \t < h2   th:case = \"null\" > No users yet! < / h2 > \n        \t < div   th:case = \"*\" > \n            \t < h2   class = \"my-5\" > Users < / h2 > \n            \t < table   class = \"table table-striped table-responsive-md\" > \n                \t < thead > \n                \t < tr > \n                    \t < th > Name < / th > \n                    \t < th > Email < / th > \n                    \t < th > Edit < / th > \n                    \t < th > Delete < / th > \n                \t < / tr > \n                \t < / thead > \n                \t < tbody > \n                \t < tr   th:each = \"user : ${users}\" > \n                    \t < td   th:text = \"${user.name}\" > < / td > \n                    \t < td   th:text = \"${user.email}\" > < / td > \n                    \t < td > < a   th:href = \"@{/edit/{id}(id=${user.id})}\"   class = \"btn btn-primary\" > < i   class = \"fas fa-user-edit ml-2\" > < / i > < / a > < / td > \n                    \t < td > < a   th:href = \"@{/delete/{id}(id=${user.id})}\"   class = \"btn btn-primary\" > < i   class = \"fas fa-user-times ml-2\" > < / i > < / a > < / td > \n                \t < / tr > \n                \t < / tbody > \n            \t < / table > \n        \t < / div > \n        \t < p   class = \"my-5\" > < a   href = \"/signup\"   class = \"btn btn-primary\" > < i   class = \"fas fa-user-plus ml-2\" > < / i > < / a > < / p > \n    \t < / div > \n\t < / div > \n < / div > \n < / body > \n < / html > \n The final part of our application is a startup. It\u2019s a standard method that follows the Java convention for an application entry point. SpringApplication bootstraps the app, starting Spring on a Tomcat web server. \n import   org.springframework.boot.SpringApplication ; \n import   org.springframework.boot.autoconfigure.SpringBootApplication ; \n import   org.springframework.transaction.annotation.EnableTransactionManagement ; \n\n @SpringBootApplication \n @EnableTransactionManagement \n public   class   Application   { \n\n\t public   static   void   main ( String [ ]   args )   { \n    \t SpringApplication . run ( Application . class ,   args ) ; \n\t } \n\n } \n Platform.sh structure \n The Java application is ready to go! The next step is to set the Platform.sh files required to manage and deploy the application. In our  first Java post , we took a deep dive into each detail of these three files: \n \n One Router ( .platform/routes.yaml ). Platform.sh allows you to define the  routes . \n Zero or more service containers ( .platform/services.yaml ). Platform.sh allows you to completely define and configure the topology and services you want to use on your  project . \n One or more application containers ( .platform.app.yaml ). You control your application and the way it will be built and deployed on Platform.sh  via a single configuration file . \n \n The file that will change on this post is the  service file , t allowing you to define a database, search engine, cache, and so on. In this project, we\u2019ll set  MongoDB  instead of  MySQL . \n database : \n    type :   mongodb : 3.6 \n    disk :   1024 \n Platform.sh and Java \n For the database, we need to define where the connection comes from. Platform.sh provides connection credentials to services using the  PLATFORM_RELATIONSHIPS  environmental variable. \n import   com.mongodb.MongoClient ; \n import   org.springframework.context.annotation.Bean ; \n import   org.springframework.context.annotation.Configuration ; \n import   org.springframework.data.mongodb.config.AbstractMongoConfiguration ; \n import   sh.platform.config.Config ; \n import   sh.platform.config.MongoDB ; \n\n @Configuration \n public   class   MongoConfig   extends   AbstractMongoConfiguration   { \n\n\t private   Config   config   =   new   Config ( ) ; \n\n\t @Override \n\t @Bean \n\t public   MongoClient   mongoClient ( )   { \n    \t MongoDB   mongoDB   =   config . getCredential ( \"database\" ,   MongoDB : : new ) ; \n    \t return   mongoDB . get ( ) ; \n\t } \n\n\t @Override \n\t protected   String   getDatabaseName ( )   { \n    \t return   config . getCredential ( \"database\" ,   MongoDB : : new ) . getDatabase ( ) ; \n\t } \n } \n The  Java Config  library offers classes that will read the information from the variable and return an object that represents the services, like a DataSource for MySQL, PostgreSQL, MongoClient, Redis, or any other services you\u2019ve defined in .platform/services.yaml! \n The application is now ready, so it\u2019s time to move it to the cloud with Platform.sh using the  following  steps: \n \n Create a new  free trial account . \n Sign up with a new user and password, or login using a current GitHub, Bitbucket, or Google account. If you use a third-party login, you\u2019ll be able to set a password for your Platform.sh account later. \n Select the region of the world where your site should live. \n Select the blank template. \n \n After this wizard, Platform.sh will provision the whole infrastructure to you, and Platform.sh will offer your project a remote Git repository. The Platform.sh Git-driven infrastructure means it will automatically manage everything your application needs to push it to the master remote repository. After you set up your  SSH keys , you only need to write your code\u2014including a few YAML files that specify your desired infrastructure\u2014then commit it to Git and push. \n git remote add platform <platform.sh@gitrepository>\ngit commit -m  \"Initial project\" \ngit push -u platform master\n Code pushed will create both the Java application, a MongoDB instance, and, when it\u2019s done, will return an IP address to the service. Let\u2019s test the Spring MVC application. \n You\u2019ve now seen how a native integration with Spring MVC works, and how only a small change in configuration can easily bring your Maven, Gradle, and Ant managed Java applications to Platform.sh. \n In my  flagship Java post , you can read more about how you can quickly take your Java apps to the cloud on Platform. sh. And stay tuned for my next post about Elasticsearch versus Solr! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Elasticsearch vs. Solr: have both with Spring Data and Platform.sh ", "url": "https://platform.sh/blog/2019/elasticsearch-vs-solr-have-both-with-spring-data-and-platform.sh/", "documentId": "9e3aa2e38257d74ceb8de14dd503fb69084f2dbc", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Elasticsearch vs. Solr: have both with Spring Data and Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         28 Jun 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The trendy word  big data  comes from the 3 Vs: volume, variety, and velocity. Volume refers to the size of data; variety refers to the diverse types of data; and velocity refers to the speed of data processing. To handle persistent big data, there are NoSQL databases that write and read data faster than a SQL database. But with the diversity in a vast volume, a search engine is required to find information without using significant computer power\u2014and without taking too much time. In this post, we\u2019ll talk about two of  the most popular search engines : ElasticSearch and Apache Solr, and how Platform.sh supports both. \n Based on the Apache Lucene, both search engines are open source and written in Java. And they both have beautiful, rich documentation: \n \n Elasticsearch Reference Guide \n Solr Reference Guide \n \n To give you an idea of how relevant and useful the Full-Text-Search (FTS) is, this post creates two, straightforward applications for music that both use Spring MVC and the CRUD functionality (Create, Read, Update, and Delete in a database). The unique difference is in the database: one uses Elasticsearch, the other uses Apache Solr. Music has lyrics that contain extensive sequences of words, and full-text engines include the ability to define indexes; it will be faster and more efficient than using LIKE with wildcarding in a SQL database. \n Elasticsearch \n As noted above, Elasticsearch is based on the Lucene library. It provides a distributed, multitenant-capable, full-text search engine with an HTTP web interface and schema-free JSON documents. And it runs on Java. \n In the Maven application, we can easily define the dependency your application needs. In the Elasticsearch application, we need to set the ES library and  Platform.sh configuration reader  as pom.xml. \n <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n <project   xmlns= \"http://maven.apache.org/POM/4.0.0\"   xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n     \t xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > \n\t <modelVersion > 4.0.0 </modelVersion> \n\n\t <groupId > sh.platform.start </groupId> \n\t <artifactId > spring-mvc-maven-elasticsearch </artifactId> \n\t <version > 0.0.1 </version> \n\n\t <parent > \n    \t <groupId > org.springframework.boot </groupId> \n    \t <artifactId > spring-boot-starter-parent </artifactId> \n    \t <version > 2.1.5.RELEASE </version> \n\t </parent> \n\n\t <properties > \n    \t <java.version > 1.8 </java.version> \n    \t <elasticsearch.version > 6.5.0 </elasticsearch.version> \n\t </properties> \n\n\t <dependencies > \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-web </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-thymeleaf </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.elasticsearch.client </groupId> \n        \t <artifactId > elasticsearch-rest-high-level-client </artifactId> \n        \t <version > ${elasticsearch.version} </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-devtools </artifactId> \n        \t <optional > true </optional> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-test </artifactId> \n        \t <scope > test </scope> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > sh.platform </groupId> \n        \t <artifactId > config </artifactId> \n        \t <version > 2.2.0 </version> \n    \t </dependency> \n\t </dependencies> \n\n\t <build > \n    \t <finalName > spring-mvc-maven-elasticsearch </finalName> \n    \t <plugins > \n        \t <plugin > \n            \t <groupId > org.springframework.boot </groupId> \n            \t <artifactId > spring-boot-maven-plugin </artifactId> \n        \t </plugin> \n    \t </plugins> \n\t </build> \n </project> \n </code:xml> \n The first step in building the application is the music entity\u2014 an object defined by a thread of continuity and its identity, rather than by its attributes. \n public   class   Music   { \n\n\t private   String   id ; \n\n\t private   String   name ; \n\n\t private   String   singer ; \n\n\t private   int   year ; \n\n\t private   String   lyrics ; \n\n   //getter and setter\n \n } \n\n Spring Data ES  that applies core Spring concepts to the development of solutions uses the Elasticsearch Search Engine. However, it uses  TransportClient  that\u2019s  deprecated  in favor of the Java High-Level REST Client and will be removed on ElasticSearch 8.0. Therefore, this application uses the Java High-Level REST Client from Elasticsearch. Using the Bean annotation, we\u2019ll provide a RestHighLevelClient instance that will be used on the service layer. This configuration class will create a RestHighLevelClient provided by Platform.sh. \n import   org.elasticsearch.action.admin.indices.create.CreateIndexRequest ; \n import   org.elasticsearch.action.admin.indices.create.CreateIndexResponse ; \n import   org.elasticsearch.action.admin.indices.get.GetIndexRequest ; \n import   org.elasticsearch.client.RequestOptions ; \n import   org.elasticsearch.client.RestHighLevelClient ; \n\n import   org.springframework.context.annotation.Bean ; \n import   org.springframework.context.annotation.Configuration ; \n import   sh.platform.config.Config ; \n import   sh.platform.config.Elasticsearch ; \n\n import   java.io.IOException ; \n\n @Configuration \n public   class   ElasticsearchConfig   { \n\n\t static   final   String   INDEX   =   \"musics\" ; \n\t static   final   String   TYPE   =   \"music\" ; \n\n\t @Bean \n\t public   RestHighLevelClient   elasticsearchTemplate ( )   throws   IOException   { \n    \t Config   config   =   new   Config ( ) ; \n    \t final   Elasticsearch   credential   =   config . getCredential ( \"elasticsearch\" ,   Elasticsearch : : new ) ; \n    \t final   RestHighLevelClient   client   =   credential . get ( ) ; \n    \t CreateIndexRequest   request   =   new   CreateIndexRequest ( INDEX ) ; \n\n    \t GetIndexRequest   exist   =   new   GetIndexRequest ( ) ; \n    \t exist . indices ( INDEX ) ; \n    \t if   ( ! client . indices ( ) . exists ( exist ,   RequestOptions . DEFAULT ) )   { \n        \t client . indices ( ) . create ( request ,   RequestOptions . DEFAULT ) ; \n    \t } \n    \t return   client ; \n\t } \n } \n The service layer stands on top of the  entities  class to handle business requirements that include database control with CRUD operations and a search for terms in the name, lyrics, and singer fields in the music. \n import   com.fasterxml.jackson.databind.ObjectMapper ; \n import   org.elasticsearch.action.delete.DeleteRequest ; \n import   org.elasticsearch.action.get.GetRequest ; \n import   org.elasticsearch.action.get.GetResponse ; \n import   org.elasticsearch.action.index.IndexRequest ; \n import   org.elasticsearch.action.search.SearchRequest ; \n import   org.elasticsearch.action.search.SearchResponse ; \n import   org.elasticsearch.client.RequestOptions ; \n import   org.elasticsearch.client.RestHighLevelClient ; \n import   org.elasticsearch.index.query.BoolQueryBuilder ; \n import   org.elasticsearch.search.SearchHit ; \n import   org.elasticsearch.search.builder.SearchSourceBuilder ; \n import   org.springframework.beans.factory.annotation.Autowired ; \n import   org.springframework.stereotype.Repository ; \n import   org.thymeleaf.util.StringUtils ; \n\n import   java.io.IOException ; \n import   java.util.List ; \n import   java.util.Map ; \n import   java.util.Optional ; \n import   java.util.UUID ; \n import   java.util.stream.Collectors ; \n\n import static   java.util.stream.StreamSupport.stream ; \n import static   org.elasticsearch.index.query.QueryBuilders.boolQuery ; \n import static   org.elasticsearch.index.query.QueryBuilders.termQuery ; \n import static   sh.platform.template.ElasticsearchConfig.INDEX ; \n import static   sh.platform.template.ElasticsearchConfig.TYPE ; \n\n @Repository \n public   class   MusicService   { \n\n\t @Autowired \n\t private   ObjectMapper   objectMapper ; \n\n\t @Autowired \n\t private   RestHighLevelClient   client ; \n\n\t public   List < Music >   findAll ( String   search )   throws   IOException   { \n\n\n    \t SearchSourceBuilder   sourceBuilder   =   new   SearchSourceBuilder ( ) ; \n    \t if   ( ! StringUtils . isEmpty ( search ) )   { \n        \t final   BoolQueryBuilder   queryBuilder   =   boolQuery ( ) . should ( termQuery ( \"lyrics\" ,   search ) ) \n                \t . should ( termQuery ( \"name\" ,   search ) ) \n                \t . should ( termQuery ( \"singer\" ,   search ) ) ; \n        \t sourceBuilder . query ( queryBuilder ) ; \n    \t } \n\n    \t SearchRequest   searchRequest   =   new   SearchRequest ( ) ; \n    \t searchRequest . indices ( INDEX ) ; \n    \t searchRequest . source ( sourceBuilder ) ; \n    \t SearchResponse   response   =   client . search ( searchRequest ,   RequestOptions . DEFAULT ) ; \n    \t return   stream ( response . getHits ( ) . spliterator ( ) ,   false ) \n            \t . map ( SearchHit : : getSourceAsMap ) \n            \t . map ( s   - >   objectMapper . convertValue ( s ,   Music . class ) ) \n            \t . collect ( Collectors . toList ( ) ) ; \n\t } \n\n\t public   List < Music >   findAll ( )   throws   IOException   { \n    \t return   findAll ( null ) ; \n\t } \n\n\t public   Optional < Music >   findById ( String   id )   throws   IOException   { \n\n    \t GetRequest   request   =   new   GetRequest ( INDEX ,   TYPE ,   id ) ; \n    \t final   GetResponse   response   =   client . get ( request ,   RequestOptions . DEFAULT ) ; \n    \t final   Map < String ,   Object >   source   =   response . getSource ( ) ; \n    \t if   ( source . isEmpty ( ) )   { \n        \t return   Optional . empty ( ) ; \n    \t }   else   { \n        \t return   Optional . ofNullable ( objectMapper . convertValue ( source ,   Music . class ) ) ; \n    \t } \n\t } \n\n\t public   void   save ( Music   music )   throws   IOException   { \n\n    \t if   ( StringUtils . isEmpty ( music . getId ( ) ) )   { \n        \t music . setId ( UUID . randomUUID ( ) . toString ( ) ) ; \n    \t } \n    \t Map < String ,   Object >   jsonMap   =   objectMapper . convertValue ( music ,   Map . class ) ; \n    \t IndexRequest   indexRequest   =   new   IndexRequest ( INDEX ,   TYPE ) \n            \t . id ( music . getId ( ) ) . source ( jsonMap ) ; \n    \t client . index ( indexRequest ,   RequestOptions . DEFAULT ) ; \n\t } \n\n\t public   void   delete ( Music   music )   throws   IOException   { \n    \t client . delete ( new   DeleteRequest ( INDEX ,   TYPE ,   music . getId ( ) ) ,   RequestOptions . DEFAULT ) ; \n\t } \n } \n\n In Spring\u2019s approach to building websites, HTTP requests are handled by a controller. You can quickly identify these requests by the  @Controller  annotation. In the following example, the  MusicController  handles HTTP requests. \n import   org.springframework.beans.factory.annotation.Autowired ; \n import   org.springframework.stereotype.Controller ; \n import   org.springframework.ui.Model ; \n import   org.springframework.validation.BindingResult ; \n import   org.springframework.web.bind.annotation.GetMapping ; \n import   org.springframework.web.bind.annotation.PathVariable ; \n import   org.springframework.web.bind.annotation.PostMapping ; \n import   org.springframework.web.bind.annotation.RequestParam ; \n\n import   javax.validation.Valid ; \n import   java.io.IOException ; \n\n import static   java.util.stream.Collectors.toList ; \n\n\n @Controller \n public   class   MusicController   { \n\n\t @Autowired \n\t private   MusicService   musicService ; \n\n\t @GetMapping ( \"/\" ) \n\t public   String   start ( @RequestParam ( name   =   \"search\" ,   required   =   false )   String   search ,   Model   model )   throws   IOException   { \n\n    \t model . addAttribute ( \"musics\" ,   musicService . findAll ( search ) ) ; \n    \t model . addAttribute ( \"search\" ,   search ) ; \n    \t return   \"index\" ; \n\t } \n\n\t @GetMapping ( \"/add\" ) \n\t public   String   addUser ( Model   model )   { \n    \t model . addAttribute ( \"music\" ,   new   Music ( ) ) ; \n    \t return   \"add-music\" ; \n\t } \n\n\t @PostMapping ( \"/add\" ) \n\t public   String   addUser ( @Valid   Music   music ,   BindingResult   result ,   Model   model )   throws   IOException   { \n    \t if   ( result . hasErrors ( ) )   { \n        \t return   \"add-music\" ; \n    \t } \n    \t musicService . save ( music ) ; \n    \t model . addAttribute ( \"musics\" ,   musicService . findAll ( ) ) ; \n    \t return   \"index\" ; \n\t } \n\n\t @GetMapping ( \"/edit/{id}\" ) \n\t public   String   showUpdateForm ( @PathVariable ( \"id\" )   String   id ,   Model   model )   throws   IOException   { \n    \t Music   music   =   musicService . findById ( id ) . orElseThrow ( ( )   - >   new   IllegalArgumentException ( \"Invalid music Id:\"   +   id ) ) ; \n    \t model . addAttribute ( \"music\" ,   music ) ; \n    \t return   \"add-music\" ; \n\t } \n\n\t @PostMapping ( \"/update/{id}\" ) \n\t public   String   updateUser ( @PathVariable ( \"id\" )   String   id ,   @Valid   Music   music ,   BindingResult   result ,   Model   model )   throws   IOException   { \n    \t if   ( result . hasErrors ( ) )   { \n        \t music . setId ( id ) ; \n        \t return   \"add-music\" ; \n    \t } \n\n    \t musicService . save ( music ) ; \n    \t model . addAttribute ( \"musics\" ,   musicService . findAll ( ) ) ; \n    \t return   \"index\" ; \n\t } \n\n\t @GetMapping ( \"/delete/{id}\" ) \n\t public   String   deleteUser ( @PathVariable ( \"id\" )   String   id ,   Model   model )   throws   IOException   { \n    \t Music   music   =   musicService . findById ( id ) . orElseThrow ( ( )   - >   new   IllegalArgumentException ( \"Invalid music Id:\"   +   id ) ) ; \n    \t musicService . delete ( music ) ; \n    \t model . addAttribute ( \"musics\" ,   musicService . findAll ( ) \n            \t . stream ( ) \n            \t . filter ( m   - >   ! m . getId ( ) . equals ( id ) ) \n            \t . collect ( toList ( ) ) ) ; \n    \t return   \"index\" ; \n\t } \n } \n Configuring  Elasticsearch on Platform.sh  can be done in one easy step. Just append this value to the  service file : \n elasticsearch : \n    type :   elasticsearch : 6.5 \n    disk :   256 \n    size :   S \n To get more details about the configuration files at Platform.sh, please check out  this post  that explains how your Java application can be created or moved to Platform.sh. \n Apache Solr \n Solr is an open-source, enterprise search platform written in Java and is part of the Apache Lucene project. Its major features include full-text search, hit highlighting, faceted search, real-time indexing, dynamic clustering, database integration, NoSQL features, and costly document handling. \n As in the Elasticsearch application, the Apache Solr sample code needs to define a  pom.xml  with its dependencies. \n <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n <project   xmlns= \"http://maven.apache.org/POM/4.0.0\"   xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n     \t xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > \n\t <modelVersion > 4.0.0 </modelVersion> \n\n\t <groupId > sh.platform.start </groupId> \n\t <artifactId > spring-mvc-maven-solr </artifactId> \n\t <version > 0.0.1 </version> \n\n\t <parent > \n    \t <groupId > org.springframework.boot </groupId> \n    \t <artifactId > spring-boot-starter-parent </artifactId> \n    \t <version > 2.1.5.RELEASE </version> \n\t </parent> \n\n\t <properties > \n    \t <java.version > 1.8 </java.version> \n    \t <elasticsearch.version > 6.5.0 </elasticsearch.version> \n\t </properties> \n\n\t <dependencies > \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-web </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-thymeleaf </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.data </groupId> \n        \t <artifactId > spring-data-solr </artifactId> \n        \t <version > 4.0.8.RELEASE </version> \n    \t </dependency> \n\n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-devtools </artifactId> \n        \t <optional > true </optional> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-test </artifactId> \n        \t <scope > test </scope> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > sh.platform </groupId> \n        \t <artifactId > config </artifactId> \n        \t <version > 2.2.0 </version> \n    \t </dependency> \n\t </dependencies> \n\n\t <build > \n    \t <finalName > spring-mvc-maven-solr </finalName> \n    \t <plugins > \n        \t <plugin > \n            \t <groupId > org.springframework.boot </groupId> \n            \t <artifactId > spring-boot-maven-plugin </artifactId> \n        \t </plugin> \n    \t </plugins> \n\t </build> \n </project> \n Thanks to supporting Spring Data for Apache Solr, we can easily configure and access the Apache Solr Search Server from Spring applications. The  Music  entity class has annotations to map the fields and execute the translation process between Java and Apache Solr. \n import   org.springframework.data.annotation.Id ; \n import   org.springframework.data.solr.core.mapping.Indexed ; \n import   org.springframework.data.solr.core.mapping.SolrDocument ; \n\n @SolrDocument ( collection   =   \"collection1\" ) \n public   class   Music   { \n\n\t @Id \n\t @Indexed ( name   =   \"id\" ,   type   =   \"string\" ) \n\t private   String   id ; \n\n\t @Indexed ( name   =   \"name\" ,   type   =   \"string\" ) \n\t private   String   name ; \n\n\t @Indexed ( name   =   \"singer\" ,   type   =   \"string\" ) \n\t private   String   singer ; \n\n\t @Indexed ( name   =   \"year\" ,   type   =   \"string\" ) \n\t private   int   year ; \n\n\t @Indexed ( name   =   \"lyrics\" ,   type   =   \"string\" ) \n\t private   String   lyrics ; \n\n  //getter and setter\n } \n\n To use Spring Data features, the instance of  SolrTemplate  is required; that\u2019s why we have the  SolrConfig  class where we make the  SolrTemplate  eligible to Spring. It, then, returns an Apache Solr client instance produced by Platform.sh. \n import   org.apache.solr.client.solrj.impl.HttpSolrClient ; \n import   org.springframework.context.annotation.Bean ; \n import   org.springframework.context.annotation.Configuration ; \n import   org.springframework.data.solr.core.SolrTemplate ; \n import   sh.platform.config.Config ; \n import   sh.platform.config.Solr ; \n\n @Configuration \n public   class   SolrConfig   { \n\n\t @Bean \n\t public   HttpSolrClient   elasticsearchTemplate ( )   { \n    \t Config   config   =   new   Config ( ) ; \n    \t final   Solr   credential   =   config . getCredential ( \"solr\" ,   Solr : : new ) ; \n    \t final   HttpSolrClient   httpSolrClient   =   credential . get ( ) ; \n    \t String   url   =   httpSolrClient . getBaseURL ( ) ; \n    \t httpSolrClient . setBaseURL ( url . substring ( 0 ,   url . lastIndexOf ( '/' ) ) ) ; \n    \t return   httpSolrClient ; \n\t } \n\n\t @Bean \n\t public   SolrTemplate   solrTemplate ( HttpSolrClient   client )   { \n    \t return   new   SolrTemplate ( client ) ; \n\t } \n } \n One of the fantastic benefits of Spring Data is that we have a repository interface that is a central interface to communicate with any database. This repository interface allows the query methods feature to be handed to the developer by the Spring Data directly. \n import   org.springframework.data.solr.repository.Query ; \n import   org.springframework.data.solr.repository.SolrCrudRepository ; \n\n import   java.util.List ; \n\n public   interface   MusicRepository   extends   SolrCrudRepository < Music ,   String >   { \n\n\t @Query ( \"lyrics:*?0* OR name:*?0* OR singer:*?0*\" ) \n\t List < Music >   search ( String   searchTerm ) ; \n } \n\n\n import   org.springframework.beans.factory.annotation.Autowired ; \n import   org.springframework.stereotype.Repository ; \n import   org.springframework.transaction.annotation.Transactional ; \n import   org.thymeleaf.util.StringUtils ; \n\n import   java.util.Collections ; \n import   java.util.List ; \n import   java.util.Optional ; \n import   java.util.UUID ; \n\n import static   java.util.stream.Collectors.toList ; \n import static   java.util.stream.StreamSupport.stream ; \n\n @Repository \n public   class   MusicService   { \n\n\t @Autowired \n\t private   MusicRepository   repository ; \n\n\t public   List < Music >   findAll ( String   search )   { \n\n    \t if   ( repository . count ( )   = =   0 )   { \n        \t return   Collections . emptyList ( ) ; \n    \t } \n\n    \t if   ( StringUtils . isEmpty ( search ) )   { \n        \t return   stream ( repository . findAll ( ) . spliterator ( ) ,   false ) \n                \t . collect ( toList ( ) ) ; \n    \t } \n    \t return   repository . search ( search ) ; \n\t } \n\n\t public   List < Music >   findAll ( )   { \n    \t return   findAll ( null ) ; \n\t } \n\n\t public   Optional < Music >   findById ( String   id )   { \n    \t return   repository . findById ( id ) ; \n\t } \n\n\t @Transactional \n\t public   void   save ( Music   music )   { \n    \t if   ( StringUtils . isEmpty ( music . getId ( ) ) )   { \n        \t music . setId ( UUID . randomUUID ( ) . toString ( ) ) ; \n    \t } \n    \t repository . save ( music ) ; \n\t } \n\n\n\t @Transactional \n\t public   void   delete ( Music   music )   { \n    \t repository . delete ( music ) ; \n\t } \n } \n\n Creating an  Apache Solr instance provided by Platform.sh  can be done in one easy step. Just append this value to the  service file : \n solr : \n    type :   solr : 7.7 \n    disk :   1024 \n    size :   S \n    configuration : \n      cores : \n        collection1 : \n          conf_dir :   !archive   \"core1-conf\" \n     \t endpoints : \n          solr : \n            core :   collection1 \n The Controller for both applications is the same, so we don\u2019t need to duplicate the source code. \n Also, both are using the same front-end files, such as HTML, CSS, and JavaScript, thanks to the Thymeleaf template engine. It offers a set of Spring integrations that enable you to use it as a full-featured substitute for JSP in Spring MVC applications. \n <!DOCTYPE html> \n < html   xmlns:th = \"http://www.thymeleaf.org\" > \n < html > \n < head > \n\t < title > Music Store < / title > \n\t < meta   name = \"viewport\"   content = \"width=device-width, initial-scale=1.0\" > \n\t < link   rel = \"stylesheet\"   href = \"/css/bootstrap.min.css\" > \n < / head > \n < body > \n < div   class = \"container\" > \n\t < h1 > Music Store < / h1 > \n\n\t < form   class = \"form-search\"   method = \"get\"   action = \"/\" > \n    \t < i   class = \"icon-music\" > < / i > \n    \t < input   type = \"text\"   class = \"input-medium search-query\"   name = \"search\"   > \n    \t < button   type = \"submit\"   class = \"btn\" > Search < / button > \n    \t < a   href = \"/add\"   role = \"button\"   class = \"btn\"   data-toggle = \"modal\" > Add music < / a > \n    \t < table   class = \"table table-bordered\" > \n        \t < thead > \n        \t < tr > \n            \t < th > Music < / th > \n            \t < th > Year < / th > \n            \t < th > Singer < / th > \n            \t < th > Edit < / th > \n            \t < th > Delete < / th > \n        \t < / tr > \n        \t < / thead > \n        \t < tbody > \n        \t < tr   th:each = \"music : ${musics}\" > \n            \t < td   th:text = \"${music.name}\" > < / td > \n            \t < td   th:text = \"${music.year}\" > < / td > \n            \t < td   th:text = \"${music.singer}\" > < / td > \n            \t < td > < a   th:href = \"@{/edit/{id}(id=${music.id})}\"   > < i   class = \"icon-edit\" > < / i > < / a > < / td > \n            \t < td > < a   th:href = \"@{/delete/{id}(id=${music.id})}\"   > < i   class = \"icon-trash\" > < / i > < / a > < / td > \n        \t < / tr > \n        \t < / tbody > \n        \t < / tbody > \n    \t < / table > \n\t < / form > \n < / div > \n < script   src = \"https://code.jquery.com/jquery.js\" > < / script > \n < script   src = \"/js/bootstrap.min.js\" > < / script > \n < / body > \n < / html > \n <!DOCTYPE html> \n < html   xmlns:th = \"http://www.thymeleaf.org\" > \n < html > \n < head > \n\t < title > Music Store < / title > \n\t < meta   name = \"viewport\"   content = \"width=device-width, initial-scale=1.0\" > \n\t < link   rel = \"stylesheet\"   href = \"/css/bootstrap.min.css\" > \n < / head > \n < body > \n\n < div   class = \"container\" > \n\t < h1 > Music Store < / h1 > \n\t < form   th:action = \"@{/add}\"   th:object = \"${music}\"   method = \"post\" > \n    \t < input   id = \"id\"   name = \"id\"   type = \"hidden\"   th:field = \"*{id}\" > \n    \t < div   class = \"form-group\" > \n        \t < label   for = \"musicNameId\" > Name < / label > \n        \t < input   type = \"text\"   class = \"form-control\"   th:field = \"*{name}\"   id = \"musicNameId\"   placeholder = \"Enter Music\" > \n    \t < / div > \n    \t < div   class = \"form-group\" > \n        \t < label   for = \"musicYearId\" > Year < / label > \n        \t < input   type = \"number\"   class = \"form-control\"   th:field = \"*{year}\"   id = \"musicYearId\"   placeholder = \"Enter Year\" \n               \t min = \"1000\"   max = \"2020\" > \n    \t < / div > \n    \t < div   class = \"form-group\" > \n        \t < label   for = \"musicSingerId\" > Singer < / label > \n        \t < input   type = \"text\"   class = \"form-control\"   th:field = \"*{singer}\"   id = \"musicSingerId\"   placeholder = \"Enter Singer\" > \n    \t < / div > \n    \t < div   class = \"form-group\" > \n        \t < label   for = \"musicLyricsId\" > Lyrics < / label > \n        \t < textarea   class = \"form-control\"   id = \"musicLyricsId\"   rows = \"3\"   th:field = \"*{lyrics}\" > < / textarea > \n    \t < / div > \n    \t < button   type = \"submit\"   class = \"btn\" > Save < / button > \n\t < / form > \n < / div > \n < script   src = \"https://code.jquery.com/jquery.js\" > < / script > \n < script   src = \"/js/bootstrap.min.js\" > < / script > \n < / body > \n < / html > \n Hope this post helped explained the benefits of a full-text search engine (instead of a class SQL database), with two fantastic sample applications that compare the code between the most popular FTSs: Elasticsearch and Apache Solr. Both are open source, have rich documentation, and are both supported on Platform.sh! \n Platform.sh enables you to very easily leverage Elasticsearch or Apache Solr for your business needs. \n We also have a  repository with Java code  samples  beyond the Java templates . And stay tuned: if you\u2019re a Jakarta EE enthusiast, keep an eye out for our upcoming post! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "How the Platform.sh PaaS removes developer overhead ", "url": "https://platform.sh/2014/07/platform-removes-developer-overhead/", "documentId": "04e6d00ab649353872e00679f080dbe106cd3552", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           How the Platform.sh PaaS removes developer overhead \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Nick Hardiman \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         31 Jul 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \n Platform.sh is a new Platform as a Service (PaaS) from Commerce Guys, a software company with offices in London, Paris, and Michigan. Platform.sh\u2019s purpose is to bring continuous delivery to the open source CMS Drupal. \n Commerce Guys launched Drupal Commerce in 2011; Drupal Commerce is a mass of modules to enable e-commerce in Drupal. Now Commerce Guys have built a PaaS to help developers working with Drupal Commerce. If you look hard, you can see a few Platform.sh site actions, like OAuth login and SSH key install, flick past the Commerce Guys site site. \n Like all PaaS vendors, the Platform.sh team takes care of capacity, resilience, security, and all the rest of that operational malarkey for the developer. Platform.sh is new, and it\u2019s not even out of the beta test phase yet. Commerce Guys recently received buckets of cash to roll out its new Platform.sh service, but is it ready for prime time? And if so, who will feel more at home here than with other PaaS offerings? \n \n Launch, branch, clone, merge \n The first developmental stop on Platform.sh is to use the web UI to launch a new project. The launch initializes a new technical environment for a team to work in. Since Platform.sh users are agile teams, they get ready for a sprint like this: \n \n\t Launch a new project. \n\t Create a master Drupal site for end users. \n\t Invite team members to sign in. \n\t Create branches for the team to work on. \n \n Team members have different roles. A member may be a scrum master with the power to merge branches, a developer who makes code changes, or an external company with read-access only. \n Platform.sh\u2019s environment branches are like source code branches. The live site is copied into a hierarchy the same way a source code control system branches code. \n \n\t The master environment is branched to create a QA environment. \n\t QA is branched to create sprints. \n\t A sprint is branched into stories. \n \n The team ends up with a hierarchy of site copies for developers to work on. Code, databases, search engine indexes, and other software can be shifted around in this hierarchy: branches are synchronized, projects are checked out, and environments are backed up. \n Test sites \n \n Each branch has its own public URL so changes can be viewed and tested. The master site has a URL along the lines of\u00a0 http://master-was5o4df4vg6o.eu.platform.sh/ \u00a0and a story site\u00a0 http://story1-was5o4df4vg6o.eu.platform.sh/ . This allows each developer to check their work as they progress. \n The Platform.sh CLI \n Platform.sh expects developers to use a Command Line Interface (CLI) for detailed work. A CLI tool called platform provides a domain-specific set of commands to speed up the developer\u2019s work. \n \n $ platform\nWelcome to Commerce Platform!\n \n \n Platform.sh expects the developer to have these specialist files and PHP helper applications already installed: \n \n\t Drush (Drupal shell), another CLI popular with Drupal developers; \n\t SSH keys, the de facto standard for authenticating to cloud machines; and \n\t Composer, a packager that makes PHP dependency installs easier. The platform-cli application is PHP code wrapped in a Composer package. \n \n The platform CLI provide lots of little shortcuts to speed up work. If a developer types in this command, he can check out code to a local project folder: \n \n platform get was5o4df4vg6o\n \n \n If a developer types this command within a project folder, he is logged in to the corresponding remote environment: \n \n platform drush ssh\n \n \n It\u2019s easier than typing this: \n \n ssh -o PasswordAuthentication=no -t was5o4df4vg6o-story1@ssh.eu.platform.sh bash\n \n \n As all lovers of auto-complete know, less is more when it comes to typing. \n Platform.sh is for agile Drupal teams \n Developers have been checking out code, building with make-files, and merging changes since the dawn of the Model M keyboard, but that does not mean all developers would be at home with Platform.sh. This PaaS is aimed at the modern breed of developer, used to cloud services, git pulls, and week-long sprints. \n Platform.sh is not all things to all developers \u2013 it is aimed at professional Drupal developers, who work in teams and are comfortable with agile methods of development. Those are the people who will save time using this PaaS. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "CLI version 1.1 released ", "url": "https://platform.sh/2014/09/release-cli-1-1/", "documentId": "724cafdf13a190eda9bd90634a0171b53c54ee77", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           CLI version 1.1 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Patrick Dawkins \n                  \n                   Product Engineer \n                  \n                  \n                 \n            \n          \n         \n         09 Sep 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Version 1.1.0 has been released. Many new features are now available. \n Here are some of the new commands: \n \n\t project:clean : clean one or more prior builds of the local project. \n\t environment:ssh : SSH in to a Platform.sh environment. \n\t project:fix-aliases : regenerate stale Drush aliases. \n\t environment:relationships : see the services relationships of a Platform.sh environment. (E.g. MySQL, Redis, Solr). \n\t domain:add \u00a0and\u00a0 domain:delete : manage your domains on a project. \n\t platform drush : run Drush commands remotely for the current environment. \n \n For more information, read the\u00a0 on Github . \n How to upgrade \n Go to your\u00a0 platform-cli \u00a0repository and run\u00a0 git pull \u00a0to get the latest version. Next, run\u00a0 composer global update \u00a0to update to the latest version. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "FlixBus launches new eCommerce Service on Platform.sh Enterprise ", "url": "https://platform.sh/2014/09/platform-removes-developer-overhead/", "documentId": "403023ef468d21019c9e9397e5dcb7cfea6d4c28", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           FlixBus launches new eCommerce Service on Platform.sh Enterprise \n         \n\n        \n         \n            \n              \n          \n         \n         23 Sep 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh is a one-stop solution offering a new paradigm in collaborative web development and live hosting \n London, U.K., September 23, 2014 \u00a0-\u00a0 Commerce Guys , creators of Drupal Commerce and Platform.sh, is proud to announce that German long distance bus operator FlixBus has launched its new eCommerce site\u00a0 www.FlixBus.de \u00a0on Platform.sh Enterprise, the powerful continuous delivery cloud for digital business. Platform Enterprise speeds and simplifies site development, deployment and operation for digital agencies, systems integrators, development shops and, of course, online merchants. Along with Drupal, Symfony, and other PHP-based applications, it can support a range of other Linux-based services. \n \n FlixBus is one of Germany\u2019s largest long-distance bus services, and among the top 10 travel industry ticketing sites in Europe. Their move to Platform.sh Enterprise coincides with their adoption of Drupal, making FlixBus the most recent in a long list of international travel companies to implement the popular Open Source CMS. Having chosen Drupal, Platform Enterprise was quickly identified as the ideal hosting scenario, with its combination of optimized development and ultra-high resiliency at commodity costs. \n The FlixBus team has developed a powerful IT infrastructure to manage hundreds of thousands of ticket requests per day. To do so, FlixBus relies on strong partners like Commerce Guys to provide cutting-edge services to host and develop fast and reliable IT services. And while technical excellence is a must, lowering IT costs is essential, ensuring that FlixBus can continue to provide affordable bus tickets to its customers. As a disruptive, innovative player offering high-quality and low-cost, FlixBus does for long-distance travel what Platform.sh does for Cloud hosting. \n Platform.sh is offered in two different versions, both of which enjoy the same the development workflow optimization: \n \n\t Platform.sh: \u00a0Organizations with small- to medium-sized workload requirements will benefit from this self-serve, container-based server-grid-architecture. \n\t Platform.sh Enterprise: \u00a0is the premium offer for mission-critical applications requiring much higher availability and triple redundancy. Platform.sh Enterprise guarantees that sites will stay online and perform well, regardless of any physical or logical failures within the infrastructure. \n \n Both versions offer multiple server locations around the world, along with vertical and horizontal scaling that is seamless and without interruption. \n Platform.sh provides highly optimized development workflows and automation, and is widely regarded as the next generation in today\u2019s Platform as a Service (PaaS) market. Its flexible architecture and easy-to-use interface eliminate complex administration processes. Platform.sh enables Continuous Integration (CI) and Continuous Delivery (CD) during development, during launch, and throughout an application\u2019s lifecycle. Snapshot technology enables \u2018cloning at the speed of thought\u2019, replicating full-stack environments on-demand in seconds and radically improving production return-to-operations (RTO) metrics. Up to 25% savings in developer and systems administration efforts are being achieved on projects; the return on investment (ROI) being exponentially greater the bigger and more complex the site build. \n \n \u201cBoth FlixBus and our delivery partner Wunderkraut have gained significant financial advantage from the optimized development workflow functionality provided by Platform.sh, and we are confident that it will be able to easily manage unexpected capacity demands, along with the deployment of new website features at short notice to take advantage of changes in our marketplace.\u201d\u00a0 Daniel Krauss, CTO FlixBus. \n \u201cWe are very pleased to support FlixBus in their adoption of Platform.sh, and expect this commerce-tuned platform to service their fast-growing customer base with sub-second response times for many years to come.\u201d\u00a0 Kieron Sambrook-Smith, General Manager EMEA, Commerce Guys. \n \n About FlixBus \n FlixBus is a German low-cost long-distance bus service founded in 2011 that has been connecting large cities and medium-sized towns in Germany, and several neighboring countries through an all-encompassing network since the fall of the monopoly of Deutsche Bahn (German Rail) in 2013. \n With approximately 2,500 bus connections to around 150 destinations in Germany and neighboring countries, FlixBus offers sustainable, comfortable and affordable mobility. Tickets can be purchased online at www.FlixBus.de, via the\u00a0 # smartphone app , from a constantly growing amount of distribution sales partners as well as (recently) in local FlixBus shops. The tickets are directly validated by the QR code when checking in before departure. The ticket price includes internet access via Wi-Fi and a guaranteed seat on the air-conditioned bus. All the latest travel information and updates and delays can be found on the FlixBus app, via text message or at www.FlixBus.de/Streckeninfos . \n FlixBus currently has a team of around 150 at the FlixBus headquarters in Munich, as well as a partner network of approximately 60 of the most powerful bus companies in Germany and Austria. \n Under the aegis of the FlixBus umbrella brand, FlixBus runs ticketing and sales via the platform www.FlixBus.de, along with customer service and support for bricks-and-mortar distribution partners. Medium-sized bus partners are responsible for the operative business and the procurement of a modern fleet of comfortable buses. In this manner, a consistent, Europe-wide mobility offering with unbeatable price, quality and service has been created. The traveler profits too, from a modern, comfortable and affordable alternative to train and air travel. FlixBus was awarded with the Bayerischer Gr\u00fcnderpreis 2014 (The Bavarian\u2019s Founder\u2019s Prize) for Best Startup in 2014, along with and other awards. \n FlixBus managed to quickly establish itself in the travel sector thanks to fast expansion of its network and continuous optimization of its offering. With an attractive network, high customer approval and innovative multichannel distribution, FlixBus disrupts the status quo and competes against even major corporations. Because of its \u201cexcellent price-performance ratio\u201d, travel comfort, transparent booking procedures and fare information, FlixBus was rated as Germany\u2019s winner in field testing of long-distance buses by Stiftung Warentest (test occured 07/2014). \n About Commerce Guys \n Commerce Guys is the creator of Drupal Commerce, one of the world\u2019s fastest growing eCommerce solutions with tens of thousands of active sites worldwide. Drupal Commerce is revolutionary software that integrates commerce, content and community to create engaging Web experiences that bring e-retailers more traffic to drive more results. Commerce Guys most recently launched Platform.sh, the Continuous Delivery Cloud for web development and hosting. \n Commerce Guys won the overall grand prize and the gold prize in the Technology category at the E-commerce Awards 2013. The company was also awarded the gold prize for Best New Electronic Software Solution at the 2013 American Business Awards, also known as The Stevies. \n Visit us at\u00a0 CommerceGuys.com \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "SensioLabs, creators of Symfony, announces global strategic partnership with Platform.sh ", "url": "https://platform.sh/2014/09/commerce-guys-and-sensiolabs/", "documentId": "82a7cce81f48e14216068c3d709f46a6735ca14f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           SensioLabs, creators of Symfony, announces global strategic partnership with Platform.sh \n         \n\n        \n         \n            \n              \n          \n         \n         25 Sep 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Ann Arbor, Michigan. Thursday, September 25, 2014, for immediate release \n Commerce Guys, creators of Drupal Commerce, and SensioLabs, the company behind the Symfony PHP framework, have announced a strategic partnership around the Platform.sh Platform-as-a-Service (PaaS) developed by Commerce Guys. The two companies, both leading vendors of widely used Open Source web development tools, share a common interest in development productivity and code quality tools. \n The partnership is motivated in part by the fact that Drupal will utilize many Symfony components for its next version (Drupal 8), and in part by the opportunity that the Symfony community will now have to leverage the innovative concepts provided by Platform.sh, including the ability to easily employ superior application development workflows. \n \n Platform.sh is a next generation PaaS optimized for Drupal and Symfony applications. It provides an enhanced development-to-production workflow, enabling Continuous Integration and Continuous Delivery during development, at launch, and throughout a site\u2019s life. Sites can be scaled from the smallest development project to massive sizes handling millions of visitors. Platform.sh closely follows the branch-and-merge workflows of Git-driven development, and is capable of providing a full-stack environment for every Git branch you create. This is ideal for enabling development teams to be more agile, and for setting up automated testing. It also significantly cuts down on the time and effort it takes for agencies and integrators to work with outsourced teams and #lancers. Platform.sh is used by development teams from day one of development projects, providing immediate benefit through developing and deploying onto a consistent stack. \n \u201cThis partnership between SensioLabs and Platform.sh is really the perfect answer to a growing demand from Symfony users : developing and hosting their projects in the cloud to focus more on quality code development and stop worrying about the tedious tasks associated with server management\u201d. \n Fabien Potencier, CEO SensioLabs \n Commerce Guys closely collaborates with SensioLabs to offer Symfony projects on Platform.sh an unmatched production experience and the same tools and productivity gains for development (up to 25% measured on some projects) as it already offers for Drupal. \n \u201cWe love working with SensioLabs on Platform.sh, for only a few companies have this level of expertise for PHP in the enterprise. Platform.sh for Symfony is the outcome of an outstanding cooperation between Commerce Guys and the SensioLabs engineers.\u201d \n Fr\u00e9d\u00e9ric Plais, CEO Commerce Guys \n About Commerce Guys \n Commerce Guys is the creator of Drupal Commerce, one of the world\u2019s fastest growing eCommerce solutions with tens of thousands of active sites worldwide. Drupal Commerce is revolutionary software that integrates commerce, content and community to create engaging Web experiences that bring e-retailers more traffic to drive more results. Commerce Guys most recently launched Platform.sh, the Continuous Delivery Cloud for web development and hosting. \n Commerce Guys won the overall grand prize and the gold prize in the Technology category at the E-commerce Awards 2013. The company was also awarded the gold prize for Best New Electronic Software Solution at the 2013 American Business Awards, also known as The Stevies. \n \n Visit us at\u00a0 CommerceGuys.com \u00a0Develop and host on\u00a0 Platform.sh \u00a0Be a part of the movement at\u00a0 DrupalCommerce.org Follow us on\u00a0 Twitter \u00a0(@commerceguys) and\u00a0 Facebook (facebook.com/commerceguys) \n \n About Symfony \n Symfony, is a leading international PHP framework tailored for professionals. \n Created by SensioLabs\u2019 co-founder Fabien Potencier, Symfony is a development framework used by many popular open source projects (Drupal, phpBB, eZ Publish, etc.) and thousands of companies (Dailymotion, Yahoo, Blablacar, etc.) in the world. Adopted by a community of 150,000 developers worldwide, Symfony and its components are downloaded over a million times each month and are recognized as the most professional open-source solution in PHP. \n About SensioLabs \n SensioLabs, an Open Source software and SaaS editor, is known for constantly pushing PHP language limits worldwide, especially following the creation of Symfony, the PHP framework for businesses and Twig, the templating engine. \n In addition to the numerous service, training and support offers available, the company conceives e-solution products for web developers and businesses, to improve quality, productivity, direction and deployment of PHP applications, such as SensioLabsInsight, launched in 2014. \n With about 100 employees in six offices in France, Germany and the United Kingdom, SensioLabs is recognized as one of the most innovative companies in today\u2019s application development market. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Blog ", "url": "https://platform.sh/blog/page/9/", "documentId": "59e01773fae9c764a5a014a6696219d4bcf66f2a", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             15 Apr 2020 \n           \n          \n\n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         Recent posts \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n       Continuous Deployment solution Platform.sh now available on the hosted infrastructure of Cloudwatt Orange Business Services \n\n      \n       \n         24 Mar 2016\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Perfectly Posh adopts Platform.sh for Drupal Commerce based e-commerce application \n\n      \n       \n         24 Mar 2016\u00a0 \n           \n              Author:\n              Doug Goldberg\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       CLI version 3.0 released \n\n      \n       \n         22 Mar 2016\u00a0 \n           \n              Author:\n              Patrick Dawkins\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Marketing Manager Germany \n\n      \n       \n         04 Mar 2016\u00a0 \n           \n              Author:\n              Andrew Melck\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh becomes an independent company in a sweeping reorganization of Commerce Guys activities \n\n      \n       \n         09 Feb 2016\u00a0 \n           \n              Author:\n              Fred Plais\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       CLI version 2.11 released \n\n      \n       \n         26 Jan 2016\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Perfectly Lovely, Astonishingly Tremendous, Fabulously Outstanding, Remarkably Magnificent, Serene & Happy 2016. \n\n      \n       \n         26 Jan 2016\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       All Platform.sh clients kept automatically safe from serious PHP bug \n\n      \n       \n         17 Dec 2015\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       NodeJS versions 0.12, 4.4 and 6.2 supported \n\n      \n       \n         07 Dec 2015\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Drupal 8.0 has been released... Party time! \n\n      \n       \n         19 Nov 2015\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Java Ant and Maven build scripts supported \n\n      \n       \n         17 Nov 2015\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Concerned about the recent European Court ruling on Safe Harbor? \n\n      \n       \n         03 Nov 2015\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Symfony founder Fabien Potencier names Platform.sh Killer App \n\n      \n       \n         28 Oct 2015\u00a0 \n           \n              Author:\n              Andrew Melck\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh to exhibit at BADCamp 2015 \n\n      \n       \n         20 Oct 2015\u00a0 \n           \n              Author:\n              Doug Goldberg\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh Best Horizontal Cloud Solution for 2015 in Europe \n\n      \n       \n         09 Oct 2015\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       HHVM versions 3.9 and 3.12 supported \n\n      \n       \n         23 Sep 2015\u00a0 \n           \n              Author:\n              Christian Sieber\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       PHP Micro-Services can be simple, fast and testable \n\n      \n       \n         21 Sep 2015\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       RabbitMQ version 3.5 supported \n\n      \n       \n         16 Sep 2015\u00a0 \n           \n              Author:\n              Simon Ruggier\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh hosts Symfony documentation GitHub pull requests \n\n      \n       \n         10 Sep 2015\u00a0 \n           \n              Author:\n              Symfony\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       PHP versions 5.4, 5.5 and 5.6 supported \n\n      \n       \n         08 Sep 2015\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh / Bitbucket Integration, featured on the Bitbucket Blog \n\n      \n       \n         17 Aug 2015\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Hiring interns, or Come dear great soul, you are called upon, waited for \n\n      \n       \n         10 Aug 2015\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Move fast, break less \n\n      \n       \n         07 Aug 2015\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Creating flamegraphs with XHProf \n\n      \n       \n         29 Jul 2015\u00a0 \n           \n              Author:\n              Christian Sieber\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       The correct way to work with Drupal distributions \n\n      \n       \n         28 Jul 2015\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Documentation version 3.0 released \n\n      \n       \n         25 Jul 2015\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Five reasons why Platform.sh is the PaaS you need for Drupal 8 \n\n      \n       \n         16 Jul 2015\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh elected Best Horizontal Cloud Platform of the year \n\n      \n       \n         10 Jul 2015\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       CEO of Commerce Guys is interviewed by the main French Business TV Channel about Platform.sh \n\n      \n       \n         08 Jul 2015\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh awarded a \u20ac1.95M grant from Horizon 2020, the European Union Research and Innovation Program \n\n      \n       \n         25 Jun 2015\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n \n    \n     \n         \u00ab\u00ab \n     \n    \n     \n     \u00ab \n     \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     1 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     2 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     3 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     8 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     9 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     10 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     11 \n    \n    \n     \n     \u00bb \n     \n    \n     \n         \u00bb\u00bb \n     \n    \n \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Data protection by design and default ", "url": "https://platform.sh/blog/data-protection-by-design-and-default/", "documentId": "204075311f2fca18d3457b29284c3d304d8ede80", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Data protection by design and default \n         \n\n        \n         \n            \n         \n         07 May 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         If you\u2019ve been following our  GDPR blog series , you\u2019ll start to understand that the future of privacy cannot rely only on laws and regulation, but rather privacy has to be a modus operandi for all organizations. If we compare an enterprise with all its operations as one tall structure composed of numerous components, privacy should form its foundation, its base. It would be too late to react only when an infringement happens because without a firm foundation, the whole structure would have already collapsed. It is necessary to be proactive and prevent bad things from happening in the first place. That\u2019s why one of the GDPR compliance measures is data protection by design and default. \n Privacy by design-first means data security, where your data access is strictly controlled on a need-to-know basis and it should never be transferred unencrypted or made accessible to everyone. It also means you need to design systems to collect and process as little private data as possible and take what is absolutely necessary as part of your service provision. Privacy by design also means making sure that it is possible to optimize your systems to add additional security systems later on. \n Systems designed with privacy by design principles in mind must not collect data that is not required for providing services. So if you are designing systems for selling shoes, you don\u2019t need to collect your customer\u2019s biometric data, except maybe their shoe size. \n You should also make it easy for your systems to delete private data that will no longer be used. For example, a Telecom company\u2019s system would delete all private data - call logs, metadata, etc - after the legally mandated retention period when a customer cancels his or her account. \n According to the GDPR, data protection by design and default means that the company needs to implement appropriate technical and organizational measures to ensure that, by default, only personal data which are necessary for each specific purpose of the processing are processed.  Principles  like data minimization and storage limitation play an important role here. Pseudonymization is also one of recognized techniques in data protection by design. By pseudonymization we mean taking a piece of private data and replacing it with something made up, a pseudonym. That way the data is still unique, but not tied to the real person. Furthermore, a well executed data protection impact assessment creates a great foundation for data protection by design and default. \n Data protection policies, with proof of their implementation, are a good way to demonstrate compliance. \n \u00a0 \n What is a policy? \n Policies are documents that define the organization\u2019s objectives and set principles on  how, what, and when things should be done.  They must be enforceable, concise, easy to understand, and balance protection with productivity. \n How many times have you ticked the \u201cI have read and agreed to the terms and conditions\u201d box without really reading it? All the time, right? Most of us do that, because who wants to read long and boring legal talk? That\u2019s why the privacy policy needs to be written in simple language that\u2019s easy to understand and accessible to everyone.  The Guardian  for example, uses a video animation to describe its privacy policy. \n The privacy policy that you should publish on your website presents an organization\u2019s complete data protection policy. You should not process any personal data of a person without giving some key information about it (e.g. the categories of data you are collecting, how the data will be used and the possible transfer of personal data to third parties). Remember, processing needs to be fair. \n Besides the privacy policy you should consider implementing the following policies as well: \n \n\t \n\t Data access policy \n\t \n\t \n\t Data breach policy \n\t \n\t \n\t Data retention policy \n\t \n\t \n\t Security policy \n\t \n\t \n\t Password policy \n\t \n\t \n\t GDPR policy (this mandates that your company complies with the GDPR) \n\t \n \n In order for policies to be effective they should meet certain conditions and be implemented and supported according to each own processes and procedures. You therefore need to check the purpose of the policy and its scope, as well as define responsibilities and at least one objective and legal framework. \n The universe around you will be changing so your business and the tools you use will also change therefore review your policies regularly to update them when necessary. Making sure you do not paint yourself into a corner is one of the key goals of implementing a well-thought and designed privacy approach. Herein also lies the value of having a DPO - a data protection officer, someone that owns these efforts over the long term. \n \u00a0 \n Data breaches \n Ok so we know how important it is to secure all personal data and the policies we should have in place but as the latest news of  Sears and Delta ,  UK bank retailer TSB , and  Uber  show, unfortunately data breaches do happen. \n The GDPR defines a personal data breach as a breach of security leading to the accidental and/or unlawful destruction, loss, alteration, unauthorized disclosure of, or access to, personal data transmitted, stored, or otherwise processed. \u00a0 \n A  data breach  happens because an entity has been exposed to a threat and a vulnerability. As the  EU GDPR: an implementation and compliance guide  explains: \u201cA threat without a vulnerability to exploit is no risk, and a vulnerability with no threat to exploit it is also not a risk. We need to have both in order for a data breach to occur.\u201d A threat is an unwanted incident, that has potential to cause serious damage. Threat can be a cyber criminal, a malicious insider or an oblivious member of staff. \n A  personal data breach can include : \n \n\t \n\t Access by an unauthorized third party \n\t \n\t \n\t Deliberate or accidental action (or inaction) by a controller or processor \n\t \n\t \n\t Sending personal data to an incorrect recipient \n\t \n\t \n\t Computing devices containing personal data being lost or stolen \n\t \n\t \n\t Alteration of personal data without permission \n\t \n\t \n\t Loss of availability of personal data \n\t \n \n So what should you do when you become aware of a data breach? \n First, establish the likely risks to the rights and freedoms of the people impacted. If they are at risk then you need to notify the personal data breach to the supervisory authority within 72h. Otherwise, you do not have to report it, but you should be able to justify the decision, so keep detailed records of everything that happened. The controller therefore needs to document the effects of the personal data breach and the remedial actions to demonstrate compliance. You should also communicate the personal data breach to your customers and users without undue delay, in clear and plain language. \n For example, a  hospital  has discovered a data breach, which resulted in all personal records of patients being stolen. As the personal records contain sensitive data, it is obvious that the impact will result in a risk to the rights and freedoms of people, therefore you must report it. On the other hand, a librarian accidentally erased all personal info of their members but since all the data can be restored from the backups, it is unlikely to result in a risk to the library members rights and freedoms, therefore it is not necessary to inform them about the breach. \n In the case when you have to notify your local public authority that\u2019s responsible for GDPR ( Supervisory Authority ) the notification should contain: \n \n\t \n\t A description of the nature of the personal data breach \n\t \n\t \n\t Categories of data and approximate number of records and the people affected \n\t \n\t \n\t Contact details of the DPO \n\t \n\t \n\t Likely consequences of the personal data breach \n\t \n\t \n\t Descriptions of the measures that the controller has taken or proposed to be taken to address the personal data breach \n\t \n \n A personal data breach can result not only cause material and physical damage to people, but also in emotional distress for victims affected. So, it is extremely important that data breaches haves been dealt with promptly and assess thoroughly in order to minimize the consequences to individuals. \n For enterprises and organizations who want manage vulnerabilities and threats and mitigate the risk of threats effectively, you can understand why adopting a data privacy mindset by design and default will help put you in the right frame of mind. Thinking and putting in place the systems and policies to secure your information is a good way to start. This includes the interactions of people, processes and technology. I hope this post has started giving you ideas on the next steps you can take to make that happen in your company. \n We will talk more about the risks and security of the data in our next blog post. \n\n        \n\n\n\n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Your Guide to GDPR Compliance: Data subject rights ", "url": "https://platform.sh/blog/your-guide-to-gdpr-compliance-data-subject-rights/", "documentId": "6264905ecbac61b0b2b469dda9f0febdcec54e3a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Your Guide to GDPR Compliance: Data subject rights \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ivana Kotur \n                  \n                   Compliance Coordinator \n                  \n                  \n                 \n            \n          \n         \n         23 May 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Continuing on from our  GDPR series , with the  first ,  second , and  third  posts, we are now going to address the topic of people\u2019s privacy rights in detail. The GDPR gives people more control over their personal data by introducing new rights and organizations now have a limited time to respond to a customer\u2019s request with regards to their data being used. In order to comply, organizations need to be transparent about the data they collect and what they will use it for. \u00a0 \n The data rights of people are: \n \n\t the right to be informed \n\t the right to access \n\t the right to correct or amend \n\t the right to deletion \n\t the right to restrict processing \n\t the right to data portability \n\t the right to object \n\t rights in relation to automated decision-making and profiling \n \n It is very important to protect and respect people\u2019s data rights because if you don\u2019t, they can now lodge a complaint ( GDPR, Article 77. ) and seek judicial remedies, both material and non-material. ( GDPR, Article 79. ) Your company or organization is directly responsible for any damage caused by processing and for the security of personal data that is passed to the processor. \n Let\u2019s explain each of these rights one by one. \n 1. The right to be informed \n Your users and customers need to know all the information regarding the processing of their data and are entitled to have a privacy notice which informs them of the following: \n \n\t Contact details of your company and Data Protection Officer \n\t What personal data of theirs will be processed \n\t Purpose of the processing for which the personal data is intended as well as the legal basis of processing \n\t The legitimate interest of processing \n\t Whether or not their data will be transferred to any third parties \n\t How long their data will be stored by you \n\t What are their rights (rights to access, rectification or erasure of personal data, including the right to withdraw consent and to lodge a complaint with a supervisory authority) \n\t The existence of automated decision-making, including profiling and information about how decisions are made, the significance and the consequences \n \n Privacy notices should be written using clear and plain language and should be provided to the person when the data is collected. If you\u2019re collecting the data from someone else, you should also inform the customer of the source and the kind of private data collected. In this case the privacy notice should be provided to the individuals within one month. \n 2. The right to access \n Similar to the right to be informed, people have the right to know and ask if their data is being processed and: \n \n\t What exactly is processed \n\t The purpose for processing it \n\t Who will receive their data \n\t How long the data will be stored \n\t The right to lodge complaint to the supervisory authority \n\t The existence of automated decision-making, including profiling and are there any consequences of such processing to the data subject \n \n This is simply called a data subject access request (DSAR). You will have to provide information within one month of receiving the request and can only extend the period with a justified cause for the delay. The information should be free of charge unless the individual makes repetitive and unfounded requests. In that case a reasonable fee can be charged. ( Article 12.)  \n To respond to an access request, the first thing to do is to check the person\u2019s identity and whether you are already processing their data. If the request is regarding large amounts of data, he or she should explain and specify which data should be deleted or adjusted. Also, check if the other people's data is involved and if so, filter the data. If the request was made in electronic form you should provide the information in the same way. Companies can refuse to comply with a subject access request if the information required can affect the rights and freedoms of others. \n 3. The right to rectification \n People have a right to correct any data that is inaccurate or incomplete. If the data is passed to other companies or organizations they should be informed that the data is updated, as they should also update on their systems. The request can be made verbally or in writing. This right is tightly connected with the right to access. \n 4. The right to erasure (The right to be forgotten) \n Companies should promptly delete data, when requested to do so under these following circumstances: \n \n\t The personal data is no longer necessary for the purpose it was collected \n\t The individual withdraws consent \n\t The person objects and there are not any legitimate grounds for the processing \n\t The data was unlawfully processed \n\t The data have to be erased to comply with a legal obligation \n \n You must inform any third parties who are processing the same data, that the person requested to delete and to take reasonable steps and technical measures to erase that personal data. On the other hand, this right is not absolute because you can refuse to delete the data under these following circumstances: \n \n\t To protect the rights and freedoms of expression and information \n\t To comply with a legal obligation \n\t For reasons of public interest and public health \n\t For archiving, scientific or historical research or statistical purposes \n\t For the exercise or defence of legal claims \n \n The controller can refuse to erase the data if the request is exaggerated, unfounded or repetitive, but you need to justify the decision. \n 5. The right to restriction of processing \n When people request to limit the way an organization uses their data, you can only store the data and not use it, except under these circumstances: \n \n\t The person gave their consent for the data to be used \n\t It is for the exercise or defense the legal claims \n\t To protect the rights of another person \n\t It is for public interest \n \n If the data has been passed to another organization, you should also inform them of the restriction so that they can also follow the request. This request is only  temporary , especially if you need to check that the data is accurate or you need to establish that you have legitimate grounds to process the data and whether they will override the individual\u2019s objection. The data subject needs to be informed before the restriction is lifted. \n 6. The right to data portability \n The people also have a right to request to move or copy their personal data from one organization to another. It is better to transfer the data directly to the other organization securely in a digital format such as a RTF or CSV file. \n This right can only apply: \n \n\t If the processing is based on consent \n\t when processing is carried out by automated means \n \n \u00a0 \n 7. The right to object \n People can object to having their data processed, including profiling. Unless there are legitimate grounds such as where the request overrides the interests, rights and freedoms of others, or exercise or defence of legal claims, you must stop processing the data. \n If an individual objects to having their personal data used for direct marketing, their data should be removed and no longer processed. In this case this right is absolute. People can also object to processing for research or statistical purposes, but only if processing is not necessary for reasons of public interest. \n 8. Rights in relation to automated decision-making and profiling \n We have learned by now that the Regulation applies to all automated individual decision-making and profiling. It also aims to protect individuals if you are carrying out solely automated decision-making that has legal or similarly significant effects on them. \n This decision-making can be carried out if it is: \n \n\t necessary to fulfill a contract between the individual and your company \n\t authorized by Union or Member state law applicable to your company \n\t based on the individual\u2019s explicit consent \n \n With GDPR, people\u2019s rights are an important part and they should not be ignored. Apart from being a condition for the highest penalties, they will definitely show that you are compliant with the Regulation and that you respect your clients\u2019 rights. If you are not sure how to respond to people's access requests or how to transfer the data, double check what the Regulation says, it will help you to better understand your clients and to comply with legal requirements. And remember to follow our  GDPR series . \n \u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Another Drupal security update: We've still got you covered ", "url": "https://platform.sh/blog/drupal-sa-core-2018-004/", "documentId": "eaaa1c5474ada7fe7729a698dc1da3ceeb1410cf", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Another Drupal security update: We've still got you covered \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         25 Apr 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The Drupal project today released another security update to Drupal 7 and 8 core,  SA-CORE-20108-004 .  It is largely a refinement of the previous fix released for  SA-CORE-2018-002  a few weeks ago, which introduced a Drupal-specific firewall to filter incoming requests.  The new patch tightens the firewall further, preventing newly-discovered ways of getting around the filters, as well as correcting some deeper issues in Drupal itself. \n We previously  added the same logic  to our own  network-wide WAF  to address SA-CORE-2018-002.  With the latest release we\u2019ve updated out WAF rules to match Drupal\u2019s updates, and the new code is rolling out to all projects and regions as we speak. \n The upshot? \n \n \n You really need to update Drupal to 7.59 or 8.5.3 as soon as possible.  We believe that some of the attack vectors fixed in the latest patch cannot be blocked by a WAF.  See our  earlier post  for quick and easy instructions to update your Drupal 7 or 8 sites on Platform.sh in just a few minutes. \n \n \n Still, most of the attack vectors fixed in the latest release are covered by the WAF.  That should help keep your site safe from most attacks until you can update.  But please, update early and often. \n \n \n Stay safe out there on the Internet! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh confirms that it is ready for the GDPR ", "url": "https://platform.sh/blog/platformsh-confirms-that-it-is-ready-for-the-gdpr/", "documentId": "75b89fdc564f3457be213e6826a92e08aa834a42", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh confirms that it is ready for the GDPR \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Joey Stanford \n                  \n                   Security, Compliance and Data Protection Officer \n                  \n                  \n                 \n            \n          \n         \n         02 May 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         What is GDPR? \n The  EU General Data Protection Regulation (GDPR)  replaces the Data Protection Directive 95/46/EC and was designed to harmonize data privacy laws across Europe to protect and empower all EU citizens data privacy, and to reshape the way organizations across the region approach data privacy. Unlike its predecessor, the GDPR will be directly effective in European Member States without the need for implementing legislation. For more information, follow this very informative  GDPR course  by internet security specialist Troy Hunt.  \n The GDPR is not only relevant for Europe but also applies outside of the EU whenever: (1) an EU data subject\u2019s personal data is processed in connection with goods/services offered to him/her; or (2) the behavior of individuals within the EU is \u201cmonitored\u201d. \n Therefore, if your organization or business offers paid or free goods or services to anyone in the European Union member states then you need to adhere to GDPR. Here are four of the many possible indicators that your business is targeting individuals in the EU: \n \n\t You have a local office in one of the member states  \n\t You provide your goods or run your service in one of the EU states\u2019 languages \n\t Your website or application has an EU domain like .eu, .de, or .it. \n\t Your pricing includes EU currencies e.g. Euro, Danish krone \u00a0 \n \n \u00a0 \n GDPR measures at Platform.sh \n As part of our measures we have implemented the following: \n \n\t Data Protection Officer:  Appointment of a Security Officer who also holds the Data Protection Officer (DPO) role. \n\t Data Breach Policy:  We have updated our data breach policy and procedures and have reviewed that all our suppliers that their breach notifications are at an acceptable standard. \n\t Consent:  We respect your inbox just as we want ours to be respected. We\u2019ve made sure that all our customers, users, and partners Opt-in to share their personal data with us. \n\t Data Governance:  Having internally audited all of our suppliers on their internal security and their GDPR compliance status, we can confirm that our in-scope suppliers are GDPR compliant. \n\t Data Protection by design:  We\u2019ve implemented policies in the company to ensure all of our employees follow the necessary training and protocols around security. In addition, privacy protection is part of every project during instantiation. \n\t Enhanced Rights:  We\u2019ve aligned the language of our policies as well as our product and services to adhere to GDPR regulations.  \n\t Personally identifiable information (PII):  We\u2019ve implemented key actions to encrypt and protect personal identifiable information  \n \n The most penalizing parts of the GDPR are the ones the concern data breaches, so possibly, the most important thing of all is what we have been doing all along: creating a  secure service . There are many checkboxes that need to be checked. But if you want to keep in mind just a single one, this would be it: Don\u2019t get hacked. \n Platform.sh has many security layers that make attacks much harder than on comparable services. Starting from our read-only hosts and containers, through to our auditable and reproducible build-chain, the static-analysis based protective block, our dynamic WAF, our HTTPS by default, and our \u201cno-insecure-protocols\u201d iron-clad policy. Running your workloads on Platform.sh means your systems are much less likely to get hacked, and therefore you are much less likely to be liable under these very stringent new policies.  \n \u00a0 \n How does this affect our partners and customers? \n With billions and billions of personal data compromised out of online systems worldwide since 2004, individuals stand to be better protected against fraud, identity theft, and blackmail with GDPR.  \n At Platform.sh, we will ensure we are specific and unambiguous in the way we ask you to share your personal data. You also have the right to access or erase any of your own personal data we have recorded in our systems. Any personal data you supply to Platform.sh is held in accordance with the GDPR and, when applicable, you can assure your clients doing business in the EU that your backend provider complies with the GDPR.  \n \u00a0 \n Guidelines on how to make your workloads GDPR ready  \n You can rely on many of the things we do to satisfy your GDPR requirements. We provide infrastructure, however, and many of your compliance questions will occur at the application level. We give you a lot of control: you can run anything on Platform.sh, including insecure code. You can turn off HTTPS. You can put your administrator password on a post-it. These items are beyond our control. \n In order for your workload to be compliant with GDPR, these are key steps you should consider for your application: \n \n\t Use a GDPR compliant hosting service (Done!) \n\t Do an impact analysis: what personally identifiable information do you store and where. Platform.sh\u2019s services will likely only be a part of that. \n\t Consider encrypting any collected personally identifiable information (PII) at the application level, implement pseudonymization where you can. \n\t Consider applying pseudonymization to data that is present in development and staging branches (run a scrubbing procedure after you clone production).  \n\t At the application level, delete any personally identifiable information that is no longer needed. \n\t Put the required procedures in place to answer demands for erasure or modification. \n\t Make sure you know who in your organisation has access to Platform.sh\u2019s environments, and use our fine-grained controls to apply the principle of least privilege. \n\t Encrypt the transport (e.g. the use of HTTPS instead of HTTP) of any personally identifiable information (Platform.sh uses HTTPS default, but allows you to use HTTP, you should review your configuration). \n\t Treat personally identifiable information as opt-in and not opt-out. \n\t Verify that all users gave explicit content for any personally identifiable information processed by your organization. \n\t Ensure that any  cross-border transfers  of personally identifiable information comply with the GDPR requirements (we are talking here about things your application does, you can rely on our infrastructure to be compliant for what it is responsible for). \n\t Verify that you meet the new rules concerning children\u2019s personally identifiable information. \n\t Review and update your processes and policies to comply with the GDPR requirements such as Privacy by Design, data governance and transfer, data portability, automated decision making, ability to amend/rectify stored data, and pseudonymization  \n \n It is also important to prepare for the necessary steps within your company with regard to data breaches. For this we recommend that existing users map out the flow of any personally identifiable information their application sends outside of Platform.sh\u2019s systems. Whilst Platform.sh helps companies be ready for GDPR, you must verify that your company is fully GDPR compliant.  \n To help you on this journey we are publishing  blog posts  on the GDPR that go into much further detail.  \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Schnellere und sicherere Enterprise Cloud Deployments:  L\u00f6sungsanbieter Platform.sh erh\u00e4lt 28 Millionen Euro zus\u00e4tzliches Kapital ", "url": "https://platform.sh/blog/schnellere-und-sicherere-enterprise-cloud-deployments-losungsanbieter-platformsh-erhalt-28-millionen-euro-zusatzliches-kapital/", "documentId": "35003a51660bed118a94a95a737a1451e7cdc74f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Schnellere und sicherere Enterprise Cloud Deployments:  L\u00f6sungsanbieter Platform.sh erh\u00e4lt 28 Millionen Euro zus\u00e4tzliches Kapital \n         \n\n        \n         \n            \n              \n          \n         \n         23 May 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Mit den Investitionen will das Unternehmen Wachstum und Kundenerfolg in Europa sowie Nordamerika beschleunigen \u2013 in Folge der hohen Kundenakzeptanz \n San Francisco, 23. Mai 2018  \u2013  Platform.sh  ist Anbieter einer \u201eIdee-zu-Cloud\u201c-Applikations-Plattform, die Cloud-Infrastrukturen vereinfacht. In einer Serie-C-Finanzierungs-Runde hat das Unternehmen zus\u00e4tzliches Kapital in H\u00f6he von 28 Millionen Euro erhalten. F\u00fchrender Investor ist die Investitionsplattform Partech, neben Idinvest Partners, Benhamou Global Ventures (BGV), SNCF Digital Ventures sowie \u2013 erneut \u2013 Hi Inov. Mit den Investitionen will Platform.sh seine Go-to-Market-Strategie in Europa und Nordamerika vorantreiben und seinen rasch wachsenden Kundenstamm in diesen Regionen unterst\u00fctzen. \n Die umfassende \u201eIdee-zu-Cloud\u201c-Applikations-Plattform vereinfacht Cloud-Infrastrukturen. Unternehmen k\u00f6nnen damit die Vorteile der Cloud voll aussch\u00f6pfen, ohne sich mit deren st\u00e4ndig wachsenden Komplexit\u00e4t auseinandersetzen zu m\u00fcssen. Tausende Anwender einschlie\u00dflich 650 internationale Firmen sowie direkte Self Service Subscriptions nutzen die L\u00f6sung von Platform.sh derzeit, um ihre Cloud-basierten Web-Applikationen schnell und sicher zu entwickeln, zu testen, bereitzustellen und zu betreiben. Das Unternehmen, das im Vergleich zum Vorjahr eine Umsatzsteigerung von 110 Prozent verzeichnet, adressiert alle gro\u00dfen vertikalen M\u00e4rkte und befeuert die Innovation einiger der weltweit f\u00fchrenden Marken, darunter  Daimler ,  Magento ,   Gap Inc. ,   The Financial Times , das   British Council  und die   Hachette Book Group . \n Um den st\u00e4ndig wachsenden Kundenerwartungen gerecht zu werden, m\u00fcssen Unternehmen ihre Applikationen heute schneller als je zuvor bereitstellen. Doch Cloud-Infrastrukturen sind hochkomplex und erfordern ein breites und tiefes Level an Expertise. Software-Entwickler stehen vor der Herausforderung, eine Continuous-Deployment-Strategie zu implementieren, um ver\u00e4nderte Gesch\u00e4ftsbed\u00fcrfnisse schnell und flexibel erf\u00fcllen zu k\u00f6nnen. Gleichzeitig m\u00fcssen sie aber auch einen reibungslosen Betrieb, Sicherheit und Compliance gew\u00e4hrleisten. Mit Platform.sh l\u00e4sst sich dies einfach umsetzen. \n Die Platform.sh-L\u00f6sung wurde f\u00fcr komplexe Enterprise-Produktionsumgebungen entwickelt und erm\u00f6glicht es mit ihrer einzigartigen Rapid-Cloning-Technologie, exakte Klone von Live-Web-Applikationen automatisiert anzulegen und bereitzustellen \u2013 in weniger als 60 Sekunden. Damit k\u00f6nnen Entwickler-Teams sicher sein, dass neue Features beim Go-Live den Betrieb nicht unterbrechen. Die Vereinheitlichung von Produktions-, Test- und Entwicklungs-Workflows reduziert die DevOps-Aufw\u00e4nde im Vergleich zu Eigenentwicklungen um 90 Prozent und steigert die Produktivit\u00e4t um 40 Prozent im Vergleich zu Managed-Hosting-Providern bei deutlich geringeren Gesamtkosten. \n \u201eCloud-Infrastruktur-Provider haben eine hohe Komplexit\u00e4t geschaffen. Dadurch wird es aufwendiger, schwieriger und teurer, Applikationen in der Cloud bereitzustellen und zu betreiben\u201c, sagt Reza Malekzadeh, General Partner bei Partech und fr\u00fcherer Senior Director bei VMware. \u201eDie L\u00f6sung von Platform.sh hilft Unternehmen dabei, das volle Potenzial von Cloud-Infrastrukturen auszusch\u00f6pfen \u2013 etwa Geschwindigkeit, Performance oder Sicherheit \u2013 ohne die wachsenden H\u00fcrden und Hindernisse.\u201c \n Alban Wyniecki, Investment Director bei Idinvest Partners, erg\u00e4nzt: \u201eDer Cloud-Applikations-Markt hat gro\u00dfes Wachstumspotenzial. Angesichts der steten organischen Ausbreitung von Platform.sh in Europa und den USA investieren wir, um uns mehr Marktanteile zu sichern. Die Zugkraft des Unternehmens und sein schnelles Wachstum in Nordamerika, Europa und China zeigen, dass Platform.sh gut aufgestellt ist, um Marktf\u00fchrer zu werden.\u201c \n Der Markt f\u00fcr Public-Cloud-Angebote ist unglaublich schnell gewachsen, weil Unternehmen zunehmend Apps in der Cloud bereitstellen. Laut aktueller  Marktforschungsergebnisse der Analysten von Gartner *  ist der Markt f\u00fcr Cloud Application Infrastructure Services (PaaS) einer der am schnellsten wachsenden Cloud-M\u00e4rkte. Dazu z\u00e4hlt auch das Application Platform as a Service (aPaaS)-Segment, zu dem Platform.sh geh\u00f6rt. Prognosen zufolge wird er 2018 \u00fcber 15 Milliarden US-Dollar wert sein und sich bis 2021 fast verdoppeln. \n \u201ePlatform.sh ist gro\u00dfartig \u2013 wir k\u00f6nnen \u00c4nderungen sehr schnell vornehmen und sind in der Lage, unsere Website jederzeit upzudaten, sogar an Spieltagen\u201c, sagt John Dollin, Senior Operations Manager bei Arsenal Football Club. Richard Jones, CTO bei Invi q a, einer f\u00fchrenden Digital-Agentur und Unternehmensberatung, pflichtet bei: \u201eNachdem wir zu Platform.sh gewechselt sind, haben wir die neue Arsenal-FC-Website mit deutlich verbesserter Produktivit\u00e4t bereitgestellt. Unsere Deployments sind fehlerfrei und die Site l\u00e4uft jetzt schneller und sicherer. Falls n\u00f6tig, k\u00f6nnen wir sogar freitags Updates einspielen.\u201c \n \u201eWir ziehen viele Kunden an und haben in den vergangenen zw\u00f6lf Monaten ein deutliches organisches Wachstum verzeichnet \u2013 besonders in Europa und Nordamerika. Wir sind bereit, auf ein globales Level zu skalieren\u201c, sagt Frederic Plais, CEO von Platform.sh. \u201eDer Produktivit\u00e4tsgewinn, den unsere Plattform bringt, liegt weit \u00fcber dem, was Managed-Hosting-L\u00f6sungen bieten oder Do-it-Yourself-Ans\u00e4tze bei Cloud-Infrastrukturen leisten k\u00f6nnen. In den vergangenen Jahren gab es eine Explosion von leistungsstarken Tools, mit denen sich neue Cloud-Architekturen implementieren lassen. Aber sie verfolgen gr\u00f6\u00dftenteils einen zerst\u00fcckelten Patchwork-Ansatz. Platform.sh bietet ein einheitliches, kategorie-\u00fcbergreifendes Modell, das nicht nur schwierige Cluster-Orchestrierungen erm\u00f6glicht und Continuous-Delivery-Probleme l\u00f6st, sondern auch das Testen und die Qualit\u00e4tssicherung von Applikationen verbessert.\u201c \n Platform.sh wurde k\u00fcrzlich von Gartner in dem Bericht \u201eThe Key Trends in PaaS, 2018\u201c von Februar 2018 zitiert. \n * Gartner Pressemitteilung \u201eGartner Forecasts Worldwide Public Cloud Revenue to Grow 21.4 Percent in 2018\u201c, April 2018, https://www.gartner.com/newsroom/id/3871416 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Adobe Summit 2019: take-aways \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh \u52df\u5f973400\u4e07\u7f8e\u5143\uff0c\u53d1\u5c55\u66f4\u5feb\u66f4\u53ef\u9760\u7684\u4f01\u4e1a\u4e91\u5e94\u7528\u90e8\u7f72\u4e1a\u52a1 ", "url": "https://platform.sh/blog/platformsh-raise-announcement-chinese/", "documentId": "8f132aa3863e480b7b1360e9895aa1e4d33f2252", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh \u52df\u5f973400\u4e07\u7f8e\u5143\uff0c\u53d1\u5c55\u66f4\u5feb\u66f4\u53ef\u9760\u7684\u4f01\u4e1a\u4e91\u5e94\u7528\u90e8\u7f72\u4e1a\u52a1 \n         \n\n        \n         \n            \n              \n          \n         \n         23 May 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \u65b0\u4e00\u8f6e\u7684\u6295\u8d44\u5c06\u52a0\u901f\u516c\u53f8\u5728\u5317\u7f8e\u548c\u4e2d\u56fd\u7684\u4e1a\u52a1\u589e\u957f\uff0c\u5e2e\u52a9\u66f4\u591a\u5ba2\u6237\u53d6\u5f97\u6210\u529f \n \u00a0 \n \u4ece\u521b\u610f\u5230\u4e91\u7aef\u7684\u7efc\u5408\u5e94\u7528\u90e8\u7f72\u3001\u7b80\u5316\u4e91\u57fa\u7840\u67b6\u6784\u7684\u5e73\u53f0\u63d0\u4f9b\u5546Platform.sh\u4e8e\u5f53\u5730\u65f6\u95f45\u670823\u65e5\u5728\u65e7\u91d1\u5c71\u5ba3\u5e03\u4e86\u5728\u516c\u53f8\u7684C\u8f6e\u878d\u8d44\u4e2d\u52df\u5f973400\u4e07\u7f8e\u5143\u3002\u7531\u603b\u90e8\u4f4d\u4e8e\u7f8e\u56fd\u7684Partech\u9886\u6295, Idinvest Partners, Benhamou Global Ventures (BGV)\u3001SNCF Digital Ventures\u4ee5\u53ca\u56de\u8d2d\u6295\u8d44\u8005Hi Inov\u8ddf\u6295\u3002\u5229\u7528\u8fd9\u7b14\u8d44\u91d1\uff0cPlatform.sh\u5c06\u52a0\u5feb\u5176\u8fdb\u5165\u5317\u7f8e\u548c\u4e2d\u56fd\u5e02\u573a\u7684\u8fdb\u7a0b\uff0c\u4ece\u800c\u4fdd\u6301\u5176\u5ba2\u6237\u5728\u8fd9\u4e24\u4e2a\u5e02\u573a\u4e2d\u5feb\u901f\u589e\u957f\u3002 \n \u200bPlatform.sh\u662f\u4e00\u4e2a \u201c\u4ece\u521b\u610f\u5230\u4e91\u7aef\u201d\u7684\u7efc\u5408\u5e94\u7528\u90e8\u7f72\u5e73\u53f0\uff0c\u5b83\u7b80\u5316\u4e86\u4e91\u57fa\u7840\u67b6\u6784\uff0c\u80fd\u591f\u786e\u4fdd\u4f01\u4e1a\u5b9e\u73b0\u6240\u6709\u5728\u4e91\u7aef\u7684\u64cd\u4f5c\uff0c\u4e0d\u4f1a\u6709\u4efb\u4f55\u989d\u5916\u7684\u590d\u6742\u6b65\u9aa4\u3002 \u76ee\u524d\uff0c\u5168\u7403\u6709\u8d85\u8fc7650\u5bb6\u4f01\u4e1a\u5ba2\u6237\u6b63\u5728\u4f7f\u7528Platform.sh\u63d0\u4f9b\u7684\u5e73\u53f0\uff0c\u5feb\u901f\u53ef\u9760\u5730\u8fdb\u884c\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u90e8\u7f72\u548c\u8fd0\u884c\u57fa\u4e8e\u4e91\u7aef\u7684Web\u5e94\u7528\uff08\u5305\u62ec\u7f51\u7ad9\u3001\u5fae\u670d\u52a1\u3001\u5c0f\u7a0b\u5e8f\u7b49\uff09\u3002\u516c\u53f8\u7684\u4e1a\u7ee9\u540c\u6bd4\u589e\u957f\u7387\u4e3a110\uff05\uff0c\u6ee1\u8db3\u5404\u5927\u4e3b\u8981\u884c\u4e1a\u7684\u9700\u6c42\uff0c\u4e3a\u591a\u4e2a\u5168\u7403\u9886\u5148\u54c1\u724c\u7684\u521b\u65b0\u63d0\u4f9b\u53ef\u80fd\u6027\uff0c\u5176\u4e2d\u5c31\u5305\u62ecMagento\u3001Gap Inc.\u3001\u91d1\u878d\u65f6\u62a5\u3001\u82f1\u56fd\u6587\u5316\u534f\u4f1a\u3001\u6cd5\u56fd\u963f\u6b47\u7279\u56fe\u4e66\u96c6\u56e2\u3002 \n \u8bb8\u591a\u516c\u53f8\u5982\u4eca\u90fd\u4f1a\u9762\u4e34\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u5ba2\u6237\u7684\u671f\u671b\u5728\u4e0d\u65ad\u589e\u957f\uff0c\u8fd9\u5bf9\u516c\u53f8\u5728\u5e94\u7528\u5f00\u53d1\u53ca\u53d1\u5e03\u901f\u5ea6\u4e0a\u63d0\u51fa\u4e86\u66f4\u9ad8\u7684\u8981\u6c42\uff1b\u540c\u65f6\uff0c\u7531\u4e8e\u4e91\u57fa\u7840\u6784\u67b6\u672c\u8eab\u7684\u590d\u6742\u6027\uff0c\u65e0\u8bba\u662f\u5728\u5e7f\u5ea6\u8fd8\u662f\u6df1\u5ea6\u4e0a\uff0c\u5bf9\u64cd\u4f5c\u8005\u7684\u4e13\u4e1a\u6c34\u5e73\u63d0\u51fa\u4e86\u6781\u9ad8\u7684\u8981\u6c42\u3002\u5982\u6b64\u4e00\u6765\uff0c\u5229\u7528\u81ea\u52a8\u5316\u90e8\u7f72\u6280\u672f\u7684\u516c\u53f8\u90fd\u9762\u4e34\u4e86\u4e00\u4e2a\u5de8\u5927\u6311\u6218\uff1a\u5982\u4f55\u5feb\u901f\u6709\u6548\u5730\u8fdb\u884c\u5f00\u53d1\uff0c\u4ee5\u6ee1\u8db3\u4e1a\u52a1\u53d1\u5c55\u9700\u6c42\uff0c\u5e76\u786e\u4fdd\u8fd9\u4e9b\u5e94\u7528\u5728\u7ebf\u65f6\u7684\u6b63\u5e38\u8fd0\u884c\u53ca\u5b89\u5168\u5408\u89c4\u3002Platform.sh\u8ba9\u8fd9\u6311\u6218\u53d8\u5f97\u7b80\u5355\u8f7b\u677e\u3002 \n \u4e3a\u4e86\u80fd\u591f\u652f\u6301\u590d\u6742\u7684\u4f01\u4e1a\u7ea7\u751f\u4ea7\u73af\u5883\uff0cPlatform.sh\u5c06\u81ea\u52a8\u5316\u7684\u4e91\u670d\u52a1\u4e0e\u5176\u72ec\u7279\u7684\u5feb\u901f\u590d\u5236\u6280\u672f\u76f8\u7ed3\u5408\uff0c\u53ef\u572860\u79d2\u5185\uff0c\u5bf9\u6574\u4e2a\u7ebf\u4e0aWeb\u5e94\u7528\u73af\u5883\u5b9e\u73b0\u7cbe\u786e\u590d\u5236\uff0c\u4ece\u800c\u8ba9\u5f00\u53d1\u56e2\u961f\u786e\u4fdd\u5e94\u7528\u7684\u65b0\u529f\u80fd\u4e0d\u4f1a\u5728\u751f\u4ea7\u73af\u5883\u51fa\u9519\u3002Platform.sh\u5c06\u751f\u4ea7\u3001\u6d4b\u8bd5\u548c\u5f00\u53d1\u7684\u5de5\u4f5c\u6d41\u7a0b\u7edf\u4e00\uff0c\u76f8\u6bd4DIY\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8282\u7701\u4e8690\uff05\u7684DevOps\u5de5\u4f5c\u91cf\uff1b\u4e0e\u6258\u7ba1\u670d\u52a1\u4f9b\u5e94\u5546\u76f8\u6bd4\uff0cPlatform.sh\u63d0\u4f9b\u7684\u89e3\u51b3\u65b9\u6848\u80fd\u591f\u4e3a\u5ba2\u6237\u63d0\u9ad840\uff05\u7684\u6548\u7387\uff0c\u4e14\u603b\u6210\u672c\u5f97\u5230\u663e\u8457\u964d\u4f4e\u3002 \n Partech\u7684\u5408\u4f19\u4eba\u3001\u524dVMware\u9ad8\u7ea7\u603b\u76d1Reza Malekzadeh\u8868\u793a\uff1a\u201c\u7531\u4e8e\u4e91\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u5546\u521b\u9020\u4e86\u66f4\u591a\u590d\u6742\u7684\u53ef\u80fd\u6027\uff0c\u4f7f\u5f97\u516c\u53f8\u5728\u4e91\u7aef\u90e8\u7f72\u548c\u8fd0\u884c\u4e2d\u9700\u8981\u6295\u5165\u66f4\u591a\u7684\u65f6\u95f4\u3001\u4e13\u4e1a\u77e5\u8bc6\u4ee5\u53ca\u6295\u8d44\u3002Platform.sh\u62e5\u6709\u975e\u5e38\u5f3a\u5927\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f01\u4e1a\u4eab\u53d7\u4e91\u57fa\u7840\u67b6\u6784\u5e26\u6765\u7684\u6240\u6709\u4f18\u52bf\u2014\u2014\u901f\u5ea6\u3001\u6027\u80fd\u3001\u5b89\u5168\uff0c\u800c\u4e14\u5728\u4e4b\u540e\u7684\u5f00\u53d1\u4e2d\u4e5f\u4e0d\u4f1a\u9047\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u969c\u788d\u548c\u9650\u5236\u3002\u201d \n Idinvest Partners\u6295\u8d44\u603b\u76d1Alban Wyniecki\u8865\u5145\u9053\uff1a\u201c\u4e91\u5e94\u7528\u7a0b\u5e8f\u5e73\u53f0\u5e02\u573a\u662f\u4e00\u4e2a\u975e\u5e38\u5e7f\u9614\u7684\u9886\u57df\uff0c\u9274\u4e8ePlatform.sh\u5728\u7f8e\u56fd\u5e02\u573a\u7684\u826f\u597d\u53d1\u5c55\uff0c\u6211\u4eec\u5bf9\u516c\u53f8\u8fdb\u884c\u6295\u8d44\u4ee5\u671f\u83b7\u53d6\u66f4\u591a\u7684\u9700\u6c42\u3002\u5728\u5317\u7f8e\u3001\u6b27\u6d32\u548c\u4e2d\u56fd\u5e02\u573a\u7684\u5f3a\u52b2\u3001\u5feb\u901f\u589e\u957f\u610f\u5473\u7740Platform.sh\u5df2\u7ecf\u5904\u4e8e\u5e02\u573a\u7684\u9886\u5148\u5730\u4f4d\u3002\u201d \n \u4f01\u4e1a\u8d8a\u6765\u8d8a\u591a\u5730\u5728\u4e91\u4e2d\u90e8\u7f72\u5e94\u7528\uff0c\u4f7f\u5f97\u516c\u5171\u4e91\u5e02\u573a\u6b63\u5728\u4ee5\u524d\u6240\u672a\u6709\u7684\u901f\u5ea6\u589e\u957f\u3002\u7814\u7a76\u516c\u53f8Gartner\u6700\u65b0\u7684\u8c03\u67e5\u7ed3\u679c\u663e\u793a\uff0c\u5e73\u53f0\u5373\u670d\u52a1\uff08PaaS\uff09\u6280\u672f\u5e02\u573a\uff0c\u5176\u4e2d\u4e5f\u5305\u62ecPlatform.sh\u6240\u5c5e\u7684\u5e94\u7528\u5e73\u53f0\u5373\u670d\u52a1\uff08aPaaS\uff09\uff0c\u662f\u589e\u957f\u6700\u5feb\u7684\u4e91\u5e02\u573a\u4e4b\u4e00\u3002 \u9884\u8ba12018\u5e74\u5c06\u8d85\u8fc7150\u4ebf\u7f8e\u5143\uff0c\u5e76\u4e14\u52302021\u5e74\u5c06\u6709\u671b\u5b9e\u73b0\u7ffb\u756a\u3002 \n \u963f\u68ee\u7eb3\u8db3\u7403\u4ff1\u4e50\u90e8\uff08Arsenal Football Club\uff09\u9ad8\u7ea7\u8fd0\u8425\u7ecf\u7406John Dollin\u8868\u793a\uff1a\u201cPlatform.sh\u5bf9\u6211\u4eec\u6765\u8bf4\u975e\u5e38\u68d2\uff01\u5982\u4eca\u5bf9\u7f51\u7ad9\u8fdb\u884c\u53d8\u66f4\u9700\u8981\u7684\u65f6\u95f4\u5927\u5e45\u7f29\u77ed\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u8fdb\u884c\u66f4\u65b0\uff0c\u5373\u4f7f\u662f\u5728\u6bd4\u8d5b\u65e5\u8fdb\u884c\u7f51\u7ad9\u66f4\u65b0\u90fd\u6ca1\u6709\u95ee\u9898\u3002\u201d\u9886\u5148\u7684\u6570\u5b57\u5a92\u4f53\u673a\u6784\u548c\u54a8\u8be2\u516c\u53f8Inviqa\u7684\u9996\u5e2d\u6280\u672f\u5b98Richard Jones\u8865\u5145\u9053\uff1a\u201c\u5728\u4e0ePlatform.sh\u5408\u4f5c\u540e\uff0c\u6211\u4eec\u4ea4\u4ed8\u4e86\u65b0\u7684\u963f\u68ee\u7eb3FC\u7f51\u7ad9\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u5de5\u4f5c\u6548\u7387\u3002\u6211\u4eec\u7684\u5f00\u53d1\u90e8\u7f72\u5b9e\u73b0\u4e86\u96f6\u9519\u8bef\uff0c\u73b0\u5728\u7f51\u7ad9\u8fd0\u884c\u7684\u901f\u5ea6\u66f4\u5feb\u4e5f\u66f4\u5b89\u5168\u4e86\u3002\u5982\u679c\u6709\u9700\u8981\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5728\u661f\u671f\u4e94\u5bf9\u7f51\u7ad9\u8fdb\u884c\u66f4\u65b0\u90e8\u7f72\uff01\u201d \n \u5728Platform.sh\u7684\u9996\u5e2d\u6267\u884c\u5b98Frederic Plais\u770b\u6765\uff0c\u516c\u53f8\u5728\u8fc7\u53bb\u4e00\u5e74\u91cc\u83b7\u5f97\u7684\u5ba2\u6237\u5173\u6ce8\u4ee5\u53ca\u826f\u597d\u53d1\u5c55\uff0c\u5c24\u5176\u662f\u5728\u5317\u7f8e\u5e02\u573a\u7684\u7a81\u51fa\u8868\u73b0\uff0c\u90fd\u663e\u793a\u51fa\u516c\u53f8\u5df2\u7ecf\u505a\u597d\u4e86\u5728\u5168\u7403\u8303\u56f4\u5185\u8fdb\u884c\u62d3\u5c55\u7684\u51c6\u5907\u3002\u4ed6\u8868\u793a\uff1a\u201c\u6211\u4eec\u7684\u5e73\u53f0\u6bd4\u4efb\u4f55\u7ba1\u7406\u6258\u7ba1\u66f4\u6709\u6210\u6548\uff0c\u8fdc\u8fdc\u8d85\u51fa\u4e86\u6258\u7ba1\u89e3\u51b3\u65b9\u6848\u6216\u4e91\u57fa\u7840\u67b6\u6784\u7684DIY\u65b9\u6cd5\u6240\u80fd\u63d0\u4f9b\u7684\u5185\u5bb9\u3002\u8fd1\u5e74\u6765\uff0c\u4e5f\u6709\u4e00\u4e9b\u975e\u5e38\u5f3a\u5927\u7684\u5de5\u5177\u5e2e\u52a9\u5b9e\u73b0\u4e86\u65b0\u9896\u7684\u4e91\u67b6\u6784\uff0c\u4f46\u5176\u4e3b\u8981\u7684\u6784\u67b6\u5374\u9519\u7efc\u590d\u6742\u3001\u96f6\u6563\u3002Platform.sh\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8d85\u8d8a\u7c7b\u522b\u7684\u7edf\u4e00\u6a21\u578b\uff0c\u4e0d\u4ec5\u89e3\u51b3\u96c6\u7fa4\u534f\u8c03\u548c\u6301\u7eed\u4ea4\u4ed8\u96be\u9898\uff0c\u8fd8\u6539\u8fdb\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u6d4b\u8bd5\u5e76\u63d0\u4f9b\u4e86\u8d28\u91cf\u4fdd\u8bc1\u3002\u201d \n Gartner \u57282018\u5e742\u6708\u66fe\u63d0\u5230Platform.sh\u5173\u4e8e\u201cPaaS\u7684\u4e3b\u8981\u8d8b\u52bf\u201d\u7684\u62a5\u544a\u3002 \n \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u6b22\u8fce\u8bbf\u95ee\u6211\u4eec\u7684\u7f51\u7ad9\uff1a\u200b https://platform.sh/ \uff1b\u6216\u4e0e\u6211\u4eec\u53d6\u5f97\u8054\u7cfb https://platform.sh/contact \u200b \n \u5728\u9886\u82f1LinkedIn\u4e0a\u627e\u5230\u6211\u4eec\uff1a\u200b https://www.linkedin.com/company/platformsh/ \n Platform.sh\u7b80\u4ecb \n Platform.sh\u662f\u4e00\u4e2a\u4ece\u521b\u610f\u5230\u4e91\u7aef\u7684\u7efc\u5408\u5e94\u7528\u90e8\u7f72\u5e73\u53f0\uff0c\u53ef\u7b80\u5316\u4e91\u57fa\u7840\u67b6\u6784\u3002 \u5b83\u72ec\u7279\u7684Git\u5de5\u4f5c\u6d41\u7a0b\u6280\u672f\u4f7f\u5f00\u53d1\u56e2\u961f\u80fd\u591f\u5feb\u901f\u3001\u5b89\u5168\u5730\u8fdb\u884c\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u90e8\u7f72\u548c\u8425\u8fd0\u3002\u4e0eDIY\u89e3\u51b3\u65b9\u6848\u76f8\u6bd4\uff0cPlatform.sh\u53ef\u8ba9\u4f7f\u7528\u8005\u7684DevOps\u5de5\u4f5c\u91cf\u51cf\u5c1190\uff05\uff0c\u4e0e\u6258\u7ba1\u670d\u52a1\u63d0\u4f9b\u5546\u76f8\u6bd4\uff0c\u6548\u7387\u53ef\u63d0\u9ad840\uff05\uff0c\u4e14\u603b\u6210\u672c\u80fd\u591f\u5f97\u5230\u663e\u8457\u964d\u4f4e\u3002 \u8be5\u516c\u53f8\u88abGartner\u8bc4\u4e3a2018\u5e74PaaS\u8d8b\u52bf\u9886\u5bfc\u8005\uff0c\u540c\u65f6\u4e5f\u662f\u6b27\u76df\u59d4\u5458\u4f1aH2020\u8ba1\u5212\u7684\u83b7\u5f97\u8005\u3002 Platform.sh\u603b\u90e8\u4f4d\u4e8e\u6cd5\u56fd\u5df4\u9ece\u548c\u65e7\u91d1\u5c71\uff0c\u4e3a\u5168\u7403\u6570\u4ee5\u5343\u8ba1\u7684\u81ea\u52a9\u670d\u52a1\u548c\u4f01\u4e1a\u5ba2\u6237\u63d0\u4f9b\u670d\u52a1\uff0c\u5176\u4e2d\u5305\u62ec\u91d1\u878d\u65f6\u62a5\u3001Gap\u3001Magento Commerce\u3001Orange\u3001Hachette\u3001\u65af\u5766\u798f\u5927\u5b66\u3001\u54c8\u4f5b\u5927\u5b66\u3001\u82f1\u56fd\u6587\u5316\u534f\u4f1a\u548c\u6c49\u838e\u822a\u7a7a\u3002 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Adobe Summit 2019: take-aways \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh Raises $34M to Bring Speed and Confidence to Enterprise Cloud Deployments ", "url": "https://platform.sh/blog/platformsh-raises-34m-to-bring-speed-and-confidence-to-enterprise-cloud-deployments/", "documentId": "748fd3f1779789dedd307acaea6bab8002c858f3", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh Raises $34M to Bring Speed and Confidence to Enterprise Cloud Deployments \n         \n\n        \n         \n            \n              \n          \n         \n         23 May 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Investment to Accelerate Growth and Customer Success in North America, Following Strong Adoption \n San Francisco, May 23, 2018  \u2013  Platform.sh , provider of the idea-to-cloud application platform that simplifies cloud infrastructures, today announced it has raised $34 million in a Series C funding round. U.S.-based Partech led the round, along with Idinvest Partners, Benhamou Global Ventures (BGV), SNCF Digital Ventures and returning investor, Hi Inov. Platform.sh will use the investment to accelerate its go-to-market strategy in North America and support its rapidly growing customer base in the region. \n Platform.sh is a comprehensive \u201cidea-to-cloud\u201d application platform that simplifies cloud infrastructures, enabling enterprises to realize all the promises and benefits of the cloud without its ever-growing complexities. More than 650 enterprise customers across the globe currently use the Platform.sh product today to develop, test, deploy and run their cloud-based web applications with speed and confidence. The company, which has experienced 110 percent year-over-year revenue growth this year, addresses every major industry vertical and fuels the innovation of some of the world\u2019s leading brands, including  Magento ,  Gap Inc. ,  The Financial Times , the  British Council ,   and  Hachette Book Group . \n In order to meet escalating customer expectations, enterprises need their app deployments to be executed faster than ever before, but cloud infrastructures are inherently messy and require a level of expertise that is extremely wide and deep. As a result, implementing a continuous deployment strategy to ensure fast-evolving business needs are met, while also ensuring uptime, security and compliance, has become one of the most daunting challenges in software development. Platform.sh makes this simple. \n Designed to support the most complex enterprise-scale production environments, Platform.sh combines an automated cloud with its unique rapid cloning technology that can instantly spin up and deploy exact clones of entire live web applications in less than 60 seconds, allowing development teams to ensure that new features do not break when in production. The unification of production, testing and development workflows results in 90 percent less DevOps efforts as compared to DIY solutions, and 40 percent improved productivity as compared to managed hosting providers at a significantly lower total cost. \n \u201cAs cloud infrastructure providers have created more complexity, being able to deploy and run in the cloud requires more time, expertise and investment,\u201d said Reza Malekzadeh, general partner at Partech and a former senior director at VMware. \u201cPlatform.sh has an incredibly powerful solution that helps enterprises realize the full and latest potential of cloud infrastructures \u2013 speed, performance, security and more \u2013 without the growing hurdles and constraints.\u201d \n Alban Wyniecki, investment director at Idinvest Partners, added: \u201cThe cloud application platform market is an incredibly fertile space, and given the impressive organic adoption of Platform.sh in the U.S., we're investing to capture more of that demand. The company\u2019s strong traction and fast growth in North America, Europe and China signify that the company is well-positioned to become a market leader.\u201d \n The public cloud market has been growing at an unprecedented rate due to enterprises increasingly deploying more apps to the cloud.  Per recent findings from research firm Gartner *, the Cloud Application Infrastructure Services (PaaS) market, which includes the application platform as a service (aPaaS) segment to which Platform.sh belongs, is one of the fastest growing cloud markets. It is forecasted to be worth more than $15B in 2018 and will nearly double by 2021. \n \u201cPlatform.sh has been great for us; the turnaround time for changes is very fast now, and we are able to update the site at any time of day, even on match days if we have to,\u201d said John Dollin, senior operations manager at Arsenal Football Club. Richard Jones, CTO at Inviqa, a leading digital agency and consultancy, added: \u201cAfter moving to Platform.sh, we delivered the new Arsenal FC website with significantly improved productivity. Our deployments are error-free and the site now runs faster and safer. When we need to, we are even able to deploy on Fridays!\" \n \u201cThe customer traction and organic growth we\u2019ve seen over the past 12 months \u2013 especially in North America \u2013 made it clear that we are ready to scale on a global level,\u201d said Frederic Plais, CEO of Platform.sh. \u201cThe productivity gains that our platform delivers are beyond anything offered by managed hosting solutions, or DIY approaches with cloud infrastructures. The recent years have seen an explosion of incredibly strong tools that help implement novel cloud architectures, but the mainline approach is patchwork and piecemeal. Platform.sh proposes a unified model that transcends categories, not only solving difficult cluster orchestration and continuous delivery problems, but also improving testing and quality assurance of applications.\u201d \n Platform.sh was cited recently by Gartner in its February 2018, The Key Trends in PaaS, 2018 report. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Adobe Summit 2019: take-aways \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Blog ", "url": "https://platform.sh/blog/page/5/", "documentId": "f0ef152beaa39d129ada0b43f9ea2503e5de5400", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             15 Apr 2020 \n           \n          \n\n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         Recent posts \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Focus on your status messages \n\n      \n       \n         24 Apr 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Your Guide to GDPR Compliance: The Six Principles of Processing Personal Data \n\n      \n       \n         20 Apr 2018\u00a0 \n           \n              Author:\n              Ivana Kotur\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       What will you do after you deploy? \n\n      \n       \n         17 Apr 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Your Guide to GDPR Compliance: Roles and Responsibilities \n\n      \n       \n         09 Apr 2018\u00a0 \n           \n              Author:\n              Ivana Kotur\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Your Guide to GDPR Compliance (Introduction) \n\n      \n       \n         04 Apr 2018\u00a0 \n           \n              Author:\n              Ivana Kotur\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh is going the distance in China with Impact China 2018 \n\n      \n       \n         03 Apr 2018\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Drupal critical core vulnerability announced \n\n      \n       \n         28 Mar 2018\u00a0 \n           \n              Author:\n              Joey Stanford\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       More details on Drupal SA-CORE-2018-002 \n\n      \n       \n         28 Mar 2018\u00a0 \n           \n              Author:\n              Damien Tournoud\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       SA-CORE-2018-002 Drupal core vulnerability: We've got you covered \n\n      \n       \n         28 Mar 2018\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Announcing the Platform.sh WAF \n\n      \n       \n         16 Mar 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Using cloud technology and automation to help enterprises become GDPR ready  \n\n      \n       \n         06 Mar 2018\u00a0 \n           \n              Author:\n              Joey Stanford\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       We are nothing without our customers' success \n\n      \n       \n         22 Feb 2018\u00a0 \n           \n              Author:\n              Maria Antinkaapo\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Using Platform.sh with Scrum \n\n      \n       \n         13 Feb 2018\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Changing the Node.js version in your application container \n\n      \n       \n         06 Feb 2018\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       HHVM deploys off into the sunset \n\n      \n       \n         30 Jan 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh is ready to make an Impact in China \n\n      \n       \n         24 Jan 2018\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Spectre/Meltdown Security Update Notice \n\n      \n       \n         05 Jan 2018\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Backup and Forget \n\n      \n       \n         03 Jan 2018\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       A look back on 2017 \n\n      \n       \n         29 Dec 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Tighten up your TLS \n\n      \n       \n         28 Dec 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Route all the things \n\n      \n       \n         20 Dec 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Watch your inheritance \n\n      \n       \n         13 Dec 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       GitLab Integration is here! \n\n      \n       \n         12 Dec 2017\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Living on the edge with Ruby 2.5 (preview) \n\n      \n       \n         12 Dec 2017\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh joins the prestigious French Tech Tour China 2017 \n\n      \n       \n         03 Dec 2017\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Welcome to the world, PHP 7.2! \n\n      \n       \n         30 Nov 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Deploy API Platform on Platform.sh \n\n      \n       \n         29 Nov 2017\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       WordPress security updates, the quick way \n\n      \n       \n         01 Nov 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Going Local with Lando \n\n      \n       \n         18 Oct 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Wildcard support for cookies in the HTTP cache \n\n      \n       \n         17 Oct 2017\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n \n    \n     \n         \u00ab\u00ab \n     \n    \n     \n     \u00ab \n     \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     1 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     2 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     3 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     4 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     5 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     6 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     11 \n    \n    \n     \n     \u00bb \n     \n    \n     \n         \u00bb\u00bb \n     \n    \n \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Production is an artifact of development ", "url": "https://platform.sh/2016/12/production-artifact/", "documentId": "e4d4ae6cf8ee67628b7d9ae1f81fe7175ab03ef9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Production is an artifact of development \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         23 Dec 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         In my former life I was a Drupal consultant and architect with Palantir.net. One of my former colleagues there, Michelle Krejci, had a saying she liked to repeat: \u201c Production is an artifact of development .\u201d She even presented on the topic a few times at conferences. What she was saying made sense, but I didn\u2019t fully grok it at the time. \n Now I do. \n As a PHP developer of 15 years, I like many developers had gotten into the habit of deployment being a question of \u201cput code on server, run\u201d. That\u2019s PHP\u2019s sales-pitch; it\u2019s the sales pitch of any scripting language, really. The same could be said just as easily of Python or Ruby. What is an artifact of development other than code? \n Quite a lot, of course. Developers in compiled languages are used to that; source code needs to be compiled to produce something that can actually run. And as long as you have a build process to compile code, throwing other tasks in there to pre-process the source code, or generate other files, is a pretty short leap. For scripting language users, though, that is a weird concept. Isn\u2019t the whole point of a scripting language that I don\u2019t need to compile it? \n Well, yes and no. While PHP or Python execute \u201con the fly\u201d as needed, that doesn\u2019t mean other parts of the system do the same. Sass files need to be converted to CSS. Javascript is frequently written in a non-runnable form these days (TypeScript, ES6, CoffeeScript, JSX, or a dozen other forms) and compiled into ES5-compatible Javascript. Even if you\u2019re not using a code generator or transpiler or whatever is in vogue these days, almost any serious project is (should?) be using CSS compression and JS compression to reduce download size. \n And let\u2019s not forget 3rd party dependencies. Any mainstream PHP project these days is built with Composer. Python uses pip, but the effect is the same. 3rd party dependencies are not part of your code base, and do not belong in your Git repository, but are pulled in externally. \n On top of that, many systems today\u00a0 do \u00a0have a PHP code generation step, too.\u00a0 Symfony \u2019s\u00a0 Dependency Injection Container \u00a0and\u00a0 Routing \u00a0systems,\u00a0 Doctrine ORM \u2019s generated classes, and various others all entail turning easy-to-edit-but-slow code into uneditable-but-fast code. \n For years I\u2019ve been largely avoiding such tools, because I worked mostly with either heavily-managed hosts that had no support for such steps (or their support was far too hard-coded) or client-hosted servers that still believed in hand-crafted artisanal server management. Short of checking the generated CSS, JS, and PHP code into my repository (which we did with Sass/CSS for years), there wasn\u2019t much way to square the clear shift toward even scripting languages having a\u00a0 compile step \u00a0with the 2005-era thinking of most of the servers I used. \n And then I found Platform.sh. \n From the very beginning, Platform.sh has been built on the \u201cproduction is an artifact of development\u201d model. Your application doesn\u2019t consist of just your code. It\u2019s your code, plus 3rd party code, plus your server configuration, plus some CI scripts to generate CSS, compressed JS, optimized PHP, and so forth. Platform.sh was built specifically to address that modern reality. Your git repository may only contain your code, but that gets turned into,\u00a0 repeatably and reliably , a set of application containers, service containers, and \u201coutput code\u201d that will actually get run. What that process looks like is up to you and your application; it could involve Sass, or not; compiling TypeScript, or not; dumping a dependency container or routes, or not. \n The compiled artifact of development isn\u2019t just your code; in fact it\u2019s not even an application container that includes your code. It\u2019s the entire constellation of tools that form your application \u2014 your code, your database, your cache server, your search index, etc. That\u2019s exactly how Platform.sh works, and why it offers far better support for modern web applications than any other managed host I\u2019ve used. ( Give it a spin .) And no, I\u2019m not just saying that because I work here. :-) \n So thank you, Michelle, for convincing me of what modern web hosting should be. And thank you Platform.sh for making it a reality. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh l\u00e8ve 28 millions d'euros pour apporter rapidit\u00e9 et performance aux d\u00e9ploiements cloud en entreprise ", "url": "https://platform.sh/blog/platformsh-leve-28-millions-deuros-pour-apporter-rapidite-et-performance-aux-deploiements-cloud-en-entreprise/", "documentId": "5cc3ce4d3f9149d288693d5064204c02b9438dac", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh l\u00e8ve 28 millions d'euros pour apporter rapidit\u00e9 et performance aux d\u00e9ploiements cloud en entreprise \n         \n\n        \n         \n            \n              \n          \n         \n         23 May 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Cette augmentation de capital permettra notamment \u00e0 Platform.sh d'intensifier ses investissements en Am\u00e9rique du Nord et en Chine. \n Paris, le 23 mai 2018 - Platform.sh, plateforme applicative \"idea-to-cloud\" qui simplifie les infrastructures cloud, annonce un nouveau tour de table en s\u00e9rie C de 28 millions d'euros. Men\u00e9 par Partech, ce tour compte aussi la participation d'Idinvest Partners, Benhamou Global Ventures (BGV) - bas\u00e9 \u00e0 Palo Alto, et de SNCF Digital Ventures, g\u00e9r\u00e9 par Hi Inov, l'investisseur historique. Le nouveau financement permettra \u00e0 Platform.sh d'acc\u00e9l\u00e9rer sa commercialisation en Am\u00e9rique du Nord et en Chine et de servir un nombre croissant de clients sur ces nouveaux march\u00e9s. \n Platform.sh est la plateforme applicative qui simplifie les infrastructures cloud et permet aux entreprises de b\u00e9n\u00e9ficier des promesses du cloud et de ses avantages tout en supprimant sa complexit\u00e9 sous-jacente. Plus de 650 grands comptes utilisent Platform.sh dans le monde afin de d\u00e9velopper, tester et d\u00e9ployer rapidement et en toute confiance leurs applications web en mode cloud. La soci\u00e9t\u00e9, dont la croissance annuelle du revenu s'\u00e9l\u00e8ve \u00e0 110%, met son excellence technologique \u00e0 disposition des principaux march\u00e9s verticaux et de marques internationales telles que le Groupe d'\u00e9dition Hachette, le groupe Orange, Gap Inc., le Financial Times, l\u2019\u00e9diteur eCommerce Magento ou le British Council. \n Afin de r\u00e9pondre aux exigences croissantes de leurs clients, les entreprises doivent fournir une rapidit\u00e9 de d\u00e9ploiement toujours plus importante, mais les infrastructures cloud sont souvent complexes et n\u00e9cessitent un niveau d'expertise avanc\u00e9. Ainsi le d\u00e9fi actuel pour les entreprises consiste \u00e0 r\u00e9pondre \u00e0 la fois aux transformations rapides du m\u00e9tier et aux enjeux de disponibilit\u00e9, de s\u00e9curit\u00e9 et de conformit\u00e9. Platform.sh offre une solution simple \u00e0 ce probl\u00e8me. \n Pens\u00e9e pour les environnements de d\u00e9veloppement en entreprise les plus complexes, la solution de Platform.sh allie un cloud automatis\u00e9 \u00e0 la rapidit\u00e9 d'une technologie de clonage unique capable de copier en moins de 60 secondes une application web y compris ses donn\u00e9es, peu importe la taille de l\u2019application. La cr\u00e9ation \u00e0 la vol\u00e9e des environnements de d\u00e9veloppement et de recette permet aux \u00e9quipes de d\u00e9veloppement de d\u00e9ployer de nouvelles fonctionnalit\u00e9s en toute s\u00e9curit\u00e9 et sans risque d'\u00e9chec. L'unification des processus de production, de test et de d\u00e9veloppement permet une r\u00e9duction de 90% des efforts li\u00e9s au DevOps en comparaison avec des solutions internes, et une am\u00e9lioration de 40% de la productivit\u00e9 par rapport \u00e0 des solutions d'h\u00e9bergement manag\u00e9 classiques, et ceci pour un co\u00fbt significativement inf\u00e9rieur. \n \"Les fournisseurs d'infrastructures cloud cr\u00e9ent beaucoup de complexit\u00e9. Et la capacit\u00e9 \u00e0 d\u00e9ployer et maintenir des applications en mode cloud n\u00e9cessite en interne des ressources, de l'investissement et de l'expertise,\" d\u00e9clare Reza Malekzadeh, General Partner chez Partech et ancien Senior Director de VMware. \"Platform.sh aide les entreprises \u00e0 b\u00e9n\u00e9ficier du plein potentiel du cloud - vitesse, performance, et s\u00e9curit\u00e9, tout en supprimant les contraintes li\u00e9s \u00e0 l'administration de l'infrastructure.\" \n Alban Wyniecki, Investment Director chez Idinvest, ajoute : \"Le cloud est un march\u00e9 incroyablement prometteur et notre investissement a pour objectif d'accompagner la forte demande organique des solutions de Platform.sh aux \u00c9tats-Unis. Une croissance rapide et une demande spectaculaire en Am\u00e9rique du Nord, en Europe et en Chine signifient que la soci\u00e9t\u00e9 se positionne pour devenir un acteur mondial de r\u00e9f\u00e9rence.\" \n Le march\u00e9 du cloud cro\u00eet \u00e0 une vitesse vertigineuse avec la mise en ligne d'applications de plus en plus nombreuses. Le cabinet d'analyse Gartner pr\u00e9voit une explosion du march\u00e9 des services du cloud, qui inclut la sous cat\u00e9gorie de \u201cplateforme applicative as-a-service\u201d (aPaaS) \u00e0 laquelle appartient Platform.sh - avec des revenus estim\u00e9s \u00e0 15 milliards de dollars en 2018 et quasiment le double 3 ans plus tard. \n \"Platform.sh propose une solution unique qui permet de d\u00e9ployer tr\u00e8s rapidement. Nous sommes maintenant capables de mettre \u00e0 jour notre site \u00e0 n'importe quel moment de la journ\u00e9e, et m\u00eame les jours de matchs,\" d\u00e9clare John Dollin, Senior Operations Manager du club de Football anglais d\u2019Arsenal. \"Nous avons r\u00e9alis\u00e9 d'importants gains de productivit\u00e9 suite \u00e0 notre migration sur les technologies de Platform.sh. Nos d\u00e9ploiements sont ultra-stables et le site est plus rapide et s\u00e9curis\u00e9. Nous pouvons m\u00eame d\u00e9ployer le vendredi si nous le souhaitons !\" ajoute Richard Jones, CTO de l'agence digitale Inviqa. \n \"La croissance organique et l'acquisition de nombreux clients ces 12 derniers mois - en particulier en Am\u00e9rique du Nord, \u00a0prouvent que nous sommes pr\u00eats \u00e0 acc\u00e9l\u00e9rer notre d\u00e9veloppement international,\" pr\u00e9cise Fr\u00e9d\u00e9ric Plais, co-fondateur et CEO de Platform.sh. \"Les gains de productivit\u00e9 d\u00e9livr\u00e9s par notre solution sont sup\u00e9rieurs aux offres d'h\u00e9bergement manag\u00e9 ou aux solutions internes de gestion des infrastructures. Nous avons vu l'apparition ces derni\u00e8res ann\u00e9es de nombreux outils pour la mise en place de nouvelles architectures cloud, mais leur approche reste fragment\u00e9e. Platform.sh propose une offre compl\u00e8te et compl\u00e8tement int\u00e9gr\u00e9e, qui transcende les cat\u00e9gories classiques, en am\u00e9liorant l\u2019ensemble des param\u00e8tres, depuis les performances de la production, la capacit\u00e9 \u00e0 d\u00e9ployer fr\u00e9quemment et sans erreur, jusqu\u2019aux outils de test des applications complexes. Le succ\u00e8s de la plateforme tient aux gigantesques gains de productivit\u00e9 qu\u2019elle g\u00e9n\u00e8re. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Adobe Summit 2019: take-aways \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Speed, confidence and simplicity: what our $34m raise means for you ", "url": "https://platform.sh/blog/speed-confidence-and-simplicity-what-our-34m-raise-means-for-you/", "documentId": "dad070a3f691bd6b92e84484ed0cb9b01d9c7a1f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Speed, confidence and simplicity: what our $34m raise means for you \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Fred Plais \n                  \n                   CEO \n                  \n                  \n                 \n            \n          \n         \n         24 May 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         It\u2019s hard to believe that four years ago, Platform.sh was just 14 people working in a small office in Paris. Looking back since the initial launch, it is quite unbelievable to see how much the team has accomplished. We came into an incredibly busy field, dominated by global software vendors and infrastructure companies with endlessly deep pockets, but we came with two main assets in our game: an application developer\u2019s mindset rather than an infrastructure one and some radical ideas about what it means to develop software in a continuous deployment world. \n Our growth in this phase has been both full of learnings, and impressive. I n four years, we have built a unique, scalable, global cloud platform running on several mainstream public clouds, and being used by over 650 enterprise customers \u2013 almost evenly split between the US and Europe,  and thousands of self-serve developers using the product every day. We\u2019re now ready to take the next step on this global journey and push Platform.sh to the next level. \n So it is with this in mind that we\u2019re delighted to announce that we have raised US  $34 million in a Series C funding round . The round was led by U.S.-based Partech, along with Idinvest Partners, Benhamou Global Ventures (BGV), SNCF Digital Ventures and returning investor, Hi Inov. We are very proud to start this new phase of the company with such great partners. \n Our new investors share our vision of simplifying cloud infrastructure for Development teams.  In today\u2019s highly competitive digital world, we believe Development teams should spend as much time as possible making sure their users enjoy an outstanding product experience and focus on building really meaningful features, yet the services provided by most cloud providers are incredibly complex to work with. In fact,  the level of complexity reached by public cloud infrastructure in the past few years is hard to believe : The AWS homepage alone allows you to navigate between 131 products. The IBM Cloud Computing category includes 162, just a sample of over 2000 in their catalogue. \n For anyone managing a development project, the complexity is enormous. You need to create a deployment workflow, set up a back-up strategy, implement a security and compliance strategy, set-up monitoring and on-call for your engineering team, optimize costs through an incredibly complex billing mechanism, and much, much more. And the results are often brittle: a patchwork of services and open-source tools that continuously change and get deprecated forcing companies to continuously fight against the clock... or get stuck with legacy. Legacy that is only six months old but already represents huge technical debt. To build, maintain and run applications on public cloud infrastructures you have to hire an increasing number of highly trained engineers to take on so many responsibilities, at considerable cost. The nuts and bolts, trivial and anecdotal details become the focus points of your most senior engineers:  Cloud was supposed to increase productivity! \n We introduce a radically different model.  We give you a unified vision of the application and the development workflow, where testing, production and scaling comes together in a single platform, and a single contract. A truly minimal contract that covers the application, its infrastructure and its full life-cycle. Platform.sh provides an out-of the box experience that enables development teams to focus on building and improving their applications, deploying new features safely and at a rapid pace, while not having to worry about managing the infrastructure. It is our mission to manage and automate the infrastructure, but we don\u2019t dumb it down. The application creators are free to build the architectures they need. \u00a0Developers and product teams stay in the driver\u2019s seat. \n As a company, we are now in the best situation we have ever been and more than ever we strive to deliver on our key value:  \u201cWe are nothing without our customer success\u201d . We will invest this money to continuously innovate and improve the developer experience and the scalability of the platform. At Platform.sh, we want to empower new ideas, to provide you the ability to do incremental improvement everyday, to embrace growth hacking, AB testing, ship new code as soon as it is ready. We want you to be able to  \u201cDeploy on Fridays\u201d\u2122  without the fear of breaking things.  We want to provide you with an unfair competitive advantage so you can move fast and succeed without borders. \n This raise is going to empower us to accelerate our roadmap and soon enough you are going to hear about some very disruptive features. But that is probably a story for another day. Today is also a moment for a couple of thanks. \n With this fundraise, above all else, we want to deeply thank our customers and the several hundreds of digital agencies for the invaluable trust they have given us. Some of you chose to bet on our technology early on, to bet on us while the company was no more than a budding flower. I would like to particularly thank Mark Lavelle and his team at Magento for trusting us while launching Magento Cloud, Philippe Laplane from Orange Cloud for Business for choosing Platform.sh to strengthen their cloud offering, Michel Lechenault from Seloger, Scott Hooker from TES, Peter Ward from Reiss, Guillaume Pech-Gourg from Hachette, Florian Lorettan from Wunderkraut, Nick Morgalla from the British Council, Winn Jewett from Oxbow Labs, Fabien Potencier from Symfony\u2026 And so many others for trusting us very early on with their business. It is also your courage that got us to this exciting new phase. \n This milestone was achieved through the trust of our clients and our partners. But that trust was won through the dedication of a team. Hey team, I want to thank you. I am humbled by what you have achieved. This was no small feat. You handled the Support calls while onboarding new colleagues. You wrote some incredible pieces of clean, efficient code while doing Ops. You treated clients with patience, empathy and honesty while those experienced the rough edges of a young and fast evolving product. You showed grit and solidarity when the going got rough. And you did all of this while building a culture that is not only inclusive but that is fundamentally nice. You are so nice to work with. \n Thank you very deeply for your trust. \n Fred Plais, CEO Platform.sh \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "How repeatable deployments work ", "url": "https://platform.sh/2016/12/repeatable-deployments/", "documentId": "8c2c66c12c2102711ce74626584b8722d25e1644", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           How repeatable deployments work \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         13 Dec 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         One of the key selling points of Platform.sh is predictable, repeatable deployments. We view the read-only production file system as a key advantage for our customers. But why is that, and how do we manage it? Just how repeatable and predictable is it? \n The key to reliability is predictability. If I know my code works in testing, I should be able to predict, with a very high degree of confidence, that it will work in production, too. To do that, we need to minimize the number of variables that differ between staging and production. Zero is ideal, but anything close to zero is generally good enough. \n At Platform.sh, the build process for all environments, production or not, is exactly the same. And the inputs to that build process are all consistent and largely predictable. \n Overall there are four inputs to any running application: \n \n\t Your code, as tracked by Git. That includes any configuration directives in Platform.sh configuration files, your php.ini file, etc. \n\t Any 3rd party dependencies that are downloaded at build time, such as from Composer, npm, or Ruby gems. \n\t Any configuration variables defined in a project via the UI. \n\t The underlying container image we provide. \n \n If those inputs are all the same, the output should be identical. (Functional programming DevOps?) So when can those change? \n Your container \n First of all, let\u2019s clarify exactly how an application container works. There are three parts to every container: The container image, the application image, and the writeable file system. \n The container image is provided by us, and contains nginx, the runtime appropriate for your application (PHP, Python, etc.), and custom tools we built to manage our orchestration. It is shipped as a read-only file system, using squashfs. It gets mounted at\u00a0 / . \n The application image is the result of running your build hook on the code in your git repository. The resulting files are compressed into a read-only file system, using squashfs, and mounted at\u00a0 /app . \n The writeable file system is specified by your\u00a0 .platform.app.yaml \u00a0file, and can be zero or more locations that get mounted as writeable disks at a directory (under\u00a0 /app ) that you specify. \n When Platform.sh \u201cdeploys\u201d your container, it means we: \n \n\t \u201cClose\u201d the application container so it doesn\u2019t accept new requests \n\t Shutdown the container \n\t Replace the container image with a new version, if there is one \n\t Replace the application image \n\t Mount the writeable file system \n\t Inject any configured environment variables \n\t Run user-specified deploy hooks \n\t \u201dOpen\u201d the application container to accept requests again \n \n Assembling the container. \n Now that we know how a container works, let\u2019s look at those inputs again. \n Your code \n Your code in Git, of course, only changes when you tell it to. That\u2019s the point of Git. It changes only when you want it to change. It changes only on the branch you want to change. You can merge to another branch, at which point that branch has changed because you wanted it to change. It\u2019s entirely under your control. \n 3rd party code \n 3rd party dependencies depend primarily on the configuration in your code, in Git. Most package managers these days support a lock file (such as\u00a0 composer.lock \u00a0for PHP) that will ensure that the exact same code is downloaded every time, even if a newer version is available. That\u2019s why you should always check your lock file into your Git repository for an application. That way, your 3rd party dependencies are entirely under your control. \n Environment variables \n Environment variables are configured by you, through either the Platform CLI or the web interface. They can be any values you want, but are mostly useful for things like API keys, login credentials, and other values that should not be in Git (either for security reasons or because they need to be different between a Platform.sh environment and your local environment). Because these are set by you, the user, they\u2019re entirely under your control. \n The container image \n The container image is the only input that is controlled by Platform.sh, not by the user. We currently have over a dozen container images for various languages and language versions. We only release new versions of these when there\u2019s a new version of our integration software available or there\u2019s a bug or security fix in one of the tools we include. That means new bugfix or security releases of PHP or Python, or an update to nginx, for instance. We will never change your container type out from under you (say, switching from PHP 5.5 to 7.0), but we may update the type as needed (such as the monthly security release of PHP 7.0.x). \n The guarantee \n Of particular note is that everything that goes into the application image (your code and 3rd party code) is controlled by Git, and Git is controlled by you, thus the application image is based exclusively on things within your control. It also means it\u2019s predictable for us, too: If the hash of all files in a given branch already exists, and we\u2019ve already built a container image for it, then we know, with certainty, that the resulting application image would be the same, too. That means we don\u2019t even rebuild it, saving time and resources. (We don\u2019t use the git hash directly for that, as if you have multiple application containers we want to treat them separately.) \n It also guarantees consistency for your deployment. Suppose you have a branch\u00a0 feature-x \u00a0on which you\u2019ve done some development and deployed it to a Platform.sh dev environment. That means we\u2019ve built an application image out of it. Now you merge it back to\u00a0 master . As long as the merge is a fast-forward merge in Git, the files that were at the HEAD of the\u00a0 feature-x \u00a0branch will now be identical to the\u00a0 master branch. Identical files means we can reuse the existing application image. \n Your application image in production isn\u2019t just like the one that was in your feature branch. It\u00a0 is \u00a0the one that was in your feature branch. The same exact bits. \n What can still vary \n While the application image is reused as-is, the container image may get a new version if one is available. That will only be different from the dev branch if a new version has been released between when you last pushed to that branch and when you merged it to\u00a0 master . The odds of that are low, but if you want to be certain you can always add an empty commit to the dev branch to trigger a deploy, which would pick up a new container image if one exists. If all is well, merge to\u00a0 master \u00a0with confidence. \n The writeable file system may also vary between production and a development environment. When a new environment is created its data is cloned from production, but depending on how long your dev environment lives before getting merged the two could diverge. Again, if you want to be sure just click the \u201cSync\u201d button in the UI to copy production\u2019s data to your dev environment and check it over. It only takes a minute or two, regardless of how much data you have. \n Your environment variable configuration may also vary between environments, but in that case it\u2019s generally because you want it to; you don\u2019t want your development instance sending purchase orders with real credit cards against a real payment gateway. (At least, we assume not.) \n So there you have it: Absolutely identical code between development and production, and usually absolutely identical environments (that can be guaranteed identical if you want them to be). It\u2019s as close to functional programming as DevOps can get, and it\u2019s just another day at the office around here. \n Happy deploying! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Now available: Sovereign Hosting Solution in Microsoft Cloud Germany ", "url": "https://platform.sh/blog/now-available-sovereign-hosting-solution-in-microsoft-cloud-germany/", "documentId": "cd8d7d59abba50a96e037b15b5ed9d4a75613478", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Now available: Sovereign Hosting Solution in Microsoft Cloud Germany \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Andrew Melck \n                  \n                   Regional Business Development Manager DACH \n                  \n                  \n                 \n            \n          \n         \n         22 Jun 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Microsoft and Platform.sh announce availability of sovereign, end-to-end development and production hosting solution in Microsoft Cloud Germany \n Find the German version of the press release below \n New offering satisfies compliance and data security needs of Large Enterprises and Public Sector, while offering productivity gains and efficiency savings. \n Platform.sh announced today the full availability of its containerized PaaS solution in Microsoft Cloud Germany\u2019s Azure datacenters with immediate effect. \n \n \u201cUp to now we have offered production resources in Microsoft Cloud Germany. This takes our cooperation with Microsoft to the next level, providing a watertight, end-to-end development and production hosting solution that satisfies the exacting compliance and regulatory standards that public sector and Large Enterprise customers have come to expect.\u201c Platform.sh Regional Manager for DACH Andrew Melck. \n \n Customer data is held in new Azure datacenters under the control of T-Systems, a subsidiary of Deutsche Telekom, an independent German company acting as a data trustee. \n \n \u201cMicrosoft Cloud Germany enables our customers and partners to transform successfully and pioneer in their markets by providing innovative solutions that meet even strict compliance restrictions. Partners like Platform.sh are at the forefront of helping customers to fuel their businesses with intelligent cloud technologies and open-source solutions.\u201d Peter Jaeger, Senior Director DX at Microsoft Germany\u00a0 \n \n Platform.sh is growing quickly in Germany and has already attracted a constellation of top brands including Gelbe Seiten, Ikea, Mercedes Benz Stars-Insight, Flixbus, and Mustang Jeans.\u00a0 \n Some of Germany\u2019s most trusted IT players are also signed up, including the TYPO3 Association. \n \n \u201cTYPO3 is the CMS that people trust in Germany - but also across Europe. Platform.sh is an amazing tool for maximizing developer value by accelerating delivery cycles and simplifying production workflow. Bringing everything under one roof in Germany underlines that trust \u2013 and creates the ideal conditions for our extensive user base to make the move into the cloud - with all the necessary assurances.\u201d Olivier Dobberkau, Chairman of the TYPO3 association \n \n It\u2019s a scenario that also works well for public sector users. Dr. Christian Knebel\u2019s company publicplan recently launched deGov, a portal solution for local authorities and public institutions based on Drupal 8. He said, \u201cThe public sector has a whole raft of requirements in terms of regulations and compliance. With this step, Platform.sh becomes the first solution to marry cutting-edge technology with a suitably old-school respect for the security and sovereignty concerns that such bodies inevitably have.\u201d \n Platform.sh is supported by the European Commission as a laureate of the highly competitive Horizon 2020 program in order to augment its existing worldwide cloud solution with European sovereign capabilities. It is now recognized as a Horizon 2020 Champion.\u00a0 \n Companies, agencies and developers interested in trialling the new offering are encouraged to take advantage of the free trial available at  https://platform.sh/de/microsoft-cloud-deutschland . \n \u00a0 \n Microsoft und Platform.sh geben die Verf\u00fcgbarkeit einer souver\u00e4nen, End-to-End Entwicklungs- und Produktions-Hosting-L\u00f6sung in der Microsoft Cloud Deutschland bekannt \n Das neue Angebot erf\u00fcllt die Compliance- und Datensicherheitsanforderungen von Gro\u00dfkonzernen oder \u00f6ffentlichen Auftraggebern und bietet zugleich Produktivit\u00e4ts-steigerung und Kosteneinsparungen durch verbesserte Effizienz. \n Platform.sh gibt heute die sofortige Verf\u00fcgbarkeit ihrer containerbasierten PaaS-L\u00f6sung in der Microsoft Cloud Deutschland bekannt. \n \n Andrew Melck, Regional Manager f\u00fcr DACH Platform.sh, erkl\u00e4rt: \u201eBisher haben wir unseren Kunden Produktions-Hosting in der Microsoft Cloud Deutschland zur Verf\u00fcgung gestellt. Mit diesem weiteren Schritt erreicht unsere Kooperation mit Microsoft ein neues Level. Es erm\u00f6glicht uns, eine l\u00fcckenlose End-to-End Entwicklungs- und Produktions-Hosting-L\u00f6sung anzubieten, welche die anspruchsvollen Standards f\u00fcr Compliance und Regularien erf\u00fcllt, die von Gro\u00dfkonzernen und \u00f6ffentlichen Auftraggebern erwartet werden.\u201d \n \n Kundendaten befinden sich hierbei in den neuen Azure-Rechenzentren unter der Kontrolle von T-Systems, einer Tochtergesellschaft der Deutschen Telekom, die als unabh\u00e4ngiges deutsches Unternehmen und Datentreuh\u00e4nder agiert. \n \n Peter J\u00e4ger, Senior Director DX Microsoft, f\u00fcgt hinzu: \u201eDie Microsoft Cloud Deutschland erm\u00f6glicht unseren Kunden und Partnern die erfolgreiche Transformation und eine Vorreiterstellung in deren M\u00e4rkten, indem sie innovative L\u00f6sungen bereitstellt, die auch strengen Compliance-Vorgaben entsprechen. Hierbei werden sie von hervorragenden Partnern wie Platform.sh unterst\u00fctzt, die sie durch intelligente Cloud-Technologien und Open-Source- L\u00f6sungen voranbringen.\u201d \n \n Platform.sh w\u00e4chst im deutschen Markt sehr schnell und konnte schon bekannte Marken wie Gelbe Seiten, Ikea, Mercedes Benz Stars-Insight, Flixbus und Mustang Jeans f\u00fcr sich gewinnen. \n Einige von Deutschlands bekanntesten Marken in der IT-Branche wie zum Beispiel die TYPO3 Association nutzen bereits Platform.sh. \n \n Olivier Dobberkau, Vorstandsvorsitzender der TYPO3 Association, sagt: \u201eTYPO3 ist das CMS auf das Anwender in Deutschland, aber auch in Europa, vertrauen. Platform.sh ist ein fantastisches Tool zur Maximierung des Beitrags von Entwicklern f\u00fcr die Wertsch\u00f6pfung, aufgrund beschleunigter Delivery-Zyklen und vereinfachter Produktionsabl\u00e4ufe. Alles unter einem Dach in Deutschland zu haben, st\u00e4rkt das Vertrauen und schafft die idealen Bedingungen f\u00fcr unseren gro\u00dfen Nutzerkreis in die Cloud zu wechseln \u2013 mit allen erforderlichen Sicherheitsgarantien.\u201d \n \n Ein Szenario, das auch f\u00fcr Nutzer im \u00f6ffentlichen Sektor gut funktioniere, meint Dr. Christian Knebel, dessen Firma publicplan k\u00fcrzlich deGov, eine auf Drupal 8 basierende Portall\u00f6sung f\u00fcr den \u00f6ffentlichen Sektor, auf den Markt gebracht hat. \u201eDer \u00f6ffentliche Sektor stellt eine Vielzahl von Anforderungen in Bezug auf Regularien und Compliance. Mit diesem Schritt wird Platform.sh der erste Anbieter, dem die Vereinigung modernster Technologien mit den etablierten Ma\u00dfst\u00e4ben \u00a0f\u00fcr Sicherheit und Souver\u00e4nit\u00e4t gelingt, die \u00f6ffentliche Institutionen anlegen m\u00fcssen. \n Platform.sh wird als ausgezeichneter Teilnehmer des Rahmenprogramms Horizont 2020 f\u00fcr Forschung und Innovation der EU gef\u00f6rdert, um seine weltweit existierende Cloud L\u00f6sung um europ\u00e4ische, souver\u00e4ne Leistungen zu erweitern. Platform.sh ist jetzt als Champion in diesem Programm anerkannt. \n Unternehmen, Agenturen und Entwickler, die das neue Angebot gerne testen m\u00f6chten, k\u00f6nnen ab sofort ein kostenlos verf\u00fcgbares Probeangebot nutzen unter:  https://platform.sh/de/microsoft-cloud-deutschland . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Privacy Policy", "title": "Privacy ", "url": "https://platform.sh/privacy-policy/", "documentId": "a77cd9cd29baf5155f34de1ce4b9a21d3c71dbd6", "text": "\n     \n       \n         \n   \n     \n       Privacy \n       Looking for our GDPR & CCPA DPA?  Sign it here . \n     \n   \n \n \n   \n     (1) Introduction \n     (2) Information We Collect \n     (3) Our use of Cookies \n     (4) How We Use Your Information \n     (5) Legal Basis for Processing Personal Information Under General Data Protection Regulation (GDPR) \n     (6) Your Data Protection Rights Under GDPR, Canada\u2019s PIPEDA, and California\u2019s Consumer Privacy Act \n     (7) Storing, Securing, and Transfer of your Personal Data and Information \n     (8) Disclosing Your Personal Information \n     (9) Data Breaches \n     (10) Accessing and Updating Your Personal Information \n     (11) Third-party Links \n     (12) Children\u2019s Privacy \n     (13) About Us \n     (14) Contact Us \n     (15) Changelog \n   \n \n\n (1) Introduction \n Platform.sh offers many services, products, software, and offerings on related Platform.sh websites (the \u201cServices\u201d), including but not limited to, all information, tools and services available from this site to you, the user, conditioned upon your acceptance of all terms, conditions, policies and notices stated herein (the \u201cPrivacy Policy\u201d). Through these Services, including software available for download, we obtain certain information from and about you. This Privacy Policy is specific to the Services that are run under the brand \u201cPlatform.sh\u201d including but not limited to:  https://platform.sh ,  https://docs.platform.sh ,  https://status.platform.sh ,  https://accounts.platform.sh , and  https://console.platform.sh/ . Note that this Privacy Policy explicitly excludes all properties under the following as these are development sites operated by Platform.sh customers: \n \n .au.platform.sh \n .bc.platform.sh \n .ca-1.platform.sh \n .de-2.platform.sh \n .eu.platform.sh \n .eu-2.platform.sh \n .eu-3.platform.sh \n .fr-1.platform.sh \n .us.platform.sh \n .us-2.platform.sh \n .platformsh.site \n \n We value your privacy and are committed to safeguarding and preserving the privacy of our visitors. This Privacy Policy explains what information we collect, how we use that information and other policies regarding your information and privacy. We have tried to make it as simple as possible, but if you do not understand something, please contact us. This Privacy Policy was written in English (US) and may be translated to other languages solely for the convenience of our site visitors. In all cases and specifically if a potential conflict between versions arises, the English version of this Privacy Policy controls. \n (2) Information We Collect \n We collect information that you give us or that we get from your use of our sites and Services, including without limitation, the following: \n \n \n Information about your use of our Services, including details of your visits to our sites, pages viewed and the resources that you accessed. Examples of information include device, IP address, browser information, cookie information, geographic location, and traffic data. \n \n \n Information specifically provided by you, including your name, telephone number, email address, physical address, login username, password, or other information that you voluntarily share with us. \n \n \n (3) Our use of Cookies \n Cookies are small pieces of data stored on your device (computer or mobile device). Cookies can be used to provide you with a tailored user experience and to make it easier for you to use a site upon a future visit. When used, cookies are downloaded and stored on your device. Such information, on its own, will not identify you personally. It is statistical data. Generally, you can turn off the cookie function on your device, but that may prevent you from using our sites and Services. We may use such cookies to deliver and improve our Services. Some third-party services that we use to improve the Services (including usage, measuring performance, and advertising), such as Google Analytics, may also place cookies on your device. \n Examples of Cookies we use: \n \n \n Session Cookies . We use session cookies to operate our Services. \n \n \n Preference Cookies.  We use preference cookies to remember your preferences and various settings. \n \n \n Advertising and Marketing Cookies.  We use advertising and marketing cookies to deliver and measure the effectiveness of our marketing campaigns. \n \n \n Security Cookies.  We use security cookies for security purposes. \n \n \n For any questions or preferences on cookie opt-outs or about our policy listed here, please contact us. \n (4) How We Use Your Information \n We use the information we collect from you to provide, maintain, protect, and improve our sites and Services, and to develop new ones. \n In addition, we may use the information for one or more of the following purposes: \n \n \n To provide information to you that you request from us relating to our products or services \n \n \n To provide information to you related to products or services provided by us \n \n \n To inform you of any changes, offers, updates or other announcements about our Services \n \n \n To allow you to participate in interactive features of our Services when you choose to do so \n \n \n To provide customer support \n \n \n To gather analysis or valuable information so that we can improve our services \n \n \n To monitor the usage of our Services \n \n \n To detect, prevent, and address technical issues \n \n \n To provide you with new Services offers and relevant Services information and events unless you have opted not to receive such information \n \n \n Platform.sh provides tools to make your development workflow more productive such as our CLI (command line interface). Also, Platform.sh will provide from time to time application-specific modules or libraries, that you may opt into, in order to integrate into your software project in order to make its configuration simpler. Such applications, libraries, or modules may report usage information to us, which we may collect. Information collected may contain the type of actions performed, log data of API activity as well as configuration information. This information may be linked to you and we may use this information to better provide technical support you and to improve our Services. \n (5) Legal Basis for Processing Personal Information Under General Data Protection Regulation (GDPR) \n If you are from the European Economic Area (EEA), Platform.sh\u2019s legal basis for collecting and using the personal information described in this Privacy Policy depends on the data we collect and the specific context in which we collect it. For purposes of this Privacy Policy and compliance with GDPR personal information is data about a living individual who can be identified from such data (or from those and other information either in our possession or likely to come into our possession). \n Platform.sh may process your personal information because: \n \n \n We need to perform a contract with you \n \n \n You have given us permission to do so \n \n \n The processing is in our legitimate interest and it\u2019s not overridden by your rights \n \n \n For payment processing purposes \n \n \n To comply with applicable law \n \n \n (6) Your Data Protection Rights Under GDPR, Canada\u2019s PIPEDA, and California\u2019s Consumer Privacy Act \n Your Rights Under GDPR:  If you are a resident of the European Economic Area (EEA), you have certain data protection rights. Platform.sh aims to take all reasonable steps to allow you to correct, amend, delete, or limit the use of your personal information and data. If you wish to be informed of what personal information and data we hold about you and if you want it to be removed from our systems, please contact us. For existing customers, please file a support ticket. \n In certain circumstances, you have the following data protection rights: \n \n \n The right to access, update or to delete the information we have on you . Whenever made possible on your account settings, you can access, update or request deletion of your personal information and data directly within your account settings section. Please also file a support ticket to confirm any account changes, or contact us to assist you. \n \n \n The right of rectification . You have the right to have your information rectified if that information is inaccurate or incomplete. \n \n \n The right to object . You have the right to object to our processing of your personal information or data. \n \n \n The right of restriction . You have the right to request that we restrict the processing of your personal information. \n \n \n The right to data portability . You have the right to be provided with a copy of the information we have on you in a structured, machine-readable and commonly used format. \n \n \n The right to withdraw consent.  You also have the right to withdraw your consent at any time when Platform.sh relied on your consent to process your personal information. \n \n \n Please note that we may ask you to verify your identity before responding to such requests. \n Your Rights Under Canada\u2019s PIPEDA (Privacy Rights):  The Personal Information Protection and Electronic Documents Act (PIPEDA) is the Canadian federal privacy law for private-sector organizations to regulate the way private-sector organizations handle the personal information in a commercial activity. \n Under the PIPEDA principles, individuals have the right to know why their personal information is being collected, how their personal information will be used, and to whom their personal information will be disclosed, and to have the ability to ask for access to, or correction of, their personal information. More details on the PIPEDA principles can be found on the Office of the Privacy Commissioner of Canada\u2019s  site . \u00a0 \n \n \n Accountability and Openness.  Platform.sh has a designated Security, Compliance, and Data Protection Officer who is accountable for the management of your personal information, including collection, usage, disclosure, retention, and transfer of personal information to third parties for processing. Contact us to be connected or email  dpo@platform.sh . For existing customers, please file a support ticket. \n \n \n Identifying Purposes.  When your personal information is collected, it will be clearly identified what purpose it is being collected for (e.g. when you sign up for the Services and enter your contact information to have customer support). \n \n \n Consent.  Your individual consent or consent on behalf of the organization is required when we collect, use, or disclose any such personal information. In certain circumstances, we may disclose your personal information for legal, medical, or security reasons. If at any time you wish to withdraw your consent, you will be notified of any account implications. \n \n \n Limiting Collection.  Platform.sh collects only the personal information which is necessary for the purposes identified at the time of collection (providing technical support you, and to improve your Services). \n \n \n Limiting Use, Disclosure, and Retention.  Platform.sh does not use or disclose personal information for purposes other than those which it has identified purposes for and received consent for in line with this Privacy Policy and only retains personal information for as long as is necessary to fulfill such purposes. Usage data is generally retained for 14 months or less, except when such information is used for compliance including legal obligation or security, and legitimate business reasons, such as improving Services. \n \n \n Accuracy and Individual Access.  Your personal information we collect may be deleted, updated and/or completed in your account settings at any time, or you may contact us for assistance with making sure your information is accurate and up-to-date. Most changes will be reflected in your account immediately. Your request for account change or deleted information may be verified or retained if we have legal basis for doing so in accordance with this Privacy Policy. \n \n \n Safeguards.  Platform.sh uses physical, organizational, technological methods and policies to protect and safeguard your personal information. For more on our security, please visit  platform.sh/security . \n \n \n Challenging Compliance.  Our procedures are in place to receive and respond to any complaints and inquiries you may have. Contact us or email our Security, Compliance, and Data Protection Officer at  dpo@platform.sh . For existing customers, please file a support ticket. \n \n \n Your Rights Under California\u2019s Privacy Laws:  The California Consumer Privacy Act (CCPA) gives California Consumers/residents eight new privacy rights and imposes eight corresponding, and three independent, obligations on businesses processing California Consumers\u2019 Personal Information. Where applicable, we have added contractual requirements instructing our service providers to not further collect, sell, or use the Consumers\u2019 Personal Information except as necessary to perform the business purpose. \n \n \n Consumer Right No. 1: Abbreviated Disclosure Right Applicable to Businesses that Collect PI.   A Consumer has the right to request that a business that collects a Consumer\u2019s PI disclose to that Consumer the categories and specific pieces of PI the business has collected. The types of Consumer Personal Data to be Processed are: \n \n \n The names, email addresses and other contact details of Consumer with whom we need to liaise in the provision of Services. \n \n \n We may also collect: (a) names; (b) addresses; (c) countries; (d) email addresses, (e) telephone numbers; (f) financial data relating to orders; (g) IP Addresses; and (h) log files; as may be necessary to perform the Services and/or bill for such Services. \n \n \n Consumer Right No. 2: Expanded Disclosure Right Applicable to Businesses that Collect PI. \n \n \n The names, email addresses and other contact details of Consumer with whom we need to liaise in the provision of Services. \n \n \n We may also collect: (a) names; (b) addresses; (c) countries; (d) email addresses, (e) telephone numbers; (f) financial data relating to orders; (g) IP Addresses; and (h) log files; as may be necessary to perform the Services and/or bill for such Services. \n \n \n Consumer Right No. 3: Right to Request Information from Businesses that Sell or Disclose PI for a Business Purpose.  We do not sell or disclose PI as defined under the CCPA. \n \n \n Consumer Right No. 4: Right to Opt Out of Sale of Data.  We do not sell or disclose PI as defined under the CCPA. \n \n \n Consumer Right No. 5: Right to Opt-in for Children: Business Obligation Not to Sell Children\u2019s PI unless there is Affirmative Authorization.  We do not sell or disclose PI as defined under the CCPA. \n \n \n Consumer Right No. 6: Deletion Rights.  Whenever made possible on your account settings, you can access, update or request deletion of your personal information and data directly within your account settings section. Please also file a support ticket to confirm any account changes, or contact us to assist you. \n \n \n Consumer Right No. 7: Rights to Access and Portability.  You have the right to be provided with a copy of the information we have on you in a structured, machine-readable and commonly used format. \n \n \n Consumer Right No. 8: Not to be Discriminated Against for Exercising Any of the Consumer\u2019s Rights under the Title.  We do not use financial incentive practices that are unjust, unreasonable, coercive or usurious. \n \n \n (7) Storing, Securing, and Transfer of your Personal Data and Information \n Platform.sh will retain your personal information only for as long as is necessary for the purposes set out in this Privacy Policy. We will retain and use your personal information to the extent reasonably necessary to comply with our legal obligations (for example, if we are required to retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies. Platform.sh retains usage data for a reasonable period of time to pursue legitimate business interest, for internal analysis purposes. Usage data is generally retained for a shorter period of time, up to 14 months, except when this data is used to strengthen the security or to improve the functionality of our Service, or we are legally obligated to retain this data for longer time periods. \n We take all reasonable measures to: \n \n \n Protect your personal data and information, and to protect our Services from unauthorized access to, or unauthorized alteration, disclosure or destruction of, information we maintain. \n \n \n Ensure that we are in compliance with the EU General Data Protection Regulation (GDPR), Canada\u2019s PIPEDA, the California Consumer Privacy Act, the Australian Privacy Act, and other privacy regulations as described in this Privacy Policy. \n \n \n We may transfer personal data outside the European Union. Data may be transferred from the Platform.sh Accounts portal located in Ireland to clusters in France, Ireland, USA, Australia, Canada, the UK, and Germany using securely encrypted transfer channels (TLS) and stored with no access to any third-party. Platform.sh transfers its data, only as necessary to fulfill a needed function, to companies that are GDPR or Privacy Shield compliant. Platform.sh signs Data Processing Agreements or GDPR compliant contracts with all processors, and has replaced vendors who were not compliant. \n (8) Disclosing Your Personal Information \n We will not disclose your personal information to any other party other than in accordance with this Privacy Policy and in the circumstances detailed below: \n \n \n Consent: \n \n We may disclose personal information if we have your specific consent to do so. \n \n \n \n Co-sponsored activities: \n \n When you sign up for a webinar or other activity that is co-sponsored by another company, we may share your registration information with that company. \n \n \n \n Third-party Services: \n \n \n We use trusted third-party service providers, consultants and other agents to help us provide, maintain, protect and improve our Services. We may provide your personal information to such third-party service providers to perform certain tasks based on our instructions and in compliance with this Privacy Policy. \n \n \n Examples of third-party services include data storage, maintenance services, database management, web analytics, and payment processing. For a list of all third-party services or providers using your personal information or data, or to opt-out at any time, please contact us. For existing customers, please file a support ticket. \n \n \n \n \n Legal: \n \n \n We will share personal information if we have a good-faith belief that access, use, preservation, or disclosure of the information is reasonably necessary to: \n \n \n under certain circumstances, to comply with legal obligation, to meet applicable law, regulation, legal process, or enforceable governmental request \n \n \n enforce applicable Terms of Service or any of our other agreements with you, including investigation of potential breaches \n \n \n detect, prevent, or otherwise address fraud, security or technical issues in connection with the Services \n \n \n protect against harm to the rights, property, liability, or safety of Platform.sh, our users and customers, or the general public, as required or permitted by law \n \n \n \n \n \n \n Succession: \n \n If we are involved in a merger, acquisition, or asset sale, you agree that your personal information may be transferred to such third-party. \n \n \n \n If you wish to withdraw your consent of having your personal information used for certain purposes, please contact us. For existing customers, please file a support ticket. \n All information you disclose in your public profile, forum posts, blogs, comments, issue queues, or other public portions of our Services becomes public information. Please be careful in what you choose to disclose publicly. \n (9) Data Breaches \n We will report any unlawful data breach of this website\u2019s database or the database(s) of our third-party data processors to any and all relevant persons and authorities within 72 hours of the breach if it is reasonably apparent that personal information stored in an identifiable manner has been accessed. Should you have any complaint about a breach, or the way in which we will handle a breach, please contact us. \n (10) Accessing and Updating Your Personal Information \n You have the right to access your personal information that we hold, and correct, amend, or delete that information where it is inaccurate, except where the rights of persons other than you would be violated. Please contact us to assist you. Whenever made possible, you can access, update or request deletion of your personal information and data directly within your account settings section. If you are unable to perform these actions yourself (e.g. you don\u2019t have an account), please contact us using the various methods detailed below to assist you. For customers located in Australia, you may also email \u201c dpo@platform.sh \u201d. \n (11) Third-party Links \n Our Services may contain links to other sites that are not operated by us. If you click on a third-party link, you will be directed to that third-party\u2019s site. We do not endorse these sites, nor are we responsible for the content or accuracy of any information contained on them. We strongly advise you to review the privacy policies of every site you visit. We have no control over and assume no responsibility for the content, privacy policies, or practices of any third-party sites or services. \n (12) Children\u2019s Privacy \n To the extent prohibited by applicable law, our Service does not address anyone under the age of 16 (\u201cChildren\u201d). By agreeing to these Terms of Service, you represent that you are the age of majority in your state, province, or country of residence or 16 years of age whichever is greater. We do not knowingly collect personally identifiable information from anyone under such age of majority. If you are a parent or guardian and you are aware that your Children have provided us with personal information, please contact us. If we become aware that we have collected personal information from children without verifiable verification of parental consent, we will take steps to delete that information from our databases and servers. \n (13) About Us \n Platform.sh is operated by Platform.sh SAS, a French company located at 131, Boulevard de S\u00e9bastopol, Paris, 75002 France which may include its affiliates, subsidiaries, directors, officers, employees, agents, partners, contractors, and/or licensors (together, referred to throughout these Terms of Service and Privacy Policy as \u201cPlatform.sh\u201d or \u201cus\u201d or \u201cwe\u201d). Our GDPR Supervisory Authority is the  Commission Nationale de l\u2019Informatique et des Libert\u00e9s . Platform.sh is also registered with the  Information Commissioner\u2019s Office  in the United Kingdom and the  Office of the Australian Information Commissioner . All privacy issues, compliance requests, inquiries, and requests will be handled by our French parent company, Platform.sh SAS. \n (14) Contact Us \n Platform.sh has a designated Security, Compliance, and Data Protection Officer who is accountable for the management of your personal information, including collection, usage, disclosure, retention, and transfer of personal information to third parties for processing. \n If you have any questions, requests, feedback, data rectification or concerns regarding this Privacy Policy, please  contact us . For existing customers,  please create a support ticket through your account  to allow for identify verification. \n Visitors have the following options for correcting personal information or removing their information from our database in order to discontinue future communications from Platform.sh. \n \n \n Click on the \u201cUnsubscribe\u201d link on any Platform.sh email \n \n \n Contact us  using our website contact form \n \n \n Send a request by mail to: Attention Legal, Platform.sh, 131, Boulevard de S\u00e9bastopol, Paris, 75002 France \n \n \n Should you deem that we have not satisfactorily handled your complaint you have the right to contact our Supervisory Authorities listed in the About Us section and file a complaint. \n (15) Changelog \n Platform.sh may update this Privacy Policy from time to time. When we materially change this policy, a prominent notice will be posted on our website along with the updated Privacy Policy. In accordance with the Terms of Service, in some cases, we will notify you in advance, and your continued use of the Services after the changes have been made will constitute your acceptance of the changes. \n \n \n \n Version \n Date \n Changes \n \n \n \n \n 1.0 \n 2016-08-16 \n Original version \n \n \n \n \n \n \n \n 1.1 \n 2017-10-25 \n Added information about GDPR compliance \n \n \n \n \n \n \n \n 1.2 \n 2018-01-20 \n Added GDPR Supervisory Authority \n \n \n \n \n \n \n \n 2.0 \n 2018-06-16 \n 1) Updated from Legal Review 2) Added additional privacy related compliance with GDPR, PIPEDA, and California \n \n \n \n \n \n \n \n 2.1 \n 2018-11-05 \n 1) Grammar and punctuation fixes 2) Added clause \u201cand other privacy regulations as described in this Privacy Policy\u201d to indicate that we take measures to ensure compliance with privacy regulations beyond just GDPR 3) Added toll-free contact number pursuant to the California Consumer Privacy Act of 2018 \n \n \n \n \n \n \n \n 2.2 \n 2019-04-23 \n Expanded Article 7 in regard to transferring your private data and information \n \n \n \n \n \n \n \n 2.3 \n 2019-06-10 \n Added additional customer site information to the existing material in Section 1 \n \n \n \n \n \n \n \n 3.0 \n 2019-12-04 \n 1) Expanded CCPA section with updated rights information 2) Removed toll-free number added in v2.1 as it is no longer required with recent CCPA revisions 3) Grammar and punctuation fixes 4) Converted changelog into table for readability 5) Revised \u201cAbout Us\u201d wording to include only main office. Our full office list is available on our \u201cContact Us\u201d page 6) Added information about how to file a complaint regarding a breach in compliance with the Australian Privacy Act \n \n \n \n \n \n \n \n 3.1 \n 2019-12-05 \n 1) Fix capitalization in section 11 title 2) added  https://console.platform.sh/  to the list of sites this policy applies to 3) Formatting fixes \n \n \n \n \n \n \n \n 3.2 \n 2019-12-20 \n 1) Additional Australian Privacy Act details 2) Fix spelling mistakes 3) Expand ways for filing complaints 4) Expand list of named privacy acts in Section 7 5) Clarify wording in Section 7 concerning where data is transferred to, including the explicit recognition of the UK \n \n \n \n \n \n \n \n 3.3 \n 2020-01-09 \n 1) Add DPO email address to Section 10 at the request of the Australian OAIC  2) Fix incorrect link to the OAIC in Section 13 \n \n \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Your Guide to GDPR Compliance: Data protection impact assessment and security measures for processing data ", "url": "https://platform.sh/blog/your-guide-to-gdpr-compliance-data-protection-impact-assessment-and-security-measures-for-processing-data/", "documentId": "5b308e9f4f73b054902886014fb979d31e29b11a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Your Guide to GDPR Compliance: Data protection impact assessment and security measures for processing data \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ivana Kotur \n                  \n                   Compliance Coordinator \n                  \n                  \n                 \n            \n          \n         \n         25 May 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today is GDPR day! Woot! We already told you, GDPR is not about a date. This is a long-haul journey that, we firmly believe is making the Internet a better place.  \n Is there some new red-tape? Yes. But it seems that the only way stop the ridiculous arms-race for the new gold \u201cpersonal data\u201d is to level the playing field through strong regulations. So in this series we try to continue and help you understand in simple terms what it is about, and how you can make sure you are ready ... and ready to leverage this not only so your business is not adversely impacted also to become operationally better. \n We have already mentioned the  Data protection impact assessment  (DPIA) in our previous blog posts (this is basically the step where you discover what it is in your activities that is truly affected by the GDPR). In this blog post, we will talk more about it and the kind security measures you can implement to protect people\u2019s personal data.  \n The GDPR specifies that a DPIA will be required in the case of: \n \n\t Automated processing, including profiling where there are legal effects concerning people \n\t Processing on a large scale of special categories of data or personal data relating to criminal convictions  \n\t A systematic monitoring of a publicly accessible area on a large scale \n \n But this is very important and good practice even if you did not install thousands of video cameras with facial recognition. Conducting a DPIA can help you to identify and minimize problems and risks early on and resolve them before any damage is done. To be effective, the  DPIA  should be used throughout the development and implementation of a project. It will help you to systematically and thoroughly analyze how a particular project or system will affect your users\u2019 privacy. But before you start one, you should map out your data information flow. This will show you where you transfer data from one location to another. It will help you to identify privacy risks and also to understand how the information is used. Conducting a DPIA is good practice because it brings certain benefits, which include:  \n \n\t Transparency \n\t Awareness of privacy and people rights within an organization \n\t Building trust with your clients \n\t Financial benefits \n\t Reduced privacy risks \n \n In order to help organizations with the data privacy impact assessment, The French Commission internationale de l\u2019Informatique et de Libert\u00e9 (CNIL) published a free  PIA software (Privacy Impact Analysis).  Those steps include: \n \n\t Identifying the need for DPIA \n\t Define the scope of processing \n\t Demonstrating that you are implementing the necessary means to meet the 6 principles of processing data \n\t Demonstrating the controls to protect private data \n\t Identifying existing or planned controls to contribute to data security  \n\t Identifying and assessing risks  \n\t Identifying the measures to mitigate the risks \n\t Comparing the positioning of the risk \n\t Integrating outcomes into a plan and keeping it under the review  \n \n A data protection impact assessment should be carried out by the controller and advised by the Data Protection Officer, in order to assess the particular likelihood and severity of high risk activities. When it indicates that the processing would result in a high risk to the rights and freedoms of people and the controller (the entity operating the service) believes that risks cannot be mitigated by available technologies and costs of implementation, they will need to consult the supervisory authority before any processing. \n Another way for the organizations to comply with the GDPR is to implement appropriate technical and organisational measures to secure personal data. We have already written about policies and  data protection by design and default  in our previous blog post, and you should remember.. None of these activities is a \u201cone-off\u201d. You should regularly try do the assessment. Because new systems will come into play, sometimes minor changes to workflows can bring about new risks (or on the contrary remove some activities from the compliance scope). \n In a case where one or more processors are included it is the responsibility of an organization to ensure compliance with the regulation. This means following: \n \n\t Choose a processor who will provide sufficient guarantees about its security measures \n\t Put in place a written contract that can require the processor to use the same GDPR-compliant security measures \n\t Make available to the controller all information necessary to demonstrate compliance with the obligations  \n \n The Regulation states that the measures you need to take should be appropriate. That leaves you to decide which measures to implement considering your information risk. Information risk assessment can certainly help here. A good starting point is to make sure that you\u2019re in line with the requirements of  Cyber Essentials  \u2014 a UK government scheme that includes a set of basic technical controls you can put in place relatively easily. But Cyber Essentials is just a base, you won\u2019t be able to address to all risks with it alone.  \n Adherence to approved codes of conduct or certification mechanisms may be used as well. Certification is voluntary and doesn\u2019t reduce the responsibility of a controller or processor but it can demonstrate your good faith and in case you do run into trouble with the regulator ... it may well play in your favor. Implementing an  information security management system (ISMS) is a good way to support your compliance efforts. It consists of 3 key components: risk assessment, risk treatment, and incident response (including the appropriate data breach reporting). ISO 27001 is an international standard for ISMS. It is a certification that is successfully used worldwide, and by achieving it, your organization will protect its information assets and valuable data using best-practice information security measures.  \n Along with all these security measures we can\u2019t forget the information security policy that represents a vital element of your information security program. It is a set of rules that should reflect the organization\u2019s objectives and intent to implement an information security framework. This policy will direct all your organization\u2019s efforts to protect its data, and especially the personal data. This document is different from the privacy policy, it should be approved by CEO of the company, it should affirm responsibility and accountability, be communicated to everyone in the company and subject to regular reviewing.  \n Data security failures can be catastrophic for any organization. Therefore, it is essential to secure all personal data against loss and damage. Recognise the vulnerabilities and eliminate them, ensure the confidentiality, integrity and availability of your systems and services and make sure that all your processors have the same security standards.  \n The GDPR gives you a good framework to embark on this journey. Yes, you may have received a billion emails today, you may have seen a couple of media publications that are now filtering European visitors. But think: if they needed to do this, what have these people been doing with your private data? \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Partner Program", "title": "Partner Program ", "url": "https://platform.sh/partner-program/", "documentId": "dacd41529b68292c9220170d95cc22c70100942b", "text": "\n   \n     \n       \n     \n         Partner Program \n\n        \n\n        \n         Empower your team to deliver projects faster,  sell more services, and create amazing client experiences. \n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n        \n      \n     \n   \n \n   \n     \n       Focus on revenue\u2014not on infrastructure \n       Single-application websites. Big-box commerce. Rearchitecting monolithic apps into cohesive microservices architectures. Whatever your agency\u2019s focus, the race to remain competitive is full of challenges. The Platform.sh Partner Program can help you stand out and open doors to new, profitable opportunities. \n       \n         \n   Register \n   \n \n\n       \n     \n   \n \n   \n     \n       Why partner with Platform.sh? \n     \n     \n       \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Grow your business \n    \n    \n     Increase recurring revenue while optimizing team efficiency and your bottom line. Focus  on the high-value services that generate the greatest ROI\u2014not the time-consuming overhead to host applications. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Scale with ease \n    \n    \n     Because of our extremely simple configuration, teams can quickly and easily expand their services or add new ones to scale large applications to handle heavy traffic. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Expand into new markets \n    \n    \n     Rely on Platform.sh for your hosting and DevOps needs as you create new opportunities and expand your service offerings by leveraging the languages and frameworks your team prefers. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Gain efficiences \n    \n    \n     With our robust, flexible development toolset and support from our on-staff experts, your team can build and manage client projects more efficiently. Quickly and easily creating innovative solutions and features translates into tangible value to differentiate your agency. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Cultivate and create \n    \n    \n     Our PaaS enables your team to automate tedious, routine tasks, streamline client reviews, approvals, and UAT, and gain efficiencies. So your developers can shift their attention back to what they do best. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       \n         \n           \n         \n         \n           Find out how the Platform.sh Partner Program can expand your capabilities,  your opportunities, and your business. \n           \n \n\n   \n     First Name \n     \n   \n   \n     Last Name \n     \n   \n   \n     Email \n     \n   \n   \n     Job Title \n     \n   \n   \n     Company \n     \n   \n   \n     Country \n     \n       Country \n      \n         Afghanistan \n      \n         Albania \n      \n         Algeria \n      \n         American Samoa \n      \n         Andorra \n      \n         Angola \n      \n         Anguilla \n      \n         Antarctica \n      \n         Antigua And Barbuda \n      \n         Argentina \n      \n         Armenia \n      \n         Aruba \n      \n         Australia \n      \n         Austria \n      \n         Azerbaijan \n      \n         Bahamas \n      \n         Bahrain \n      \n         Bangladesh \n      \n         Barbados \n      \n         Belarus \n      \n         Belgium \n      \n         Belize \n      \n         Benin \n      \n         Bermuda \n      \n         Bhutan \n      \n         Bolivia \n      \n         Bosnia And Herzegovina \n      \n         Botswana \n      \n         Bouvet Island \n      \n         Brazil \n      \n         British Indian Ocean Territory \n      \n         Brunei Darussalam \n      \n         Bulgaria \n      \n         Burkina Faso \n      \n         Burundi \n      \n         Cambodia \n      \n         Cameroon \n      \n         Canada \n      \n         Cape Verde \n      \n         Cayman Islands \n      \n         Central African Republic \n      \n         Chad \n      \n         Chile \n      \n         China \n      \n         Christmas Island \n      \n         Cocos (keeling) Islands \n      \n         Colombia \n      \n         Comoros \n      \n         Congo \n      \n         Congo, The Democratic Republic Of The \n      \n         Cook Islands \n      \n         Costa Rica \n      \n         Cote D'ivoire \n      \n         Croatia \n      \n         Cuba \n      \n         Cyprus \n      \n         Czech Republic \n      \n         Denmark \n      \n         Djibouti \n      \n         Dominica \n      \n         Dominican Republic \n      \n         East Timor \n      \n         Ecuador \n      \n         Egypt \n      \n         El Salvador \n      \n         Equatorial Guinea \n      \n         Eritrea \n      \n         Estonia \n      \n         Ethiopia \n      \n         Falkland Islands (malvinas) \n      \n         Faroe Islands \n      \n         Fiji \n      \n         Finland \n      \n         France \n      \n         French Guiana \n      \n         French Polynesia \n      \n         French Southern Territories \n      \n         Gabon \n      \n         Gambia \n      \n         Georgia \n      \n         Germany \n      \n         Ghana \n      \n         Gibraltar \n      \n         Greece \n      \n         Greenland \n      \n         Grenada \n      \n         Guadeloupe \n      \n         Guam \n      \n         Guatemala \n      \n         Guinea \n      \n         Guinea-bissau \n      \n         Guyana \n      \n         Haiti \n      \n         Heard Island And Mcdonald Islands \n      \n         Holy See (vatican City State) \n      \n         Honduras \n      \n         Hong Kong \n      \n         Hungary \n      \n         Iceland \n      \n         India \n      \n         Indonesia \n      \n         Iran, Islamic Republic Of \n      \n         Iraq \n      \n         Ireland \n      \n         Israel \n      \n         Italy \n      \n         Jamaica \n      \n         Japan \n      \n         Jordan \n      \n         Kazakstan \n      \n         Kenya \n      \n         Kiribati \n      \n         Korea, Democratic People's Republic Of \n      \n         Korea, Republic Of \n      \n         Kosovo \n      \n         Kuwait \n      \n         Kyrgyzstan \n      \n         Lao People's Democratic Republic \n      \n         Latvia \n      \n         Lebanon \n      \n         Lesotho \n      \n         Liberia \n      \n         Libyan Arab Jamahiriya \n      \n         Liechtenstein \n      \n         Lithuania \n      \n         Luxembourg \n      \n         Macau \n      \n         Macedonia, The Former Yugoslav Republic Of \n      \n         Madagascar \n      \n         Malawi \n      \n         Malaysia \n      \n         Maldives \n      \n         Mali \n      \n         Malta \n      \n         Marshall Islands \n      \n         Martinique \n      \n         Mauritania \n      \n         Mauritius \n      \n         Mayotte \n      \n         Mexico \n      \n         Micronesia, Federated States Of \n      \n         Moldova, Republic Of \n      \n         Monaco \n      \n         Mongolia \n      \n         Montserrat \n      \n         Montenegro \n      \n         Morocco \n      \n         Mozambique \n      \n         Myanmar \n      \n         Namibia \n      \n         Nauru \n      \n         Nepal \n      \n         Netherlands \n      \n         Netherlands Antilles \n      \n         New Caledonia \n      \n         New Zealand \n      \n         Nicaragua \n      \n         Niger \n      \n         Nigeria \n      \n         Niue \n      \n         Norfolk Island \n      \n         Northern Mariana Islands \n      \n         Norway \n      \n         Oman \n      \n         Pakistan \n      \n         Palau \n      \n         Palestinian Territory, Occupied \n      \n         Panama \n      \n         Papua New Guinea \n      \n         Paraguay \n      \n         Peru \n      \n         Philippines \n      \n         Pitcairn \n      \n         Poland \n      \n         Portugal \n      \n         Puerto Rico \n      \n         Qatar \n      \n         Reunion \n      \n         Romania \n      \n         Russian Federation \n      \n         Rwanda \n      \n         Saint Helena \n      \n         Saint Kitts And Nevis \n      \n         Saint Lucia \n      \n         Saint Pierre And Miquelon \n      \n         Saint Vincent And The Grenadines \n      \n         Samoa \n      \n         San Marino \n      \n         Sao Tome And Principe \n      \n         Saudi Arabia \n      \n         Senegal \n      \n         Serbia \n      \n         Seychelles \n      \n         Sierra Leone \n      \n         Singapore \n      \n         Slovakia \n      \n         Slovenia \n      \n         Solomon Islands \n      \n         Somalia \n      \n         South Africa \n      \n         South Georgia And The South Sandwich Islands \n      \n         Spain \n      \n         Sri Lanka \n      \n         Sudan \n      \n         Suri- name \n      \n         Svalbard And Jan Mayen \n      \n         Swaziland \n      \n         Sweden \n      \n         Switzerland \n      \n         Syrian Arab Republic \n      \n         Taiwan, Province Of China \n      \n         Tajikistan \n      \n         Tanzania, United Republic Of \n      \n         Thailand \n      \n         Togo \n      \n         Tokelau \n      \n         Tonga \n      \n         Trinidad And Tobago \n      \n         Tunisia \n      \n         Turkey \n      \n         Turkmenistan \n      \n         Turks And Caicos Islands \n      \n         Tuvalu \n      \n         Uganda \n      \n         Ukraine \n      \n         United Arab Emirates \n      \n         United Kingdom \n      \n         United States \n      \n         United States Minor Outlying Islands \n      \n         Uruguay \n      \n         Uzbekistan \n      \n         Vanuatu \n      \n         Venezuela \n      \n         Viet Nam \n      \n         Virgin Islands, British \n      \n         Virgin Islands, U.s. \n      \n         Wallis And Futuna \n      \n         Western Sahara \n      \n         Yemen \n      \n         Zambia \n      \n         Zimbabwe \n      \n     \n   \n   \n     \n         Get the guide \n         \n     \n   \n \n \n   Success! The guide is available below. \n   In addition one of our experts will follow up with you shortly. \n   \n     \n      Get the program guide\n       \n \n \n \n \n\n     \n   \n \n\n         \n       \n     \n   \n \n   \n     \n       Partner benefits \n       \n         \n           \n             Partner portal \n             Technical training \n           \n         \n         \n           \n             Sales support \n             Delivery enablement \n           \n         \n         \n           \n             Co-marketing \n             Pricing and support discounts \n           \n         \n       \n     \n   \n \n   \n     \n       Partner tier qualifications \n     \n   \n   \n     \n       \n         \n           \n             empty  header \n           \n         \n         \n           \n             Revenue requirement  * \n           \n           \n             Technical requirement \n           \n         \n       \n     \n     \n       \n         \n           \n             \n               \n               Registered \n               Silver \n               Gold \n               Platinum \n               Diamond  (reseller) \n             \n           \n           \n             \n               Shared portfolio value \n               - \n               3 production projects, or 1 closed Enterprise opportunity \n               US$20,000 \n               US$60,000 \n               Invitation only \n             \n             \n               Technical requirement \n               - \n               \n                 1 minimum certified developer \n                 \n \n \n \n \n\n\n               \n               \n                 3 minimum certified developer \n                 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n               \n               \n                 5 minimum certified developer \n                 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n               \n               Ongoing technical  certification \n             \n           \n         \n       \n     \n   \n   \n     \n       \n         \n \n \n \n \n\n = 1 completed certification\n         * Referred opportunities must close within 12 months of referral to be eligible for annual revenue requirement. \n         Regional currencies will be converted to US values for accounting purposes. \n       \n     \n   \n   \n     \n       \n   Become a Platform.sh partner \n   \n \n\n     \n   \n \n   \n     \n       Ready to partner with Platform.sh? \n      \n      \n       \n         Sign up today \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Your Guide to GDPR Compliance: Transfers of personal data to third countries ", "url": "https://platform.sh/blog/your-guide-to-gdpr-compliance-transfers-of-personal-data-to-third-countries/", "documentId": "2c69c9a964db004b308d79ec17116338549afc13", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Your Guide to GDPR Compliance: Transfers of personal data to third countries \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ivana Kotur \n                  \n                   Compliance Coordinator \n                  \n                  \n                 \n            \n          \n         \n         30 May 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The GDPR went into effect last week. We all got a billion emails with people surprisingly updating their privacy policies. Many spread FUD. Even more spread cute memes. So that was fun. Some panicked. We hope you didn\u2019t. Did you  block all EU traffic like some US news sites?  (Blocking European IPs does not get you off the hook. Maybe a better approach is simply to have some respect to people\u2019s privacy?). Did you try to  force consent like Google and Facebook  are accused of doing? If you\u2019ve been following our  GDPR guide series , you\u2019re doing much better than most. With two more topics to cover, the journey isn\u2019t over yet so let\u2019s get started on this post\u2019s topic: transferring personal data internationally. \n If your organization is based in the European Economic Area (EEA), there may be times that you want to transfer your data to a third country i.e. all countries who are not in the European Union or an EEA member state. In that case you can only do so under specific conditions, which we\u2019ll explore each one in more detail below: \n \n\t Transfers on the basis of an adequacy \n\t Transfers subject to appropriate safeguards \n\t Binding corporate rules \n \n There are exemptions to these three conditions. If your transfer meets any of these criteria, you will need to have it all which needs to be clearly documented and justified: \n \n\t The individual gave consent, after being informed of the risk.  Remember the bigger the risk the clearer the consent must be. If you are planning on sharing biometric information with a company from Latveria, you better be sure about the level of consent that was given something in the lines of \u201cI understand my DNA will be used by a swarm of autonomous drones with a heavy accent to hunt me down and kill me.\u201d \n\t The transfer is necessary to fulfill the contract between the individual and the company.  Again, this is about  privacy by design and default.  You can only send those information items that are necessary what the EU calls \u201cdata quality and proportionality\u201d. \n\t It is necessary for the contract in the interest of the data subject.  So if a person has or wants to enter into a contract with you, this covers not only clients, but also price quotes, RFQs, and such. \n\t If it is for public interest.  Basically, anything that is mandated by an EU member state law, or done within the administrative authority of an EU government. \n\t It is necessary to establish, exercise or defend legal claims.  Try not to get sued, it is never fun, but if you are, and you need to present evidence, and that concerns third party personal information ... good news, you can. \n\t It is necessary to protect the vital interest of someone.  Basically, in life and death situations, don\u2019t wait for consent. The regulator is not evil. \n \n What is a transfer on the basis of adequacy? \n This means that the country in which the entity you are transferring personal information to has adequate levels of protection. Those transfers do not require any specific authorization (you still need to follow all the other GDPR rules). \n The Commission put in place certain criteria for adequacy: \n \n\t The Rule of law \n\t Respect for human rights and freedoms \n\t Relevant legislation, both general and sectoral concerning public security, defence, national security and criminal law \n\t The existence and effective functioning of one or more independent supervisory authorities in the third country or to which an international organization is subject \n \n There is no restriction on transferring personal data to EEA countries, but of course do make sure that you process and transfer data responsibly. \n Personal information can only be transferred to an organization that is under a legal system that has sufficient guarantees for the rights granted under the GDPR. You may try to figure out if a specific country poses a huge issue or not. Or follow the list of countries that the Commission has already decided are OK. It\u2019s a pretty weird list: it contains Andorra, the Faroe Islands, the Isle of Man, Guernsey and Jersey as well as Argentina, Canada, Israel, New Zealand, Switzerland and Uruguay\u2026 and wait for it\u2026 the United States of America. Yes. Well, the US thing is limited to the Privacy Shield framework; we will have more on this below. \n The list does not include Australia. But you can bet Australia is mostly OK (see the  Australian Privacy Act ), if you take appropriate measures. But if you want to send PII to Iran, Russia or China\u2026 as you might expect, there will be many more hoops to jump through. It doesn't mean you can\u2019t. It means you need to establish some other safeguards, you need to jump through more hoops. \n Transfers subject to appropriate safeguards \n So if the country is not \u201csafe by default\u201d, what do you need to do? Here\u2019s what this regulation considers as acceptable safeguards: \n \n\t Legally binding and enforceable instrument between public authorities or bodies  - this means laws and regulations some other country put into place to make sure that it is going to be OK to transfer data to them. This is important, it means some countries won\u2019t get a blanket OK from the Commission, but in certain circumstances you will be covered. Imagine a law in, let\u2019s say Latveria, that specifically addresses call center operators and adds sufficient guarantees. In that case you will be OK with a call center, but you will be required to provide more safeguards for another industry. \n\t Binding corporate rules  - this is not a magical get out-of-prison card, there are strong constraints on what these may be, and how they are formulated. This was designed first and foremost for larger multinational organizations, so they can continue to operate. These are very strict codes of conduct, and they must be approved by the regulator. Basically, if you don\u2019t have an army of lawyers, this is not the thing that is going to help you. \n\t Standard data protection clauses adopted by the European Commission  - This is a magical get-out-of-prison card. These are contracts written by nice people at the Commission so you don\u2019t need to have an army of lawyers and still operate with companies outside the EU. \n\t Standard data protection clauses adopted by a supervisory authority and approved by the Commission  - this is the same as above, but at the country level, not the EU level. \n\t An approved code of conduct  - This is basically the same thing as the \u201cBinding Corporate Rules\u201d but you don\u2019t use an army of lawyers \u00a0and decide to adhere to someone else\u2019s proposed (and approved by the commission) code of conduct. This is not magical, the COC itself needs to cover all the bases and your adherence should be something you can show. Lip service is not enough. \n\t An approved certification mechanism that comes together with commitments of third country organizations to apply the appropriate safeguards including respect for data subject rights  - For the moment there are none. You can be \u201ccompliant\u201d with the GDPR but you can\u2019t be certified, because there are no approved certification mechanisms. But this will come. People will make a lot of money out of this. There are people selling those already, and these can be useful as they would show how much you care (which the Regulator does take under the new rules into consideration). But this is not yet magical. \n\t Contractual clauses between the controller/processor and the controller/processor/recipient in the third country or international organizational  - If you can\u2019t get blanket safeguards, you may still transfer data internationally by putting in place specific safeguards for the specific action you are trying to accomplish. \n \n Zoom on Binding corporate rules - Working with multinationals \n We will go into a bit more detail on this one. As this is something that will happen to you often, especially if ever you use Amazon, Google, Facebook, or Microsoft\u2019s services. If you don\u2019t, you are either living under a rock, or more power to you! \n There are corporate rules that multinational corporations and international organizations can put in place when it comes to transferring data. These allow them to transfer data across EU borders within the same corporate group even to countries with lower levels of protection. \n The binding corporate rules must contain privacy principles, such as transparency, data quality, security, tools of effectiveness (such as audit, training, or complaint handling systems) and an element proving that the rules are binding. Parties need to demonstrate that there are adequate safeguards put in place to protect personal data. The set of rules need to be approved by the supervisory authority and it can only be used within an arrangement of organizations or a multinational corporation. If you want to apply the rules to an expanded group of organizations, you will need to get further approval from the supervisory authority. \n If you want to transfer private data to the US you should definitely check if the US company is certified to the EU-US Privacy Shield, which is designed to comply with data protection requirements when transferring private data from EU to US. It was adopted by the EU Commission in July 2016 and became operational on 1 August 2016. The Privacy shield is a self-certified mechanism which must be renewed annually. So, before sharing the personal information with a company in the US, you should check that its certification is active and that the information in question is covered. \n All companies who obtained the certification are listed on the  Privacy Shield website  along with the types of personal information for which they have the certification. The  Privacy Shield  is based on the old Data Privacy Directive, so it will likely be updated in 2018 in order to match the GDPR. \n To sum up, the GDPR does allow you to transfer personal data outside of the EU. But all the rules still apply. You can\u2019t just exfiltrate the data and do whatever afterwards. But if there are adequate controls on what happens \u201con the other \u00a0side\u201d, your life doesn't need to become any more complicated. The more \u201cupstanding\u201d citizens of privacy the countries to which you want to transfer data to, the easier and more transparent it is. \n If you are doing business only with the the Faroe Islands and Andorra, you are already mostly fine. But as we have shown, working with the US is very largely covered as is working with multinational companies. \n \u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "The Github acquisition: it's all about cloud for Microsoft ", "url": "https://platform.sh/blog/the-github-acquisition-its-all-about-cloud-for-microsoft/", "documentId": "77d79e7b8b8d1c1ff5595ed80378553ba918523d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The Github acquisition: it's all about cloud for Microsoft \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Fred Plais \n                  \n                   CEO \n                  \n                  \n                 \n            \n          \n         \n         05 Jun 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The acquisition of Github by Microsoft has already been extensively commented on by analysts, and much has been rightfully said already. This acquisition is smart and visionary, and is probably of the same magnitude as the very successful LinkedIn acquisition. Not so much has been said, however, about how this acquisition feeds Microsoft\u2019s cloud strategy. \n Microsoft is going back to its roots, focusing on developers and embracing the open source world at full speed (Github is not open source itself but its 80 million repositories are all full of open source). There is a pattern for Microsoft acquiring large digital brands with successful, virally-driven customer acquisition strategies (LinkedIn, Minecraft) and the amazing $7.5B price values Github more or less 30x its yearly revenue (that number is a rough estimate, Github had generated $96 million in 9 months in 2016). \n One of the key differences between Github and its competitors is that, unlike services like Bitbucket or Gitlab, Github does not have a native build tool. Github\u2019s strategy of supporting broad integration with  a range of services  (including Platform.sh, since we\u2019re here) has meant that it now offers one of the broadest integration surfaces of any developer tool on the market, giving Microsoft unprecedented reach into a vast and growing list of integrations. Microsoft acquires 27 million active developers with this purchase, and there\u2019s clearly an opportunity for them to  sell more Microsoft products . \n But clearly with Github, Microsoft acquires much more than 27 million active developers and 80 million repositories: they\u2019ve just purchased the world\u2019s most popular DevOps tool, a name so synonymous with the version control system its based on, it is sometimes even confused with it, Git. \n Git is becoming the key interface for application deployment to the cloud, and Github offers one of the most popular mechanisms for achieving this through its robust, easy-to-use tooling and open-source ethos. Deploying an app to the cloud via a pull request is already common practice but will become the industry standard because of its guarantees of consistency and auditability. \n This paradigm now has a name, GitOps, and you can expect to hear a lot more about it in the future. It\u2019s a paradigm which Platform.sh has embraced right from the beginning. By using Git as the source of truth and the place to version control not only your code, but also your cloud infrastructure, developers get so much more: everything becomes trackable, roll-backs are easy to perform, team collaboration and peer review become native and deployments are safer. \n Microsoft understands and embraces this vision for the cloud and has acquired a massive asset for their Cloud play. \u00a0Expect future integrations to happen with Azure. Expect Github to become much more integrated to Microsoft than LinkedIn will ever be. Google Cloud and AWS have lost an important battle by passing on the opportunity. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Your Guide to GDPR Compliance: Training your employees ", "url": "https://platform.sh/blog/your-guide-to-gdpr-compliance-training-your-employees/", "documentId": "ae6244eb0441e37a4dd100ce94c38c7328d71343", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Your Guide to GDPR Compliance: Training your employees \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ivana Kotur \n                  \n                   Compliance Coordinator \n                  \n                  \n                 \n            \n          \n         \n         08 Jun 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         This is it! The last post of our  GDPR series  and the good news is that this step should be relatively easy to do, but does involve a lot of tracking and communication. I\u2019m talking about privacy training for your employees. There is no point in fulfilling all the steps of GDPR compliance only for one of your employees to mishandle your customers\u2019 personal data by mistake or fall victim to a cyber attack resulting in a data breach. That\u2019s why it is important that your staff understands the requirements and changes the Regulation brings as it will certainly affect their work and your organization as a whole going forward. \n As we\u2019ve talked about  data protection by design and default , we need to create a privacy-first culture in the organization. That\u2019s why as part of helping the organization to become GDPR compliant, the Data Protection Officer has to raise awareness and provide training to staff involved in data processing operations. For example, knowing the correct procedures to identify a customer caller, recognizing a phishing attack, not changing or modifying specific information, following security and passwords policies, etc. With the rising number of data security breaches that occur, you definitely want your employees to fully know how to protect personal data if you don\u2019t want your company\u2019s reputation to suffer. \n The Regulation doesn\u2019t specify what this training entails so it is up to the Data Protection Officer\u2019s discretion to choose the appropriate training. \n We\u2019ve got a couple of tips for you (you can find some more here :  IT Governance ): \n \n\t Don\u2019t make it depressing. Regulations always sound depressing. The GDPR is a good thing. Frame it by how they are personally concerned, how this protects them, and how they should return the favor for others. They will hopefully take this not only more seriously, but also more positively. \n\t Make sure it is relevant. Your employees need to know the logic behind the key points, but they don\u2019t need to know every boring detail. Make sure they understand the logic, and whatever is relevant to their own activities. Otherwise this will be just buzzwords and jargon going over their heads. \n\t Keep it engaging and fresh, keep it short. Refresh it from time to time. Make sure this is not just a \u201cticked-off\u201d check-box. Make sure when employees join they have initial training but also when they change responsibilities. A yearly refreshment sounds to us like a reasonable rythme. \n \n At Platform.sh, our teams followed this excellent  GDPR training by Troy Hunt  but you can find other options such as  GDPR training and staff awareness course  by IT Governance and  Get GDPR ready  by IAPP. \n Hey, this  GDPR series  is a great start too! We tried to explain in the simplest language possible what the GDPR is all about, the logic behind it, and what you can do to be sure you are compliant. So make me a required reading for all your staff :) ! \n As I\u2019ve already said in my previous posts, just because the GDPR came into effect on May 25, the journey isn\u2019t over. It will just take a new road with all its challenges. And with everything this road brings along it is essential to be paved with knowledge, training and awareness. \n \n\u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "A great Kubernetes alternative ", "url": "https://platform.sh/blog/a-great-kubernetes-alternative/", "documentId": "389dcf6ce37863f81b20af8a25ef4d818caa0bb6", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           A great Kubernetes alternative \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         08 Jun 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Over the last 2 years, I have had more and more conversations with customers about their Docker experiences, and how complicated it is to build anything, and how long it all takes. And quite a few of these customers have experimented with Kubernetes because it was pitched as the popular framework that allows you to quickly build things out. Not true. \n Although Kubernetes comes with the ultimate flexibility to run absolutely anything in a container, you need to build it yourself, which is difficult and expensive. \n As Platform.sh has grown bigger, we\u2019ve attracted larger and larger enterprise customers looking for better, less expensive ways of embracing container management, and we\u2019re seeing many repeating use cases. In short, building your own Kubernetes infrastructure starts with** 5-8 man years of effort **and will cost you **upwards of $1.5m**, to achieve just a thin layer of container management for a limited set of technologies, benefiting some aspects of development only. Operating and maintaining it will then cost you a further **$500k per annum**, and that\u2019s before you start counting the cost of running production services with a decent uptime SLA. \n Compared to a market leading PaaS, you will have about  30% of the value  for developer workflow, about  40% of the value  for infrastructure management, and  no SLA for your production services .\n \n Based on our own investment and running costs, allowing your Kubernetes build team to bridge the gap to a PaaS such as Platform.sh, would take you 40-50 man years of effort, cost you 10 times as much to build, and several times as much to operate. \n What does Kubernetes really give you? \n Kubernetes is an incredible piece of software, but also an incredibly complex system. It gives you the flexibility to run any sort of container you want, but your infrastructure team will still need to solve many problems around the configuration and ongoing management of those containers and their associated CI/CD workflows. \n No reproducible build chain or read-only infrastructure - which will take you many man years to build, and unless you do, you are running services you may not always know how to update, because once you deploy your container, there is nothing to prevent it from changing. And if you don\u2019t have a repeatable build process with deterministic results, plus an \u201cimmutable read-only infrastructure\u201d, once your container reaches production, you can\u2019t be sure something malicious isn\u2019t going to update it. \n Not enough intelligence in the cluster orchestrator - which will take 2-4 man years to build, and unless you do, the orchestrator can\u2019t know what specific processes are doing at any one time, so abruptly shutting down a container whilst writing to disk would mean certain data corruption, and a catastrophic impact to the application. \n You still need a lot of DevOps and scarce knowledge to run it - Ongoing day-to-day operations will require a team of DevOps and Support staff. Investigating and repairing runtime issues for example, requires everything from specific Kubernetes semantics knowledge, Docker knowledge, networking and storage knowledge all the way down to Kernel specific behavior; all of which are changing very rapidly! \n A great developer experience will still be a long way off - Multiple development environments for parallel feature development workflows will still be very expensive unless delivered with cloning technology in the Cloud. This is where the vast majority of developer gains will be achieved, in terms of accelerating the velocity of new features into production. Developers need perfect consistency between environments, which means copies of live or staging, and performing this sort of operation with any degree of safety plus performance requires native copy-on-write support and immutable containers, which will also take you many man years to build. \n So, are your requirements really outside the 99% of what most other companies are doing? Kubernetes allows you to build and support any possible back-end service, important when your requirement falls outside the 99% of most commonly required services. If you think you could make do with the 99% of what\u2019s out there and already available, you probably don\u2019t need these extreme levels of flexibility. \n A good PaaS will give you everything, out of the box, overnight \n A good PaaS delivers pretty much all the container based management you could ever want out-of-the-box, allowing your development teams to focus on writing code and delivering new features within hours of making the decision to start a free trial. A great PaaS will also offer one-touch zero-risk deployments onto a choice of highly available clusters (99.99% uptime) across hundreds of AWS/Azure/Huawei locations around the world, backed up by 24*7 global support. \n This blog summarises a  ten page paper  that goes into technical and financial detail based on the experiences of Kubernetes customers adopting our container based PaaS. Please get in touch if you would like to discuss this further. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Some gifts for the JSON fans ", "url": "https://platform.sh/blog/some-gifts-for-the-json-fans/", "documentId": "fd42fa6e5e3909b90ff6c0a208f465e17e34aa80", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Some gifts for the JSON fans \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         28 Jun 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Software developers keep releasing new versions, which means we keep adding them to our list of supported services. \n All the Mongos \n Our latest update includes support for all recent versions of MongoDB on up through current: 3.0, 3.2, 3.4, and 3.6.  You can use any of them you wish, although of course we always recommend using the newest versions for the best features and and stability. \n One important note on upgrading, though: If you\u2019re on MongoDB 3.0, don\u2019t jump straight to 3.6.  MongoDB can self-update itself from one version to the next but only one step at a time.  That means to upgrade from 3.0 to 3.6 you\u2019ll need to upgrade through the intermediary versions first.  Check your  services.yaml  file where you will have a block like this: \n mongo:\n  type: 'mongodb:3.0'\n  disk: 2048\n Change that  3.0  to  3.2 , commit, and push.  MongoDB will update your data to 3.2. \n Now do it again, this time changing  3.2  to  3.4 .  Push again, let MongoDB upgrade your data, click around on your site and make sure it\u2019s all happy. \n Finally, change it once more from  3.4  to  3.6 .  Commit, push, and you\u2019re done.  MongoDB will be up to date, your data will be up to date, and you\u2019ll be running on the (stable) cutting edge with just three quick deploys. \n Of course, it\u2019s always wise to test the process first, with a copy of your production data.  Fortunately that\u2019s super easy.  Just click the \u201cBranch\u201d button in the UI and test on the branch first.  Once you\u2019re comfortable with the process, click the \u201cSnapshot\u201d button (it\u2019s always good to have a backup) and run through the upgrade on your  master  branch. \n See the  MongoDB documentation  for more on MongoDB\u2019s new functionality, and our own documentation for  running MongoDB on Platform.sh . \n New Node version, new Node process \n It\u2019s a good day for JSON aficionados, as not only is MongoDB up to date but we also now offer the new Node.js version 10.  No special upgrading instructions are needed.  Just swap out the  type  property in your  .platform.app.yaml  file. \n type: 'nodejs:10`\n We have also deprecated all versions of Node.js prior to 6.11, 8.9, and 10.  Those are the only versions receiving updates from the Node.js team.  While we are not removing the containers for earlier versions we are not longer actively maintaining them, and strongly recommend all users to upgrade to the latest stable version for your mainline version as soon as possible. \n Speaking of which, we have also changed the way we label Node.js container versions.  You\u2019ll note that the new format just specifies  nodejs:10 , not  nodejs:10.4 .  That\u2019s because we will be taking a queue from the Node.js maintainers and updating directly within the Node.js-10 line periodically.  When we do so, your next deploy will always get you the latest Node.js 10.x release we have available. \n See the  Node.js documentation  for more on the new features of Node.js 10, and our own Node.js docs for more on  running Node.js on Platform.sh . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh\u2013deploying the future of content with one click \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Out of the lab: Node.js 12 features graduate from experimental status \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Off with its head! Headless Chrome as a service. \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh awarded a \u20ac1.95M grant from Horizon 2020, the European Union Research and Innovation Program ", "url": "https://platform.sh/2015/06/european-horizon-2020-grant/", "documentId": "2345306297fec145abd2b44a5378ded3d91e0378", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh awarded a \u20ac1.95M grant from Horizon 2020, the European Union Research and Innovation Program \n         \n\n        \n         \n            \n              \n          \n         \n         25 Jun 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         In a highly selective process based on strict criteria around excellence, impact, and quality, Platform.sh was selected as a winner from a 3% shortlist of thousands of applications submitted by some of the most innovative companies across the 28 member nation European Union. The grant, will allow the Platform.sh team to quickly grow the engineering teams in order to accelerate the development of an ambitious roadmap, including support for other mainstream development languages, advancements on the Distributed Storage Grid which will make it easy to share all forms of persistent data between cloud and local environments, and of our hugely innovative Multi Cloud capability enabling deployments across cloud boundaries with seamless operations between multiple cloud providers (Amazon, Google Cloud, Azure) and on-premises private infrastructures. \n \n Platform.sh aims at global leadership as a second generation Platform as a Service (PAAS), innovatively implemented around Linux containers. Over the last two and a half years it has developed a breakthrough technology that provides development workflow optimisation and automated infrastructure management for web applications. The company currently has a strong focus on the PHP world, the product is primarliy used for prominent technologies such as Drupal, PHP Symfony, WordPress, Zend, Magento (with support coming soon for Node.js, Python, GoLang, Ruby and Java). This hybrid offering, launched in July 2014, combines a global, seamlessly scalable, high availability hosting offering that can handle any amount of traffic with an unmatched Continuous Deployment (CD) workflow. Throughout the website\u2019s life cycle, sites can be scaled and modified seamlessly without any interruption to the application, with web teams experiencing savings up to 40% in effort expended developing new features and managing change. \n Less than a year after launch, Platform.sh can reference several hundred customers all over the globe (with as much U.S. customers as european ones), including the large global retailing brands Vivienne Westwood and Reiss, the French company Seloger.com, the US National Association of Groceries, Elgato.com, the South American media giant El Universo, the German start-up Flixbus and a large UK government organisation with 200 sites around the world. \n \u201cOur staff feels very proud to have been selected by the European Commission for this grant. We have had great customer feedback on our product, and that is our focus, but for engineers living on the bleeding edge, getting recognition, and support, in such a selective process, it\u2019s a big thing. Platform.sh is well placed to provide global leadership in this second generation micro-container powered Platform-as-a-Service market, and we are made-in-Europe!\u201d, said Fred Plais, CEO of Commerce Guys. \n About Commerce Guys \n Commerce Guys \u00a0is the software vendor of Platform.sh and Drupal Commerce, an eCommerce PHP application PHP that powers 60,000 eCommerce sites worldwide. Funded by private investors, Commerce Guys has raised $12M to date and have 45 employees split between the US and Europe. \n Develop and host on\u00a0 Platform.sh \u00a0Follow us on Twitter ( @platformsh ) Learn more about using Platform.sh at an upcoming demo. \n About Horizon 2020 \n Horizon 2020 \u00a0is the biggest European Union Research and Innovation programme ever with nearly \u20ac80 billion of funding available over 7 years (2014 to 2020) \u2013 in addition to the private investment that this money will attract. It promises more breakthroughs, discoveries and world-firsts by taking great ideas from the lab to the market. Horizon 2020 is the financial instrument implementing the Innovation Union, a Europe 2020 flagship initiative aimed at securing Europe\u2019s global competitiveness. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "CEO of Commerce Guys is interviewed by the main French Business TV Channel about Platform.sh ", "url": "https://platform.sh/2015/07/ceo-interviewed-on-bfm-business/", "documentId": "82a0231113aaa16cba93de1887df0de864cfbede", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           CEO of Commerce Guys is interviewed by the main French Business TV Channel about Platform.sh \n         \n\n        \n         \n            \n              \n          \n         \n         08 Jul 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Fred Plais, CEO of Commerce Guys is interviewed by the main French Business TV Channel about Platform.sh, its innovative potential and the European Grant that the company has received. \n\u00a0 \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Blog ", "url": "https://platform.sh/blog/page/8/", "documentId": "d2ff43596251a49fb012bc6aa4c41e9c9528df4e", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             15 Apr 2020 \n           \n          \n\n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         Recent posts \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n       Three trends that make successful tech startups attractive to VCs \n\n      \n       \n         04 Oct 2016\u00a0 \n           \n              Author:\n              Fred Plais\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Deploy your beta version of Open Social on Platform.sh \n\n      \n       \n         27 Sep 2016\u00a0 \n           \n              Author:\n              Robert Douglass\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Continuous Deployment - Now with Python and Ruby support! \n\n      \n       \n         23 Sep 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh Documentation - The Next Generation \n\n      \n       \n         21 Sep 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       eZ Systems partners with Platform.sh to accelerate development of content-rich websites and applications \n\n      \n       \n         19 Sep 2016\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       UI version 2.14 released \n\n      \n       \n         13 Sep 2016\u00a0 \n           \n              Author:\n              Manauwar Alam\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh in a nutshell \n\n      \n       \n         12 Sep 2016\u00a0 \n           \n              Author:\n              John Grubb\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Develop on GitHub, Deploy on Platform.sh, Test on Blackfire.io \n\n      \n       \n         30 Aug 2016\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       GitFlow is now supported on Platform.sh! \n\n      \n       \n         24 Aug 2016\u00a0 \n           \n              Author:\n              Florian Margaine\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       UI version 2.13 released \n\n      \n       \n         23 Aug 2016\u00a0 \n           \n              Author:\n              Manauwar Alam\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Httpoxy or how Platform.sh keeps your applications safe \n\n      \n       \n         20 Jul 2016\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       UI version 2.12 released \n\n      \n       \n         18 Jul 2016\u00a0 \n           \n              Author:\n              Manauwar Alam\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       No more default configuration files \n\n      \n       \n         05 Jul 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       UI version 2.11 released \n\n      \n       \n         05 Jul 2016\u00a0 \n           \n              Author:\n              Manauwar Alam\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       June Features Update \n\n      \n       \n         30 Jun 2016\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Is the Cloud really someone else's computer? \n\n      \n       \n         27 Jun 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Cloud adoption in Europe: Addressing data privacy concerns \n\n      \n       \n         21 Jun 2016\u00a0 \n           \n              Author:\n              Robert Douglass\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       The future of the PHP PaaS is here: Our journey to Platform.sh \n\n      \n       \n         17 Jun 2016\u00a0 \n           \n              Author:\n              Markus Hausammann\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Looking for our new marketing manager! Are you the one? \n\n      \n       \n         10 Jun 2016\u00a0 \n           \n              Author:\n              Lyly Lepinay\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Drupal 8 starter kit now with PHP 7 and Composer! \n\n      \n       \n         07 Jun 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       UI version 2.10 released \n\n      \n       \n         07 Jun 2016\u00a0 \n           \n              Author:\n              Aaron Dudenhofer\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Microsoft and Platform.sh announce joint PaaS offering for High Availability (HA) hosting \n\n      \n       \n         02 Jun 2016\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       May Features Update \n\n      \n       \n         30 May 2016\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Software vendor, SaaS or IaaS - doesn\u2019t matter which. Platform.sh really is the killer app for you! \n\n      \n       \n         25 May 2016\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       What if you could use Git to manage your whole infrastructure? \n\n      \n       \n         25 May 2016\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Automatically sanitize your database on development environments \n\n      \n       \n         19 May 2016\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       DrupalCon New Orleans Survival Guide \n\n      \n       \n         05 May 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       The one and only Director of Runtimes and Integrations \n\n      \n       \n         02 May 2016\u00a0 \n           \n              Author:\n              Lyly Lepinay\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh Provides PaaS Technology to Magento Commerce \n\n      \n       \n         12 Apr 2016\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform.sh announces world\u2019s first LDN for web applications \n\n      \n       \n         01 Apr 2016\u00a0 \n           \n              Author:\n              Stephen Weinberg\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n \n    \n     \n         \u00ab\u00ab \n     \n    \n     \n     \u00ab \n     \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     1 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     2 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     3 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     7 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     8 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     9 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     11 \n    \n    \n     \n     \u00bb \n     \n    \n     \n         \u00bb\u00bb \n     \n    \n \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh elected Best Horizontal Cloud Platform of the year ", "url": "https://platform.sh/2015/07/10/best-horizontal-cloud-platform-eurocloud/", "documentId": "9fecd68a8ad63f7b6b8a0c3670da6ce34155ff4e", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh elected Best Horizontal Cloud Platform of the year \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         10 Jul 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, for the 1st edition of the\u00a0 CLOUD WEEK Paris , we have just won the trophy of the\u00a0 Best Cloud Services for horizontal markets \u00a0granted by the jury of EuroCloud France. \n \n After only 1 year of launch, we\u2019re very excited to have received this award. This really demonstrates the interest and added value that Platform.sh is bringing to its customers. \n \n Our pitch at Eurocloud Paris \n Do you know how many times the teams at amazon.com deploy new features to production per day? The answer is dozens of times per minute!! \n When we compare this number to the frequency of deployment of the web organizations we know around us, it clearly is a different order of magnitude. More than once per month is already not so bad! \n And however, if you ask the marketing teams, it\u2019s far from enough. Nowadays, marketing teams spend their entire days analyzing data and working on improvements on their sites to boost traffic, conversion, abandoned carts\u2026 \n Thanks to Platform.sh, increasing your number of deployments per day and working like Amazon is no longer science fiction. \n Platform.sh is a Platform-as-a-Service that does two things: \n \n\t It runs websites, including massives ones and provides High Availability (99,99% guaranteed uptime) \n\t It has\u00a0 completely automated every step to move from production to development , enabling to create development branches on the fly in couple of seconds. The marketing teams can now test new features in isolation on a dedicated URL. Approve. Merge. You\u2019re live! You can now repeat the operation (Rinse & Repeat, hum?). \n \n This real Continuous Delivery workflow provides the marketing teams the agility they need to face the challenges of running a content or eCommerce website nowadays. \n This seems simple, and it is for the users. However, to get there, 3 years of R&D have been necessary. Our current team is today a top-notch team of 13 engineers, working fiercely and proudly to build the best PaaS ever. We announced a few weeks back that we have the support of the European Commission to continue delivering an ambitious roadmap. \n Platform.sh also already is a commercial success. We now have hundreds of clients all over the world, including some very large ones like Vivienne Westwood, Flixbus, Seloger.com, the British Council, the retailer Reiss, Chronopost, the South America giant El Universo, or The Asterix Park, Sudoschweiz and many, many others. \n We thank the Jury for selecting us for this meaningful award. \n We\u2019re humbled and grateful. \n In July, Paris is the European capital of Cloud \n The first edition of the CLOUD WEEK shows great ambition: bring together 4,000 participants from all Europe and make Paris and the Ile de France region the European capital of Cloud Computing. \n The event was initiated by EuroCloud France and aims at uniting all stakeholders of the Cloud: builders, editors, integrators, companies and user organisations, academics\u2026 in order to promote the use of Cloud technologies to the French companies. \n This week, intends to shed a new light on Cloud Computing. It was thought as a great gathering of energies and initiatives around the Cloud. Though the project was initiated by EuroCloud, its nature is to gather: any organisation interested in putting on an event around the Cloud, whatever its form, is most welcome. \n For Pierre-Jos\u00e9 Billotte, EuroCloud France President, \u201cIt is by calling on public or private organisations, so that they become co-creators of the event, that we will create a common momentum and make all aware of our strength\u201d. \n The CDRT, CIGREF, Cloud Confidence, Forum Atena, the ISEP engineering school and Transition Num\u00e9rique + participate to the event. \n About the Cloud Trophies \n As they do every year the jury of EuroCloud France will award 6 trophies to 6 companies chosen from hundreds of candidates: \n \n\t Best Cloud Start Up \n\t Best Client Cas \n\t Best Cloud Services for horizontal markets \n\t Best Cloud Services for vertical markets \n\t Best Cloud Services Infrastructure \n\t Best Migration service to the Cloud \n \n The winners of the EuroCloud France trophies are\u00a0 qualified to the Europe EuroCloud Trophies .\u00a0 Read more about the Cloud Trophies . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Wildcard support for cookies in the HTTP cache ", "url": "https://platform.sh/blog/wildcard-support-for-cookies-in-the-http-cache/", "documentId": "87f21426907cfd95f86566b8a63f241e18a2302a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Wildcard support for cookies in the HTTP cache \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         17 Oct 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh now supports regular expressions for wildcard cookie matching at the cache layer. \n Platform.sh Professional includes a dynamic HTTP cache that allows you to cache responses from your application based on the headers and cookies that you specify. This gives you better performance by caching pages or assets which do not change often or per user (if you're on  Platform.sh Enterprise,  you already have access to a powerful global application cache and CDN, so this is not required). \n Until recently, you were limited in control the cache to using only fixed cookie names. This meant, for example, that if you were using a session cookie to keep users logged in, that you had to keep track of all the session cookie names used in all your environments or disable the HTTP cache for all users. It also made it difficult to set up useful caching rules when you were using third-party cookies like those set by Google Analytics. \n Well, you don\u2019t have to worry anymore, because Platform.sh now supports regular expressions for wildcard cookie matching at the cache layer. This allows you to be very specific about which cookies you cache on and which you let through to the backend, giving you full flexibility in caching. \n Users of Drupal, Wordpress and other systems where the cookie name is per user will get the most benefit from this new behaviour, which effectively enables full caching for users who aren\u2019t logged in. Here\u2019s an example for users of Drupal which allows the session cookie through... \n \n https://{default}/:\n    type: upstream\n    upstream: app:http\n    cache:\n        enabled: true\n        cookies: ['/^SS?ESS/'] \n Adding a regular expression match to your existing routes is very easy and only takes a couple of minutes. Just remember to test it in a development environment first.  \n Full details are available in our documentation . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Open source software ROI for your organization \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "WordPress security updates, the quick way ", "url": "https://platform.sh/blog/wordpress-security-updates-the-quick-way/", "documentId": "b6982e89049245486417be755bb4cef95dde1d99", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           WordPress security updates, the quick way \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         01 Nov 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Yesterday, the WordPress team along with security researcher Anthony Ferrara released a new version of WordPress, version 4.8.3 that fixes a significant security vulnerability.   You can read more about the  technical details  of the exploit and the  timeline of its report  on Anthony's blog.  The long and short of it is that if you're not already running WordPress 4.8.3, you need to upgrade. \n \n If you're on Platform.sh, updating is simple and straightforward.  There's 2 ways, depending on if you're using a vanilla WordPress download package or building it via a Composer-based variant. \n Using Composer \n If you're using one of the Composer-based WordPress installers, the process can\u2019t be easier. \n \n Checkout your project from Platform.sh using Git \n Verify that your  composer.json  file is set to download WordPress 4.8.  Look for the  require  line that downloads WordPress itself.  It will probably look something like this:\n \n\"require\": {\n    \"johnpbloch/wordpress\": \"4.8.*\"\n},\n \n Make sure the version constraint is set to a value that includes 4.8.3.   4.8.* ,  ^4.8 ,  ~4.8 , and so on are all valid constraints.  Update it if you need to, then save the file. \n Run  composer update  to update the lock file. \n Commit the changed  composer.json  and  composer.lock  files to Git. \n Push the new commit to Platform.sh. \n \n You're of course free to try it on a test branch first.  Platform.sh makes that easy for exactly cases like this one.  Simply make a new branch before adding the changed files to Git, then activate the environment after it's pushed.  As soon as you're comfortable that the update works, go ahead and merge it to  master . \n Vanilla download \n If you are running WordPress as a simple download from  WordPress.org , the way to update it is to simply copy files from a new download over your existing install. \n \n Checkout your project from Platform.sh using Git \n Download the latest version of WordPress from the  download page  and unzip the file. \n Copy all files from the download into your project, overwriting what's already there.  Make sure that the wp-config.php file is  not  changed. \n Commit all changed and added files to Git.  (Note there are some recently added files; be sure not to miss those.) \n Push the new commit to Platform.sh. \n \n You can also test the update on a branch if you prefer.  If everything is in order just merge the branch to  master  and you're done. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Open source software ROI for your organization \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Deploy API Platform on Platform.sh ", "url": "https://platform.sh/blog/deploy-api-platform-on-platformsh/", "documentId": "c8f53171f038f6dfd769d3307cdbd3bb33d3ed5a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Deploy API Platform on Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         29 Nov 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \u00a0 \n API Platform  is probably the most feature-rich, well... platform, to build robust API driven backends from REST services to GraphQL. \n You can build a CRUD backend in minutes (with pagination, data validation, access control, relation embedding, filters and error handling...), or override and extend every element to make a custom API that suits your needs. \n The project is lead by  K\u00e9vin Dunglas  from\u00a0 Les-Tilleuls.coop \u00a0 and being built on top of the Symfony PHP framework it proposes not only huge productivity benefits but also a breadth of support that is extremely interesting. You can use any of the thousands\u00a0of Symfony bundles with API Platform. \n You can design your own data model as plain old PHP classes or import an existing one from the Schema.org vocabulary.\u00a0 \n To my knowledge, it is the only API framework that allows you to expose easily not only its default Linked Data (JSON-LD) and Hydra web standards but also GraphQL,HAL, YAML, JSON, XML and CSV\u00a0out of the box through content negotiation. \n And with Platform.sh the whole thing is even cooler; Because we support multi-application clusters you can rapidly embark on refactoring your good old monolith into an API driven application quicker than you could imagine. \n To get you started, I've put a small repo on our  GitHub examples . It is set up as a multi-application project where: \n \n\t the backend  api\u00a0 application is running on  PHP 7.1 \n\t the frontend  admin \u00a0application is running on  NodeJS 6.9 \u00a0and is based on  API Platform Admin . \n \n Once you have followed the steps on the  README.md , you should be able to access both the  api \u00a0URL and the  admin \u00a0URL provided by Platform.sh. \n \u00a0 \n Platform.sh web UI showing the web and SSH URLs of the two applications: \n \n \u00a0 \n API Platform Admin page: \n \u00a0 \n \n \u00a0 \n \u00a0 \n API Platform API page: \n \u00a0 \n \n \u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Blog ", "url": "https://platform.sh/blog/page/6/", "documentId": "523efceec9cdc2594c1aef9f67dc7b8cda6e9da7", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             15 Apr 2020 \n           \n          \n\n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         Recent posts \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       The Platform.sh build-and-deploy pipeline \n\n      \n       \n         03 Oct 2017\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Taking care of your health \n\n      \n       \n         02 Oct 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Screencast - Develop your Drupal 8 site with Drush, Composer and Platform.sh \n\n      \n       \n         21 Sep 2017\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh joins Orange Cloud for Business at Huawei Connect 2017, Shanghai \n\n      \n       \n         04 Sep 2017\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       When your job is too tough for cron \n\n      \n       \n         09 Aug 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       6 things to do to make your application cloud friendly \n\n      \n       \n         07 Aug 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Want to try Platform.sh? Get started for free \n\n      \n       \n         31 Jul 2017\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Hosting your TYPO3 website with Platform.sh: Part 2 Branching and Workspaces \n\n      \n       \n         21 Jul 2017\u00a0 \n           \n            Author: Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Why host your TYPO3 website with Platform.sh: Part 1, Git and the Read Only file system \n\n      \n       \n         07 Jul 2017\u00a0 \n           \n            Author: Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Deploy Down Under: Platform.sh is now available in Australia \n\n      \n       \n         03 Jul 2017\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Containers old, containers new, memcached support, and PHP 7.2 \n\n      \n       \n         26 Jun 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Now available: Sovereign Hosting Solution in Microsoft Cloud Germany \n\n      \n       \n         22 Jun 2017\u00a0 \n           \n              Author:\n              Andrew Melck\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Wrap your head around custom headers \n\n      \n       \n         22 Jun 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       What is best practice in web application deployment? \n\n      \n       \n         12 Jun 2017\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Various ways to set variables \n\n      \n       \n         09 Jun 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Getting to 50/50 women men participation: Polyconf, a very diverse conference \n\n      \n       \n         08 Jun 2017\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       The Ultimate Third Party Resources List on Using Platform.sh \n\n      \n       \n         16 May 2017\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Slate.fr revived its DevOps approach with Platform.sh  \n\n      \n       \n         11 May 2017\u00a0 \n           \n            Author: Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       DevOps gives you wings \n\n      \n       \n         09 May 2017\u00a0 \n           \n              Author:\n              Kieron Sambrook-Smith\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Screencast - Composer and Continuous Integration \n\n      \n       \n         09 May 2017\u00a0 \n           \n              Author:\n              John Grubb\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Sponsoring pre-dotScale and election drinks ! \n\n      \n       \n         21 Apr 2017\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Free SSL certificates for every project & every environment \n\n      \n       \n         20 Apr 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       TYPO3 and Platform.sh: A love letter from Germany \n\n      \n       \n         18 Apr 2017\u00a0 \n           \n              Author:\n              Andrew Melck\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Imagine 2017: The New Magento Ecosystem \n\n      \n       \n         13 Apr 2017\u00a0 \n           \n              Author:\n              Doug Goldberg\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Global App Cache: our managed, tiered CDN feature for global page and asset cache coverage \n\n      \n       \n         05 Apr 2017\u00a0 \n           \n              Author:\n              Robert Douglass\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       More flexible elastic now available \n\n      \n       \n         28 Mar 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Now you can save time in a database \n\n      \n       \n         27 Mar 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Oliver Sweeney website revamp with Magento Cloud\u2014powered by Platform.sh\u2014oozes sophistication and luxury \n\n      \n       \n         17 Mar 2017\u00a0 \n           \n              Author:\n              Lyly Lepinay\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh expands its US operations to meet growing demand in North America \n\n      \n       \n         14 Feb 2017\u00a0 \n           \n              Author:\n              Fred Plais\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Multiple MySQLs Make Platform.sh a Marvelous Multisite Machine \n\n      \n       \n         10 Feb 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n \n    \n     \n         \u00ab\u00ab \n     \n    \n     \n     \u00ab \n     \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     1 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     2 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     3 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     5 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     6 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     7 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     11 \n    \n    \n     \n     \u00bb \n     \n    \n     \n         \u00bb\u00bb \n     \n    \n \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Welcome to the world, PHP 7.2! ", "url": "https://platform.sh/blog/welcome-to-the-world-php-72/", "documentId": "f9d497b1570d954696a6a657b9ce349e0bc53d76", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Welcome to the world, PHP 7.2! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         30 Nov 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today the PHP development team  released the latest version  of the web's favorite language, PHP 7.2.0.  Huge thanks and congratulations to everyone that worked on it, especially release managers Sara Golemon and Remi Collet. \n You can already try it out on Platform.sh, of course. \n \n Better performance \n Unlike PHP 7.0 and 7.1, 7.2 focused mainly on internal improvements rather than user-facing languages features.  Most notably, many of the changes to the engine and syntax that have been made in recent versions allowed the PHP team to optimize the engine even further.  It's not as big of a performance boost as PHP 7.0 was, but 7.2 should still be measurably faster than PHP 7.1.  In fact, a few optimizations only work if you're using scalar types for parameters as it allows the engine to make some type-specific optimizations.  Typing is good for you. \n Securing PHP \n The other major improvements involve security.  For those using  password_hash()  to manage passwords (which is everyone, or really should be), a new, more-secure hash algorithm has been made available: Argon2.  The existing BCrypt algorithm is still available, and is still the default, but for those who want to be forward looking  PASSWORD_ARGON2  is now an option as well.  For example: \n echo password_hash(\"secret_password\", PASSWORD_ARGON2I);\n \n More significantly, the security library libsodium has now been bundled with PHP, replacing the long-derided mcrypt.  Sodium is a library for writing encryption workflows more complex than simple password hashing without having to \"roll your own\" encryption API, a process that is extremely easy to get wrong.  The libsodium API allows for \"secure by default\" API call for signing and validating encrypted messages.  For example: \n $alice_kp = sodium_crypto_sign_keypair();\n$alice_sk = sodium_crypto_sign_secretkey($alice_kp);\n$alice_pk = sodium_crypto_sign_publickey($alice_kp);\n\n$message = 'This is a test message.';\n$signature = sodium_crypto_sign_detached($message, $alice_sk);\nif (sodium_crypto_sign_verify_detached($signature, $message, $alice_pk)) {\n    echo 'OK', PHP_EOL;\n} else {\n    throw new Exception('Invalid signature');\n}\n \n If you need to use an older version of PHP but still want to use libsodium, there's a  polyfill library  available (which provided the example above, as well). \n A grab-bag of syntax \n For the syntax fans there's still a bit of new syntax available.  Most notably, there's a new  object  type hint that will match any object of any class but disallow primitives or arrays.  Like any other type hint it works on both parameters and return values. \n It's also now possible to \"widen\" a parameter type.  In previous versions, if an interface or parent class specified a type for a parameter or return value then all subclasses were required to have the exact same type hint.  As of PHP 7.2, it's possible to omit the type for a parameter in a child class, allowing more variable types to pass.  That still respects the Liskov Substitution Principle so it's safe to do and offers more flexibility, especially for legacy code that is untyped.  It's also possible to \"narrow\" a return type by adding a return type in a subclass when the parent had none.  Ironically that makes PHP 7.2 more backward compatible with PHP 5.x code than previous versions of PHP 7! \n There's a handful of other improvements, too.  The  PHP 7.2 Upgrading guide  has a complete list. \n Give it a try \n Sound interesting?  It's of course available on Platform.sh already, and trivially easy to experiment with.  In your  .platform.app.yaml  file, simply change the \"0\" or \"1\" on your  type  line to a \"2\": \n type: \"php:7.2\"\n \n Commit and push.  It really is that easy! \n And of course you probably should try it in a branch before deploying to production.  That's easy, too. \n Congratulations, ElePHPants! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "GitLab Integration is here! ", "url": "https://platform.sh/blog/gitlab-integration-is-here/", "documentId": "8ae13e1696a892f8dfa9ce9b48d6279a572e8ae8", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           GitLab Integration is here! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         12 Dec 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         As you might know, Platform.sh allows you to create, on-the-fly, an ephemeral staging/development environment, on the cloud, for every git branch or pull-request. \n Basically, our main API is git. You create a branch push it. We take care of everything else. A whole functional cluster is born, with all of its dependencies. It gets its own URL you can visit in a browser. Test. Like it? Merge the pull-request. You just deployed. \n You could use Platform.sh with nothing else.. The git server is included. But most teams require more from their git hosting service; They want a nice interface. They want pull (or merge) requests. \n Now Platform.sh works with any git hosting service, and with our generic Webhook support it was always easy to work with Gitlab (and since the introduction of Gitlab-CI you could do some nifty stuff with it.). But as of late, more and more of you came clamoring for an easier integration. Something as simple and transparent as our Github and Bitbucket integrations. \n Clamor no more. \n platform integration:add --type gitlab --repository mygroup/example-repo --token {mytoken} --base-url https://gitlab.example.com \n For us, it is exciting, as Gitlab is a tool we love here at Platform.sh; As a matter-of-fact, we moved our some 400 internal repositories from Github to it in the beginning of 2016 (on an internally managed enterprise version). \n So how does the integration work, what does it do? \n \n\t It creates a new environment when creating a branch or opening a pull request on GitLab. \n\t It rebuilds the environment when pushing new code to GitLab. \n\t It deletes the environment when merging a pull request. \n \n Integrate, then fire and forget. And for the impatient, and detail-oriented amongst you \u00a0here is how you go about setting it up: \n First, generate a token on your GitLab user profile. Go to your Settings page on GitLab and click  Access Tokens . Fill the  Name  field, for example with \"Platform.sh Integration\" and ensure the token has the api  read_user, and read_registry  scopes. Copy the token. \n Now, open a terminal window (you need to have the Platform.sh CLI installed). Enable the GitLab integration as follows: \n platform integration:add --type=gitlab --token=THE-TOKEN-YOU-WROTE-DOWN --base-url=https://THE-URL-OF-YOUR-GITLAB/ --gitlab-project=MY-NAMESPACE/MY-PROJECTNAME \n This should output the configuration of the integration. The last element would look like: \n | hook_url | https://{region}.platform.sh/api/projects/{projectid}/integrations/{hook_id}/hook | \n Now, copy the hook URL. Go to your GitLab repository and click  Settings Integrations  and paste the Payload URL, in the Triggers section choose  Push events ,  Tag push events  and  Merge Request events . And click on  Add webhook . \n You can now start pushing code, creating new branches or opening merge requests directly on your GitLab repository. You will see environments get automatically created and updated on the Platform.sh side. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh joins the prestigious French Tech Tour China 2017 ", "url": "https://platform.sh/blog/platformsh-joins-the-prestigious-french-tech-tour-china-2017/", "documentId": "412d47e44f730dd5440ebbd435c6fd7c4353ec20", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh joins the prestigious French Tech Tour China 2017 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         03 Dec 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Our Asia-Pacific team kicks off a whirlwind tour this week, with visits to Singapore, Hong Kong, Shenzhen, Shanghai and Beijing over the next two weeks. \n Our CEO Fr\u00e9deric Plais, our General Manager China Augustin Delaporte, and our APAC Regional Sales Manager Chris Skene, will be joining the French Tech Tour China 2017, bringing our unique Platform-as-a-Service roadshow to 4 major Chinese cities. \n \n What is the French Tech Tour China? \n The French Tech Tour China is the startup showcase program organized by  BpiFrance , the leading French investment bank, and  BusinessFrance , the government backed office, with the aim of helping successful French startups expand into the Chinese market. \n Platform.sh is proud to be part of the 12 winning startups to join this prestigious initiative. \n Click here  to read more about the French Tech Tour China. \n To meet our team, get a demonstration or share a friendly drink, you can meet us in: \n \n\t Shenzhen on December 3 to 5 \n\t Hong Kong on December 6 to 8 \n\t Shanghai on December 9 to 12 \n\t Beijing on December 13 to 15 \n \n Please  get in touch  or  schedule a private meeting . \n \u00a0 \n Image credit: Shenzen by Tony\u00a0 https://flic.kr/p/21KA6wH \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Living on the edge with Ruby 2.5 (preview) ", "url": "https://platform.sh/blog/living-on-the-edge-with-ruby-25-preview/", "documentId": "bbb55e6e40f51232952cf0af2c32a4255fdbfb35", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Living on the edge with Ruby 2.5 (preview) \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         12 Dec 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Many of you know Platform.sh as your go-to modern PHP cloud solution; A bunch of you have been running NodeJS for the last two years. \n But Platform.sh can do so much more. Did you know Platform.sh is a perfect platform for Ruby and Rails applications? There is basically nothing easier than deploying a Rails application on Platform.sh. You just add the  platform_sh_rails  \u00a0gem to your Gemfile. Copy over or generate our YAML config. Git push. Nothing to configure. \n As a matter-of-fact, some of our tooling is happily running Ruby on Platform.sh for quite some time. And... not only you can run Ruby and Rails applications with incredible ease. You can do so with the latest versions. Drum roll\u2026 \n Introducing Ruby 2.5 on platform.sh. So even before the official release you can test your code for the latest and greatest. \n How do you migrate an existing Ruby 2.4 project on Platform.sh to Ruby 2.5? \n Create a new branch. Open  .platform.app.yaml   change one character (  type: ruby:2.4   to  type: ruby:2.5  ). Commit. Push. Test everything is dandy. You are ready. When 2.5 is officially out, just merge to master. OH, or just run in production. We are Ruby people. We live on the edge. \n What\u2019s new ? \n For one, bundler is bundled as a standard library. Before, we would install Bundler as a global dependency. Which meant the version of Bundler you would have on production could be different than the version which you use locally. You could still gem install bundler but that is no fun. Now it is transparent. \n Ruby 2.5 introduces some cool small features I personally love. Like how rescue/else/ensure is now so much cleaner without having to put do/end blocks. I also like the small adjustments to Array and String (delete_prefix and delete_suffix for string, prepend and append for array). Basically, stuff that we\u2019ve been importing active_support for, just to get some sugar. \n But probably the most important is performance. I haven\u2019t run my own tests but if I am to believe the blogs. Wow. Cool. See  http://engineering.appfolio.com/appfolio-engineering/2017/5/22/rails-speed-with-ruby-240-and-discourse-180  and  http://www.rubyguides.com/2017/11/ruby-2-5-performance/ \n \nEnjoy, be safe, and live on the edge. \n\u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "A look back on 2017 ", "url": "https://platform.sh/blog/a-look-back-on-2017/", "documentId": "9b6d2e87e4db1eaa4ec30702745aa85d4f5da9e0", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           A look back on 2017 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         29 Dec 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Time flies.  It's been quite a year for Platform.sh as our product continues to improve.  One of the great things about a managed services product is that it can continually improve without you even realizing it.  The sign of a successful product feature is that it feels like it's always been there.  Who can imagine life without it?\n Let's take a look at what we've improved just in the last 12 months... \n January opened with  support for HTTP/2  on all projects.  HTTP/2 changes the way browsers and servers communicate, making it faster, more streamlined, and better tailored to modern, asset-heavy web sites.  HTTP/2 \"just works\" automatically as long as you're using a reasonably modern browser and HTTPS. \n And as of April,  you're using HTTPS .  Courtesy of Let's Encrypt, you now get a free, automatic SSL certificate provisioned for every environment.  No one should have to think about HTTPS in 2017.  It's just a part of the package. \n April also saw the launch of our  tiered CDN  for Platform.sh Enterprise.  The Global CDN combines a flexible, high-feature CDN for dynamic pages with a low-cost, high-bandwidth CDN for static assets.  That offers the best of both worlds for sites that want the best performance for the least cost. \n We've also continued to expand our available services.  We kicked off the year with support for  persistent Redis  as a key/value store rather than just as a cache server.  March saw the addition of  InfluxDB , a popular time-series data service for recording time-based data.  In June, we added support for  Memcached  in case Redis doesn't do it for you. \n We also beefed up the functionality of our existing services, adding support for  multiple-core Solr configurations  and  multi-database MySQL configurations .  We even now support  regular expressions in the router  for more fine-grained cookie control. \n And of course we've kept up with the latest releases of your favorite languages, be that Python,  Ruby , NodeJS, or perennial favorite  PHP 7.2 .  We even added preliminary support for Go and Java, both of which are in beta now.  (Interested in trying them out?   Please reach out to us !) \n August included support for  arbitrary worker processes  in their own container.  That allows an application to easily spin up a background task to handle queue processing, image generation, or other out-of-band tasks with just a few lines of YAML with no impact on production responsiveness. \n As of October, we've added  health notification support  for all projects.  At the moment they only cover disk usage, but in time will expand to other health notices.  (If you haven't configured them on your project yet we strongly recommend you do so.) \n We're also closing out the year with new support for  GitLab , as well as more  flexible control over TLS and Client TLS , plus a few other changes that line us up for even bigger things in the year to come. \n Last but not least, all of that goodness is available down under as of July with our new  Sydney region for Platform.sh Professional . \n And that's all been just this year!  What do we have coming in 2018 to further redefine \"modern hosting\"? \n You'll just have to join us in 2018 to find out... \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Watch your inheritance ", "url": "https://platform.sh/blog/watch-your-inheritance/", "documentId": "a8d572466e072631b06fa38c456f99bc6270b013", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Watch your inheritance \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         13 Dec 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         PHP 7.2 introduced a neat new feature called \"type widening\".  In short, it allows methods that inherit from a parent class or interface to be more liberal in what they accept (parameters) and more strict in what they return (return values) than their parent.   In practice they can only do so by removing a type hint (for parameters) or adding one where one didn't exist before (return values), not for subclasses of a parameter.  (The reasons for that are largely implementation details far too nerdy for us to go into here.)  Still, it's a nice enhancement and in many ways makes PHP 7.2 more compatible with earlier, less-typed versions of PHP than 7.0 or 7.1 were. \n There's a catch, though: Because the PHP engine is paying more attention to parameter types than it used to, it means it's now rejecting more invalid uses than it used to.  That's historically one of the main sources of incompatibilities between different PHP versions: Code that was technically wrong but the engine didn't care stops working when the engine starts caring in new version.  Type widening is PHP 7.2's case of that change. \n \n Consider this code: \n interface StuffDoer {\npublic function doStuff();\n} \n class A implements StuffDoer {\npublic function doStuff(StuffDoer $x = null) {}\n}\n \n This is nominally valid, since  A  allows zero parameters in  doStuff() , which is thus compatible with the  StuffDoer  interface. \n Now consider this code: \n class A {\npublic function doStuff(StuffDoer $x = null) {}\n} \n class B extends A {\npublic function doStuff() {}\n}\n \n While it seems at first like it makes sense, it's still invalid.  We know that  B  is going to not do anything with the optional  $x  parameter, so let's not bother defining it.  While that intuitively seems logical the PHP engine disagrees and insists on the parameter being defined in the child class, even though you and I know it will never be used.  The reason is that another child of  B , say  C , could try to re-add another optional parameter of another type; that would technically be compatible with  B , but could never be compatible with  A .  So, yeah, let's not do that. \n But what happens if you combine them? \n interface StuffDoer {\npublic function doStuff();\n} \n class A implements StuffDoer {\npublic function doStuff(StuffDoer $x = null) {}\n} \n class B extends A {\npublic function doStuff() {}\n}\n \n There's two possible ways to think about this code.  \n \n B::doStuff()  implements  StuffDoer::doStuff() , which has no parameters, so everything is fine. \n B::doStuff()  extends  A::doStuff() , which has a parameter. You can't leave off a parameter, so that is not cool. \n \n Prior to PHP 7.2, the engine implicitly went with interpretation 1.  The code ran fine.  As of PHP 7.2.0, the engine now uses interpretation 2.  It has to, because it's now being more careful about when you're allowed to drop a type on a parameter in order to support type widening.  So this wrong-but-working code now causes a fatal error.  Oopsies. \n Fortunately, the quickfix is super easy: Just be explicit with the parameter, even if you know you're not going to be using it: \n interface StuffDoer {\npublic function doStuff();\n} \n class A implements StuffDoer {\npublic function doStuff(StuffDoer $x = null) {}\n} \n class B extends A {\npublic function doStuff(StuffDoer $x = null) {}\n}\n \n The more robust fix is conceptually simpler: Don't do that.  While adding optional parameters to a method technically doesn't violate the letter of an interface, it does violate the spirit of the interface.  The method is now behaving differently, at least sometimes, and so is not a true drop-in implementation of the interface. \n If you find your code is doing that sort of stealth interface extension, it's probably time to think about refactoring it.  As a stopgap, though, you should be able to just be more explicit about the parameters in child classes to work around the fatal error. \n Enjoy your  PHP 7.2 ! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Route all the things ", "url": "https://platform.sh/blog/route-all-the-things/", "documentId": "25849ef56665a39f019e1d4460b8914dadaacd45", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Route all the things \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         20 Dec 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh has always put a great value on customer flexibility.  That flexibility at times can seem bewildering, however, as users have an ample supply of buttons and dials to to customize their application architecture, hosting, and workflow. \n  In particular, the routing system built into every project offers an enormous amount of flexibility (single application, multi-application, microservice, arbitrary redirects, etc.), but how exactly does it work? \n Since we've just added new functionality for users hosting many domains, let's take this opportunity to take a deep dive into the routing system. \n Short version: You can now specify an  {all}  placeholder in  .platform/routes.yaml  that maps all incoming domains to the same application, making multi-domain applications much easier to manage. \n Long version:\n \n How Platform.sh does routing \n Every project on Platform.sh has a  master  environment for production, but it can also have many other environments for testing and development, potentially one for each Git branch.   Each branch/environment has its own copy of the application, its own database server, and its own data, all on a series of lightweight containers. \n Each environment also has its own \"router\", which is also a container.  All requests to any application in your project go through this router. \n But how does our infrastructure know for a given incoming request to which project/router container it should go? \n That's where routing comes in, which is controlled from the  routes.yaml  file.  There are actually two layers of routing involved, one \"edge router\" and one \"environment router\". \n \n The edge router maps incoming requests to a region to the right environment router. \n The environment router maps incoming requests to the right application container. \n \n Both routers are updated every time you deploy to any branch, based on the information in the  routes.yaml  file and the domains configured in the project.  Those get merged to produce essentially giant lookup tables in each router.  (It's a bit more complex than that, but close enough for a blog.) \n Suppose we look at the industry standard website,  https://example.com/ . Its  routes.yaml  file would most likely contain 2 standard entries: \n https://{default}/:\n  type: upstream\n  upstream: app:http\nhttps://www.{default}/:\n  type: redirect\n  to: https://{default}/\n \n The project is also configured with a single domain,  example.com .  That means at deploy time on the  master  branch the above entries effectively turn into: \n https://example.com/:\n  type: upstream\n  upstream: app:http\nhttps://www.example.com/:\n  type: redirect\n  to: https://example.com/\nhttp://example.com/:\n  type: redirect\n  to: https://example.com/\nhttp://www.example.com/:\n  type: redirect\n  to: https://example.com/\n \n That's right, four entries.  By default, Platform.sh automatically creates a redirect from any HTTP route to its HTTPS equivalent.  We're just doing our part to make the web more secure for everyone. \n Two things happen with that list.  First, the router container for that specific environment is created and the above list of domain instructions are turned into a configuration file for it.  Three of the rules are just redirects, while the first entry tells router to proxy the incoming request to the application container named  app  in the same environment. \n Second, there's two domains in the list:  www.example.com  and  example.com .  It doesn't matter what their configuration is; an entry is added to the edge router's lookup table that both of those domains should be forwarded to the router container for that environment.  Our edge router is a custom, high-throughput proxy server that focuses on just one thing: Proxying incoming requests to the correct router container. \n When a request comes in for example.com (like the request you send to view this page), the edge router looks up \"example.com\" in its table and finds that the request should go to a particular router container.  It then proxies the request to that router.  The router sees the request and that it should forward it to the application container with which it was deployed.  The request then gets proxied to the application container where an Nginx/PHP-FPM setup is waiting for it, which sends back a response.  (You could just as easily be using Ruby or Python or Go on the app container; everything else is exactly the same.) \n Strictly speaking, that Nginx process on the application container is a third layer of \"routing\", and the one that offers end-users the most configuration.  Depending on the  .platform.app.yaml  file, it could serve static files from disk, hand the request off to PHP-FPM or a Node.js process, add additional headers to the response, and many other things. \n Of the three, only the router container does any caching, assuming its configuration and the HTTP headers of the response tell it to.  (More on that another time.) \n Multiple environments \n This multi-layer routing system offers an incredible amount of flexibility at surprisingly little overhead.  In particular, it makes it possible for us to create an effectively infinite number of additional environments for your Git branches.  Suppose we have an  update  branch where we are testing an update to one of the Drupal modules that powers this site.  We obviously need a new domain for that environment, since  example.com  is already used by the production site.  Our system generates that new domain dynamically based on the branch name and project.  That's where the common \"gibberish domain\" for dev branches comes from:  $branch_id - $project_id . $region . \n On a dev branch, then, the exact same process happens as in production.  The only difference is that instead of looking at the configured domain for the site (example.com), we use the generated domain.  Otherwise the process is identical. \n Multiple applications \n Platform.sh also supports multiple related applications in the same environment.  That could be a front-end application and a backend API.  It could be a micro-services setup.  It could be a dynamic website and a queue worker in another language.  It could be a static website with one directory a dynamic blog application.  (Yep, you can route subdirectories to different applications in  routes.yaml .  Neat, huh?)  Or whatever else works for your use case. \n Let's pretend for a moment that we wanted to redesign our website to be a static main site with a WordPress blog at  blog.example.com .  We would modify our  routes.yaml  file like so: \n https://{default}/:\n  type: upstream\n  upstream: site:http\nhttps://www.{default}/:\n  type: redirect\n  to: https://{default}/\nhttps://blog.{default}/:\n  Type: upstream\n  Upstream: blog:http\n \n There's now 2 applications defined:  site  has whatever static site generator builds the main site, and  blog  is the WordPress blog.  Both are in separate directories with their own  .platform.app.yaml  file. \n Now on deploy, the edge router gets three entries ( example.com ,  www.example.com ,  blog.platform.sh ), all pointing at the router container for the environment.  That router now has six entries: \n \n Three HTTP->HTTPS redirects \n One  www.example.com -> example.com  redirect \n One  example.com -> site  container proxy \n One  blog.example.com -> blog  container proxy \n \n We could of course have put the blog at  example.com/blog  instead, and just had one fewer domains registered in the edge router.\n It's also possible to add wildcard subdomains.  Say we want all subdomains of  example.com  to be handled by WordPress, not just  blog .  Then we'd need only do: \n https://*.{default}/:\n  Type: upstream\n  Upstream: blog:http\n \n Both the edge router and the router container will now get a wildcard configuration and everything will get proxied as you'd expect.  The one caveat is that Let's Encrypt doesn't support wildcard certificates just yet, so for the moment you'll need to bring your own wildcard SSL certificate.  That's expected to  change in January , though, and we'll start supporting automatic Let's Encrypt wildcard certificates as soon as they tell us we can. \n Multiple domains \n Now we get to the fun part. What happens if you have multiple apex domains, not just subdomains?  Suppose we want to have  exampleblog.com  instead of  blog.example.com .  What then? \n Platform.sh allows you to associate any number of domains with a project, but only one gets associated with the special  {default}  placeholder.  Fortunately, the others can still be used in  routes.yaml  literally.  To wit: \n https://{default}/:\n  type: upstream\n  upstream: site:http\nhttps://www.{default}/:\n  type: redirect\n  to: https://{default}/\nhttps://exampleblog.com/:\n  Type: upstream\n  Upstream: blog:http\n \n In production, this works exactly as you'd expect.  It does the exact same thing as the  blog.example.com  version, except with a different domain name.  It's on a development branch that it becomes interesting.  What happens to  exampleblog.com ? \n Simple: We toss that domain name into the mix to produce the generated domain name.  Strictly speaking we always do, but if the domain is just  {default}  you don't see it.  Any static part of the domain in  routes.yaml  is simply prepended to the domain name we generate, so in the \"update\" branch we end up with  exampleblog.com.update-abc123-cdhuk7d6hhcsg.us.platform.sh .  In fact, our previous  blog.example.com  example would have a dev branch of  blog.update-abc123-cdhuk7d6hhcsg.us.platform.sh . \n (At this point those of you who have been with us for a while are probably wondering where the  --- s went.  As of December 2017, we are using periods rather than dashes to separate the generated parts of the domain, which makes the domains more compatible with Let's Encrypt.  Existing projects didn't change to avoid breaking any existing links or DNS records you may have.  If you want to switch your project to using dots, though, just file a ticket through your project interface and we'll flip the switch for you.) \n Route all the domains! \n The final use case to consider is a single container hosting multiple apex domains.  A common example of this setup for our clients would be with the Drupal Domain Access module.  Domain Access lets a single Drupal site serve multiple domains, with subsets of the same content available depending on which domain is being viewed.  That is, one application would serve both (for example)  example.com  and  example.net .  How do we make the router handle that? \n It's now super-simple.  First you'd configure both domains in your project.  It doesn't matter which is the default.  Then, you'd put the following in your  routes.yaml : \n https://{all}/:\n  type: upstream\n  upstream: app:http\nhttps://www.{all}/:\n  type: redirect\n  to: https://{all}/\n \n The  {all}  placeholder iterates over all configured domains and makes an entry for each.  On production, therefore, the above configuration would expand out to: \n https://example.com/:\n  type: upstream\n  upstream: app:http\nhttps://www.example.com/:\n  type: redirect\n  to: https://example.com/\nhttps://example.net/:\n  type: upstream\n  upstream: app:http\nhttps://www.example.net/:\n  type: redirect\n  to: https://example.net/\n \n (Plus an HTTP->HTTPS redirect for each that I've omitted for space.)  That will result in four entries (one for each domain) being added to the edge router, all pointing at the router container, and the router container will get 8 entries in its lookup table (the four above plus the HTTPS redirect for each).  If we add a third domain, another 2 effective routes will get to the list. \n What about development environments?  The same pattern applies.  The  update  branch would effectively turn into: \n \n example.com.update-abc123-cdhuk7d6hhcsg.us.platform.sh \n www.example.com.update-abc123-cdhuk7d6hhcsg.us.platform.sh \n example.net.update-abc123-cdhuk7d6hhcsg.us.platform.sh \n www.example.net.update-abc123-cdhuk7d6hhcsg.us.platform.sh \n \n And then of course you can mix and match all of the above functionality as desired. \n Even more flexibility \n Each of those routes, of course, can also have a variety of other configuration on it.  Path-specific redirects, caching,  TLS configuration , and so on can be configured per-route.  As mentioned, you can even set routes for specific paths that will have their own configuration; you can use that to set different cache rules for a mostly-static site vs. a blog vs. a Websocket path, for instance.  Or create redirects from old, legacy URLs to current ones, right in the router. Or... various other things.  Our  documentation  has more details on the many other options available. \n So that's routing on Platform.sh.  Your site is under your control, just as it should be.  We just make it all work for you. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Open source software ROI for your organization \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Three trends that make successful tech startups attractive to VCs ", "url": "https://platform.sh/2016/10/04/vc-ready-funding-survey/", "documentId": "65c3b8ec88d69bd039e59763bf59ee336d66435c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Three trends that make successful tech startups attractive to VCs \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Fred Plais \n                  \n                   CEO \n                  \n                  \n                 \n            \n          \n         \n         04 Oct 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Software has eaten the world. \u00a0The explosion of devices, screens and the global expectation for any connected thing we use to be super smart, has taken the need for software development to an unprecedented level. Consequently, this has made software developers the new heroes and has opened the gates to a brand new generation of entrepreneurs. \n \n This new generation of entrepreneurs and startups has taken over a borderless playground for entrepreneurship. The rule to the game and barrier to entry no longer is the capital expenditure (at least not in the first phase), but\u00a0 the \u00ab know how \u00bb of writing good and smart software. \u00a0Software that\u00a0 delivers a new experience , software that\u00a0 improves productivity , software that\u00a0 cracks a hard problem , software that\u00a0 makes something awkward into something usable , software that can\u00a0 predict behaviours , software that\u00a0 thinks like a human , or software that\u00a0 is fun to use . Software is everywhere and certainly the amount of opportunities of building software companies is greater than ever. \n But, here\u2019s the paradox. \u00a0Even though it has never been simpler to start a business, it is also harder to succeed. So many startups simply do not pass the first level of delivering software that solves a monetizable problem. The level of competition is reaching a paroxysm and the winners are those who can think fast, move fast without breaking things too much, and build great customer experiences. Doing this well requires the following capabilities in an entrepreneur: bringing together deep technology skills, keeping an eye on a fast-evolving environment and then on top of that, possessing the managerial skills that get the most out of a fastly growing team. \n So how can today\u2019s entrepreneurs ensure that they are building great software that\u2019s backed by a great team and that would be attractive for VC funding? \n Via our Readyfor.VC survey, we looked for best practices and found many interesting trends and anecdotes from an initial sample of data from startups in July at\u00a0 Vivatech in Paris, France. Here\u2019s a detailed look at three of them. \n Almost all startups we talked to have a CTO co-founder \n This is a clear trend. Technical people and engineers are now completely embracing the entrepreneurial wave. This was not necessarily the case in the past. A majority of startups were built by \u00ab business \u00bb people that came out of business schools or were self-made. Engineers were less inclined into entrepreneurship. That time is over. Now it\u2019s more and more obvious that\u00a0 no software company can be created without having a technical founder highly invested in the business. \u00a0Moreover, freshly graduated engineers are now as attracted to entrepreneurship as their fellow MBA friends and this is good news. \n Formal roadmap is shorter \n One of the surprising findings was on the actual horizon of a startup product plan: 85% of the respondents claimed that the horizon of their formal roadmap was 6 months , and this timeframe seems incredibly short. \n Can startup founders really be that shortsighted? Can one lead a company to success with such a limited vision of the future? \n In fact, it sort of makes sense. Just like software teams, software roadmaps have become very agile, and there are several reasons for that: \n \n\t The environment is constantly changing at a fast pace. \u00a0Competitors move very fast, customers are demanding, and marketing tactics constantly need new things to say all the time. Is it still ok for a customer to hear the feature he requested will come in 18 months? \n\t Adoption of agile methodologies by the whole software development industry. \u00a0Scrum, Kanban and all their cousins are now mainstream in software development. And these methods encourage to reaffirm or reassess priorities regularly. If we can ship often and reevaluate priorities regularly, it\u2019s probably more acceptable to have shorter timeframes, right? \n\t The continuous deployment chain has become so automated. \u00a0Shipping new features should now be both safe and fast (if it\u2019s not for you, then you may want to engage with us, we can probably help. Platform.sh is one of the disruptive players in this field). This means software development teams can deploy several times per week unlike when they were used to deploying a few times per quarter a few years back. \n \n New practices in managing a development team \n There are definitely many trends in management that seem to replace the semi-military style in which large engineering teams were sometimes managed. Some of these trends include the ability of on-boarding remote engineers for a short or a long period, leaving more freedom to developers on the type of work they will take over, on keeping a focus on quality and tests while leaving room for initiative. \n We found in this survey that\u00a0 50% work from home regularly \u00a0(from a few days per month to everyday) and\u00a0 28% can choose their tasks \u00a0from a roadmap list.\u00a0 Really ? \u00a0\u201cYou can work from home on whatever topic you want and not get fired? Sounds too good to be true, but can this actually be good for companies?\u201d Yes. The same way it\u2019s widely agreed that salespeople don\u2019t need to be in an office \u2013 \u00ab \u2018cause they\u2019re out there selling. \u00bb \u2013 software engineers no longer need to be in the same office to code. Being at home is good when you want to concentrate and focus on specific tasks. And there is no specific reason to be working at a specific place anymore. In the software development industry \u2013 more than in any industry \u2013 cloud productivity software is everywhere. \n Check your own startup maturity with Readyfor.vc \n Any software startup can plot their VC funding readiness against competitors with the free online survey\u00a0 Readyfor.vc. \u00a0With the test, entrepreneurs can benchmark their software development skills against other startups of their field and evaluate where the areas where they can improve. \n This model was built in collaboration with top European VC fund, Open Ocean, as a guide for entrepreneurs and initial screening. It is the end result of consultations with hundreds of startups, including\u00a0 Blackfire.io ,\u00a0 Logmatic.io ,\u00a0 Dataiku.com , and from the team that built Platform.sh. The online tool covers key topics that matter on scaling a development team, including roadmap management, methodology, team organization, deployment process, quality insurance, disaster recovery, and support strategies. \n \n \n \u201cAt Logmatic.io, we work hard to improve our product based on customer surveys and behavior analysis. Readyfor.vc survey is a key component of that approach. It works as a check list of all the numerous things on which a technical founder needs to have an eye upon, as well as it provides a benchmark of comparison of what other startups do. Any startup doing software development should take the survey!\u201d \u00a0says\u00a0 Amirhossein Malekzadeh, Co-founder and CEO of\u00a0 Logmatic.io . \n \n Our goal is to make this test as useful as possible for startup founders. \n \n\t We want the test to be helpful to founders who are not happy with their development velocity or concerned with the quality of what they deliver and don\u2019t really know what exactly they need to change and where to start. \n\t We want the test to help startups that need to convince VCs that they will be able to scale their development team from 2 developers to 10 and maintain quality and celerity. \n\t We want the test to help smart teams to display their technological maturity of moving fast without sacrificing quality to shine out and become attractive to VCs. \n \n In short, we believe that the ability for a startup to build software has become an essential component of their future success, and that this is still something that is generally under-estimated, sometimes discounted, even by smart investors. We want to help change this. \n Please\u00a0 take the test \u00a0and give us feedback. Help us make this tool even greater! \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Downloads", "title": "An Alternative to Kubernetes, the Platform.sh PaaS ", "url": "https://platform.sh/downloads/kubernetes-alternative/", "documentId": "353ed274c1cf0e96b2242870474f4b1d68913059", "text": "", "rank": 4},
{"site": "website", "section": "Blog", "title": "Tighten up your TLS ", "url": "https://platform.sh/blog/tighten-up-your-tls/", "documentId": "2a843aecc43ca83f3e9bd1bf9de7b78dee6c29d6", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Tighten up your TLS \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         28 Dec 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Transport Layer Security (TLS) is the encryption protocol used by all secure websites today.  It's the \"S\" in \"HTTPS\", which you'll see on virtually all Platform.sh-hosted projects (thank you,  Let's Encrypt !), and has replaced SSL for that task.  For most sites simply enabling it by default is sufficient to keep a site secure, and that happens automatically in Platform.sh's case.  However, in some cases it's helpful to tweak even further. \n That's why we're happy to announce that as of today we're rolling out several new TLS-related features for all sites. \n TLS version restriction \n Like any protocol, TLS is periodically updated with new versions that address security weaknesses in older versions.  Almost all browsers today TLS 1.2, which is the latest, as well as all earlier versions including SSL.  That means when a browser connects to your site it will use the most up to date version that both the server and browser both support.  In most cases that's perfectly fine. \n If you want to really lock down your site, however, at the cost of banning a few really old web browsers, you can now set a minimum TLS version that a browser must use.  That's a requirement of some security compliance programs, too.  If the browser tries to use an older, insecure version of TLS it will get blocked.  Just add the following snippet to a particular route in your  routes.yaml  file. \n tls:\n    min_version: TLSv1.2\n \n And now that domain will reject any HTTPS connection that isn't using at least TLS 1.2. \n HSTS support \n HTTP Strict Transport Security (HSTS) lets you tell browsers that they should use HTTPS for all requests to a site, even if a stray link happens to use HTTP.  You can now enable it by simply adding the following block to a route in  routes.yaml : \n tls:\n    strict_transport_security:\n        enabled:true\n \n Now, that site will send an HSTS header with all requests, telling browsers to enforce HTTPS usage. \n Client-authenticated TLS \n Often when a site is being used as an API backend for an IoT device or mobile client application it's necessary to lock the site down to access just from selected users using TLS.  This process is called \"Client-authenticated TLS\", and requires loading custom root TLS certificates on the server that determine whether or not a particular client request is authorized. \n Starting today, it's also possible to provide those custom certificates as part of your route.  Once again, it's just a few lines in a route definition: \n tls:\n    client_authentication: \"require\"\n    client_certificate_authorities:\n        - !include\n            type: string\n            path: file1.key\n        - !include\n            type: string\n            path: file2.key\n \n More information on all three options is available  in our documentation . \n Enjoy your more-secure sites! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Backup and Forget ", "url": "https://platform.sh/blog/backup-and-forget/", "documentId": "29141d883353c16a087d69b55e72a7707cfb8a94", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Backup and Forget \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         03 Jan 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh allows users to create a byte-for-byte snapshot of any running environment, production or otherwise, at any time with a single button click or command line directive. \n That's great for one off use, like preparing to deploy a new version or run some large batch process, but what about for routine disaster recovery backups?  Can we do those?\n Believe it or, not, it\u2019s possible to automate yourself!  And it\u2019s only a 3 step process. \n \n The basic idea is that the Platform.sh CLI can be triggered from any automation tool you\u2019d like\u2026 including cron from within the application container.  It just needs an authentication token available in the environment. \n Step 1: Get a token \n Create an  authentication token  for your user or a dedicated automation user.  That\u2019s easily done through the UI. \n Set that token as a variable on your project, like so: \n platform project:variable:set env:PLATFORMSH_CLI_TOKEN your_token_value\n Step 2: Install the CLI \n The Platform.sh CLI can be installed as part of a build hook within your project.  Simply add the following line to your build hook: \n curl -sS https://platform.sh/cli/installer | php\n Now the CLI will be available in cron hooks, the deploy hook, or when logging in via SSH.  It will use the token you provided a moment ago, and will automatically pick up the project and environment name from the existing environment variables. \n Step 3: Snapshot on cron \n You can now add a new cron entry to your  .platform.app.yaml  file, like so: \n crons:\n    snapshot:\n        spec: '0 5 * * *'\n        cmd: |\n            if [ \"$PLATFORM_BRANCH\" = master ]; then\n                platform snapshot:create --yes --no-wait\n            fi\n That will run the  cmd  once a day at 5 am UTC.  (Adjust for whenever low-traffic time is for your site.)  Then if and only if it\u2019s running on the master environment (production), the  platform snapshot:create  command will run and trigger a snapshot, just as if you\u2019d run the command yourself.  Poof, done. \n Of note, though, are the  --yes --no-wait  flags.  The first skips any user-interaction, since the command is running from cron.  The second is extra important, as it tells cron to not block on the snapshot being created.  If you forget that, cron will block on the snapshot which means so will any deploy you happen to try and trigger.  That can result in extra-long deploys and site downtime.  You don\u2019t want that, we don\u2019t want that, so make sure to include  --no-wait . \n That\u2019s it that\u2019s all, you\u2019re done!  Rejoice in daily automated backups of your production environment. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Spectre/Meltdown Security Update Notice ", "url": "https://platform.sh/blog/spectremeltdown-security-update-notice/", "documentId": "53e52e5c34a305c52b79afa36e23b766f28f18dd", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Spectre/Meltdown Security Update Notice \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         05 Jan 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         By now you have likely heard of two large hardware vulnerabilities called Meltdown and Spectre ( https://spectreattack.com/ ) which have sent many in the IT world scrambling to patch systems. \u00a0Because these vulnerabilities affect our backend providers\u2019 hardware, Platform.sh was also affected. \n We have confirmed that our backend providers have updated their systems. \n This maintenance window is to allow us to upgrade our virtualized systems on top of our backend providers. Because these updates involve Linux kernel updates, a reboot of all systems is required. \n Platform.sh has scheduled multiple maintenance windows today, January 05, 2018, starting at 09:00 UTC. Please see  https://status.platform.sh/  for specific details.\u00a0 Enterprise customers should see no downtime. Professional customers may see a brief outage.\u00a0 \n If you are a Platform.sh client you would have received yesterday prior notice with the schedule of maintenance windows affecting any of your sites hosted by us. \n Rest assured that we are diligently following up on this and that we are proactively taking measures to make sure no Platform.sh will be affected by these serious bugs. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh is ready to make an Impact in China ", "url": "https://platform.sh/blog/platformsh-is-ready-to-make-an-impact-in-china/", "documentId": "7c2917ef93c32ac616a37b5710885cad1e39909a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh is ready to make an Impact in China \n         \n\n        \n         \n            \n              \n          \n         \n         24 Jan 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Shortly after the success of the  prestigious French Tech Tour China 2017 , Platform.sh is excited to be invited to join the elite  Impact China 2018  program organized by  BpiFrance , the leading French investment bank, and  Business France , the French national agency for international business development. \n \n The goal of Impact China 2018 is to help and coach a handful of specially selected \u201cChina ready\u201d startups to expand their operations in the Middle Kingdom, giving them all the tools and connections necessary to be successful in that market. \n Commencing\u00a0with a bootcamp in Paris in January, the five startups will then participate in an intensive, customized, five-week program, split into three successive missions between March and September 2018. The program is customized for each startup based on their needs, supported by the Business France offices in Shenzhen, Guangzhou, Hong-Kong, Beijing, Shanghai, Chengdu and Wuhan. \n Through Impact China, Platform.sh aims to bring its unique continuous deployment cloud hosting service to the region in 2018, offering companies the ability to deploy web applications and services both inside and outside China using the same Platform.sh \u201cNoOps\u201d tooling, on dedicated, High Availability cloud hosting. \n Platform.sh is a container-based solution providing advanced developer workflow built into a layer of automation and High Availability. This adds significant business value and live service resilience on top of any OpenStack IaaS. \n Augustin Delaporte (General Manager China) \n \n The French Tech Tour 2017 gave us the opportunity to start discussions with major players in China\u2019s tech industry, and was a huge success for us. The opportunity to cement those relationships in 2018 is of critical importance to us as we prepare to add China to our list of deployment targets. Our aim with Impact is to secure the partner relationship that will make this a success. \u00a0 \n \n Frederic Plais (CEO) \n \n Coming to China has been our priority right from the beginning of Platform.sh. It is not always easy for companies outside China to manage their assets inside the Great Firewall, so we aim to make that simple, with the collaboration of a strong local partner. We\u2019re really excited about the prospects, and hope to be the solution-of-choice for those wishing to deploy anywhere in the world, but especially in the Middle Kingdom. \n \n \u00a0 \n Click here to read more about Impact China 2018 \u00a0(in French) \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "HHVM deploys off into the sunset ", "url": "https://platform.sh/blog/hhvm-deploys-off-into-the-sunset/", "documentId": "40bf878876e96294b72a55da4035c0e3fcfab263", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           HHVM deploys off into the sunset \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         30 Jan 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We always aim to offer our customers the best experience possible, with the tools they want to use.  Usually that means expanding the platforms and languages we support (which now stands at six languages and counting), but occasionally it means dropping tools that are not being used so that we can focus resources on those that are. \n For that reason, we will be dropping support for the HHVM runtime on 1 March 2018. \n HHVM began life at Facebook as a faster, more robust PHP runtime.  Although it never quite reached 100% PHP compatibility it got extremely close, and did see some success and buy-in outside of Facebook itself.  Its most notable achievement, however, was providing PHP itself with much-needed competition, which in turn spurred the work that resulted in the massive performance improvements of PHP 7. \n Similarly, Facebook\u2019s \u201cPHP extended\u201d language, Hack (which ran on HHVM), has seen only limited use outside of Facebook itself but served as a test bed and proving ground for many improvements and features that have since made their way into PHP itself.  Like HHVM itself, though, Hack never achieved critical mass in the marketplace outside of Facebook. \n Back in September,  Facebook announced  that they would be continuing development of Hack as its own language, and not aiming for PHP compatibility.  Essentially Hack/HHVM will be a \u201cfull fork\u201d of the PHP language and go its own way, and no longer try to be a drop-in replacement for PHP. \n Platform.sh has offered HHVM support as a PHP alternative for several years, although as in the broader market it didn\u2019t see much use and with the release of PHP 7 the performance advantage of HHVM basically disappeared, leading people to migrate back to vanilla PHP 7.  Looking at our own statistics, in fact, we recently found that HHVM was virtually unused on our system. \n \u201cGive the people what they want\u201d also means not giving them what they clearly don\u2019t want, and the PHP market clearly doesn\u2019t want HHVM at this point.  We will therefore be dropping support for it on 1 March.  If Hack/HHVM develops its own market in the future and there\u2019s demand for it we may look into re-adding it at that time, but we\u2019ll wait and see. \n Good night, sweet HHVM, and may a herd of ElePHPants sing thee to they REST! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh announces world\u2019s first LDN for web applications ", "url": "https://platform.sh/blog/2016/04/deploy-to-the-moon/", "documentId": "dca72f805483af4c2bb2ed3048a1b3358ae56abb", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh announces world\u2019s first LDN for web applications \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Stephen Weinberg \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         01 Apr 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Lunar Delivery Network deploys PHP applications on the moon \n Paris, France. Friday, April 1, 2016, for immediate release \n Just over 18 months ago, Fred Plais, CEO of Platform.sh, issued a challenge to the developers of the French cloud hosting startup. At the time, the team was beginning to refine the Platform-as-a-Service offering and new features were being added at a blistering pace. Fred knew the goal of Platform was simple; deploy code everywhere with ease.\u00a0When he said\u00a0 \u201cOkay, team, I believe this company should commit itself to achieving the goal, before this year is out, of deploying code to the moon,\u201d \u00a0the team launched into action. \n \n \n Later when asked \u201cWhy the Moon?\u201d, the CEO replied, \n \n \u201cWe choose to go to the Moon not because it is easy, but because it is hard; because that goal will serve to organize and measure the best of our energies and skills, because that challenge is one that we are willing to accept, one we are unwilling to postpone, and one we intend to win.\u201d \n \n And he correctly predicted that the challenge would be a hard one. It took the engineering team months of preparation to design a user experience that allowed for the hands-off systems admin approach that deploying 230,000 miles away would require. They worked hard to build Platform.sh to deploy databases and code, and to configure them all with no sysadmin work: None, zero. The end product was something that was fully automated and could deploy websites and applications almost instantly. On the moon. \n So today, we are proud to announce we have successfully planned, launched and deployed what we believe is the first PHP application to run on the lunar surface. It\u2019s even wireless! \n Click Here \u00a0to test Moonshot, the world\u2019s first LDN, running on Platform.sh from the sea of tranquility. \n http://bit.ly/moonshot-on-PSH \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh Provides PaaS Technology to Magento Commerce ", "url": "https://platform.sh/2016/04/magento-enterprise-cloud-edition-powered-by-platform-sh/", "documentId": "779baf7fd94a0b82bdde37700e81eadb49ddc848", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh Provides PaaS Technology to Magento Commerce \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         12 Apr 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Global commerce provider Integrates Platform.sh Into its New Enterprise Cloud Offering \n Paris, France. - April 12, 2016, \u00a0for immediate release \n Today, Platform.sh, the Continuous Delivery Platform-as-a-Service (PaaS) Cloud Hosting company, announced that Magento Commerce has chosen the company\u2019s second generation PaaS for its newly launched Magento Enterprise Cloud Edition product. The flagship open-source Magento platform is already the worldwide leader in e-commerce, powering more than 250,000 sites globally and supporting over $50 billion in gross merchandise volume annually. \n \n Magento wanted a strategic PaaS partner for their cloud offering and a solution that would help remove the traditional burden of managing multiple environments through the development and release management cycles. These capabilities allow businesses to reduce overall development costs and accelerate site development velocity, whilst at the same time de-risking a much higher rate of change to production services. \n \n \u201cIt\u2019s an incredible validation to our technology to see such a powerful force in the global eCommerce industry make such a step-change in their product portfolio to offer their customers greater business advantage,\u201d\u00a0 said Fred Plais, CEO at Platform.sh. \u00a0\u201cThis is exactly what we designed Platform.sh to do, something well beyond a public Platform-as-a-Service, and we\u2019re excited that the impact will be so far-reaching\u201d \n \n Among the notable Platform.sh features which attracted Magento is the on-the-fly cloning technology which eliminates system administration chores and enables byte-for-byte copies of entire live sites, keeping the code, files, services and data in lockstep. Going beyond DevOps this \u201cNoOps\u201d approach maintains perfect consistency between branched environments, which in itself is valuable for live site support, but even more so for development teams, who now have on-demand access to perfectly consistent copies of production environments. This means every new feature can be developed and tested in parallel and in isolation in its own exact copy of the live system, removing end-of-sprint bottlenecks and giving CTOs and CMOs confidence that it will behave exactly as expected when it goes to production. \n \n \u201cWith Platform.sh running Magento Cloud, enabling continuous deployment, CTOs and CMOs can really make a difference, especially during high traffic periods, promotions and sales when competitive edge is critical in the fight for the same seasonal buck.\u201d\u00a0 said Kieron Sambrook-Smith, Chief Commercial Officer at Platform.sh. \u00a0\u201cWhoever would have thought a PaaS provider could do that!\u201d \n \n Platform.sh accelerates many common development and deployment processes, resulting in: \n \n\t Up to 90% reduction in support ticket volumes and SysAdmin / DevOps, \n\t better developer productivity (over 20%), \n\t dramatically improved approvals and User Acceptance Testing (UAT) - because each feature branch has its own URL to be circulated (40% faster), \n\t new levels of Continuous Integration (CI) through end-to-end process automation, as many common testing and tracking tools are now able to initiate activity within any Platform.sh project, requesting instant copies of environments for various purposes through the API. \n \n \n \u201cWe evaluated many PaaS providers for Magento Enterprise Cloud Edition, but Platform.sh was the obvious choice for us given their focus on the PHP community, background in eCommerce and the innovative continuous cloud integration tools provided by their PaaS,\u201d\u00a0 said Peter Sheldon, Head of Strategy at Magento Commerce. \u00a0\u201cThe speed and ease with which you are able to test features or even the entire application against new versions of common services is game changing, and the more components there are, or the bigger and more complex the project becomes, the value Platform.sh brings becomes exponentially greater.\u201d \n \n The Platform.sh PaaS has been designed with continuous delivery and 99.99% high availability in mind. Scaling compute and storage resource up or down is both quick and seamless, whilst making critical changes to stack and core application components goes unnoticed by the shopping customer. In fact, over the 4 day Black Friday weekend last November, we were able to announce that not a single Platform.sh customer experienced any application downtime whatsoever, despite all the usual problems (and 70% of those are online merchants). Which tends to show the values that Platform.sh delivers: superior control to stem revenue loss, and the ability to make real-time revenue optimisation changes during peak traffic periods. This fine-grained control affords online retailers enormous competitive advantage exactly when they need it. \n About Platform.sh \n Platform.sh is a ground-breaking hosting and development tool for web applications. It extends a branch-merge workflow to the whole infrastructure so that every new feature can be tested as if it were in production. Live sites scale effortlessly to serve the most demanding traffic. 24/7 follow-the-sun support combined with a unique, triple-redundant architecture based on micro-containers and an innovative cloud control technology allow the service to propose 99.99% SLAs on even the most complex use-cases. The company offers its services both directly to end-customers on its public https://platform.sh and through third parties. Based on Open Source technologies, Platform.sh is ideal for agile software development, continuous integration (CI) and continuous delivery (CD). \n A VC backed startup based in Paris, France, the company has technical, support, and sales staff throughout Europe, the United States and Asia, and provides cloud services to thousands of companies in various areas including fashion, publishing, retail, travel, engineering and the public sector. \n Website:\u00a0 https://platform.sh \u00a0Follow us on\u00a0 @platformsh \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "The one and only Director of Runtimes and Integrations ", "url": "https://platform.sh/2016/05/larry-garfield-joins-platformsh/", "documentId": "838dbfc835bf95a24d14b25ddb6542f3d6f2c9f2", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The one and only Director of Runtimes and Integrations \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Lyly Lepinay \n                  \n                   Head of Digital Marketing \n                  \n                  \n                 \n            \n          \n         \n         02 May 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         One of the deeply rewarding aspects of working within thriving open source communities is collaborating with exceptional people: individuals who excel in technology; individuals who rise above the fold with their energy, selflessness, and ability to contribute; individuals who strive to be exemplary human beings and live by the highest ideals and standards. Sometimes, you even get the chance to bring one of these individuals into the company where you work, and those are truly good days. \n \n Today, we\u2019re pleased to welcome Larry Garfield, our new Director of Runtimes, Integrations, and Services. Larry joins us after his\u00a0 lengthy tenure at Palantir.net, \u00a0as well as leading the WSCCI Initiative for\u00a0 Drupal 8 . His job here is to\u00a0 \u201cmake hosting Open Source projects with Platform.sh stupid easy\u201d , a task which will draw on his extensive experience with multiple open source projects. \n Why is Larry a perfect fit for Platform.sh? \n Larry has always been a big thinker, and is deeply committed to the long term success of the projects he works on. As a member of the PHP community, he has regularly made efforts to encourage the adoption of winning and beneficial technologies. As Drupalist, he was instrumental in the shaping of Drupal 7 and Drupal 8. As a member of the Drupal Association, he led the initial efforts to make sure that contributing to Drupal was done with a legally sound framework, and that Drupal was doing the right thing with its licensing and intellectual property. \n Larry, like Platform.sh, has deep roots in the Drupal world, and just as we have expanded beyond that (admittedly awesome) origin, we\u2019re now turning to Larry to help us become the ideal continuous delivery application hosting platform for an even wider and more encompassing set of open source technologies. \n Connect with Larry \n If you\u2019ve got any questions for Larry,\u00a0 you can follow him on Twitter . \n Otherwise, make sure to pop by our booth at\u00a0 DrupalCon New Orleans \u00a0to say hi. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Blog ", "url": "https://platform.sh/blog/page/7/", "documentId": "3113d184a57128668ceddb8af58bc8099a87982c", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             15 Apr 2020 \n           \n          \n\n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         Recent posts \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Platform.sh is down wit' OOP \n\n      \n       \n         26 Jan 2017\u00a0 \n           \n              Author:\n              Andrew Melck\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Redis, now for long-term keys and values \n\n      \n       \n         25 Jan 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       New year, new Solr, new features \n\n      \n       \n         17 Jan 2017\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Your instances safe from MongoDB Apocalypse on the Platform.sh PaaS \n\n      \n       \n         10 Jan 2017\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       2016, The Year We Won PHP \n\n      \n       \n         09 Jan 2017\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Announcing HTTP/2 support! \n\n      \n       \n         08 Jan 2017\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Next Wave PHP now supported \n\n      \n       \n         29 Dec 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       What's your timezone? \n\n      \n       \n         27 Dec 2016\u00a0 \n           \n              Author:\n              Augustin Delaporte\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Production is an artifact of development \n\n      \n       \n         23 Dec 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       This week in new features - Build-time variables \n\n      \n       \n         20 Dec 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Screencast - Configuring your Platform.sh Project \n\n      \n       \n         19 Dec 2016\u00a0 \n           \n              Author:\n              John Grubb\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       PHP multiple partnership puts Platform.sh at the forefront of PHP hosting in 2016 \n\n      \n       \n         15 Dec 2016\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       How repeatable deployments work \n\n      \n       \n         13 Dec 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Application updates for PHP containers \n\n      \n       \n         09 Dec 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Screencast - Basic Platform.sh Workflow \n\n      \n       \n         05 Dec 2016\u00a0 \n           \n              Author:\n              John Grubb\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       A Cloud for Symfony \n\n      \n       \n         02 Dec 2016\u00a0 \n           \n              Author:\n              Robert Douglass\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Laravel on Platform.sh - Redis caching and the Platform CLI \n\n      \n       \n         02 Dec 2016\u00a0 \n           \n              Author:\n              John Grubb\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Laravel on Platform.sh, part 2 \n\n      \n       \n         24 Nov 2016\u00a0 \n           \n              Author:\n              John Grubb\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Ex-Facebook HHVM engineer, Sara Golemon, leaves Silicon Valley for Paris to join Platform.sh \n\n      \n       \n         23 Nov 2016\u00a0 \n           \n              Author:\n              Ori Pekelman\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       PostgreSQL 9.6 and PostgreSQL Extensions! \n\n      \n       \n         21 Nov 2016\u00a0 \n           \n              Author:\n              Simon Ruggier\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Speeding up your npm builds with Yarn \n\n      \n       \n         15 Nov 2016\u00a0 \n           \n              Author:\n              John Grubb\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Fully customizable build flavors \n\n      \n       \n         11 Nov 2016\u00a0 \n           \n              Author:\n              Larry Garfield\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Laravel on Platform.sh, part 1 \n\n      \n       \n         28 Oct 2016\u00a0 \n           \n              Author:\n              John Grubb\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       TYPO3 CMS 8 starting today with Platform.sh in the cloud \n\n      \n       \n         27 Oct 2016\u00a0 \n           \n              Author:\n              Robert Douglass\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       The next-generation Continuous Deployment web hosting cloud is coming to Australia \n\n      \n       \n         26 Oct 2016\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Another UI release this month... \n\n      \n       \n         21 Oct 2016\u00a0 \n           \n              Author:\n              Manauwar Alam\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Platform from Scratch - Basic PHP setup \n\n      \n       \n         20 Oct 2016\u00a0 \n           \n              Author:\n              John Grubb\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Cut your digital budget by 30% by doing less work \n\n      \n       \n         17 Oct 2016\u00a0 \n           \n              Author:\n              Christopher Skene\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       TYPO3 and Platform.sh announce cloud readiness and tech preview of strategic integration \n\n      \n       \n         13 Oct 2016\u00a0 \n           \n              Author:\n              Robert Douglass\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n       Lancement de Readyfor.vc : Un outil d\u2019auto-\u00e9valuation pour les start-ups \n\n      \n       \n         06 Oct 2016\u00a0 \n           \n              Author:\n              Fred Plais\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n \n    \n     \n         \u00ab\u00ab \n     \n    \n     \n     \u00ab \n     \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     1 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     2 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     3 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     6 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     7 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     8 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     \u00a0\u2026\u00a0 \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n    \n    \n    \n    \n    \n        \n        \n    \n    \n     11 \n    \n    \n     \n     \u00bb \n     \n    \n     \n         \u00bb\u00bb \n     \n    \n \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Multiple MySQLs Make Platform.sh a Marvelous Multisite Machine ", "url": "https://platform.sh/2017/02/multi-mysql/", "documentId": "b44c6e864d91d9a601d020a140619fdffaa56e23", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Multiple MySQLs Make Platform.sh a Marvelous Multisite Machine \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         10 Feb 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         (Because alliterations are always appropriate.)\n \n As we hinted at previously when rolling out\u00a0 Apache Solr 6.3 , we\u2019re rolling out new functionality for many of our containers to support multiple databases on a single service. We\u2019re happy to report that next up is the big one: MySQL now supports multiple databases, and restricted users.\n \n \n If all you need is a single database, as is often the case, nothing changes. If you want multiple databases or want to allow only read-only access in some cases then this is for you. When declaring a MySQL/MariaDB service in your\u00a0 \n   services.yaml \n   \u00a0file, you can now specify additional configuration. That includes multiple databases, like so:\n \n \n mysqldb:\n    type: mysql:10.0\n    disk: 2048\n    configuration:\n        schemas:\n            - main\n            - legacy\n \n \n That creates two separate databases,\u00a0 \n   main \n   \u00a0and\u00a0 \n   legacy \n   . Of course, to access them you still need an endpoint, which is a set of credentials. You can define those, too, and give them access to one or multiple databases and give them read-only, read-and-write, or admin (do everything) permissions. Then each endpoint can be referenced separately in your application\u2019s\u00a0 \n   .platform.app.yaml \n   \u00a0to give some applications different access to different databases. See our\u00a0 newly-updated documentation \u00a0for step by step instructions.\n \n What can I do with it?\n \n As suggested by the example above, one main use is to host a legacy database for content migration. Or perhaps one that\u2019s being staged from an external legacy system. In those cases it\u2019s common to want your application to have only read-access or read-write-no-schema access to it. You can now do that. Your application will have two different MySQL connections with the appropriate permissions and do whatever it\u2019s going to do.\n \n Another use case is multiple applications. Platform.sh fully supports multi-app projects, where a single project is composed of multiple microservices, possibly even written in different languages. Now each of those mini-applications can have its own database without the added overhead and cost of another service instance. Plus, because they can use different endpoints the applications can\u2019t read from each other\u2019s databases\u2026 unless you want them to.\n \n It\u2019s also useful for Drupal\u2019s multi-site functionality. Drupal has the ability to run multple instances off of a single code base, each with its own database. That\u2019s generally only useful in cases where the sites are virtually identical in code and configuration, just differ in content (and maybe theme). Now, each instance can have its own database without spinning up a dozen extra service instances, and they can all be updated and backed up together. (If the sites are distinct sites, though, it\u2019s still going to be far less work to just make them separate projects so that they can be developed and maintained separately.)\n \n Of course, that\u2019s just the use cases we envision. What other uses do you have? We\u2019d love to hear about what cool stuff you\u2019re doing with Platform.sh.\n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Oliver Sweeney website revamp with Magento Cloud\u2014powered by Platform.sh\u2014oozes sophistication and luxury ", "url": "https://platform.sh/blog/oliver-sweeney-website-revamp-with-magento-cloudpowered-by-platformshoozes-sophistication-and-luxury/", "documentId": "44cf94e68700aa374cfc4d0707aea4114211ae81", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Oliver Sweeney website revamp with Magento Cloud\u2014powered by Platform.sh\u2014oozes sophistication and luxury \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Lyly Lepinay \n                  \n                   Head of Digital Marketing \n                  \n                  \n                 \n            \n          \n         \n         17 Mar 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         When your company sells luxury items, you want your website to offer that same exclusive, stunning digital experience for your customers too. That was the mission Oliver Sweeney, a men\u2019s luxury lifestyle brand for shoes and accessories, had set themselves. \n \n \"We needed a platform that we could easily scale up if required, and customize to our brand\" says  Alex Barbier, Digital Marketing Director, Oliver Sweeney \n \n Faced with an old platform that was unable to keep pace with frequent, new offers and promotions, Oliver Sweeney looked for a more powerful and stable platform and it is no surprise that they turned to Magento, the leading open-source eCommerce platform. With  Magento\u2019s Enterprise Cloud Edition, powered by Platform.sh , they found it to be flexible and highly-scalable. \n Having upgraded their platform, Oliver Sweeney could refresh their website numerous times every day should they need to for any new offers and promotions. This is particularly useful to capture their fashion conscious customers\u2019 interest in critical sales periods. \n \u00a0 \n Read their full story on the Magento website .  \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Adobe Summit 2019: take-aways \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Now you can save time in a database ", "url": "https://platform.sh/2017/03/influxdb/", "documentId": "b373a71f0198c3124dfa4c8bb5e7d9980195a62d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Now you can save time in a database \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         27 Mar 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         (With due apologies to Jim Croce.)\n \n Our efforts to expand the power and capability of users of Platform.sh continues! The latest addition to our services suite is\u00a0 Influx DB 1.2 . Influx DB is a time-series database well suited to recording large volumes of data over time. That makes it a good choice for high-volume logging, data collection, and metrics.\n \n In fact, we are planning to use it ourselves for that last point. Stay tuned\u2026\n \n \n How can you use it? Same as any other\u00a0 service , really. Add the following to your\u00a0 \n   services.yaml \n   \u00a0file:\n \n \n influx:\n    type: influxdb:1.2\n    disk: 1024\n \n \n And on next deploy you have an InfluxDB service running, named\u00a0 \n   influx \n   , with 1 GB of space reserved for it. (Add gigs as needed\u2026)\n \n Have a look at\u00a0 our documentation \u00a0for more, and at the\u00a0 InfluxDB documentation \u00a0for what cool things you can do with it. (And let us know what you do with it! We\u2019re always curious to see what neat things our customers come up with.)\n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "More flexible elastic now available ", "url": "https://platform.sh/2017/03/elasticsearch-plugins/", "documentId": "0acbe9053177d1a1fa7984dd2f9c6d67a9304ecc", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           More flexible elastic now available \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         28 Mar 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Elasticsearch is one of the most popular Free Software search engines available. It\u2019s fast, flexible, and easy to work with. \n It\u2019s also now fully up to date on Platform.sh. \n We\u2019ve offered Elasticsearch for a while, but only the older 1.7 version. Newer versions of Elasticsearch offer better functionality and speed, though, so we\u2019re happy to report that we now have versions 2.4 and 5.2 available. \n Switching is, as you\u2019d expect from Platform.sh, super easy. Just switch the\u00a0 1.7 \u00a0in your\u00a0 services.yaml \u00a0file to\u00a0 5.2 \u00a0and poof, your next deploy will be on Elasticsearch 5.2. Like so: \n \n mysearch:\n    type: elasticsearch:5.2\n    disk: 1024\n \n Note, however, that we do not support Elasticsearch\u2019s rolling upgrade process, so you will likely need to rebuild your index. You can also run both a new and old service in parallel and switch your application over to the new one whenever you\u2019re ready. \n But wait, there\u2019s more! \n By popular demand, we\u2019ve also added support for a number of Elasticsearch plugins to both the 2.4 and 5.2 services. The full list is available\u00a0 in the documentation , and they\u2019re just a few lines of YAML to enable. If there\u2019s another Free Software plugin you need that\u2019s not supported let our support team know. We may be able to add it to the list. \n Happy searching! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Global App Cache: our managed, tiered CDN feature for global page and asset cache coverage ", "url": "https://platform.sh/blog/global-app-cache-our-managed-tiered-cdn-feature-for-global-page-and-asset-cache-coverage/", "documentId": "6d1db6f6908384ef8ed8d108b1f232d2f74292ef", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Global App Cache: our managed, tiered CDN feature for global page and asset cache coverage \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Robert Douglass \n                  \n                   Chief DevRel Officer \n                  \n                  \n                 \n            \n          \n         \n         05 Apr 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Caching is a vital part of your web application. Properly implemented, it results in faster page loads, lower latency and fewer requests to your origin server. Most caching strategies rely on a single, central cache (like Varnish) for rapidly changing application pages or a distributed network of servers for irregularly changing static assets. This is good, but not as good as it could be. We wanted to change that. \n We know that the best place to cache things is as close to the customer as possible, and that means at the edge. Global App Cache, our managed, tiered CDN offer for Platform.sh  Enterprise Customers  caches your application and its assets across multiple CDN networks to ensure not only proximity to customers but best prices as well. \n Application page caches usually need complicated cookie and header rules to function properly. Historically, tools like Varnish have been used to provide this application cache. Flexible, modern CDNs offer extreme flexibility and customization of caching rules while at the same time moving content closer to the customer. This creates exciting new opportunities for performance enhancements and replaces tools like Varnish. \n Traditional caching of static assets (images, JS, CSS, etc.) is still relevant but does not need the same flexibility of caching and purging rules that an application cache requires. These assets continue to make up the majority of bandwidth that a site consumes, however, and traditional CDNs do a good job of managing these at a lower cost. Finding the right balance of price and performance is of the utmost importance, which is why Global App Cache includes a static asset cache alongside the dynamic application cache. \n Robert Douglass, VP of Customer Success explains: \n \n \u201cHaving a tiered global cache, fully operated by a team of web application experts, with a single unified SLA is unique on the market, and we\u2019re happy to once again offer our customers something innovative that can\u2019t be found anywhere else.\u201d \n \n So Global App Cache, our fully managed offer from Platform.sh, combines multiple CDNs to reap the benefits of modern edge proxies as well as traditional, low cost delivery of static assets. Our team ensures that your application is optimally configured to take advantage of these possibilities and fully manages the offer, extending our global enterprise 99.99% uptime SLA to the edge. \n If you want to know more about this feature and the benefits of our enterprise offering, just  contact us . \n \u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Imagine 2017: The New Magento Ecosystem ", "url": "https://platform.sh/blog/imagine-2017-the-new-magento-ecosystem/", "documentId": "a73a293badcb5ef65a941c845d88412de837b48c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Imagine 2017: The New Magento Ecosystem \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Doug Goldberg \n                  \n                   Senior Vice President of Operations and Global Alliances \n                  \n                  \n                 \n            \n          \n         \n         13 Apr 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         I just attended my sixth Magento Imagine.\u00a0 I\u2019ve missed only one and that was the very first that was held near the Los Angeles Airport in 2011.\u00a0 All I can say is, Magento is back!\u00a0 That statement might imply they went somewhere but it's more to articulate a feeling: what\u2019s old is new again.\u00a0 \n In the keynote on Tuesday morning, Mark Lavelle asked the audience to get on their feet if they had attended seven imagines, six and so on.\u00a0 He got down to, \u201cis this your first Imagine\u201d and it felt like half of the massive hall stood up.\u00a0 Don\u2019t get me wrong, the old stalwart Magento players were all in attendance but now there were additional players bringing an exuberance I have not seen since the early days.\u00a0 For those that know me, I don\u2019t say this lightly since I think it\u2019s my duty as an old-timer to play the role of Statler & Waldorf in the ecosystem.\u00a0 I sit in the corner and complain to whoever will listen. For those of you too young to remember the Muppets look them up on youtube. \n I showed up to Imagine 2017 with my typical curmudgeon attitude and left feeling like a millennial.\u00a0 Let\u2019s look back and figure out how we got here. \n Imagine 2016 was one of the proudest moments of my career as  we launched the Magento Enterprise Cloud Edition  but I didn\u2019t feel the same thing from the ecosystem.\u00a0 I\u2019m not speaking directly about ECE as this was 5 months after Magento had been sold again, finally launched 2.0, changed to GMV pricing, hired many new faces, and launched ECE, MCOM and Marketplace.\u00a0 This was more change than any one ecosystem could take and I felt a distinct fear that seemed greater than even when eBay bought Magento originally.\u00a0 \n I didn\u2019t hold these same fears at the time but I had the benefit of daily access to some extremely smart people at Magento.\u00a0 There is Doug McIver, the Cloud Product Manager, who had the vision for ECE four years before the Market was even ready for it.\u00a0 Also, Chuck Choukalos, the MDC Performance Product Manager, who could make anyone feel better with a 15-minute walk around the City.\u00a0 That doesn\u2019t even speak to all the changes that were taking place in engineering and the vision the executive team was putting in place.\u00a0 I knew we might hit some bumps in the road but that everything would be alright. \n Fast forward to Imagine 2017 and not a single person spoke about fear, they spoke about launching sites on 2.1.x with incredible success, they spoke about record breaking sales for everyone in the ecosystem, they spoke about seeing the beauty in ECE and using it to its full potential, and they spoke about the future.\u00a0 There's a\u00a0Great Big Beautiful\u00a0Tomorrow!!! \n Not as a nearly decade old company but as a Company who's hungry like they had just raised their first seed investment and needed to prove something to the world.\u00a0 The number 1 shopping cart for the IRCE 1000 hungry.\u00a0 Hungry to create a fuller experience, for order management, cloud, shipping, B2B and I have a feeling they have many more tricks up their sleeves.\u00a0 \n As the old saying goes, seeing is believing and while everyone spoke only happy thoughts this year what I saw at the Magento booth was even more amazing.\u00a0 Merchant after Merchant after Merchant getting demos of MDC, MCOM, and ECE.\u00a0 Solution Consultants begging for a break from the demos to eat lunch.\u00a0 There were more merchants interested in re-platforming to Magento than I have ever seen before.\u00a0 I can\u2019t tell you the exact number of demo\u2019s I witnessed but I know it was record breaking by a large amount.\u00a0 It was a renaissance of sorts and they even brought Roy Rubin back to witness it.\u00a0 \n With this much exuberance leading out of Imagine 2017 I can\u2019t wait to see what the next year brings. \n \u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Adobe Summit 2019: take-aways \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "TYPO3 and Platform.sh: A love letter from Germany ", "url": "https://platform.sh/blog/typo3-and-platformsh-a-love-letter-from-germany/", "documentId": "cb15e91807a62e667bc1a2b4e3f7feb03df5d10b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           TYPO3 and Platform.sh: A love letter from Germany \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Andrew Melck \n                  \n                   Regional Business Development Manager DACH \n                  \n                  \n                 \n            \n          \n         \n         18 Apr 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh is different. Why? Because it allows developers, editors and project managers to focus on their applications and leave the rest to us. This is a story that we\u2019ve seen around the world, as new teams and projects try out Platform.sh and discover the benefits that it brings. \n This trend is now also gathering pace in Germany, where  our strategic cooperation with Microsoft \u00a0is making the cloud an attractive option\u00a0for partners and customers across central Europe. \n In an interview on the popular  Entwickler.de  website (Entwickler means developer in German), Benni Mack, Core Team lead at the TYPO3 Association, explained how Platform.sh is transforming the way the he works with the popular TYPO3 CMS. As well as spearheading TYPO3 development, Benni is Managing Director of b:dreizehn\u00a0GmbH and a top Platform.sh partner. \n Interview with Benni Mack: TYPO3 and Platform.sh - a match made in the cloud \n Stefanie Sch\u00e4fers \n In October 2016 the partnership between TYPO3 and the Platform.sh cloud hosting service was officially announced. We talked with Benni Mack about his experience and the advantages of the cooperation for TYPO3 users. \n \"TYPO3 in the Cloud\" is the motto for the new TYPO3 version 8. And the partnership between TYPO3 and the Platform.sh cloud hosting service is intended to make it much easier for users to deploy TYPO3 in the cloud. \n In the meantime TYPO3 has been supported on Platform.sh for almost half a year: reason enough to take a look at the lessons and insights the partnership gathered the last few months. And that's not all: with TYPO3 v8 LTS, the new long-term support version of the popular content management system is also available. We spoke with Benni Mack (Managing Director at b: dreizehn GmbH) about TYPO3, Platform.sh and the new CMS version. \n TYPO3 and Platform.sh - the advantages \n Mr. Mack, since last year, TYPO3 has been working together with Platform.sh as a cloud hosting service. Why did you choose this provider? \n Benni Mack:  The big topic for the new TYPO3 v8 is \"TYPO3 in the Cloud\". We support various cloud hosting services with the new TYPO3 version, including Microsoft Azure and Amazon Web Services. \n However, Platform.sh is a continuous cloud hosting service that, in addition to hosting, also covers other areas such as deployment and automatic cloning to additional test environments. It\u2019s an approach that no other vendor is currently offering in this form. \n What other (further) advantages does Platform.sh offer to TYPO3 users? \n Benni Mack:  Platform.sh is deeply grounded in the code versioning of a website project. That means that any change in a Git branch (via git push) automatically results in a new version of the application on the server. In addition, all user data, including all files and the database, are automatically copied when a new Git Branch is created during development. The new server environment is then available with its own URL. That saves a lot of unnecessary work for simple testing with real data or acceptance testing by a project manager or customer. \n At the same time, this saves time for developers who no longer really need local development, although that is, of course, still possible and supported. DevOps is also reduced to a minimum - at Platform.sh they even speak of NoOps. \n My personal Platform.sh highlight is that unlike traditional hosting providers, file system for any PHP code is read-only, making the entire system extremely secure. \n What challenges did you face during implementation? \n Benni Mack:  TYPO3 supports the installation via Composer, thus the automatic loading of all necessary libraries. If a TYPO3 project has already been installed with Composer, Platform.sh interprets it and the biggest hurdle is overcome. \n Platform.sh uses a simple configuration file that defines which PHP modules or databases are required. In addition, further project-specific scripts for the build time are defined. All of this is also maintained and versioned in Git. This may be new at first, but thanks to good documentation it\u2019s quickly understood. \n This configuration file also makes it easy to raise the PHP version from 7.0 to 7.1 and test it on an automatically created test branch. Furthermore, additional specific parameters can be defined for each test system (\"Environment\" in Platform.sh speak), in order to give TYPO3 additional options, that differentiate the live and test systems. \n Tech Preview of Platform.sh TYPO Support - Findings and Lessons \n Platform.sh support for TYPO3 was initially available as a tech preview. What lessons did you draw from it? What lessons have been drawn into the project? \n Benni Mack:  The Tech Preview is a sample TYPO3 project that we developed for newcomers to TYPO3 - but also newcomers to Platform.sh - to quickly get aboard the bandwagon. Thanks to the close cooperation with Platform.sh, we have used a variety of approaches to make sure that TYPO3 files are always put into the right place by default. In the end it\u2019s about managing content - not just text, but also images, PDFs, etc. \n The template repository is freely available at https://github.com/platformsh-templates/typo3. \n The Tech Preview should be ready for testing until the release of the next LTS version of TYPO3. How has the collaboration and adoption of TYPO3 and Platform.sh developed since then? \n Benni Mack:  One of Platform.sh\u2019s strengths is that other services such as Solr search or Redis for efficient caching are already provided free of charge for every Platform.sh project. Based on this we\u2019ve worked to create an effective, automated configuration of these services to deliver the best performance for TYPO3 website projects. TYPO3 v8 is the successful realisation of these efforts. \n With the Tech Preview we\u2019ve provided a one-click installation of TYPO3 that puts our CMS in the cloud in five minutes. \n TYPO3 v8 LTS - what to expect \n TYPO3 8.x LTS will appear in April. What innovations can users look forward to? \n Benni Mack:  In addition to the promised cloud features, we have many improvements for editors - including a faster TYPO3 system and an easy-to-configure text editor based on CKEditor, as well as a flexible kit to create forms. For integrators, all templates are now uniformly designed and easily expandable. \n The focus was definitely on scalability in larger projects, e.g. On several servers where it is now possible to share TYPO3 on different databases or to outsource all user sessions to distributed systems such as Redis. Support for complex, multi-lingual websites has been greatly improved and standardized. \n Let's take a look at the future. What plans are currently available for the next TYPO3 versions and the further collaboration with Platform.sh? \n Benni Mack:  The TYPO3 community has been opening up increasingly to other open source projects like Symfony, Composer and the PHP community altogether. Technology giants like Microsoft are also on board. There will be a lot of change in the entire hosting sector, and Platform.sh is a pioneer with an innovative technical solution. Close cooperation at various PHP-related events is a win-win for both Platform.sh and TYPO3. \n TYPO3 has some USPs that no other content management system provides. In future, we would like to emphasize these strengths even further and to link our CMS more closely to other systems and projects - not just at a technical level. \n Our interview partner: Benni Mack \n Benni Mack is the managing director of the online agency b:dreizehn GmbH in Stuttgart, a team of TYPO3 specialists. He has also been actively involved in TYPO3 development since 2006 and has been coordinating the technical development of the TYPO3 project since 2015. \n \n Read the full interview (in German):  https://entwickler.de/online/php/typo3-platformsh-579794768.html \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh expands its US operations to meet growing demand in North America ", "url": "https://platform.sh/2017/2/expands-usa-operations-meet-growing-demand-north-america/", "documentId": "ec80f1dc61d3c10fc8abab55c8e9990213531d92", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh expands its US operations to meet growing demand in North America \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Fred Plais \n                  \n                   CEO \n                  \n                  \n                 \n            \n          \n         \n         14 Feb 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         New US headquarters and CEO relocation in San Francisco. US Board of advisors with senior execs from Twilio, Atlassian, Apple. Aggressive North America recruitment plan. \n San Francisco, USA. 14th February, 2017 \u00a0- Having seen exponential growth since its inception, Platform.sh, the second-generation container-based Platform-as-a-Service, announces today the official opening of its USA headquarters and relocation of the CEO in San Francisco; the constitution of a US Advisory board, and an aggressive recruitment plan to help the company scale even faster in the USA. With these actions, the company reinforces its strong commitment to serving the growing demand in North America as well as its ambition to position itself more strongly on the global stage of the new wave of platforms-as-a-service. \n \n Platform.sh is a highly innovative product that offers both\u00a0 \u201cdevops-in-a-box\u201d \u00a0and\u00a0 managed cloud hosting. \u00a0It extends the concept of Git to the entire infrastructure, which allows live production clusters to be cloned in a matter of seconds. Application developers benefit from simplified development workflows, which can now be managed in a secure and scalable way, leading to huge savings in hosting costs; up to 20 times faster increased developer productivity; 0 downtime - daily deployments, and faster user acceptance testing. \n The company, which already generates 40% of its revenues from North America, saw that the time was ripe to open a US headquarters. With the booming growth of\u00a0 Magento Cloud \u00a0- which leverages the Platform.sh technology - plus a rapidly growing number of major US firms, such as LivePerson and\u00a0 Perfectly Posh , Platform.sh has already built up a dedicated team of 15 members across the USA and Canada, including a dedicated North America support team to cover the various timezones efficiently. To better serve this fast-growing clientele base, Platform.sh is putting in place an aggressive recruitment plan for 2017 as it further expands its US operations. Customers and prospects in North America can expect greater availability of its dedicated customer support and a product roadmap more targeted to serving the specific needs of US customers. \n As further testament of the geographic importance to the company\u2019s leadership, one of the Platform.sh co-founders, Fred Plais, CEO, has already relocated and is formally based at the new San Francisco headquarters. The vision and ambition of Platform.sh is backed by a dedicated advisory board in the USA whose members consist of veterans from the technology industry: Fran\u00e7ois Dufour, VP of Global Marketing at\u00a0 Twilio , Eric Wittman, investor and former general manager of developer tools at\u00a0 Atlassian , Ed Colby, most recently SVP at Emotient, previously a venture partner and an executive at Apple, and Fabien Potencier, founder of the\u00a0 Symfony framework \u00a0and CEO of SensioLabs. \n About Platform.sh \n Platform.sh is a continuous deployment cloud hosting solution that can scale applications from the smallest project to ones handling millions of visitors. It is ideal for agile software teams because of its unique feature: it can replicate a live production cluster in seconds and create byte-level clones of throwaway dev and staging environments, which makes testing and validation up to 7 times faster. That\u2019s weeks to days; days to hours. \n A VC-backed cloud software company supported by the European Commission\u00a0 (Horizon 2020 program) , Platform.sh SAS is headquartered in Paris, France, with employees across five continents. It has been chosen by major CMS and eCommerce players such as Magento, Symfony, Typo3 and EZ Systems to run their cloud offerings, and serves thousands of clients worldwide notably Vivienne Westwood, IKEA, The Canadian Football League, The British Council, Flixbus, Slate.fr, and El Universo. Platform.sh has also been selected by both Microsoft Germany (Azure) and Orange Business Services to become their preferred open source sovereign PaaS for their respective markets. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Sponsoring pre-dotScale and election drinks ! ", "url": "https://platform.sh/blog/sponsoring-predotscale-and-election-drinks/", "documentId": "c631c3265fc4c3c6d0ff123c0c5062448303d2f2", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Sponsoring pre-dotScale and election drinks ! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         21 Apr 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         As a Gold sponsor for the\u00a0 dotSecurity  and  dotScale \u00a0conferences this year, we wanted to offer the crowd a nice Parisian experience when arriving or before departing. \n Sponsoring drinks on the election night did not seem to be a really great idea. Instead, we decided to transform this into a pre-election / pre-conference drinks on Saturday evening! \n So, what's the plan? \n Join us for FREE DRINKS at the  Caf\u00e9  Delaville \u00a0(34 Boulevard Bonne Nouvelle, 75010 Paris) on  Saturday at 7:30 pm .\u00a0 \n There wouldn't be a better way to mingle with an international crowd coming for dotScale or staying after dotSecurity! We might even have a little election game ready for you to have fun... who knows? \n Platform.sh not only organized this meetup but chosed one of the best places in Paris to have a drink. \n The Delaville retains the soul and atmosphere of the time. A place\u00a0that has become timeless, where the history of the house conserves as much contemporary, artistic and festive spirit of a\u00a0new generation of Parisians...The Delaville is a place of celebrations, and we thought this would be\u00a0the greatest place to gather everyone. \n \u00a0 \n \u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Screencast - Composer and Continuous Integration ", "url": "https://platform.sh/blog/screencast-composer-and-continuous-integration/", "documentId": "ce0efccabcc1e9e86f2cb0ff40675abf7eeb4a0b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Screencast - Composer and Continuous Integration \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   John Grubb \n                  \n                   Director of Customer Care \n                  \n                  \n                 \n            \n          \n         \n         09 May 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Hello there! \u00a0We were recently at DrupalCon in Baltimore, and after watching some of our competitors demos I came home with a fresh conviction to show that many of the features that they wow audiences with aren't actually their features at all. \n This screencast is all about continuous integration, with a specific focus on how we make it simple to use Composer in a PHP application. \u00a0We go through a couple of different scenarios where deciding to use tools like Composer and Gulp to make it easier to manage your application's code actually introduces complexity further down the line. \u00a0This complexity is the result of the newly introduced need for some kind of\u00a0 build process  before you deploy your code. \n Our competitors have tried to address this need by either bolting this functionality on to their existing product after the fact (ahem, Acquia), or by just using a completely different service like CircleCI (cough cough, Pantheon). \u00a0 \n Platform.sh was designed with these tools in mind from the beginning, so the ability to get started with these tools and integrate\u00a0your project with them deeply is the default for everyone. \n Enjoy! \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "DevOps gives you wings ", "url": "https://platform.sh/blog/devops-gives-you-wings/", "documentId": "820bd8e42f6931161649a401b0791b749277808b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           DevOps gives you wings \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         09 May 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         DevOps should be seen as a \u2018capability\u2019 within your organization, but for some it can be seen as an overhead. If IT is a main part of your company\u2019s value creation process, or the primary means of customer acquisition, then DevOps should be seen as a capability.  \n These days IT is present in nearly everything we deliver as a business, so all the processes that exist between the developer and the live system - development to operations, or  DevOps -  have great significance to the customer experience. So it stands to reason that better DevOps will impact competitive success.  \n That is generally why our customers are looking for automation. If you don\u2019t believe them you should take a look at what  Puppet Labs  are saying in their   \u20182016 State of DevOps Report\u2019 .  In their 5th annual study since 2011, they interviewed 4,600 professionals around the world to understand what level of DevOps they were all doing and how it was affecting their organizations' performance. DevOps is\u00a0defined as a set of principles and process management practices that aim to make software building, testing & release management fast and reliable, and the report overwhelmingly concludes that when they are performed well they can give your company a competitive edge. \n A big surprise for me was how much the high performing organizations (with well tuned DevOps practices) were outperforming their non-high performing peers, in terms of agility and reliability. \n \n This is the difference of course in delivering new features into production several times a day, versus weekly, monthly or even quarterly, and making sure you don\u2019t go straight into recovery mode when you do. In addition, the high-performers spend 50% less time remediating security issues, and 22% less time on unplanned work and rework (read this  DevOps White Paper  for more on the \u20183 types of work\u2019 that impact business value).  \n DevOps in control. 100% consistency achieved.  \n Here at Platform.sh, we looked at how we might introduce step change improvement to the DevOps process by further automating a cluster of key processes that maintain consistency between environments.  \n And we are seeing tremendous results with many hundreds of our customers citing huge productivity and performance improvements. With better DevOps, they have seen significant positive effects on their IT capability, which in turn has enabled them to improve the way they think about and deliver their offerings. And through faster delivery of value to their customers at a much lower cost, they are now gaining a competitive advantage on a daily basis. \n \n \u00a0 \n You may be asking yourself how we achieve this?  \n Firstly, our snapshot technology creates identical copies of running sites in seconds, keeping the code, files, services and data in lockstep for perfect consistency.  This means that development teams can create & test every change or new feature in its own exact copy of the staging environment, as well as manage the test data.  Consequently everybody now knows with certainty that it will behave exactly as expected in production.  \n Our approach elevates confidence and certainty in the workflow to the point where the number of changes going into the process begins to increase exponentially - regardless of priority or complexity - and appear in production a very short time later, working perfectly.  \n So in summary, better DevOps can make your organization a high flyer, but it\u2019s actually Platform.sh that gives you wings!  \n For a longer more detailed read, see my White Paper,  \u2018Who needs DevOps? Some of us actually\u2026 \u2019. \n \u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Slate.fr revived its DevOps approach with Platform.sh  ", "url": "https://platform.sh/blog/slatefr-revived-its-devops-approach-with-platformsh/", "documentId": "648214d05887db94c0350c5140b78793cd75373f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Slate.fr revived its DevOps approach with Platform.sh  \n         \n\n        \n         \n            \n         \n         11 May 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Ever since the internet and mobile changed the media landscape - making it easier to disseminate news - it is imperative that media companies\u2019 web estates are highly available and have fast deployment capabilities to respond to high traffic peaks. Important news and events such as the presidential and general elections, Brexit and the EU, and viral content like cat videos drive tons of web traffic. \n Facing today\u2019s information age, Slate.fr\u2019s mission is to offer exclusive, real-time information to its customers on its website. \n \n \"We wanted to discover new tools and benefit from more test environments, but also to have additional server resources immediately in real-time in case of breaking news,\" said Fran\u00e7ois Pottier, technical director at Slate.fr. \n \n As Slate.fr\u2019s old service provider was unable to keep pace with technical improvements, the company chose Platform.sh to manage its website. Slate.fr found the solution offered by Platform.sh and managed by Orange very attractive in terms of technology, notably regarding DevOps. \n \n \"Overall velocity from development of features into production deployment has increased 30-40%, dramatically impacting time to market for new features and bug fixes.\" \n \n The migration to Platform.sh lasted around three weeks and permitted Slate.fr to rapidly benefit from our DevOps\u2019 proactivity during critical times to cover news such as the US and French presidential elections. \n \u00a0 \n Here is the article translation: \n Slate.fr choses Platform.sh for its DevOps approach by Benoit Huet - 03 Mai 2017 \n The website Slate.fr decided to choose Platform.sh, a french PaaS on continuous deployment for its own DevOps approach. \n \u201cFast deployments, high availability, and pricing were the three elements differentiating our choice for the continuous deployment cloud hosting platform offered by Platform.sh and hosted by Orange,\u201d said Fran\u00e7ois Pottier, technical director at Slate.fr. \n Slate.fr, a publishing site with additional outlets in French-speaking Africa, is celebrating its 8th birthday and employs about 25 people. Built with Drupal, Slate.fr\u2019s website was originally managed by another host, but for economic and technical reasons the media company decided to change service providers. \"We disagreed on several points with our former host. And based on the services we received we thought we were paying too much. We wanted to discover new tools and to benefit from more test environments, but also to obtain additional server resources in real time in case of overheating activity\", states Fran\u00e7ois Pottier. In light of these observations, Slate.fr set out looking for a vendor capable of meeting its needs. Once Slate.fr came across Platform.sh the team was quickly seduced by the vendor's Devops approach. Moreover, the geographical proximity with Platform.sh, which is headquartered in Paris, has reinforced the choice of Slate.fr. \n On-the-fly creation of environments \n \"The creation of several development environments on-the-fly along with the fact that Platform.sh\u2019s team is very proactive in terms of support perfectly confirmed our choice,\" says Fran\u00e7ois Pottier. For Slate.fr the time savings is real. \u00a0Overall velocity from development of features into production deployment has increased 30-40%, dramatically impacting time to market for new features and bug fixes. Several projects have been developed with this Devops approach on Platform.sh. \n Among other benefits of Devops provided by Platform.sh, Slate.fr appreciates its provider\u2019s proactivity. \"In case of peak traffic, for example to cover the presidential election, Platform.sh is able to immediately allocate more server resources to us,\" explains Fran\u00e7ois Pottier. \"Their Devops organization also allows us to always have the perfect support at all levels according to our needs.\" It should be noted that the migration to Platform.sh, which started around September 20, 2016 lasted about three weeks. \n Read the original article in French. \n\n        \n\n\n\n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Free SSL certificates for every project & every environment ", "url": "https://platform.sh/blog/free-ssl-certificates-for-every-project-every-environment/", "documentId": "3325a076620d7780b1c5b436aa9a45171ac63139", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Free SSL certificates for every project & every environment \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         20 Apr 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         At Platform.sh, we believe that all websites deserve to be secure, fast, and feature-rich, and that it should be easy to have all three. Secure has always meant that a site is encrypted using SSL, which is why we\u2019ve never charged for an SSL certificate. Fast means using  HTTP/2 , which we added support for earlier this year, but most browsers only support HTTP/2 over SSL. And feature-rich means allowing the full range of newer web functionality such as geolocation, access to media devices, or notifications, many of which browsers are now only permitting over SSL connections. \n You know what? The modern web only works properly with SSL so let\u2019s cut out the middleman. Let\u2019s Encrypt  everything . \n We\u2019re happy to announce automatic support for Let\u2019s Encrypt SSL certificates on every production site on Platform.sh Professional, at no charge. \n Starting today for all new projects, on every deploy we will automatically provision and install an SSL certificate for you using the free  Let\u2019s Encrypt  service. You don\u2019t have to do anything. It will just be there. \n For existing projects, we're bringing that functionality online in batches to avoid overwhelming the Let's Encrypt servers. We expect to finish getting through them all within the next week or two. If you're about to bring a site live and want to make sure you get Let's Encrypt functionality before that, just file a support ticket and we'll bump you to the front of the line. \n Wait, what does this mean for my site? \n If you currently just have HTTP routes defined in your  routes.yaml  file, then as of your next deploy HTTPS requests will be served as HTTPS requests rather than being redirected to HTTP. Both will \u201cjust work\u201d. \n If you want to serve your entire site over HTTPS all the time (and yes, you do), simply change all  http://  routes in your routing file to be  https:// . That will automatically redirect HTTP requests to HTTPS going forward. \n See the  Routes section  of the documentation for more details, but really, there\u2019s not many details beyond that. It just works. \n What about Platform.sh Enterprise? \n Most Platform.sh Enterprise sites are served through a Content Delivery Network already, in which case the SSL certificate is handled by the CDN. This change has no impact on Platform.sh Enterprise customers. \n Neat! So what should I do? \n You don\u2019t have to do anything. HTTPS just works now. As above, you can configure your site to use HTTPS exclusively by adding the letter \"s\" to your  routes.yaml  file in a few places. (We told you it was easy.) \n Of course, now that you know your site will use SSL, you also know it will be using HTTP/2. All SSL-protected sites on Platform.sh use HTTP/2. HTTP/2 is supported by  nearly 80% of web browsers  in the world. That makes it safe, and a good investment, to start optimizing your site for HTTP/2, layering in HTTP/2-specific capabilities like server push, and so forth. \n Secure, fast, feature-rich, and easy. Welcome to Platform.sh! \n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Announcing HTTP/2 support! ", "url": "https://platform.sh/2017/1/http2/", "documentId": "e2ed1d5539be582ec246249b569d269c95e90520", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Announcing HTTP/2 support! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         08 Jan 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         All the fastness just got faster. A couple of days ago we finished 2016 in beauty, announcing\u00a0 PHP 7.1 \u00a0which allows you to do some incredibly fast PHP apps with stuff like\u00a0 ReactPHP \u00a0for example. \n Let\u2019s start 2017 with some more fastness juice flowing. HTTP/2 is now supported on all public Platform.sh regions. \n What do you need to do to benefit from the incredible performance gains this will give your site? \n Nothing . It just works (as long as you have HTTPS enabled, which you should anyway). \n What is HTTP/2 ? \n \n HTTP/2 is a replacement for how HTTP is expressed \u201con the wire.\u201d It is not a ground-up rewrite of the protocol; HTTP methods, status codes and semantics are the same, and it should be possible to use the same APIs as HTTP/1.x (possibly with some small additions) to represent the protocol. \n \n \n The focus of the protocol is on performance; specifically, end-user perceived latency, network and server resource usage. \n \n (from\u00a0 https://http2.github.io ) \n Basically it makes any site load faster. Much faster. To see a cute demo of the speed difference, just visit\u00a0 http://www.httpvshttps.com/ . \n As I said, you don\u2019t need to do anything to benefit from it, it is already active for all clients. But you can play around with specific HTTP/2 features with your preferred framework (look for example at\u00a0 https://www.drupal.org/project/http2_server_push \u00a0for Drupal Assets Preloading). \n Enjoy! 2017 is going to be so fast. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Lancement de Readyfor.vc : Un outil d\u2019auto-\u00e9valuation pour les start-ups ", "url": "https://platform.sh/2016-10-06-ready-for-vc-outil-auto-evaluation-startups/", "documentId": "1e2025dd4ddaf6a5256953ee470f87bba4e918ff", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Lancement de Readyfor.vc : Un outil d\u2019auto-\u00e9valuation pour les start-ups \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Fred Plais \n                  \n                   CEO \n                  \n                  \n                 \n            \n          \n         \n         06 Oct 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Paris, France. 6 Octobre, 2016 \n \n\t Lancement d\u2019un outil gratuit permettant aux start-ups d\u2019\u00e9valuer leur maturit\u00e9 technologique et leur capacit\u00e9 \u00e0 lever des fonds \n\t Construit en collaboration entre Platform.sh et Open Ocean, VC europ\u00e9en de premier plan dans le secteur du logiciel \n \n \n Platform.sh, leader europ\u00e9en sur le march\u00e9 des Platform-as-a-Service offrant une solution d\u2019h\u00e9bergement cloud pour les applications web et sites eCommerce, lance un outil de due diligence technique, Readyfor.vc. Cet outil aide les startups technologiques \u00e0 \u00e9valuer simplement leur capacit\u00e9 \u00e0 affronter les due diligences techniques d\u2019investisseurs professionnels. \n Fred Plais, cofondateur et CEO de Platform.sh, \u00a0dont la soci\u00e9t\u00e9 h\u00e9berge plusieurs milliers de sites et d\u2019applications web, notamment des clients prestigieux comme Reiss, Vivienne Westwood ou la Ligue Canadienne de Football, souhaite que l\u2019outil aide les startups du monde du logiciel \u00e0 am\u00e9liorer la v\u00e9locit\u00e9 de leurs \u00e9quipes et la qualit\u00e9 de leurs livrables en apportant des renseignements utiles. Ainsi, les startups ont acc\u00e8s \u00e0 une \u201ccheck list\u201d des points de vigilance, et peuvent se comparer \u00e0 des startups du m\u00eame domaine que le leur et mesurer leur niveau de maturit\u00e9. \n \n \u201cLors de notre propre processus de lev\u00e9e de fonds, nous avons d\u00fb affronter des due diligences techniques hardues et aurions bien aim\u00e9 qu\u2019il existe un outil comme Readyfor.vc pour nous aider \u00e0 nous pr\u00e9parer \u00e0 cette \u00e9tape importante du processus d\u2019investissement. Nous en \u00e9tions sortis avec la certitude que beaucoup de startups gagneraient \u00e0 \u00eatre accompagn\u00e9es par un guide en ligne d\u2019entretien. C\u2019est pourquoi nous avons d\u00e9cid\u00e9 de faire profiter de notre exp\u00e9rience \u00e0 d\u2019autres startups et d\u2019autres entrepreneurs cette ann\u00e9e. Les r\u00e9sultats de Readyfor.vc permettent de se comparer \u00e0 d\u2019autres startups du m\u00eame domaine et de se positionner sur un graphe. En posant les bonnes questions, l\u2019outil aide les fondateurs techniques \u00e0 gagner du temps en allant \u00e0 l\u2019essentiel.\u201d \n \n Richard Muirhead, General Partner d\u2019OpenOcean, \u00a0bas\u00e9 \u00e0 Londres, annonce que son fonds va utiliser Readyfor.vc comme point de d\u00e9part des premi\u00e8res discussions avec les potentielles futures startups de leur portefeuille, pour \u00e9valuer leur m\u00e2turit\u00e9 technologique. \n \n \u201cNous faisons des due diligences techniques pour les startups depuis tr\u00e8s longtemps, soit par nous m\u00eame, soit en ayant recours \u00e0 des experts de notre r\u00e9seau. Readyfor.vc est un test simple et suffisamment complet pour standardiser le processus d\u2019\u00e9valuation technologique initial. Il permet de lancer la conversation avec les fondateurs sur les bonnes bases!\u201d \n \n L\u2019outil a \u00e9t\u00e9 imagin\u00e9 comme un test en ligne que le CTO et le CEO d\u2019une startup renseignent ensemble. Les questions portent sur le march\u00e9, le produit, l\u2019ambition, les choix technologiques et les progr\u00e8s \u00e0 date. \n Ready for VC est le r\u00e9sultat d\u2019une consultation avec des centaines de startup, notamment Blackfire.io, Logmatic.io ou Dataiku.com. L\u2019outil en ligne couvre notamment les questions de scalabilit\u00e9 de l\u2019\u00e9quipe de d\u00e9veloppement, le management de la roadmap produit, les choix m\u00e9thodologiques, l\u2019organisation de l\u2019\u00e9quipe, l\u2019assurance qualit\u00e9, les strat\u00e9gies de disaster recovery, le support ainsi que de nombreux autres sujets essentiels au succ\u00e8s d\u2019une startup technologique. \n \n \u201cChez Logmatic.io, nous travaillons tous les jours pour am\u00e9liorer notre produit sur la base d\u2019analyses de comportement et de retours de clients et utilisateurs. Readyfor.vc est un composant essentiel dans cette approche. Le test fonctionne comme une \u201ccheck list\u201d des diff\u00e9rents \u00e9l\u00e9ments qui doivent \u00eatre en permanence dans la t\u00eate d\u2019un fondateur technique. La comparaison avec d\u2019autres startups du m\u00eame domaine est aussi tr\u00e8s int\u00e9ressante. Toute startup qui d\u00e9veloppe un logiciel devrait passer le test!\u201d \u00a0dit\u00a0 Amirhossein Malekzadeh, Co-fondateur et CEO de Logmatic.io. \n \n FIN - \n NOTE \u00c0 L\u2019ATTENTION DES JOURNALISTES: \n Des premiers r\u00e9sultats suite \u00e0 Vivatech Paris en Juillet \n Readyfor.vc a \u00e9t\u00e9 test\u00e9 initialement \u00e0 Vivatech Paris en juillet 2016, o\u00f9 un \u00e9chantillon initial de startups plut\u00f4t m\u00fbres (dont la plupart avait d\u00e9ja b\u00e9n\u00e9fici\u00e9 de fonds de la part d\u2019investisseurs) a \u00e9t\u00e9 invit\u00e9 \u00e0 partager leurs r\u00e9ponses. Les r\u00e9sultats apportent quelques informations sur les facteurs cl\u00e9s de succ\u00e8s pour le d\u00e9veloppement d\u2019une startup en 2016. \n Parmi les \u00e9l\u00e9ments int\u00e9ressants issus de l\u2019\u00e9tude: \n \n\t Avoir un CTO fondateur et actionnaire est un facteur cl\u00e9 de succ\u00e8s \n\t Les m\u00e9thodes agile sont adopt\u00e9es dans toutes les startups \n\t Une roadmap produit de 6 mois ou moins est le nouveau standard \n\t Laisser libre choix aux d\u00e9veloppeurs des t\u00e2ches qu\u2019ils veulent produire est une tendance \u00e9mergente \n\t Travailler \u00e0 domicile est une tendance en fort d\u00e9veloppement \n\t L\u2019email, du moins dans les \u00e9quipes de d\u00e9veloppement, appartient au pass\u00e9 \n \n Un blogpost plus complet sur ces r\u00e9sultats est disponible. \n A propos de Platform.sh \u00a0Platform.sh est une \u201cPlatform-as-a-Service\u201d qui h\u00e9berge sur le cloud des applications web et leur offre des capacit\u00e9s in\u00e9gal\u00e9es de de\u0301ploiement continu. Gr\u00e2ce \u00e0 Platform.sh, les \u00e9quipes de d\u00e9veloppements peuvent d\u00e9ployer des nouvelles versions de leur application vers la production, sans risque d\u2019erreur, et de fa\u00e7on compl\u00e8tement automatis\u00e9e. La solution propose \u00e9galement une offre unique de triple redondance automatis\u00e9e, accompagn\u00e9e de support 24/7/365. \n Startup fran\u00e7aise, financ\u00e9e par des investisseurs priv\u00e9s professionnels (ISAI, Alven, Open Ocean et Hi Inov) et soutenue par le programme Horizon 2020 de l\u2019Union Europ\u00e9enne, elle poss\u00e8de trois filiales et des employ\u00e9s r\u00e9partis sur cinq continents. Sa solution a \u00e9t\u00e9 choisie par plusieurs \u00e9diteurs logiciels pour propulser leur propres solutions cloud (et \u00e0 premier titre Magento, leader de l\u2019e-commerce open-source). Elle est propos\u00e9e par Orange Business Services en tant qu\u2019une solution PaaS souverain, ainsi que par Azure Allemagne dans la m\u00eame capacit\u00e9 sur le territoire allemand. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Adobe Summit 2019: take-aways \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "TYPO3 and Platform.sh announce cloud readiness and tech preview of strategic integration ", "url": "https://platform.sh/2016/10/typo3-platformsh-cloud-integration/", "documentId": "37740f2651cc121c50f267d383fe1e939cadf1a2", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           TYPO3 and Platform.sh announce cloud readiness and tech preview of strategic integration \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Robert Douglass \n                  \n                   Chief DevRel Officer \n                  \n                  \n                 \n            \n          \n         \n         13 Oct 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Paris, France. Munich, Germany. 13th October, 2016 \u00a0- The TYPO3 Association and Platform.sh, the continuous delivery cloud hosting company, announce that TYPO3 is available for testing on Platform.sh from October 26 onwards giving all TYPO3 users full access to Platform.sh\u2019s revolutionary cloud-hosting capabilities. \n \n \n \u201cWe\u2019ve followed developments in Cloud hosting and PaaS solutions closely, and Platform.sh immediately impressed us with its simplicity, flexibility and dedication to the developer\u2019s needs.\u201d \u00a0says\u00a0 Mathias Schreiber, CEO of TYPO3 GmbH. \n \n Olivier Dobberkau, President of the TYPO3 Association \u00a0added: \n \n \u201cAside from its intrinsic technical advantages, Platform.sh also fits the bill in delivering the mission critical cloud hosting that TYPO3\u2019s Enterprise user base is looking for. By partnering with Microsoft for hosting in international Azure datacenters and Microsoft Cloud Germany, Platform.sh can offer sovereign, compliant and secure production hosting to TYPO3 users worldwide.\u201d \n \n Andrew Melck, Regional Manager DACH at Platform.sh \u00a0said: \n \n \u201cTYPO3 is the dominant Open Source CMS in Germany and much of central Europe, so we\u2019re very excited to be working together with the team to accelerate cloud adoption among TYPO3\u2019s massive user base.\u201d \n \n Platform.sh brings a range of benefits to TYPO3 users: \n \n\t Complete build and deployment management for Composer-based applications \n\t Full management of key services such as MariaDB, PostgreSQL, MongoDB, Redis, Solr, ElasticSearch \n\t Eliminates DevOps overhead by providing a complete copy of the application for every Git branch \n\t Flexible deployment targets around the world including the Azure sovereign German cloud \n\t Strong partners with Symfony and Blackfire.io \n\t Application can scale from minimally resourced development environments to deployments with hundreds of CPUs and GBs of RAM. \n \n Platform.sh has established itself as the modern, preferred solution for other Composer-based open source systems such as Drupal, Magento, EZ Platform, Sulu, and Symfony. The collaboration with TYPO3 is a further move towards standardization in best practices around modern orchestration and deployment. \n On its way to the release of the next full version of TYPO3, the core team has examined current best practices and identified key cloud functionalities. The tech preview offers an early view of the new features, ahead of the release of TYPO3 8 LTS in April 2017. To try out the tech preview for yourself simply go to\u00a0 https://typo3.org/platform \u00a0or visit\u00a0 https://platform.sh . \n About Platform.sh \u00a0Platform.sh is a continuous deployment cloud hosting solution that can scale applications from the smallest project to ones handling millions of visitors. It is ideal for agile software teams because of its unique feature: it can replicate a live production cluster in seconds and create byte-level clones of throwaway dev and staging environments, which makes testing and validation up to 7 times faster, that\u2019s weeks to days, and in some cases days to hours. We can provide 99.99% SLAs thanks to our 24/7 follow-the-sun support combined with a unique, triple-redundant architecture that\u2019s based on a high density grid of Linux micro-containers. Headquartered in Paris, France, with employees across five continents, the company serves thousands of clients worldwide, including Vivienne Westwood, The Canadian Football League, The British Council, Flixbus, and El Universo. \n About TYPO3 \u00a0The TYPO3 Association is promoting the development of free software projects that have arisen from the community regarding the original TYPO3 Content Management System. It is a not-for-profit organization that provides software developments from third parties that it has funded to the public free of charge. \n The TYPO3 Association is an association according to Swiss Law that was founded by the members of the TYPO3 Community, including Kasper Sk\u00e5rh\u00f8j, in November 2004. It has its headquarters in Baar ZG (Switzerland). The TYPO3 Association is non-partisan and denominationally neutral. \n More information on its members, objectives and funding opportunities can be found on its website:\u00a0 https://typo3.org/association . \n Additionally the TYPO3 Association has established an independent service company that provide its members with support services and attend to the technological development of the CMS system in the future. More about TYPO3 GmbH can be found on\u00a0 https://typo3.com/ . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform from Scratch - Basic PHP setup ", "url": "https://platform.sh/2016/10/platform-from-scratch-part-1/", "documentId": "d7f29e2c9fc8b5b0a0bd9df75080358d8303325b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform from Scratch - Basic PHP setup \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   John Grubb \n                  \n                   Director of Customer Care \n                  \n                  \n                 \n            \n          \n         \n         20 Oct 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         In case you missed it, here\u2019s the\u00a0 first post in the series - \u201cPlatform in a Nutshell\u201d .\n \n Hello, and welcome back to \u201cPlatform.sh from scratch\u201d. The goal here will be to augment the\u00a0 official documentation \u00a0with a short tutorial that shows how to set up a project for proper functioning on\u00a0 Platform.sh . We\u2019ll dive into the \u201cwhy\u201d as little as possible here. For now let\u2019s dive straight into the \u201chow\u201d.\n \n \n We\u2019re going to start with a very basic application, the\u00a0 example Silex app on the front page of the Silex website . This will be a standard Composer based project, so we\u2019ll need a\u00a0 \n   composer.json \n   \u00a0file to start with.\n \n The project structure will look like this \u2013\n \n \n \u251c\u2500\u2500 app\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 composer.json\n\u2514\u2500\u2500 composer.lock\n \n \n The\u00a0 \n   composer.json \n   \u00a0file can be created by running\u00a0 \n   composer require silex/silex \n   , or you can just copy this into\u00a0 \n   composer.json \n   \u00a0at the root of your project directory \u2013\n \n \n {\n    \"require\": {\n        \"silex/silex\": \"^2.0\"\n    }\n}\n \n \n Run a quick\u00a0 \n   composer install \n   \u00a0and the rest of the dependencies will be pulled down and placed into the standard\u00a0 \n   vendor \n   \u00a0directory. We\u2019re going to be using Git here, and in general you don\u2019t want to version 3rd party dependencies like those that Composer downloads. Let\u2019s create a\u00a0 \n   .gitignore \n   \u00a0file and add the vendor directory to it.\n \n \n   echo \"vendor\" >> .gitignore \n   \n \n The entirety of the application codebase looks like this \u2013\n \n \n <?php\n// in app/index.php\nrequire_once __DIR__.'/../vendor/autoload.php';\n $app = new Silex\\Application(); \n $app->get('/hello/{name}', function($name) use($app) {\nreturn \u2018Hello \u2018.$app->escape($name);\n}); \n $app->run();\n \n \n Very simply, all this app does add a route that responds to requests along the path of\u00a0 \n   hello/{whatever} \n   . As long as you\u2019ve used the same directory structure, you can\u00a0 \n   cd \n   into the\u00a0 \n   app \n   \u00a0directory and run\u00a0 \n   php -S 127.0.0.1:8080 \n   \u00a0to fire up the local php webserver and then head to\u00a0 localhost:8080/hello/user .\n \n If all is working as expected, let\u2019s head to Platform and get this thing ready for the development process.\n \n Navigate to the\u00a0 platform website \u00a0and register a new account. You have 1 month to (freely) evaluate whether or not Platform fits your needs, so let\u2019s get going. I\u2019m assuming that you can find your way through the registration and login workflow and find your self back on the\u00a0 \u201cyour account\u201d \u00a0page, so let\u2019s add your SSH public key into your account and that will be all for configuring your account for now. Under \u201caccount settings\u201d -> SSH keys you can add a public key.\n \n Sidebar - SSH public keys \n \n This is required for one main reason - it allows us (Platform) to securely authenticate you when you push code to a project. This is standard for most public code repos (GitHub, Bitbucket), and we use this method as well. A massive side benefit of this workflow is that it allows any Platform account holder to invite any other Platform account holder to their project. This means that agencies can invite developers to projects, users can invite other developers to help with their projects, and the overall friction of matters of authentication and authorization on projects is reduced to virtually zero. You won\u2019t likely notice this benefit until a little later on, but when you want to share a project (or even a specific branch of a project) with another user no new account/password/validation workflow is required, and work can begin immediately.\n \n Once that\u2019s done, let\u2019s go back to the main account page and \u201ccreate a new platform\u201d.\n \n \n \n To me this workflow is pretty self explanatory and the defaults are the correct settings for now, so select which region you\u2019d like your project to be hosted in and get through the checkout workflow. Like I said, nothing will be charged for a month, so have no fear. I have to go through this flow as well, and I work here\u2026\n \n After you get through that flow, you\u2019ll be dropped into the \u201cprojects\u201d admin of Platform.sh. This is where you\u2019ll likely be spending the vast majority of your time.\n \n \n \n Name your app (I\u2019m creatively naming mine \u201cExample Project\u201d), and then for this project you\u2019ll want to choose to \u201cimport your existing code\u201d. This option will present you with a URL for a git repo to which you\u2019ll be pushing your code. Now is the time to initialize a git repo in your codebase.\n \n \n   git init \n   \n \n Sidebar - infrastructure as code \n \n We\u2019ll get into the mechanics later, but this would be a good opportunity to explain the overall ethos of Platform.sh which is that you are going to be specifying your infrastructure - that is the underlying software systems on which your project will be running (MySQL, Redis, etc) - in code. You\u2019ll be able to manipulate the infrastructure required to run your project in the same way that you manipulate the behavior of your app through writing code, and you\u2019ll push these hardware requirements to us in the form of code.\n \n Run\u00a0 \n   git add . \n   , which will add all 4 files in your project to git, and then\u00a0 \n   git commit -m \"init commit\" \n   \u00a0to commit your code. After that you\u2019ll want to cruise back over to the Platform project admin screen and copy the lines under \u201cPush an existing repository on the command line\u201d and drop them into your terminal. This will add the Platform git server as a remote for your project, so now you have somewhere to push your code. We\u2019re almost there!\n \n But we\u2019re not totally there yet, there\u2019s one more step. You need to tell Platform what your project needs to run or you won\u2019t be able to push your code up to us.\n \n All Platform.sh hosted projects require 3 files -\u00a0 \n   .platform/routes.yaml \n   ,\u00a0 \n   .platform/services.yaml \n   \u00a0and\u00a0 \n   .platform.app.yaml \n   . The\u00a0 routes file \u00a0is just that - it\u2019s sort of like a\u00a0 front controller \u00a0for your entire project. What this means in practice is that you can have multiple applications running in your project (under different paths), but for now you really just need to route any request to your little example application.\n \n This is a nice standard starting point for any given PHP project, so place this in\u00a0 \n   .platform/routes.yaml \n   \u00a0\u2013\n \n \n #.platform/routes.yaml\n \u201chttp://www.{default}/\":\ntype: upstream\nupstream: \u201capp:http\u201d\n\u201chttp://{default}/\":\ntype: redirect\nto: \u201chttp://www.{default}/\u201d\n \n \n No, this is not the most beautiful file, but all you really need to know about this is that all URLs that enter this project will either have a base URL of\n \n \n   \n     www.whatever.foo \n     \u00a0and will be routed to your codebase, or they\u2019ll be \n   \n     whatever.foo \n     \u00a0and will be redirected to\u00a0 \n     www \n     . See step 1. \n \n Another file that you need to have in place is the\u00a0 \n   .platform.app.yaml \n   \u00a0file, which is a file that describes the high level requirements of this application. The most bare bones file is all that we need and it\u2019ll look like this \u2013\n \n \n # .platform.app.yaml\n The name param is linked to the \u201cupstream\u201d parameter in \n routes.yaml. If you called the app \u201cfoo\u201d, then the \n upstream parameter would look like  upstream: \"foo:http\" \n name: app \n The \u201ctype\u201d parameter takes the form \u201clanguage:version\u201d. \n This could be  python:3.5  for example \n type: php:5.6 \n Look for a composer.lock (or composer.json) and download \n the listed dependencies \n build:\nflavor: composer \n How much disk space will this app need?  This is primarily used for \n user uploaded assets, so for this application you don\u2019t really need \n anything here, 256 would be fine.  You can always grow \n this later, so this is a safe starting point. (in MB) \n disk: 2048 \n Now that a request has gotten this far, how do you want \n it handled?  We\u2019ll go into more detail about these params \n in a later post.  This section can be thought of as \n somewhat analogous to an Apache or Nginx config file. \n web:\nlocations:\n\u201c/\":\nroot: \u201capp\u201d\npassthru: \u201c/index.php\u201d\nindex:\n- index.php\nallow: true\n \n \n There is\u00a0 more information on the documentation website about this file , and it\u2019s all worth your time.\n \n The services file will define what other services (this is where MySQL comes in) your app depends on but since we don\u2019t need any yet, this can remain empty. It\u00a0 does \u00a0need to be there however, or you won\u2019t be allowed to push your project, so for now just create an empty file -\u00a0 \n   touch .platform/services.yaml \n   .\n \n Your project\u2019s file layout should now look like this \u2013\n \n \n \u251c\u2500\u2500 .git\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 .platform\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 routes.yaml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 services.yaml\n\u251c\u2500\u2500 .platform.app.yaml\n\u251c\u2500\u2500 app\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 composer.json\n\u2514\u2500\u2500 composer.lock\n \n \n So with those three files in place, add them and commit them to your git repo \u2013\n \n \n   git add . && git commit -m \"adding platform config\" \n   \n \n \n   git push platform master \n   \u00a0and you are off! If you are still looking at the dialog screen in the Platform project admin, you can click \u201ccontinue\u201d now and you will (or will shortly) see a log screen of all the relevant activity for this project - git commits and the project creation before that.\n \n \n \n After this and every successful git push to Platform.sh those files will be analyzed to make sure that the infrastructure that your project requires and the infrastructure that is available to that project are in line. If something has changed or if this is the first time you\u2019ve pushed code to this project, the environment will need to be set up with the services that are expected. This takes a moment, and then your code will be mounted into the environment. At this point you\u2019ll have a running project that you can visit by going to the project admin dashboard and following the \u201caccess site\u201d link near the top of the page.\n \n This concludes this step! It may seem like a lot to get a 5 line PHP project going, but think of what you\u00a0 didn\u2019t \u00a0just have to do - spin up a server, set up a shell environment that feels home-y on that server, set up a LAMP stack, set up a build process for getting your code onto the server in a defined, runnable state, fuss with DNS or local host entries. We haven\u2019t even touched on the aspects of Platform.sh that will completely blow your mind, so stay tuned.\n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Cut your digital budget by 30% by doing less work ", "url": "https://platform.sh/2016/10/do-more-with-less/", "documentId": "24e40a1854599d143f1477e998c7e38ed7599c8c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Cut your digital budget by 30% by doing less work \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         17 Oct 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Have you noticed lately how, despite technology advances and a huge number of connected cloud services, you aren\u2019t reducing costs in digital? \u00a0What if I told you that there was a way to reduce what you spend on digital by a third? Would you take five minutes to find out what it is? \n \n My dog made a website \n In the early years of the web, every man-and-his-dog could publish a web page. Web publishing was easy and as simple as sticking a file on a server. We had HTML, CSS and FTP and that was all we needed. The barrier to entry was low, because the technology was simple. \n Fast-forward to today and the landscape is unrecognisable: the technology required to power a high-performance website in today\u2019s world requires a highly-skilled, always-up-to-date workforce with knowledge across a stack of complex, highly-tunable services that are not only expensive to manage but require your business to be competent in skill set\u2019s from infrastructure management, to configuration management, to network technologies, to Agile delivery methods. It\u2019s not surprising that faced with this challenge most business either spend an awful lot of money or\u00a0 simply fall behind \u00a0(and sometimes both). \n But it turns out there\u2019s a way out of this conundrum, and\u00a0 the secret is working less . \n Do less, go faster!! \n The\u00a0 2016 Puppet State of DevOps Report \u00a0surveyed over 4500 developers and drew some very interesting conclusions about how your development and deployment processes affect your ability to deliver. Puppet wanted to find out what makes a\u00a0 high-performing development team , and what they found was very interesting. Development teams who were truly\u00a0 deploying quickly \u00a0(e.g. once or more per day) \u2013 and thus in smaller increments \u2013 had\u00a0 lower failure rates, faster recovery times , and\u00a0 spent more time working on new features . For teams deploying once a week or less, recovery times shot up and failure rates were anywhere up to 45x greater. \n Forty. Five. Times. More. Bugs. \n Take a moment to consider that. By deploying quicker and in smaller increments,\u00a0 the average team reduced its rework rate by a factor of 45 . Think about what you could do if you even achieved a fraction of that? \n Shifting left \n This practice of building in smaller increments forces you to build quality into each increment, a practice known as\u00a0 Shifting Left . \n In a traditional development model, we move from left to right across design, development, testing and production. Shifting Left means moving activities which were previously on the right over to the left of that process, in order to bring them together. It is often focused on when, how and who does testing, and what they test, as the aim is to test the right things early enough to make a difference, and in increments that are manageable. \n There are a few things you can do to shift your development process left, however moving to a\u00a0 Continuous Integration and Deployment \u00a0model is one of the key ways a development team can make this happen. However, that comes with its own challenges: suddenly you also need to be an expert in complex toolsets and infrastructure management. This is not a simple or easy thing to do. \n Making the complex, simple \n I am blessed to be working with some pretty damn smart people at\u00a0 Platform.sh \u00a0that are trying to solve these issues day in and day out. They are obsessed with how to get all of these gains while keeping stuff\u00a0 simple \u00a0and\u00a0 lightweight . \n What this bunch came up with is a hosting environment that completely removes the need even to know what DevOps\u00a0means, let alone understand how to configure a server cluster, scale a database, or seamlessly upscale on Black Friday. Their system enables developers to deploy automatically by linking environments to their version control commits, and automatically configures and deploys complete Enterprise web services based on a simple, human-readable configuration file. \n This enables your team to focus on\u00a0 delivering quickly, iterating fast , and getting some of\u00a0 the benefits of a shifting left, without worrying \u00a0about whether or not your next release is going to fail, or take too long, or be to complicated to deploy, or any other number of headaches which have simply gone away. It makes shifting left much, much easier. \n You mentioned savings? \n It turns out there is\u00a0 a pretty big payoff \u00a0from moving quickly. We regularly ask our customers how they are going and they are reporting significant cost savings as a result of switching to\u00a0 Platform.sh . I\u2019m not talking about the cost of their web hosting (though we\u2019re pretty competitive there too) but the savings across their overall digital budget as they \u201cshift left\u201d. \n On top of reduced errors, greater customer satisfaction, near zero downtime and faster time-to-market,\u00a0 Platform.sh customers report average cost savings of 30% . And they never needed to learn how to deploy a thing. \n Even my dog could do that. \n Are you interested in finding out more about how Platform.sh can make your life easier?\u00a0 Get in touch with us today . \n Christopher Skene is Platform.sh\u2019s outreach lead in the Asia-Pacific region. With over a decade\u2019s experience in project delivery and technical roles, Chris knows the day-to-day challenges faced by companies delivering digital projects.\u00a0 Contact Chris\u2026 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh Provides PaaS Technology to Magento Commerce ", "url": "https://platform.sh/2016/04/magento-enterprise-cloud-edition-powered-by-platform-sh/?utm_source=Blog&utm_campaign=Magento_partnership&utm_medium=Blog&utm_content=Oliver_Sweeney", "documentId": "bed86ad0054e5ee10b0c6929dd9ff7dd90c06ae7", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh Provides PaaS Technology to Magento Commerce \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         12 Apr 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Global commerce provider Integrates Platform.sh Into its New Enterprise Cloud Offering \n Paris, France. - April 12, 2016, \u00a0for immediate release \n Today, Platform.sh, the Continuous Delivery Platform-as-a-Service (PaaS) Cloud Hosting company, announced that Magento Commerce has chosen the company\u2019s second generation PaaS for its newly launched Magento Enterprise Cloud Edition product. The flagship open-source Magento platform is already the worldwide leader in e-commerce, powering more than 250,000 sites globally and supporting over $50 billion in gross merchandise volume annually. \n \n Magento wanted a strategic PaaS partner for their cloud offering and a solution that would help remove the traditional burden of managing multiple environments through the development and release management cycles. These capabilities allow businesses to reduce overall development costs and accelerate site development velocity, whilst at the same time de-risking a much higher rate of change to production services. \n \n \u201cIt\u2019s an incredible validation to our technology to see such a powerful force in the global eCommerce industry make such a step-change in their product portfolio to offer their customers greater business advantage,\u201d\u00a0 said Fred Plais, CEO at Platform.sh. \u00a0\u201cThis is exactly what we designed Platform.sh to do, something well beyond a public Platform-as-a-Service, and we\u2019re excited that the impact will be so far-reaching\u201d \n \n Among the notable Platform.sh features which attracted Magento is the on-the-fly cloning technology which eliminates system administration chores and enables byte-for-byte copies of entire live sites, keeping the code, files, services and data in lockstep. Going beyond DevOps this \u201cNoOps\u201d approach maintains perfect consistency between branched environments, which in itself is valuable for live site support, but even more so for development teams, who now have on-demand access to perfectly consistent copies of production environments. This means every new feature can be developed and tested in parallel and in isolation in its own exact copy of the live system, removing end-of-sprint bottlenecks and giving CTOs and CMOs confidence that it will behave exactly as expected when it goes to production. \n \n \u201cWith Platform.sh running Magento Cloud, enabling continuous deployment, CTOs and CMOs can really make a difference, especially during high traffic periods, promotions and sales when competitive edge is critical in the fight for the same seasonal buck.\u201d\u00a0 said Kieron Sambrook-Smith, Chief Commercial Officer at Platform.sh. \u00a0\u201cWhoever would have thought a PaaS provider could do that!\u201d \n \n Platform.sh accelerates many common development and deployment processes, resulting in: \n \n\t Up to 90% reduction in support ticket volumes and SysAdmin / DevOps, \n\t better developer productivity (over 20%), \n\t dramatically improved approvals and User Acceptance Testing (UAT) - because each feature branch has its own URL to be circulated (40% faster), \n\t new levels of Continuous Integration (CI) through end-to-end process automation, as many common testing and tracking tools are now able to initiate activity within any Platform.sh project, requesting instant copies of environments for various purposes through the API. \n \n \n \u201cWe evaluated many PaaS providers for Magento Enterprise Cloud Edition, but Platform.sh was the obvious choice for us given their focus on the PHP community, background in eCommerce and the innovative continuous cloud integration tools provided by their PaaS,\u201d\u00a0 said Peter Sheldon, Head of Strategy at Magento Commerce. \u00a0\u201cThe speed and ease with which you are able to test features or even the entire application against new versions of common services is game changing, and the more components there are, or the bigger and more complex the project becomes, the value Platform.sh brings becomes exponentially greater.\u201d \n \n The Platform.sh PaaS has been designed with continuous delivery and 99.99% high availability in mind. Scaling compute and storage resource up or down is both quick and seamless, whilst making critical changes to stack and core application components goes unnoticed by the shopping customer. In fact, over the 4 day Black Friday weekend last November, we were able to announce that not a single Platform.sh customer experienced any application downtime whatsoever, despite all the usual problems (and 70% of those are online merchants). Which tends to show the values that Platform.sh delivers: superior control to stem revenue loss, and the ability to make real-time revenue optimisation changes during peak traffic periods. This fine-grained control affords online retailers enormous competitive advantage exactly when they need it. \n About Platform.sh \n Platform.sh is a ground-breaking hosting and development tool for web applications. It extends a branch-merge workflow to the whole infrastructure so that every new feature can be tested as if it were in production. Live sites scale effortlessly to serve the most demanding traffic. 24/7 follow-the-sun support combined with a unique, triple-redundant architecture based on micro-containers and an innovative cloud control technology allow the service to propose 99.99% SLAs on even the most complex use-cases. The company offers its services both directly to end-customers on its public https://platform.sh and through third parties. Based on Open Source technologies, Platform.sh is ideal for agile software development, continuous integration (CI) and continuous delivery (CD). \n A VC backed startup based in Paris, France, the company has technical, support, and sales staff throughout Europe, the United States and Asia, and provides cloud services to thousands of companies in various areas including fashion, publishing, retail, travel, engineering and the public sector. \n Website:\u00a0 https://platform.sh \u00a0Follow us on\u00a0 @platformsh \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Another UI release this month... ", "url": "https://platform.sh/2016/10/release-ui-2-16/", "documentId": "6a35cf6a178021a0df781ea7416eebafd8cce4c4", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Another UI release this month... \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Manauwar Alam \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         21 Oct 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We just deployed our new UI release 2.16 logically enough after 2.15 (which added\u00a0 eZ Platform \u00a0to the new project wizard) and\u00a0 2.14 \u00a0with a much improved user management interface and many improvements around branch naming. \n We are working continuously to provide a more user friendly interface for managing your applications. In this release you can see many improvements for status display, better suggestions and branch display in the UI. \n \n\t Status update \n\t Branch name suggestions \n\t Improved structure for Branching \n\t Enable/Disable robots.txt \n \n \n Status update updated \n In the UI, activity feed column now shows the status for every action! Until now you needed to switch back and forth between different environments to get the latest status update for ongoing multiple activities. As of now, status of in-progress activities are visible under the left hand sidebar. \n No more toggling, no more confusion! \n \n Branch name suggestions \n Branching an environment could be tricky everytime you need to come-up with a unique branch name .. and with the constraints on naming branches too often you would end up with non-descriptive names. Better suggestions make this easier and less time-consuming. \n \n Improved display for long branch names \n Long branch name under the left sidebar now appear on hover. No loss of information! \n \n Enable/Disable robots.txt \n Platform.sh offers multiple environments for continuous development. You can have many non-production environments. All these environments should have robots.txt to restrict crawling (remember you can also very easily set up basic auth). Now, you can enable/disable robots.txt through UI. \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "The next-generation Continuous Deployment web hosting cloud is coming to Australia ", "url": "https://platform.sh/2016/10/plaformsh-is-heading-down-under/", "documentId": "a026248bac004429bf4c2df2b0866c9c6e1325c5", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The next-generation Continuous Deployment web hosting cloud is coming to Australia \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         26 Oct 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Sydney, Australia. Paris, France. 27 October, 2016 \u00a0\u2013 In response to growing demand, Platform.sh, the high-availability cloud hosting platform that is fast and simple to use, is heading Down Under with the announcement of a new public cloud region for their self-service, NoOps hosting stack for PHP, NodeJS, Python and Ruby. The new cloud region will be coming to Australia in the first quarter of 2017. \n Platform.sh is a web hosting platform that radically enhances your development to production cycle. As a second generation PaaS it enables continuous delivery workflows and faster time to market. Platform.sh is the only container powered Platform-as-a-Service with multi-service and multi-application support. \n \n Platform.sh CEO Fr\u00e9dric Plais \u00a0is enthusiastic about the possibilities for Platform.sh in the Asia-Pacific, \n \n \u201cAustralia is a very sophisticated technical market which we\u2019ve long recognised as a critical part of Platform.sh\u2019s continued growth, and a key part of our investment in the Asia-Pacific in general. We\u2019re really excited to be bringing Platform.sh\u2019s unique capabilities to this region.\u201d \n \n Platform.sh can replicate a live production cluster in seconds and create on-the-fly throwaway dev and staging environments that are byte-level clones. Every git branch has a url: a live running web site, making human testing and validation up to 90% faster. Every feature can be tested in isolation and in parallel \u2013 like agile is supposed to be \u2013 removing all QA bottlenecks. This allows exponentially shorter development to production cycles. \ntags:\n- drupal\n- php\n \n python \n ruby \n nodejs \n \n \n \u201cPlatform.sh already offers the ability to deploy Enterprise customers to 11 Azure and 14 AWS data centers across Asia, providing good coverage for Enterprise clients in Japan, Korea, India, Singapore, and Australia, but this is the first public, self-service region we\u2019re launching outside of the US or EU for our smaller customers,\u201d \n \n said\u00a0 Vice-President for Customer Success Robert Douglass : \n \n \u201cOur international customers are seeing productivity improvements in orders of magnitude with the flow-on cost savings that brings, and it\u2019s great to be able to bring that to Australia.\u201d \n \n Platform.sh has had a human face in the region for a while now, in the form of long-time Drupal advocate and open source champion\u00a0 Christopher Skene : \n \n \u201cI\u2019m really excited to be bringing this game-changing technology to Australia. Platform.sh does things no other hosting platform can do. There\u2019s nothing like it in the Asia-Pacific market. This new region will really open up this technology to a huge range of Australian business who don\u2019t require the full power of an Enterprise stack, but still want the benefits of Platform.sh\u2019s cost-saving workflow and next-generation deployment tools.\u201d \n \n And there\u2019s no need to wait. Developers can start building using the Development tier on US or EU regions now, ready for launching in 2017. Skene added: \n \n \u201cMigrating a development project between regions takes less than 15 minutes. You can get started with our free trial on the US region today and be guaranteed that the Australian region will be 100% consistent when it launches. That\u2019s the beauty of Platform.sh.\u201d \n \n About Platform.sh \u00a0Platform.sh is a continuous deployment cloud hosting solution that can scale applications from the smallest project to ones handling millions of visitors. It is ideal for agile software teams because of its unique feature: it can replicate a live production cluster in seconds and create byte-level clones of throwaway dev and staging environments, which makes testing and validation up to 7 times faster, that\u2019s weeks to days, and in some cases days to hours. \n We can provide 99.99% SLAs thanks to our 24/7 follow-the-sun support combined with a unique, triple-redundant architecture that\u2019s based on a high density grid of Linux micro-containers. \n Headquartered in Paris, France, with employees across five continents, the company serves thousands of clients worldwide, including Vivienne Westwood, The Canadian Football League, The British Council, Flixbus, and El Universo. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Speeding up your npm builds with Yarn ", "url": "https://platform.sh/2016/11/platformsh-yarn/", "documentId": "3ec8e268ebefd64c8f937ba37c33de41c25156d6", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Speeding up your npm builds with Yarn \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   John Grubb \n                  \n                   Director of Customer Care \n                  \n                  \n                 \n            \n          \n         \n         15 Nov 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Say you have a decent sized project and your deployments are taking a while. Platform.sh rebuilds your entire application from scratch with each git push so in some cases the process of downloading all those 3rd party packages can take quite a while. We can and do manage local caches of some composer packages due to our PHP heritage, which helps to make\u00a0 \n   composer install \n   \u00a0a pretty snappy affair, but it\u2019s simply not possible to effectively do this with Nodejs.\n \n \n Compounding this problem for npm is the fact that npm\u2019s dependency graph, that is the dependencies of your dependencies, have to be worked out every time you run npm install. This can lead to developers in your org installing different versions of packages which\u00a0 will \u00a0cause you problems.\n \n Most other package managers overcome this with the use of a \u201clockfile\u201d. A lockfile is a file that\u2019s generated when you run\u00a0 \n   composer install \n   \u00a0for the first time, or\u00a0 \n   bundle install \n   \u00a0if you\u2019re working Ruby. A lockfile is the result of the dependnecy graph being worked out, and then specifying the\u00a0 exact \u00a0versions of each package. This file is checked into Git, and each dev in the project gets the exact same versions of the packages required for the project.\n \n Enter Yarn\n \n I was listening to the most recent Laravel podcast over the weekend and they got to talking about a new quasi-npm-replacement that had just come out called\u00a0 Yarn .\n \n Yarn aims to be an almost drop in replacement for npm. There are a number of ways of installing it, but the most simple is just\u00a0 \n   npm install -g yarn \n   . My coworkers thought I was trolling them with that, but it makes perfect sense if you think about it.\n \n The only other step is run the\u00a0 \n   yarn \n   \u00a0command locally in order to have Yarn traverse your node_modules directory and build up the Yarn lockfile -\u00a0 \n   yarn.lock \n   . Then commit that to git and let\u2019s rock and roll on your\u00a0 \n   .platform.app.yaml \n   . We\u2019re going to require Yarn in the global dependencies section -\n \n \n dependencies:\n  ruby:\n    sass: \"*\" # not required, just assuming\n  nodejs:\n    gulp-cli: \"*\" # same here\n    yarn: \"*\"\n \n \n And then replace\u00a0 \n   npm install \n   \u00a0in your\u00a0 \n   hook.build \n   \u00a0with\u00a0 \n   yarn install \n   \u00a0instead, like so -\n \n \n hooks:\n  build: |\n    yarn install\n    gulp default // for a Laravel project\n \n \n This took my previously 6 minute builds down to about 1 minute. In other words, the time that it took out of my build phase was longer than the time it took to completely move from npm to Yarn in the first place. The reason for this speed boost is that Yarn doesn\u2019t have to generate the dependency graph every single time (like npm does) since the lockfile, and Yarn downloads the packages in parallel rather than whatever npm does, which must be one at a time.\n \n If you\u2019re using\u00a0 \n   npm install \n   \u00a0as part of your build step on Platform.sh, it\u2019s really a no-brainer. Check it out!\n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Laravel on Platform.sh, part 1 ", "url": "https://platform.sh/2016/10/platform-laravel-part-1/", "documentId": "2e53ead904d6ca779b14946446e4fa28c31434f2", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Laravel on Platform.sh, part 1 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   John Grubb \n                  \n                   Director of Customer Care \n                  \n                  \n                 \n            \n          \n         \n         28 Oct 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Hi there and welcome back to Platform.sh from scratch. In this post we\u2019ll convert a Laravel app for use on Platform and learn a few tricks that will hopefully inform converting\u00a0 any \u00a0app for use on Platform. \n \n Step 1 is to get going with a new Laravel app, so follow the instructions on\u00a0 installing Laravel \u00a0and setting up a new project. Initialize a git repo, add a new platform, and add the Platform.sh git remote to your local repo. All of this is documented in the\u00a0 previous post . \n Now, at this point you can try and push code to us but we\u2019ll reject it because you don\u2019t have any of the Platform config files in place. Let\u2019s use\u00a0 the exact same routes file \u00a0as\u00a0 the previous Silex project . \n # .platform/routes.yaml \n \"http://www.{default}/\" : \n    type :   upstream \n    upstream :   \"app:http\" \n \"http://{default}/\" : \n    type :   redirect \n    to :   \"http://www.{default}/\" \n So that\u2019s step one. We\u2019ll get to the  services.yaml  file in just a minute, but let\u2019s go ahead and stub it out - touch .platform/services.yaml . \n Now let\u2019s get to work on the  .platform.app.yaml  file, which will define what your new Laravel app will need to run. One of the key differences between this application and the previous one is that for this one we\u2019re actually going to need some writable disk space. Laravel expects a few directories to be present (and to be writable by the web user) in order to write logs and caches and such. We glossed over that bit in the previous post, so I\u2019ll now take a moment to talk about Platform.sh\u2019s read-only filesystem. \n Aside - the read-only filesystem \n Platform.sh, like some other cloud PaaS providers, utilizes a read-only filesystem. When your application is deployed, we package up a snapshot of your application code and mount it into it\u2019s environment. This means that the days of being able to edit code directly on the server, or of being able to FTP code up to the server are effectively over. \n All of your app\u2019s code must be in Git in order to be deployed, which has quite a few advantages. Not least of them are accountability for who did what and when to your codebase. Of course, you likely need to have some part of your filesystem be writable for logs and file uploads, so we take care of that for you but first let me expand on the benefits of going read-only. \n Benefit one - consistency \n As we\u2019ve discussed , Platform.sh\u2019s entire workflow is built around Git. This means that each commit has a SHA hash that identifies each unique commit within your project. If you cut a new Git branch out of another, that new branch will have the same SHA hash as the currently existing branch that you cut it from. \n ~/work/php/magento-platform-sh\n$ & gt ;   git checkout -b test_branch    master 93783b2  # &lt;- SHA hash of this commit \nSwitched to a new branch  'test_branch' \n~/work/php/magento-platform-sh\n$ & gt ;                             test_branch 93783b2  # &lt;- Same SHA hash \n Platform.sh sees that the two SHA hashes are the same and doesn\u2019t bother building your new environment\u2019s codebase again since it\u2019s already built it. It just uses the already packaged code snapshot from the original branch and creates an environment around it. This saves time, but when it really shines is when it heads in the opposite direction - on merge. When merging a feature branch into a long running develop or master branch, Platform.sh sees that the code snapshot has already been built and deploys that into your master environment. \n What this means is that you are 100% guaranteed that the code being deployed into your master environment is precisely the same code that you just tested out in your feature branch. Nobody snuck anything new in there via FTP or editing directly, so you can be confident in your deployments. This leads neatly into benefit two\u2026 \n Benefit two - security \n As you\u2019re likely aware there is a large class of exploits, particularly in PHP web apps, that take advantage of that fact that a great many of them allow write access to files that the web server will execute. This means that nefarious users can sometimes find security holes that will allow them to upload executable PHP files to the server and then use those files to gain \u201celevated privileges\u201d, another way of saying \u201chack your server\u201d. With a read-only filesystem, many of those exploits are blocked before they can even happen. \n Lastly, of course you need to write some files \n So yes, your web app likely has something in there that needs to be writable. It might be for uploads or it might be for caching or it might be for logs. We got you covered, but you have to specify which directories to make writable in your  .platform.app.yaml  config file. \n So I\u2019m just going to drop the  .platform.app.yaml  in here and explain it bit by bit. \n # the name of this particular app, remember that we allow you \n # to create a project out of 1 or more apps, so this gives our \n # Laravel app a name... \n name :   app \n type :   php : 7.0   # SSIA \n build : \n    # Same as before, this alerts our system to look for a composer.json \n    # or composer.lock file and install the dependencies defined therein \n    flavor :   composer \n # basic web configuration for this particular app.  Laravel apps have a \n # \"public\" folder that serves as the web docroot. \n web : \n    locations : \n      \"/\" : \n        root :   \"public\" \n        index : \n          - index.php \n        allow :   true \n        passthru :   \"/index.php\" \n # How much disk space to allot to this app.   \n disk :   2048 \n # This is where you define your writable file system paths.  the keys are the \n # paths in your app that need to be writable/uploadable.  The values are always \n # going to be named \"shared:files/$WHATEVER_HERE\", where \"WHATEVER_HERE\" can be \n # any arbitrary identifier. \n mounts : \n    # Laravel uses a directory off the root called \"storage\" for logs and cache. \n    # We don't support specifying nested directories so make these directories \n    # flat beyond \"shared:files\" \n    \"/storage/app/public\":  \"shared:files/app-public\" \n    \"/storage/framework/views\":  \"shared:files/framework-views\" \n    \"/storage/framework/sessions\":  \"shared:files/framework-sessions\" \n    \"/storage/framework/cache\":  \"shared:files/framework-cache\" \n    \"/storage/logs\":  \"shared:files/logs\" \n    # And another cache directory here. \n    \"/bootstrap/cache\":  \"shared:files/bootstrap_cache\" \n So this brings us to a decision point. Inside the  storage  directory are nested a few more directories. Laravel sets these directories up for you and then drops a .gitignore inside each of them. This is handy, but presents a small challenge to Platform.sh. Any directories that you declare as writable (or mountable) will be emptied out on the first build and deploy. This means that those nested directories that exist in your git repo will be deleted and you\u2019ll be left with an empty  storage  directory. \n This will cause you some headaches when you try to deploy your Laravel app. There are two solutions to this - either add each directory that needs to be writable inside of  storage  to the  mounts  directive or recreate them in a \u201c deploy hook \u201d instead. We\u2019ll go with option A but I want to introduce you to hooks, so here\u2019s what option B looks like - \n # .platform.app.yaml, after all the rest ... \n mounts : \n    # Laravel uses a directory off the root called \"storage\" for logs and cache. \n    \"/storage\":  \"shared:files/storage\" \n    # And another cache directory here. \n    \"/bootstrap/cache\":  \"shared:files/bootstrap_cache\" \n hooks : \n    deploy :   |\n       mkdir -p storage/app/public \n      mkdir   -p   storage/framework/views \n      mkdir   -p   storage/framework/sessions \n      mkdir   -p   storage/framework/cache \n      mkdir   -p   storage/logs \n This second method here took quite a bit of trial and error to figure out, and either method is valid. It would\u2019ve taken me a bit if trial and error to go with option A as well, since I\u2019m not very familiar with Laravel. \n Now I\u2019ll take a moment to explain what hooks are. \n Aside - hooks \n Hooks are what they sound like - commands that will execute at certain points in the deployment lifecycle. In this case, we have two -  build  and  deploy . \n Build hooks run while your app is being packaged up, before it\u2019s sent to the application\u2019s environment. The filesystem is still writable at this point, so if you need to make any modifications to the file structure of your project, this is your chance to do so. Since your project doesn\u2019t have an environment yet, it doesn\u2019t yet have access to the various services that you\u2019ve declared in  services.yaml . So, no database is available at this point. \n Deploy hooks run after your project has been mounted into the app environment. The versioned file system is no longer writable, but you do have access to your services at this point. This is typically when you do things like migrate databases or clear caches. \n So you might notice that we\u2019re performing those  mkdir  calls in the deploy hook, which seems to contradict what I just said. However, those directories are being created inside of what you\u2019ve declared as a writable directory in the  mounts  directive, so nothing breaks and indeed you have access to that mounted directory, where you wouldn\u2019t have had access in the build hook. \n Here\u2019s the full  .platform.app.yaml  at this point, for reference. \n name :   app \n type :   php : 7.0 \n build : \n    flavor :   composer \n disk :   2048 \n web : \n    locations : \n      \"/\" : \n        root :   \"public\" \n        index : \n          - index.php \n        allow :   true \n        passthru :   \"/index.php\" \n mounts : \n    # Laravel uses a directory off the root called \"storage\" for logs and cache. \n    \"/storage/app/public\":  \"shared:files/storage/app/public\" \n    \"/storage/framework/views\":  \"shared:files/storage/framework/views\" \n    \"/storage/framework/sessions\":  \"shared:files/storage/framework/sessions\" \n    \"/storage/framework/cache\":  \"shared:files/storage/framework/cache\" \n    \"/storage/logs\":  \"shared:files/storage/logs\" \n    # And another cache directory here. \n    \"/bootstrap/cache\":  \"shared:files/bootstrap_cache\" \n So save that, commit to git and push it to your Platform git remote and you should be on your way. You can find the full repository  here on Github . The most important difference between that repo and this project is that we have yet to set this project up with a database connection, which we\u2019ll do in the next post. \n \n   \n     Laravel on Platform.sh, part 2 \n   \n   \n     Laravel on Platform.sh - Redis caching and the Platform CLI \n   \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Fully customizable build flavors ", "url": "https://platform.sh/2016/11/fully-customizable-build-flavors/", "documentId": "3d4e0246efb6ce6bb26b44e8bc473b1f1a0cfe91", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Fully customizable build flavors \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         11 Nov 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         At Platform.sh, we believe your application should be deployed on your terms. That\u2019s why we support custom build and deploy scripts on every project, to allow you to build your application in whatever way fits it best. We also support \u201cbuild flavors\u201d that automatically run common build tasks when appropriate, such as composer or npm installs. \n But what if you didn\u2019t want the default composer install command? Or maybe you don\u2019t want to use npm but want to give new-kid-on-the-block\u00a0 Yarn \u00a0a try? You\u2019d still get a default build flavor and then have to repeat that work differently, which is just no good at all. \n We agree. So we fixed that. \n \n We now support a build flavor of\u00a0  none  \u00a0in all environments. It works just like any other build flavor, but does, unsurprisingly, nothing. No\u00a0  composer install  , no\u00a0  npm install  , nothing. Like so: \n \n build:\n    flavor: none\n \n \n You can then run whatever alternate build commands you want in your own build hook, be that a different composer command, yarn, or simply none at all. \n The existing build modes (  drupal  \u00a0and\u00a0  composer  \u00a0for PHP, and just\u00a0  default  \u00a0for Node.js) are still available, and the defaults haven\u2019t changed. It\u2019s just another option to further customize your application\u2019s build if you want to do something a bit more exciting. See\u00a0 the Documentation \u00a0for more details. \n Happy customizing! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Laravel on Platform.sh, part 2 ", "url": "https://platform.sh/2016/11/platformsh-laravel-part-2/", "documentId": "e995c1aa2416302219f587ac21a12b99f085f7df", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Laravel on Platform.sh, part 2 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   John Grubb \n                  \n                   Director of Customer Care \n                  \n                  \n                 \n            \n          \n         \n         24 Nov 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Hello (!) and welcome back to Platform.sh from scratch. In this post we\u2019ll learn about how to set up the Laravel app from the previous post to hook in to various services on Platform, starting with a database connection and moving on to using Redis as a cache and session store. Along the way we\u2019ll visit Platform.sh\u2019s \u201cenvironment variables\u201d feature, and we\u2019ll set up our first fully functioning deploy hook.\n \n \n   Prerequisites -\u00a0 go through the previous post and get that far\u2026 \n   \n \n Let\u2019s get started!\n \n \n So the first step is to add a database to your\u00a0 \n   services.yaml \n   \u00a0file. Let\u2019s choose PostgresQL, which is my personal preference for open source databases these days (mostly due to the fact that it hasn\u2019t been bought by Oracle and subsequently forked). Add this to your\u00a0 \n   services.yaml \n   \u00a0file, which should currently be empty.\n \n \n # adds a Postgres 9.6 service to your project\n# and gives it about a gigabyte of disk space\npgsql:\n  type: postgresql:9.6\n  disk: 1024\n \n \n And in your\u00a0 \n   .platform.app.yaml \n   \u00a0add this anywhere -\n \n \n # This is how you define service relationships in your application\n# I personally think this should've been named \"services\" but such is life\nrelationships:\n  database: \"pgsql:postgresql\"\n \n \n As you can see, setting up your project to provision new services is super easy and as the platform matures we\u2019ll likely support several versions of any given piece of software. This will someday allow users to easily test out upgrading something like a database to a new major version in another branch without worrying about the usual hassles.\n \n Now we need to set up our application to use these new services. This is fairly straightforward, but feels a little strange the first time so I\u2019ll walk you through the general idea that you\u2019ll use no matter what the framework or language you\u2019re using.\n \n Platform.sh encodes many key pieces of information about your application into OS environment variables. If you SSH into your app container you can\u00a0 \n   echo $PLATFORM_APPLICATION \n   \u00a0and get back a long string that\u2019s in essence the base64 encoded version of your\u00a0 \n   .platform.app.yaml \n   \u00a0file. Same with\u00a0 \n   $PLATFORM_ROUTES \n   . This is how we store metadata about your application, and you\u2019ll make use of these variables as well to establish database connections. The basic algorithm for finding DB connection info is -\n \n \n   read and decode $PLATFORM_RELATIONSHIPS into a json string. \n   parse that json string into an object and use the attributes of that object to set the connection info \n \n So with that in mind, let\u2019s get your Laravel app wired up.\n \n First let\u2019s make use of a nice little composer package that Platform.sh has authored in order to simplify this bit. Run\u00a0 \n   composer require platformsh/config-reader \n   \u00a0and install this package. Next let\u2019s head to\u00a0 \n   config/database.php \n   \u00a0and add this little snippet to the top -\n \n \n // config/database.php\n$config = new Platformsh\\ConfigReader\\Config();\n if ($config->isAvailable()){\n$pltrels = $config->relationships;\n$database = $pltrels[\u2018database\u2019][0];\nputenv(\u201cDB_CONNECTION={$database[\u2018scheme\u2019]}\");\nputenv(\u201cDB_HOST={$database[\u2018host\u2019]}\");\nputenv(\u201cDB_PORT={$database[\u2018port\u2019]}\");\nputenv(\u201cDB_DATABASE={$database[\u2018path\u2019]}\");\nputenv(\u201cDB_USERNAME={$database[\u2018username\u2019]}\");\nputenv(\u201cDB_PASSWORD={$database[\u2018password\u2019]}\");\n}\n \n \n You can read the source of the composer package yourself, but essentially the\u00a0 \n   $config \n   \u00a0instance has properties for each of the encoded environment variables that Platform.sh adds to your environments. In the case of the relationships attribute, you might have several databases defined, so it\u2019s a simple matter of digging into that property to pull that values out.\n \n In the case of Laravel, it makes use of the\u00a0 \n   vlucas/phpdotenv \n   \u00a0package to read certain settings out of environment variables, so it\u2019s really just a matter of translating the nested variables that Platform.sh provides into what Laravel is already expecting.\n \n \n   I suspect it would be astonishingly easy for someone to come up with a drop in \u201cLaravel Helper\u201d package that would set all this up for automatically, but I haven\u2019t gotten that far just yet.\n   \n \n With this much code, your app is now ready to connect to the database in whichever environment you\u2019ll be deploying so go ahead and commit this.\n \n \n   git add . && git commit -m \"adding platform db config\" \n   \n \n There\u2019s one more blocker for your Laravel app that you\u2019ll need to take care of before you\u2019re really up and running and that\u2019s the need for the\u00a0 \n   APP_KEY \n   \u00a0variable to be defined. Time to learn about Platform.sh\u2019s environment variables feature!\n \n Platform.sh Environment Variables\n \n You\u2019re likely familiar with the situation where you need to make use of some \u201cprivileged\u201d data in your application, and that you don\u2019t want to store that data in Git. Or perhaps the use case is that you have different settings for certain things in development than you do in production, perhaps a\u00a0 \n   DEBUG \n   \u00a0flag or something like that. The usual solution for these cases is to use OS environment variables (just like we do). We provide a feature easily setting variables that you can read in your environments, so let\u2019s set one up for the Laravel\u00a0 \n   APP_KEY \n   .\n \n Head to your project\u2019s admin page and click on \u201cconfigure environment\u201d, then \u201cVariables\u201d. The simplest thing to do is pull the APP_KEY out of your local\u00a0 \n   .env \n   \u00a0file, so click \u201cadd variable\u201d and give it a name of \u201cAPP_KEY\u201d and put the value in the \u201cvalue\u201d field. This will trigger a redeployment of your application.\n \n Last step is to add some code in to your application to read those variables back out. Add this to the top of your\u00a0 \n   config/app.php \n   \u00a0file -\n \n \n // config/app/php\n$config = new \\Platformsh\\ConfigReader\\Config();\n if($config->isAvailable()){\nforeach($config->variables as $k => $v) {\nputenv(\u201c$k=$v\u201d);\n}\n}\n \n \n Provided you\u2019ve already set up that APP_KEY variable, it\u2019ll be read further down that file and you\u2019re good to go, so let\u2019s commit and push to platform.\n \n \n git add .\ngit commit -m \"adding platform environment variables config\"\ngit push platform master\n \n \n So this post is already a bit long so I\u2019ll just touch on one last point quickly. Now that you have this database all hooked up and ready to go, you\u2019re likely going to want to use it! Should you want to automate the process of applying your database migrations, you can do that in a simple deploy hook.\n \n \n hooks:\n  deploy: |\n    php artisan migrate --force\n \n \n The\u00a0 \n   --force \n   \u00a0flag sounds scary but all it does it disable the command needing feedback which of course, you are unable to provide yourself. The other option is to SSH into the app server after deployment and run the command yourself, which I\u2019ll demonstrate in the next post.\n \n \n   Part 1 -  Basic Setup \n   Part 3 -\u00a0 Redis caching and the Platform CLI \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "PostgreSQL 9.6 and PostgreSQL Extensions! ", "url": "https://platform.sh/2016/11/21/postgresql-96-initial-release/", "documentId": "9a6c59204e1a6aa1956e6b2f4c512fb6440adcfe", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           PostgreSQL 9.6 and PostgreSQL Extensions! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Simon Ruggier \n                  \n                   Cloud Engineer \n                  \n                  \n                 \n            \n          \n         \n         21 Nov 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We\u2019re happy to announce the availability of PostgreSQL 9.6 as a choice of service in Platform.sh. You can learn how to enable it in\u00a0 our documentation . Although we don\u2019t yet support the\u00a0 pg_upgrade \u00a0command, existing users of PostgreSQL 9.3 can still upgrade using\u00a0 pg_dump \u00a0and\u00a0 pg_restore , as discussed in the\u00a0 Upgrading \u00a0section. \n And you now have full support for running Postgres Extensions on Platform.sh. In your\u00a0 services.yaml \u00a0file you can simply add a configuration subkey with the following strucure: \n \n postgresql:\n    type: \"postgresql:9.6\"\n    disk: 1025\n    configuration:\n        extensions:\n            - pg_trgm\n            - hstore\n \n In this example you will have pg_trgm installed giving functions to determine the similarity of text based on trigram matching and hstore, giving you a key-value store. \n The complete docs are here:\u00a0 PostgreSQL Extensions \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "TYPO3 CMS 8 starting today with Platform.sh in the cloud ", "url": "https://platform.sh/2016/10/typo3-8-starting-platformsh-cloud/", "documentId": "1575e5b560293f8b4cb46accdacca5daea88cdaa", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           TYPO3 CMS 8 starting today with Platform.sh in the cloud \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Robert Douglass \n                  \n                   Chief DevRel Officer \n                  \n                  \n                 \n            \n          \n         \n         27 Oct 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Paris, France. Munich, Germany. 27th October, 2016 \u00a0- TYPO3 CMS 8 was presented in the cloud today at the TYPO3 Conference that is currently being held in Munich. Starting now, users can test TYPO3 on Platform.sh. The TYPO3 Association and the cloud hosting company Platform.sh are cooperating on offering the open source CMS in the cloud as well. Platform.sh offers its users a public cloud solution via Microsoft Azure Germany that also saves sensitive data securely in German datacenters. \n \n Platform.sh is easy to use, flexible, tailored to the needs of developers and offers complete build and deployment management for composer-based applications. Other advantages for TYPO3 users: \n \n \u2022\tManagement of the most important services such as MariaDB, PostgreSQL, Mongo DB, Redis, Solr and ElasticSearch\n\u2022\tEliminates DevOps overhead by providing a complete copy of the application for every Git branch\n\u2022\tFlexible deployment targets around the world on the basis of Azure via Microsoft Cloud Germany\n\u2022\tStrong partnerships with Symfony and Blackfire.io\n\u2022\tApplications can scale from minimally resourced development environments to deployments with hundreds of CPUs and GB of RAM.\n\u2022\tContinuous integration enables snapshots from the productive environment to be used, new functions to be integrated and these to be integrated again live.\n \n \n On the way to the release of the next full version of TYPO3, the core team has examined current best practices and identified core cloud functionalities. The Tech Preview gives an early insight into the new features before the release of TYPO3 8 LTS in April 2017. Screenshots are available on TYPO3. \n Availability and prices \n Starting today, Platform.sh offers a free trial version with 30 days of running time. Now, everyone can try out TYPO3 CMS 8 and test as many projects as they want in the cloud. Projects are available starting at 10 euros per month, but can be scaled worldwide to even the largest websites (for SaaS providers, for example). All prices and offers can be found on Platform.sh. \n Data Protection and Security \n Because Platform.sh provides its functions via Microsoft Azure in the Microsoft Cloud Germany, sensitive data can also be stored and processed safely. The data centers are located in Germany and access is controlled by a reputable German data custodian. Microsoft itself can only obtain access, in the event of support questions, for example, with the expressed permission of the customer. The data center is protected by physical barriers, comprehensive measures against natural forces as well as technical security measures and a 24-hour security service. \n Quotes \n \n \u201cAside from its intrinsic technical advantages, Platform.sh also fits the bill in delivering the mission critical cloud hosting that TYPO3\u2019s Enterprise user base is looking for. By partnering with Microsoft for hosting in international Azure data centers and Microsoft Cloud Germany, Platform.sh can offer sovereign, compliant and secure production hosting to TYPO3 users worldwide\u201d. \u00a0added\u00a0 Olivier Dobberkau, President of the TYPO3 Association . \n \n \n \u201cTYPO3 is the dominant Open Source CMS in Germany and much of central Europe, so we\u2019re very excited to be working together with the team to accelerate cloud adoption among TYPO3\u2019s massive user base,\u201d \u00a0explained\u00a0 Andrew Melck, Regional Manager DACH at Platform.sh \n \n About Platform.sh \n Platform.sh is a continuous deployment cloud hosting solution that can scale applications from the smallest project to ones handling millions of visitors. It is ideal for agile software teams because of its unique feature: it can replicate a live production cluster in seconds and create byte-level clones of throwaway dev and staging environments, which makes testing and validation up to 7 times faster, that\u2019s weeks to days, and in some cases days to hours. We can provide 99.99% SLAs thanks to our 24/7 follow-the-sun support combined with a unique, triple-redundant architecture that\u2019s based on a high density grid of Linux micro-containers. Headquartered in Paris, France, with employees across five continents, the company serves thousands of clients worldwide, including Vivienne Westwood, The Canadian Football League, The British Council, Flixbus, and El Universo. \n About TYPO3 \n The TYPO3 Association is promoting the development of free software projects that have arisen from the community regarding the original TYPO3 Content Management System. It is a not-for-profit organization that provides software developments from third parties that it has funded to the public free of charge. \n The TYPO3 Association is an association according to Swiss Law that was founded by the members of the TYPO3 Community, including Kasper Sk\u00e5rh\u00f8j, in November 2004. It has its headquarters in Baar ZG (Switzerland). The TYPO3 Association is non-partisan and denominationally neutral. \n More information on its members, objectives and funding opportunities can be found on its website:\u00a0 https://typo3.org/association . \n Additionally the TYPO3 Association has established an independent service company that provide its members with support services and attend to the technological development of the CMS system in the future. More about TYPO3 GmbH can be found on\u00a0 https://typo3.com/ . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Ex-Facebook HHVM engineer, Sara Golemon, leaves Silicon Valley for Paris to join Platform.sh ", "url": "https://platform.sh/2016/11/hhvm-engineer-facebook-sara-golemon-leaves-silicon-valley/", "documentId": "9c47e12496010aadc29f56d815157c51fe2cc6dd", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Ex-Facebook HHVM engineer, Sara Golemon, leaves Silicon Valley for Paris to join Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         23 Nov 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Paris, France. 23rd November, 2016 \u00a0- Platform.sh, a continuous deployment cloud hosting provider, is pleased to announce today the latest appointment of Sara Golemon, previously an Open Source engineer working on the HHVM project at Facebook. Officially based in the Paris headquarters, she joins our cloud engineering team as Senior Architect with the role to continuously build joy into Platform.sh\u2019s solution for its users. \n \n \n \u201cPlatform.sh has been establishing itself as a leading PaaS provider. We think we are the absolute best platform to host ambitious PHP projects and we mean to become even better. Which is why hiring Sara makes so much sense. With her unique experience in running PHP at Facebook\u2019s scale, she will join our cloud engineers to work on making HHVM and PHP on Platform.sh even faster and more scalable, from development workflow to production workloads.\u201d, says\u00a0 Fred Plais, CEO and co-founder, Platform.Sh. \n \n Named #14 of the Sourced.tech\u00a0 \u201c100 Awesome women in Open Source\u201d , Sara has made many contributions to the\u00a0 PHP \u00a0project from the engine to the documentation. She also authored\u00a0 Extending and Embedding PHP , designed and implemented HHVM\u2019s extension API, created libssh2, and has contributed to countless other projects across the open source world. \n Prior to joining Platform.sh, she worked at Facebook, Yahoo, the University of California at Berkeley, and the US District Courts. While at Facebook, she brought HHVM into world-wide recognition helping it to become a major runtime used by Wikipedia, Baidu, Box, and many other major Internet sites previously run on PHP. \n \n \u201cI love building things which make it easier to build things, that\u2019s why Platform.sh is such a great fit for my next chapter. In the same way that github gave the Open Source world a boost by taking all the drudge work out of social development, Platform.sh is easing the pain of deployment and operations. I can\u2019t picture a better pairing.\u201d, says\u00a0 Sara Golemon, Senior Architect, Platform.sh. \n \n \n \u201cWe were born as a distributed company with people all over the globe, which is why it\u2019s even more fun to see a senior, San Francisco based developer join our team and move to the city of lights, Paris. We have heard so much on the inverse tendency. Maybe this is going to start a trend. The coffee here is better.\u201d, says Paris based,\u00a0 Ori Pekelman, VP of Marketing and co-founder, Platform.sh. \n \n At Platform.sh, her mission will be to get all the uninteresting things out of the way so that developers can focus on the things they enjoy doing even more. \n \n About Platform.sh \u00a0Platform.sh is a continuous deployment cloud hosting solution that can scale applications from the smallest project to ones handling millions of visitors. It is ideal for agile software teams because of its unique feature: it can replicate a live production cluster in seconds and create byte-level clones of throwaway dev and staging environments, which makes testing and validation up to 7 times faster, that\u2019s weeks to days, and in some cases days to hours. We can provide 99.99% SLAs thanks to our 24/7 follow-the-sun support combined with a unique, triple-redundant architecture that\u2019s based on a high density grid of Linux micro-containers. Headquartered in Paris, France, with employees across five continents, the company serves thousands of clients worldwide, including Vivienne Westwood, The Canadian Football League, The British Council, Flixbus, and El Universo. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "A Cloud for Symfony ", "url": "https://platform.sh/blog/a-cloud-for-symfony/", "documentId": "4942a15263212c9e4901b3af29d25b23960d667e", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           A Cloud for Symfony \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Robert Douglass \n                  \n                   Chief DevRel Officer \n                  \n                  \n                 \n            \n          \n         \n         02 Dec 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         During the keynote address at SymfonyCon Berlin 2016, Fabien Potencier, CEO and founder of SensioLabs, announced  SensioCloud, a new complete cloud offering focused on the development and runtime of Symfony applications . The offer combines the services of  Platform.sh ,  Blackfire.io ,  Fastly.com , and  SensioLabs\u2019 own support services  into one comprehensive package. \n A fully maintained stack at your fingertips \n Enable any service via a few configuration lines in a YAML file. SensioCloud supports PHP 5 and 7. Each service is deployed in its own custom, lightweight LXC container for optimal performance, stability and flexibility. \n Don\u2019t see your service on the list? Ask for it, we\u2019ll make it happen. \n Some of the key advantages include a diverse set of managed services, a Composer-based build process, Symfony optimized runtimes, massive scalability (top tiers can provision >300 CPUs and nearly 6TB of RAM for one application), and a 99.99% uptime guarantee for the entire stack\u200a\u2014\u200afrom CDN to PHP to Database/Cache/Search services). Fabien pointed out that other PaaS offerings can only provide individual SLAs on the component parts, not the whole offer. \n Availability of SensioCloud is imminent\u200a\u2014\u200aearly 2017 was the guidance given during the keynote. The SensioCloud team then proceeded to give demos on the expo floor to hundreds of interested Symfony developers. \n \u00a0 \n Read the original full article on  Hackernoon . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Laravel on Platform.sh - Redis caching and the Platform CLI ", "url": "https://platform.sh/2016/12/platformsh-laravel-part-3/", "documentId": "2415f048a19d901b20223c921a09e3e40d754f9b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Laravel on Platform.sh - Redis caching and the Platform CLI \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   John Grubb \n                  \n                   Director of Customer Care \n                  \n                  \n                 \n            \n          \n         \n         02 Dec 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Hello, and welcome back to Platform.sh from scratch. In this post we\u2019ll be reconfiguring your Laravel app that we\u2019ve been working on in the previous posts to use Redis as a cache and session store, rather than the default file store. We\u2019ll also install the Platform CLI and use it to SSH into our application container and get a feel for the layout of the filesystem after it\u2019s deployed to its environment.\n \n \n   Part 1 - basic setup \n   Part 2 - databases, environment variables \n \n But first, I\u2019d like to have a brief chat about Git\u2026\n \n \n Using the tools the way they\u2019re meant to be used\n \n Ok, we\u2019ve gotten this far and we\u2019re feeling good about life, but we aren\u2019t really doing anything that mindblowing yet. We\u2019ve spent two posts configuring an app to run on a new hosting vendor, whooptidoo. Now, don\u2019t get me wrong - we specified our entire project\u2019s infrastructure in code. We are free to change around our project\u2019s infrastructure however we see fit, without having to file a ticket and wait for support to change it for us. And yet, we\u2019re still working on the Git branch that represents the production state of our website, aka \u201cMaster\u201d.\n \n Before we continue on, let\u2019s put a little insurance in place, courtesy of Git and Platform.sh.\n \n Go to your project admin screen and click the \u201cBranch\u201d button, which is the orange one in the top right. Name this new branch \u201cdev\u201d, or really whatever you prefer.\n \n \n \n Now say this out loud -\n \n \n   I will never push straight to master again \n   I will never push straight to master again \n   I will never push straight to master again \n \n I\u2019m serious. This is important. You may have worked with Git branches before, and you might be familiar with the stress saving benefits of using them, but you\u2019ve probably never worked with a hosting vendor who makes it so dead simple to really use them in your day to day development work. In fact, when I first started this job I told people that I worked for a hosting vendor. Now that I understand the power of the tools that we provide I say\n \n \n   Platform.sh is a software company that builds tools to make your job as a developer or web application owner easier and less stressful. A big piece of that puzzle is hosting, so we also happen to host the sites with which you use our tools.\n   \n \n Now that you\u2019ve created that branch at Platform.sh you have a byte for byte copy of your master environment, complete with web accessible URL. Any work that you do from now on will land in that\u00a0 \n   dev \n   \u00a0branch before it gets merged into\u00a0 \n   master \n   . In this way you\u2019ll be able to fully QA and test out new changes before deploying them to production.\n \n This branch only exists at Platform.sh for now, so create and checkout a local\u00a0 \n   dev \n   branch to continue on.\n \n \n   git checkout -b dev \n   \n \n A new Redis service!\n \n So far we haven\u2019t actually built any logic into this application, nor have we even activated Laravel\u2019s built in user authentication feature, so let\u2019s go ahead and do that. Following along with the\u00a0 Laravel docs , run this artisan command locally to scaffold out the files that are required.\n \n \n php artisan make:auth\n \n \n You can run the migration locally with\u00a0 \n   php artisan migrate \n   \u00a0but you\u2019ll also want to add this to the bottom of your\u00a0 \n   .platform.app.yaml \n   \u00a0file -\n \n \n hooks:\n  deploy: |\n    php artisan migrate --force\n \n \n Per the previous post, this will run the database migrations for you when you deploy your app on Platform.sh. At this point you can add, commit, and push to Platform.sh and experience the joy of having bona fide user auth in just a few minutes. Thanks Taylor!\n \n Now that you\u2019ve committed that, let\u2019s head back over to the\u00a0 \n   config \n   \u00a0folder and switch from using the default\u00a0 \n   file \n   \u00a0session store in favor of the Redis store. At the top of\u00a0 \n   config/session.php \n   , change the\u00a0 \n   SESSION_DRIVER \n   \u00a0setting from\u00a0 \n   file \n   \u00a0to\u00a0 \n   redis \n   . As long as we\u2019re at it, let\u2019s also go to\u00a0 \n   config/cache.php \n   \u00a0and change the default\u00a0 \n   CACHE_DRIVER \n   setting to\u00a0 \n   redis \n   \u00a0as well. Now let\u2019s set up your app to use Redis.\n \n In your\u00a0 \n   .platform/services.yaml \n   \u00a0file you\u2019re going to add a new Redis service -\n \n \n rediscache:\n    type: redis:3.0\n \n \n and in your\u00a0 \n   .platform.app.yaml \n   \u00a0file we\u2019re going to add that new service to the\u00a0 \n   relationships \n   \u00a0section -\n \n \n relationships:\n  database: \"pgsql:postgresql\"\n  redis: \"rediscache:redis\" # this is new!\n \n \n This is all that\u2019s required on our end to add a new service to your project, but you\u2019ll need to \u201cenhance\u201d your app just a bit to make use of it. In the previous post we added to the top of the\u00a0 \n   config/database.php \n   \u00a0file to enable your app to find the Postgres database that we\u2019re using. That file also contains the configuration for Redis, so go there now and change this -\n \n \n $config = new Platformsh\\ConfigReader\\Config();\n if ($config->isAvailable()){\n$pltrels = $config->relationships;\n$database = $pltrels[\u2018database\u2019][0];\nputenv(\u201cDB_CONNECTION={$database[\u2018scheme\u2019]}\");\nputenv(\u201cDB_HOST={$database[\u2018host\u2019]}\");\nputenv(\u201cDB_PORT={$database[\u2018port\u2019]}\");\nputenv(\u201cDB_DATABASE={$database[\u2018path\u2019]}\");\nputenv(\u201cDB_USERNAME={$database[\u2018username\u2019]}\");\nputenv(\u201cDB_PASSWORD={$database[\u2018password\u2019]}\");\n}\n \n \n to this -\n \n \n $config = new Platformsh\\ConfigReader\\Config();\n if ($config->isAvailable()){\n$pltrels = $config->relationships;\n$database = $pltrels[\u2018database\u2019][0];\nputenv(\u201cDB_CONNECTION={$database[\u2018scheme\u2019]}\");\nputenv(\u201cDB_HOST={$database[\u2018host\u2019]}\");\nputenv(\u201cDB_PORT={$database[\u2018port\u2019]}\");\nputenv(\u201cDB_DATABASE={$database[\u2018path\u2019]}\");\nputenv(\u201cDB_USERNAME={$database[\u2018username\u2019]}\");\nputenv(\u201cDB_PASSWORD={$database[\u2018password\u2019]}\");\nif(isset($pltrels[\u2018redis\u2019])) {\n$redis = $pltrels[\u2018redis\u2019][0];\nputenv(\u201cREDIS_HOST={$redis[\u2018host\u2019]}\");\nputenv(\u201cREDIS_PORT={$redis[\u2018port\u2019]}\");\n};\n}\n \n \n That is all that\u2019s required to enable your app to be able to use the Redis service in your Platform.sh environment. Add, commit, and push!\n \n \n   git push platform dev \n   \n \n While that\u2019s building, let\u2019s install\u00a0 the Platform CLI .\n \n The Platform CLI\n \n As the docs say, \u201cthe CLI is the official tool to use and manage your Platform.sh projects directly from your terminal. Anything you can do within the Web Interface can be done with the CLI.\u201d Fun fact, the project management interface is actually an AngularJS application, and both it and the CLI interact with the same set of APIs on the backend to manage your project. Almost anything that you can do from the UI you can also do from the CLI, and vice versa.\n \n Follow the instructions\u00a0 in this section \u00a0to install the CLI, and do make sure you read the rest of that docs page for some more background information.\n \n Logs!\n \n Let\u2019s use the newly installed CLI to check out some logs, since logging is crucial to knowing what\u2019s going on inside not just your application but also the environment in which it\u2019s running. Running\u00a0 \n   platform logs \n   \u00a0will give you several options for which log you\u2019d like to inspect -\n \n \n > platform logs\nEnter a number to choose a log:\n  [0] access\n  [1] deploy\n  [2] error\n  [3] php.access\n  [4] php\n \n \n Let\u2019s check out the\u00a0 \n   deploy.log \n   \u00a0and see what goes on in there -\n \n \n [2016-10-03 17:23:01.523855] Launching hook 'php artisan migrate --force'.\n Migration table created successfully.\nMigrated: 2014_10_12_000000_create_users_table\nMigrated: 2014_10_12_100000_create_password_resets_table\n \n \n So the deploy log is actually the stdout output from whatever you have in your\u00a0 \n   .platform.app.yaml \n   \u00a0file in the\u00a0 \n   hooks.deploy \n   \u00a0section. Pretty handy for debugging as you\u2019re building up new steps. By default, the\u00a0 \n   platform logs \n   \u00a0command will just\u00a0 \n   cat \n   the entire file out to your screen, but you can also pass the name of the log that you want to access as an argument to the command, and pass it a flag\u00a0 \n   --tail \n   \u00a0if you want to tail the log, like so -\n \n \n >  platform logs --help\nCommand: environment:logs\nAliases: log\nDescription: Read an environment's logs\n Usage:\nplatform environment:logs [\u2013lines LINES] [\u2013tail] [-p|\u2013project PROJECT] [\u2013host HOST] [-e|\u2013environment ENVIRONMENT] [-A|\u2013app APP] [\u2013] [ ] \n Arguments:\ntype                           The log type, e.g. \u201caccess\u201d or \u201cerror\u201d \n Options:\n\u2013lines=LINES              The number of lines to show [default: 100]\n\u2013tail                     Continuously tail the log\n-p, \u2013project=PROJECT          The project ID\n\u2013host=HOST                The project\u2019s API hostname\n-e, \u2013environment=ENVIRONMENT  The environment ID\n-A, \u2013app=APP                  The remote application name\n-h, \u2013help                     Display this help message\n-q, \u2013quiet                    Do not output any message\n-V, \u2013version                  Display this application version\n-y, \u2013yes                      Answer \u201cyes\u201d to all prompts; disable interaction\n-n, \u2013no                       Answer \u201cno\u201d to all prompts\n-v|vv|vvv, \u2013verbose           Increase the verbosity of messages \n Examples:\nDisplay a choice of logs that can be read:\nplatform environment:logs \n Read the deploy log:\nplatform environment:logs deploy \n Read the access log continuously:\nplatform environment:logs access \u2013tail \n Read the last 500 lines of the cron log:\nplatform environment:logs cron \u2013lines 500\n \n \n Merging\n \n So your dev branch should be done building by now. Check out that everything is working the way that you expect, and if it is, let\u2019s merge the dev branch into master. This will constitute a production deployment. You can either click the \u201cMerge\u201d button in your project admin UI, or you can run this from the CLI -\u00a0 \n   platform merge \n   . This will give you some interactive output so you can confirm that you\u2019re merging into the environment that you want.\n \n One last trick for now - run\u00a0 \n   platform ssh \n   \u00a0from the root of your project. As expected, this will open up an SSH session into your application\u2019s PHP container, so you can get a feel for what goes on in there. A few tips -\n \n \n   The root of the application will be\u00a0 \n     /app \n     \u00a0and the user will be\u00a0 \n     web \n     . \n   Those very same logs can be found at\u00a0 \n     /var/log \n     , just like normal! \n   You can get a list of running processes the same as normal too -\u00a0 \n     top \n     . You\u2019ll see that there\u2019s not really anything going on in there beyond what your app needs to run, since OS level processes are not running in your LXC container. \n   Every app container has a Java executable. There be dragons, but you could theoretically whip up some fairly complex setups with Java dependencies if you ever needed to. \n \n By the way, we also have Python, Ruby, and NodeJS application containers in addition to PHP, so the days of agencies and businesses having to trot around to several different vendors to cover all of their various technology needs are effectively over.\n \n That concludes this post, and the series! We\u2019ll dive into other features in other posts, but what you\u2019ve learned in the past 3 posts you should give you about 90% of what you need to orient yourself within our product.\n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Screencast - Basic Platform.sh Workflow ", "url": "https://platform.sh/2016/12/screencast-basic-platformsh-workflow/", "documentId": "3da1a2e28f80c12d06c2ab3766081f31c87ad8b7", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Screencast - Basic Platform.sh Workflow \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   John Grubb \n                  \n                   Director of Customer Care \n                  \n                  \n                 \n            \n          \n         \n         05 Dec 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Hello, and welcome back to the Platform.sh from Scratch series! \n As we are likely familiar (from being told if not from actual practice) - Git makes it wonderfully easy to use branching and merging techniques to work on various features of your project. This workflow allows you to keep your \u201cmaster\u201d branch (representing the production state of your project) in a 100% working state while you develop features and break things in other branches. \n The biggest friction point with this workflow has always been when you need to show your work to someone else. This often entails a laborious server setup process so that you can have a hosting environment for your feature branch. The pain and expense of this process can lead to many folks giving up on the branching and merging features of Git and just committing straight to master. This of course comes with its own host of problems, not least is breaking your website when someone pushes a bad change. \n This struggle is exactly what Platform.sh was born to relieve. In this screencast I show some of the basic features of Platform.sh and how they help you to restore sanity to the development process ultimately making it faster, easier, and safer to get your features to your adoring audience. \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Application updates for PHP containers ", "url": "https://platform.sh/2016/12/app-updates-php/", "documentId": "6b9493fdd5d8e05c096bb6ba9575ec886e5b99ec", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Application updates for PHP containers \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         09 Dec 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         PHP was Platform.sh\u2019s first supported language, and so has had a few quirks as we\u2019ve grown to support more programming languages. Those quirks have resulted in a few limitations to functionality that we didn\u2019t like, and you probably didn\u2019t like, either.\n \n Fortunately, we\u2019ve refactored our container support to reduce the uniqueness of PHP and added a bit of functionality along the way.\n \n \n There\u2019s two main improvements for PHP containers and one small change.\n \n \n   .environment \n   \u00a0files\n \n On all languages, we now support an extra configuration file named\u00a0 \n   .environment \n   , which should be at the top-level of an application (as a sibling of the\u00a0 \n   .platform.app.yaml \n   \u00a0file in a multi-app setup). This file will get sourced as a bash script by the system when a container boots up, as well as on all SSH logins. The main use for it is to set extra environment variables or modify the PATH. The latter case is useful to allow tools like Drush, Drupal Console, or the Symfony Console to be installed locally by Composer but still available to execute without explicitly specifying a full path name.\n \n See the\u00a0 documentation \u00a0for more details.\n \n \n   web.commands.start \n   \u00a0support\n \n In Node.js, Ruby, and Python, there are several application runners available such as uwsgi and gunicorn for Python, Unicorn for Ruby, and pm2 for Node.js. To allow users to pick their own, we support a directive in the application configuration file to start a process when a container boots up after deploy. For example, most Node.js applications will have a block like this in their\u00a0 \n   .platform.app.yaml \n   \u00a0file:\n \n \n web:\n  commands:\n    start: \"PM2_HOME=$PLATFORM_APP_DIR/run pm2 start index.js --no-daemon\"\n \n \n While on Ruby, it would look something like this:\n \n \n web:\n  commands:\n     start: \"unicorn -l $SOCKET -E production config.ru\"\n \n \n That option wasn\u2019t available for PHP as PHP only has one applicable application runner, PHP-FPM. With the latest changes, though, it is now available for any container, including PHP.\n \n What can you do with it? Any command you want. Let us know what cool things you\u2019ve done with it.\n \n Be aware, however, that using\u00a0 \n   web.commands.start \n   \u00a0will skip starting the PHP-FPM runner. If you still want it to run, you can start FPM yourself in addition to your own commands. The effective default if you don\u2019t specify anything is:\n \n \n web:\n  commands:\n    start: \"/usr/sbin/php-fpm7.0\"\n \n \n (Adjust for your appropriate PHP version.)\n \n Log files change\n \n This isn\u2019t as much a feature as it is a heads-up. Previously, PHP error messages from your application would get logged to\u00a0 \n   /var/log/php.log \n   . Every other app container would log messages from your application to\u00a0 \n   /var/log/app.log \n   . With the latest changes, all containers now use\u00a0 \n   app.log \n   .\n \n That means as of your next deploy, your PHP error logs will be in\u00a0 \n   /var/log/app.log \n   . That likely won\u2019t have any impact on you, unless you have an auxiliary script that is reading the PHP log file. (Of course, we know your code is perfect and never has errors so it shouldn\u2019t matter anyway.)\n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Screencast - Configuring your Platform.sh Project ", "url": "https://platform.sh/2016/12/screencast-yaml/", "documentId": "b993d17ff3b4a02df084ecaad526047dbb52cd70", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Screencast - Configuring your Platform.sh Project \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   John Grubb \n                  \n                   Director of Customer Care \n                  \n                  \n                 \n            \n          \n         \n         19 Dec 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Hi there! I come before you bearing the gift of a new screencast. Today\u2019s offering will be a quick, technical runthough of how you set up your project to run on Platform.sh. \n Included is a brief overview of the concept of \u201cinfrastructure as code\u201d. I\u2019ll then walk you through our implementation and how it helps you to manage your project\u00a0 and \u00a0its dependencies without having to wait on support to do it for you. \n Enjoy! \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "What's your timezone? ", "url": "https://platform.sh/2016/12/what-is-your-timezone/", "documentId": "f3db2711763fe93b17cefb0beff1c654c99cff8d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           What's your timezone? \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         27 Dec 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         As you may already know, Platform.sh is a fully distributed company. \n I can even say that we were\u00a0 born as a distributed company . Since day one, we have had people all over the globe (USA, Canada, France, UK, Germany), and we have now expanded with people in Hong Kong, Australia, India, Greece, Italy, and Serbia. \n We all work remotely or in our different offices in Paris, Cologne, London, or San Francisco. 100% of our tools and communication happen in the cloud, and are available to everyone all the time. \n We also keep adding or replacing existing tools based on everyone\u2019s needs or ideas. \n Lately, as we have grown and hired new people, some of our teammates complained about not knowing when someone would be available for a chat, or when to schedule meetings and whatnot. \n After some Googling, I found about\u00a0 Timezone.io , which seemed to solve our issue. However, it requires the team page to be public, which wasn\u2019t acceptable for some of our teammates. \n After some more Googling, I found this\u00a0 GitHub repository \u00a0which is a Node.js clone of\u00a0 Timezone.io \u00a0that can be self-hosted. \n Great, Platform.sh supports Node.js! And at Platform.sh, we like eating our own dog food ;) \n I quickly got it running on Platform.sh by simply adding the configuration files. I opened a\u00a0 GitHub Pull Request \u00a0so you can try it yourself. \n I then got an SSL certificate for our internal domain\u00a0 timezone.internal.platform.sh \u00a0(the site is behind authentication for the reason mentioned above). I also integrated the Platform.sh project with our GitLab instance so that everyone can easily make changes and maintain the application. \n It is now available for everyone at Platform.sh, and is displayed in various places, like the title of our #sales Slack channel :) \n \n \u00a0 \n Happy timezoning.. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "PHP multiple partnership puts Platform.sh at the forefront of PHP hosting in 2016 ", "url": "https://platform.sh/2016/12/leader-php-hosting-multiple-partnerships/", "documentId": "9910f6031b94b045a09a67e77e7d8c44be4469fe", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           PHP multiple partnership puts Platform.sh at the forefront of PHP hosting in 2016 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         15 Dec 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh is the PaaS for major PHP vendors: Magento, eZ Systems, TYPO3 and SensioLabs \n San Francisco, United States. 15 December, 2016 \u00a0\u2013 Originally built for Drupal, Platform.sh has cemented its position as the preferred PaaS provider for major PHP players: eCommerce with\u00a0 Magento \u00a0and CMS with\u00a0 eZ Systems \u00a0and\u00a0 Typo3 , and now the PHP framework Symfony -\u00a0 SensioCloud . (Sensio Labs, the software company behind Symfony announced the launch of SensioCloud, a cloud solution powered by the Platform.sh PaaS.) With these partnerships in place, Platform.sh guarantees developers, agencies and companies maximum scalability, stability, and performance for their PHP projects and services. \n \n PHP continues to rule the world as the most popular server-side programming language for websites and applications, reportedly representing\u00a0 82% of all websites . It has been used by many companies and startups such as Facebook, Slack, Google, and MailChimp to build their websites and products. \n \n 2016 saw a great leap in its speed and performance and will continue to grow in popularity for developers and agencies into 2017 and beyond. In support of the growth and strength of the PHP language, Platform.sh built key partnerships with major PHP players to help companies achieve faster and more robust performing websites and increased developer productivity no matter their PHP stack. \n \n To start a one month free trial of your favourite PHP stack using Platform.sh\u2019s PaaS, visit\u00a0 https://platform.sh/hosting/php/ \u00a0or contact us directly on\u00a0 sayhello@platform.sh \u00a0to discuss your project\u2019s needs. \n About Platform.sh \u00a0Platform.sh is a continuous deployment cloud hosting solution that can scale applications from the smallest project to ones handling millions of visitors. It is ideal for agile software teams because of its unique feature: it can replicate a live production cluster in seconds and create byte-level clones of throwaway dev and staging environments, which makes testing and validation up to 7 times faster, that\u2019s weeks to days, and in some cases days to hours. \n We can provide 99.99% SLAs thanks to our 24/7 follow-the-sun support combined with a unique, triple-redundant architecture that\u2019s based on a high density grid of Linux micro-containers. \n Headquartered in Paris, France, with employees across five continents, the company serves thousands of clients worldwide, including Vivienne Westwood, The Canadian Football League, The British Council, Flixbus, and El Universo. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "2016, The Year We Won PHP ", "url": "https://platform.sh/2017/1/the-year-we-won-php/", "documentId": "8d5f92723070cb4ec1e38c4c1e35d61b46e6103b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           2016, The Year We Won PHP \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         09 Jan 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         First, a joyous and productive 2017 to you all. 2016 was really great for us as a growing company and the new year is a great time to look back and share with you, our dear clients and community, our journey. \n The title of the post is audacious, very possibly a hyperbole. There are bigger players than us out there. We don\u2019t claim the highest market share. We claim we have become an obvious choice for ambitious projects. Let me make the case. \n Over the course of last year, the leading vendors in the PHP enterprise space Magento, eZ Platform, Typo3, and most recently Symfony - the PHP framework of frameworks - announced their cloud platform to be on Platform.sh. Since its inception two and a half years ago, Platform.sh has already become a leader in the whole PHP space. How did this come about? \n Some technologies were born to be great, some have had greatness thrust upon them. \n We set out working on Platform.sh with humble ambitions. As a company we were going to solve eCommerce. We believed that Open Source was the way and we believed that the best Open Source platform we could leverage to make an eCommerce solution was Drupal, with its correct mix of wide-spread adoption, code quality and extensibility. This was how Drupal Commerce was born. \n We originally built Platform.sh to be the hosted version of this project, with a bunch of unique features that would make it the killer eCommerce service: built-in high-availability, and unmatched development to production workflow. We had to go deep and low for that (when we started the project no one was talking about containers, micro-services or hybrid cloud infrastructures, but we knew it was the way to go.) \n To cut a long story short a few short months after presenting Platform.sh to the world the reaction was tremendous. Our clients loved it. But they also quickly asked us\u2026 \u201cwhy can\u2019t we use this for our non-eCommerce Drupal site, what about our Symfony based projects, and Wordpress? And Magento? We use the Akeneo PIM alongside the Magento, and there is a NodeJs based notification service\u2026\u201d. \n The 2016 pivot \n So like startups do, we pivoted. Commerce Guys has become its own company. And Platform.sh as an independent entity set out to conquer the PaaS market. This happened in the beginning of 2016. We have more than doubled our team since then. We now have people in 10 time zones from the West Coast to the East Coast, from Europe to Asia. \n Why keep the PHP focus? \n The technology we built was runtime-agnostic. Setting out as an independent company we could very well have shifted our focus from Drupal and PHP. We chose not to. \n First a couple of words on the PHP space. There was a moment three or four years ago when there was a widespread perception that PHP was faltering. That it belonged to the realm of legacy, soon to be replaced. Of course, that was before the likes of Slack were born. Before PHP 7.0 went out of the gate. Before Composer took hold. Before Drupal 8.0 was finally released. Before this world started standardizing on Symfony. Today, we know PHP is here to stay, with both its great advantages and its weaknesses. It is powering much of the internet, from Facebook and Wikipedia to the millions and millions of sites running Wordpress and Drupal. It is powering most of online commerce. It is chosen by startups and enterprises alike. \n We understood this from the beginning. We understood its importance. \n Of course this does not mean we dislike other programming languages and environments. Our team is composed of true polyglots and within it you will find as many people that love functional programming from Lisp addicts to Elixir fans. Both Python and Ruby are loved. Rust is a passion. GoLang highly considered for what it does best. Then there is the herd of C nerds. We even have people that like NodeJS. We really do. \n But at the time when PHP seemed to lose its lustre, everybody in the new shiny tools department started building for the new shiny languages. This happened for probably two reasons: \n \n\t Shiny people like shiny stuff (and who cares if 80% of the web works with something else). \n\t Doing PHP right is hard. Harder than the other stuff. \n \n Why is PHP hard? Because of its immense popularity, PHP is more diverse. It is diverse in the number of frameworks, in the number of versions people run, in the quality of code. And because of its execution model, the topologies in which PHP applications may run can vary wildly. \n As such we built a lot of flexibility in. We made it build-oriented so we can support any form of project. Unlike all other PaaS providers we added support for non-ephemeral local storage, so you could run even legacy PHP applications and still benefit from the cloud. \n As such, we built it for highly-available micro-services architectures. You can get\u00a0 RabbitMQ, MongoDB, Redis, Postgres, Elastic Search, Solr \u00a0and of course\u00a0 MySQL \u00a0available in every Cluster. Doing PHP right meant that we also built it so that you can easily migrate from your \u201cLegacy PHP\u201d to this \u201cModern PHP\u201d world. A world where no one has root access to a production server. A world of automated consistent deployments. \n PHP Leadership \n It was our mission to make it easy to do PHP right. That is why we built Platform.sh for \u201cModern PHP\u201d from the beginning. This is also why early on we added NodeJS, Python, Ruby or Java (modern PHP is no longer as island). And we will be adding ever more services and runtimes which won\u2019t make us lesser of a PHP platform, on the contrary it makes us a better one. Those that have specifically built their systems to run Drupal 7.0 with PHP 5.6 find themselves with an aging platform ill-equipped for new requirements, less performant and less agile. But going wide, we have better and more up-to-date support not only for legacy Drupal and PHP, but also for everything new that is coming. Count on us to be the best Drupal 9.0 hosting service; the best Symfony 4.0 one. The coolest Magento 3.0. \n Appreciating this mindset and impressed by our technology, major PHP folks also joined us. We announced the arrival of Larry Garfield, AKA Crell, as our DevEx director and Sara Golemon, of HHVM fame, left Facebook in San Francisco to join our R&D team. Sandro Groganz, a true PHP community veteran joined us just last week to work shore-up our marketing automation team. These people complement our foundation team, that includes people like Robert Douglass and Damien Tournoud. This is how serious we were about investing in PHP by recruiting the best of talents. \n In return, we saw how seriously the PHP world is taking us. As early as February 2016, Magento announced their flagship product Magento Enterprise Cloud Edition as a white-label of Platform.sh. Early December, it was announced that the Symfony cloud platform Sensio.Cloud is using Platform.sh as well. In between, we signed deals with TYPO3 community and eZ Systems. \n All the while, hundreds of Drupal and Drupal Commerce, Wordpress and custom PHP sites launch every week on Platform.sh. And we are getting more and more people that deploy multi-app and micro-services oriented architectures (with more and more NodeJS, Python and Ruby apps in there as well). \n PHP is here to stay, and we are here to make it run \n Over the last days of 2016 and the first of 2017 we announced\u00a0 PHP 7.1 \u00a0support as well as\u00a0 Private Packagist \u00a0support, and today we can announce\u00a0 HTTP/2 \u00a0active by default on all projects. Making all the fastness even faster. You can fully expect even more incredible features to be coming your way. We mean to keep on being the best Drupal and the best PHP hosting platform. Stay posted. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "This week in new features - Build-time variables ", "url": "https://platform.sh/2016/12/project-variables/", "documentId": "77a22b879e855f8c5633f3f2f3eadf27e5d12c0c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           This week in new features - Build-time variables \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         20 Dec 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         As we\u00a0 wrote about recently , all of the inputs to an application running on Platform.sh are clearly defined, predictable, and with one exception entirely under your control as a user. We\u2019re happy to announce that we\u2019ve added one more input, and it\u2019s also under user control: Project-level variables available at build time. \n Project variables are, as the name implies, just like the\u00a0 other variables \u00a0we already support but bound to a project rather than to a specific environment. That is, they become available for all environments in a project unconditionally rather than just selected environments/branches. If a given environment has a variable of the same name it will override the project variable, but otherwise a project-level variable will be available to all environments. \n \u201cSo what?\u201d you may say. Variables defined on the master environment already inherit that way, so what\u2019s the big deal? The big deal is that\u00a0 project variables are available at build time, too. \n Environment variables are only available on a running container. That is, they\u2019re available to the running application and can be used in a deploy hook, but not in a build hook. Project variables, by contrast, are also available during a build hook. \n Why would you want build-time variables? Shouldn\u2019t the build be controlled entirely by what\u2019s in Git? Generally speaking yes, but just as you may need runtime values that are not stored in Git, such as API keys, you may need secret values for the build process, too. The most common use for that is for downloading non-public 3rd party dependencies. In other words, and at the risk of burying the lead: \n We now support private Composer repositories on Platform.sh \n That includes the newly-announced\u00a0 Private Packagist . \n We\u2019ve written up a tutorial to show how to use a\u00a0 private Composer repository . Give it a try. \n There are of course plenty of other things you can do with build-time variables. Let us know what else you are able to do with them. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Next Wave PHP now supported ", "url": "https://platform.sh/2016/12/php-71/", "documentId": "55ae156468f908e9c6c3474cd2b4f48e9d276758", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Next Wave PHP now supported \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         29 Dec 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We were hoping to have this announcement out in time for Christmas gift but it was not to be. Instead it\u2019s an early New Years gift. Nonetheless, we\u2019re happy to announce a whole slew of new options for PHP projects to make them faster and more robust on Platform.sh: PHP 7.1 support, async support, and PThreads support. \n PHP 7.1 \n Big ones first:\u00a0 As of today we offer support for PHP 7.1 . It\u2019s just like PHP 7.0, only better in every way. To use it, simply swap out the\u00a0 type \u00a0line in your\u00a0 application configuration file : \n \n type: 'php:7.1'\n \n And now when deployed your application will use PHP 7.1. That\u2019s it, you\u2019re done. We recommend doing so if you can. PHP 7.1 includes a number of improvements, including a small performance boost and a number of new syntactic features. See the PHP announcement and\u00a0 Migration Guide \u00a0for all the shiny goodness. \n This is also a good time to remind everyone that if you\u2019re running a version of PHP older than 5.6 you are running unsupported software, often with known security vulnerabilities, and after this week even 5.6 will get only critical security fixes. See the\u00a0 PHP Supported Versions \u00a0page for details. We strongly urge you to upgrade to PHP 7.0 or 7.1 as quickly as possible, for the continued support, vastly improved speed, and plethora of new features. It\u2019s a one line, possibly one character change to update your site on Platform.sh. Why not make that your New Years resolution? \n Async PHP support \n PHP usually runs as a CGI process, and at Platform.sh we use PHP-FPM behind Nginx: a fairly standard and robust configuration. However, CGI-style PHP has some limitations such as no support for long-running processes, WebSockets, or other new fanciness. \n A handful of projects have sought to address that by implementing their own non-blocking IO libraries, allowing PHP to run as a single-process asynchronous process in much the same way as Node.js. The most notable of these are\u00a0 ReactPHP \u00a0and\u00a0 AmPHP . Both run as their own command line application and listen to incoming requests through Nginx, allowing them to handle WebSockets, run as queue workers, or other such tasks. \n Thanks to our new support for\u00a0 start commands on PHP containers , it\u2019s now very straightforward to to spin up a ReactPHP- or AmPHP-based container on Platform.sh. We\u2019ve provided a basic\u00a0 Hello World ReactPHP example \u00a0as well as a WebSocket chat server in both\u00a0 ReactPHP \u00a0and\u00a0 AmPHP \u00a0to show how it works, but of course your WebSocket or queue processing decisions are limited only by your imagination. \n What\u2019s more, if you\u2019re running on the new-and-shiny PHP 7.1 container then\u00a0 ext/event \u00a0is available as well.\u00a0 ext/event \u00a0moves the core event loop of supporting async libraries down into optimized C code for even more speed. It\u2019s also trivial to enable, so we recommend using it whenever possible. Just add the following to your\u00a0 .platform.app.yaml \u00a0file and ReactPHP will start using it automatically: \n \n runtime:\n    extensions:\n        - event\n \n Pthreads: Multithreaded PHP \n Ya, rly! \n The\u00a0 Pthreads extension \u00a0is a PHP extension that offers support for real, honest-to-goodness posix threads in PHP. It\u2019s not always easy to setup, though. For one, it only works with a special Zend Thread Safe (ZTS) version of PHP, which is not the default on most distributions. It also then requires an extra extension to work. To top it all off, pthreads is only compatible with the CLI version of PHP, not the CGI version. Like async support, though, that makes it a very good choice for queue workers, WebSockets, and other stand-alone persistent daemons. \n For that reason, we\u2019re happy to announce that our new PHP 7.1 containers are running PHP 7.1 ZTS, and include the Pthreads extension. In our testing we found no performance penalty to using the ZTS version of PHP (in fact it was very slightly faster in general, which is quite curious!), and enabling Pthreads via\u00a0 .platform.app.yaml \u00a0is dead simple: \n \n runtime:\n    extensions:\n        - pthreads\n \n Poof. You can now use the\u00a0 web.commands.start \u00a0directive to start a script that uses Pthreads and do\u2026 whatever you want it to do. Queue workers, WebSockets, something else weird-but-cool? Let us know if you find something especially cool to do with it. \n Happy New Year, PHP! Let\u2019s build an amazing (and fast!) 2017. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Your instances safe from MongoDB Apocalypse on the Platform.sh PaaS ", "url": "https://platform.sh/2017/1/mongodb_apocalypse/", "documentId": "ac4ca8a57c4ba49b0240f58b39f1aa38c2e5831b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Your instances safe from MongoDB Apocalypse on the Platform.sh PaaS \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         10 Jan 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         You might have heard about the MongoDB scare with titles like:\u00a0 MongoDB Apocalypse Is Here as Ransom Attacks Hit 10,000 Servers ! \n Rest assured, your MongoDB instances are safe and sound if they are running on Platform.sh. And this is a very strong argument to why our architecture is superior to other PaaS providers. \n \n Unlike other providers, with Platform.sh all the services you use are inside the managed cluster and included in the plan\u2019s price. These are not outside services that expose application ports on the internet. This is what allows us to clone entire clusters, this is what allows us to offer a 99.99% SLA on the entire stack for our enterprise offering, but this is also a security feature. \n Each cluster has only two ways in: HTTP or SSH. Our entrypoints simply will not answer anything else. \n Your application containers in the cluster have direct connectivity to the service containers, but this happens on a non-routable IP class. There is simply no possible way for the exterior world to access a service directly. And if you are running (in micro-service style) multiple services in the cluster you can even control which has access to which services through the\u00a0  relationships  \u00a0key in your\u00a0  .platform.app.yaml  \u00a0file. Because secure by default makes sense to us. \n If you want to connect to a MongoDB instance from the exterior (to run for example an admin interface) you can still do it! But the only way to connect is through an SSH tunnel that relies on your private SSH key (  platform tunnel:open  \u00a0on the command line will do the trick). You get all the benefits, all the ease of use of running a modern stack, but none of the hassle and risks of running a patchwork of services. \n With Platform.sh you can be\u00a0 WebScale \u00a0and secure! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "New year, new Solr, new features ", "url": "https://platform.sh/2017/01/solr-63/", "documentId": "392918fcb49ab7b07aca7608d40920573820c350", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           New year, new Solr, new features \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         17 Jan 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         After ending 2016 with a\u00a0 new PHP version \u00a0and starting 2017 with\u00a0 a new HTTP version , we\u2019re happy to report that there\u2019s still plenty of new left for us to launch. This time around it\u2019s a new Apache Solr version, 6.3.\n \n \n Support for a more modern version of Apache Solr has been one of our most requested features for a while. Unfortunately some packaging issues made it more difficult than we expected but I\u2019m happy to report that we\u2019ve managed to work around them. Starting today, you can now launch a Solr 6 container by simply specifying the appropriate version in your\u00a0 \n   services.yaml \n   \u00a0file, like so:\n \n \n solrsearch:\n    type: 'solr:6.3'\n    disk: 1024\n \n \n However, you can also go a lot farther than that.\n \n The Solr 6 container is also our first container to support multiple databases (\u201ccores\u201d in Solr-speak) on a single service. Each core can have its own schema and custom configuration, and each can be mapped to a different \u201cendpoint\u201d, which can then be accessed by your application container. See\u00a0 our documentation \u00a0for more details. Over time we intend to add similar functionality to other services, too.\n \n Please note that multi-core support is only available on Solr 6.3, not on older Solr versions. Also, Solr doesn\u2019t support direct upgrades from one major version to another. If you want to upgrade your existing Solr service, create a new, additional Solr service with a new name, populate it from your application, then remove the old one.\n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Redis, now for long-term keys and values ", "url": "https://platform.sh/2017/01/persistent-redis/", "documentId": "ee097c1a1c358b2baea38eda98f7113d501c93b9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Redis, now for long-term keys and values \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         25 Jan 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Redis is a popular key-value database, well-regarded for its speed and simplicity. Platform.sh has offered a Redis service for quite some time, which is configured not to store data but to keep it only in memory. That makes it an excellent choice for a cache server, and we recommend that configuration for most projects.\n \n Of course, Redis can do far more than caching. And we\u2019re therefore happy to report we now offer a persistent configuration of Redis, too.\n \n \n Available only for Redis 3, the new service is called\u00a0 \n   redis-persistent \n   . (It seemed self-descriptive.) The only difference from the\u00a0 \n   redis \n   \u00a0service is that it is configured to store data permanently rather than toss data out when it runs out of memory (as a cache configuration would do). That also means data stored in Redis is replicated when an environment is branched, just like for MySQL, Elasticsearch, or MongoDB.\n \n The configuration for\u00a0 \n   redis-persistent \n   \u00a0is essentially the same as any other service we offer. Simply add the following to your\u00a0 \n   services.yaml \n   \u00a0file:\n \n \n redisdata:\n    type: \"redis-persistent:3.0\"\n    disk: 2048\n \n \n That will give you a new service named\u00a0 \n   redisdata \n   \u00a0that will permanently store up to 2 GB of data. (Make sure your plan size has the space available). You can then expose that service to your applications in your\u00a0 \n   relationships \n   \u00a0block and access it exactly as you would an ephemeral\u00a0 \n   redis \n   \u00a0instance. Have a look at the\u00a0 updated documentation \u00a0for more details and examples.\n \n What can you do with a super-fast persistent key-value store? Anything you want. Let us know what you did with it.\n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh is down wit' OOP ", "url": "https://platform.sh/2017/01/platformsh-at-the-oop-conference/", "documentId": "dad449b15bab83c23fe179f7f7da50a27137af6a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh is down wit' OOP \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Andrew Melck \n                  \n                   Regional Business Development Manager DACH \n                  \n                  \n                 \n            \n          \n         \n         26 Jan 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh will be getting Old Skool at the OOP conference 2017 in Munich from 30 January - 3 February, where our crew will do live-on-the-mic demos and answer your questions on our second-generation PaaS at booth 3.14. If you\u2019re lucky you might even catch some headspinning and bodypoppin\u2019. Why not check out\u00a0 Naughty By Nature\u2019s \u201cO.P.P\u201d \u00a0for some hip hop inspiration. \n \n This year\u2019s OOP Conference bears the subtitle \u201cDetails Matter\u201d, a painful truth that any developer bedeviled by regressions in the wake of a minor fix will agree with. As they move through the development to deployment process, minor mistakes can grow and upset a healthy software ecosystem. Platform.sh provides the tools to reduce and even eliminate some of the sources of errors that creep into the software lifecycle, thereby keeping projects healthy and effective. \n This approach is at the heart of the talk that our VP of Customer Success, Robert Douglass, will give at the conference. Under the title\u00a0 \u201cOrchestrated, Consistent, and Deterministic Deployment: What does it mean and how to get there\u201d , Robert will outline a best practice approach to deployment, using examples from Platform.sh. The session will start at 4:00pm on January 31st with a Q&A at the end. Robert will be available for questions on the booth or you can ask via his twitter handle\u00a0 @robertDouglass . \n Platform.sh currently offers support for PHP, NodeJS, Ruby and Python, with additional runtimes in the pipeline. We continue to add new features such as\u00a0 PHP 7.1 ,\u00a0 Solr 6.3 \u00a0and\u00a0 HTTP2 \u00a0support. \n If you\u2019re planning to go, please pop by booth 3.14 and our team will answer your questions about our\u00a0PaaS. \n \n \u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Wrap your head around custom headers ", "url": "https://platform.sh/blog/wrap-your-head-around-custom-headers/", "documentId": "56f4b186190bfb1aeaea9d994da38e7b7dd9ec57", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Wrap your head around custom headers \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         22 Jun 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         One of the requests we've gotten in the past few months is the ability to customize the HTTP headers that get sent with static assets. For requests coming from a PHP or Ruby application it's easy enough to send any headers you want, but for static files there was no way to customize the headers. While that seems like an obscure and nerdy feature it's actually quite important. Custom headers are necessary for supporting atypical file types, for CORS security measures, or for \"Same-Origin\" restrictions to prevent click-jacking. \n So we said to ourselves, \"selves, we try to be a flexible host, we should just add that feature.\" And ourselves responded \"OK, let's do that.\" \n And it's now available on all new projects, too. \n \n On all new projects you can now specify additional headers to send in your  .platform.app.yaml   file. Those can apply to all files (say for a Same-Origin or CORS header) or selectively by file extension or any other regular expression. For instance, the following lines will add an  X-Frame-Options   header to every static file. \n \n web:\n    locations:\n        \"/\":\n            # ...\n            headers:\n              X-Frame-Options: SAMEORIGIN\n \n \n Again, though, that applies only to static files; for responses from your application you can still set whatever headers you need directly in code. See the  documentation  for more details, and the  provided example . \n For now this feature is only available for newly created projects. We'll be rolling out updates to existing projects over time. If you want to use it before that just file a support ticket and we'll bump your project to the head of the line. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Containers old, containers new, memcached support, and PHP 7.2 ", "url": "https://platform.sh/blog/containers-old-containers-new-memcached-support-and-php-72/", "documentId": "e659ea01ddfa1717aae8140486b9bde2911d28c9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Containers old, containers new, memcached support, and PHP 7.2 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         26 Jun 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         One of the advantages of a fully container-based infrastructure is that we can roll out new versions of containers to support new service versions without impacting current users. \n \n Updates galore \n  You can now upgrade when you want to, not when we want you to. To that end, we have a couple of updates to offer you, plus new support for Memcached and PHP 7.2-alpha. \n For application containers we have added support for the latest versions of  Python ,  Ruby , and  Node.js .  You can now leverage the latest and greatest those languages have to offer.  Just update your  .platform.app.yaml  file's  type  line to suit your preference: \n \n type: \"python:3.6\" \n type: \"ruby:2.4\" \n type: \"nodejs:6.10\" \n \n For the database crowd, we now offer MariaDB 10.1 and 10.2.  Both are incremental updates to  MariaDB  offering better stability and a few new features.  Switching is of course easy; just change the version number in your  services.yaml  file: \n \nmydatabase:\n    type: \"mysql:10.2\"\n    disk: 2048\n \n Memcached all the things \n Platform.sh has offered and recommended Redis for application cache data for some time.  It's robust, fast, and flexible.  Some applications don't play nice with it, though, and favor the simpler Memcached caching service.  We don't want to play favorites, so we have now added support for  Memcached 1.4 , on both Platform.sh Professional and Enterprise.  Setup couldn't be simpler.  Just add the following to your  services.yaml  file: \n \ncache:\ntype: \u201cmemcached:1.4\u201d\n \n and add a relationship to it in your  .platform.app.yaml  file.  On your next deploy you'll have a Memcached service running that you can connect to and start reading and writing to your heart's content.  See the  documentation  for the few extra details. \n Help PHP test PHP \n PHP 7.2 is still in alpha, but due out later this year.  Now that there are alpha releases available, however, this is a great time to test your applications and make sure they will continue to work properly. \n To make that even easier we've added an experimental PHP 7.2 container to Platform.sh.  Please do not use it in production yet!  PHP 7.2 is not yet finalized and we will not support PHP 7.2 in production environments until it is, but you can try it out on a dev branch easily by setting your  type  field: \n type: \u201cphp:7.2-rc\" \n If you try it out and find something in your application breaks, congratulations, you may have found a bug!  Help the PHP development team by reporting it to them so that it can be fixed. \n We'll be releasing updates to the 7.2-rc container as new alphas and betas of PHP are released.  Once PHP 7.2 is released late this year we'll remove the  -rc  and offer it as a fully supported PHP version. \n One Two more things \n And finally, we're experimenting with two new languages on Platform.sh: Go and Java.  Both are highly powerful and popular languages in server-side programming and service-oriented architectures; you know, the kind of thing that Platform.sh excels at. \n For the time being both are only alpha support, and our tools around them are still subject to change.  Don't launch real applications with them just yet.  If you're interested in being part of our trial program with either language reach out to our sales department and we'll see if we can help you help us help you. \n Whew!  It's been a busy few weeks.  Enjoy your containers! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "The Ultimate Third Party Resources List on Using Platform.sh ", "url": "https://platform.sh/blog/the-ultimate-third-party-resources-list-on-using-platformsh/", "documentId": "c436db9ad16613c181caf7087b02299cbe8b5ca3", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The Ultimate Third Party Resources List on Using Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         16 May 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         For first-time users of Platform.sh, especially those who had to change up their processes, it can take some time to get used a new way of working. Aside from  our own docs , where you can access tutorials and other information, I found that our community has also been pretty active in sharing their own experiences of using Platform.sh. \n So I thought I\u2019d start compiling the  different resources  from folks who have done some cool stuff,\u00a0into one place. You\u2019ll find a wide variety of topics covered: \n \n\t \n\t Guides on migrations, debugging, workflows and more  \n\t \n\t \n\t Examples on NodeJS, Python, PHP, and Ruby \n\t \n\t \n\t Integration scripts  \n\t \n\t \n\t Various handy tools  \n\t \n \n Check them out to help you on your different projects.  \n Don\u2019t see a guide or example on something you do well on Platform.sh and think others should know about it? Why not write up a post yourself and share it with us. If you\u2019ve already written or presented a topic, feel free to send a pull request to get it added to this growing list.  \n Check out the list:\u00a0 https://docs.platform.sh/tutorials/third-party.html \n \u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Getting to 50/50 women men participation: Polyconf, a very diverse conference ", "url": "https://platform.sh/blog/getting-to-5050-women-men-participation-polyconf-a-very-diverse-conference/", "documentId": "f2750abbe0dbaa764e370d80f4b2638f24351c6a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Getting to 50/50 women men participation: Polyconf, a very diverse conference \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         08 Jun 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         In a short month  Polyconf , an incredibly cool conference, will be held for the first time in Paris (July 7th to 9th). \n PolyConf is a three-day, single track, multi-disciplinary, non-profit conference on advanced technologies for programmers interested in polyglot approach to software development. It\u2019s Rust meets Python, meeting Javascript, surrounded by Elixir and Erlang, filled with Pony Lang. And ZetaVM. \n I went to the earlier version in Poland and it was simply one of the best conferences I have ever been to. And this year's line-up is amazing. I can't wait to hear Maxime Chevalier-Boisvert's ZetaVM talk, \"You're the tech lead, now what?\" by Erin O'Neil, or the bunch of Haskell, Rust, Erlang and Pony (!) talks. It is very much \"StrangeLoop Parisian Edition\". \n At Platform.sh we love the polyglot approach to programming. Choose the right tool. Diversity in your team is good from any possible point of view.\u00a0We code in Golang and Python. We use Drupal. The team has Lisp people, Elixir fans and of course Rust people. I personally still am very much attached to Ruby. And Javascript. Everybody does Javascript. \n For those of you reading this who are early Platform.sh customers... you might have met us when we were very much targeting the PHP world... you might want to look at the breadth of our current support... You can run Python, Ruby, NodeJS, Golang... with multiple languages in the same cluster... and multiple managed data backends from MySQL to cool stuff like InfluxDB all strung together. \n Appealing as it was to us,\u00a0all this talk about diversity in languages is just one side of diversity. \n When the organisers contacted us, we were more than happy to support the conference. But one of the things that really made us want to reach out is the strong emphasis on the other side of diversity - specifically the inclusion of women. \n It is a complex subject... and we believe it is one of the most pressing ones in our domain. This is something that as a community I believe we have failed on miserably and we continue to fail.\u00a0 \n When it came to PolyConf, two main issues remained to be solved with regards to gender diversity: \n One is speakers. There are many reasons why women are under-represented. And I believe it is often down to money. If conferences are willing to cover travel expenses for women, well, they get more women speakers. That is why part of our sponsorship goes towards covering expenses. So calling out to talented women far and wide, if you're interested in doing a session, there might still be a spot so  reach out to the team  today. \n The other issue, which is linked to the first, is the female to male attendee ratio. There are multiple causes to this: the lower representation of women in tech in general; the fact the women tend to be sent less to conferences than their male colleagues; the fact that many women avoid conferences out of fear of harassment... and because it is not easy to be the token woman in the crowd. The dynamics will continue as long as women are in the small minority. That is why if we can achieve a more normal representation... well, much of the problem will resolve itself.\u00a0 \n So together with the organisers, we decided to go to the extraordinary step and offer 70% off for women participants. The lineup will be diverse, it would be great if the public could be more so too. To get your reduced priced ticket is very simple, just tweet to us on  @Platformsh  or  @Polyconf  and we'll send you a coupon code. \n So, with our support, Polyconf is reaching out to you, to meetup organisers, and women developer groups to offer them the rebate and the speaking opportunities. \n There will be a time where normal will be normal. It may not be this time. We probably won't get to 50%. But think about how cool, and how normal it would feel if it were so. \n So please, please, if you find the approach compelling... help us reach out ..., contact  @Polyconfhq \u00a0on Twitter or through their website to get a voucher (for yourself as a woman engineer... or for your group if you are an organiser) and certainly spread the word or recommend a female speaker for one of the last remaining slots. \n And to the males, please don't be upset with us. No, there ain't such a thing as reverse-sexism. And we can assure you, that if ever the tendency reverses itself, and systematically there are 90% or more women in tech events, we will reverse this offering and extend it to males.\u00a0\u00a0 \n Lastly,\u00a0to be totally transparent, we do have an ulterior motive here. We want there to be as many female developers present ... because we truly want our own technical team to be more diverse... we have met with relative success... but not to our ambition. We want 50%. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Various ways to set variables ", "url": "https://platform.sh/blog/various-ways-to-set-variables/", "documentId": "3eb34038d8969094cc5508f7708b21753125734d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Various ways to set variables \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         09 Jun 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh has always prided itself on offering our customers as much flexibility to control their own projects as we can. What language to use, what services to use, how the server should be configured, what applications to run, all of these are under the user's control. We even allow users to set various control variables and environment variables per-environment. \n And now there's even another way to set them, via your application configuration file. \n Platform.sh's  variable support  is designed to allow users to set per-environment configuration (such as API keys for 3rd party services) as well as to control aspects of the environment. Some applications, though, have their own environment variables they rely on for various reasons, such as to set a dev/prod toggle or control a build process. Those generally shouldn't vary by environment. \n For that reason it's now possible to set  variables from  .platform.app.yaml . Those values will be tracked in Git just like the rest of your code base, keeping all of the important bits in the same place. \n If you're using PHP, you can even use this system to set  php.ini  values . Need to change your memory limit? Set a prepend file? Control the error reporting level? That can all be done now directly from the  .platform.app.yaml  file. \n For environment variables that should change per-environment or contain sensitive information the current mechanism (setting variables through the UI or using the CLI tool) nothing changes. Your current workflow is fine. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "What is best practice in web application deployment? ", "url": "https://platform.sh/blog/what-is-best-practice-in-web-application-deployment/", "documentId": "2735392c6112849f3e1b9c6a002709e10eb856d4", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           What is best practice in web application deployment? \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         12 Jun 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         For at least the last decade, the best practice process of getting web applications from the developer's environment to the production environment has suffered due to a fundamental limitation imposed by resources, where a limited number of development environments constrain the ability to test and deploy. This applies to anything that lives on a server and talks to the Internet, including what we call websites, CMSs, and web applications. Continuous Integration and Deployment changes that, but not all CI&D tools are created equal\u2026 \n The Four-Tier deployment model \n Every web developer should familiar with the Four Tier deployment model of  Development, Testing, Staging  and  Production . In most places, this is the \u201cstandard\u201d for building, testing, and serving web applications, and looks like the following: \n \n\t \n\t Development:  This is where developers make changes to code, and is usually a local, single-tenant environment (e.g. a developer\u2019s laptop). \n\t \n\t \n\t Testing:  This is an integration environment where developers merge changes to test that they work together. It may also be a Quality Assurance or UAT environment. \n\t \n\t \n\t Staging:  This is where tested changes are run against Production-equivalent infrastructure and data to ensure they will work properly when released. \n\t \n\t \n\t Production:  This is the live production environment. \n\t \n \n This model has been around for a while and is often held-up as a kind of best practice for deployment architectures. It has a number of problems, however... \n The Four-Tier model arose from a particular historical confluence of increasing complexity in web application design, testing, and packaging, and physical constraints on computing infrastructure. As software increased in complexity, developers started using more complex packaging methods for deploying that software. This enabled us to start breaking down the deployment model into a series of steps\u00a0that\u00a0more closely matched the kinds of testing that were required for complex applications. These steps became our actual environments.\u00a0We started moving code through these tiers, with each tier professing to offer some kind of  guarantee  as to the increasing  consistency of the data  and environment, and the  quality of the code . \n At the same time, however, the ability to manage the deployment of that same\u00a0software was constrained by the cost and difficulty of acquiring and managing computing resources (i.e. servers) to serve environments. If you wanted a new environment to test code, you had to buy it, build it, maintain it, and find a way to deploy to it. As a result, most development teams maintained the absolute minimum number of environments or servers necessary to meet their own workflow requirements. In a lot of cases, this was actually less than four, and sometimes as little as two (or one, if you did your development directly onto your production server). \n Obviously, cutting back on environments makes it very hard to know if you are testing and deploying code safely and reliably, but  even with four environments there are going to be challenges : \n \n\t \n\t Code merging must be done at the Development tier, which leads to conflicts through a lack of visibility. \n\t \n\t \n\t Changes can\u2019t be easily tested in isolation, which makes tracking down and verifying those changes harder (this is a problem when you have more changes than integration environments, so usually starts at two changes!) \n\t \n\t \n\t Unless those doing QA\u00a0are technically adept, changes must undergo testing in shared environments. This can cause those environments to become blocked very easily and create issues with rework. \n\t \n\t \n\t Broken test environments or changes take out testing for all changes, not just the one requiring rework. \n\t \n\t \n\t Failure to keep environments up-to-date with Production leads to out-of-date testing data, incorrect operating system dependencies\u00a0and other environmental factors, which can cause Production deployments to fail, requiring expensive and embarrassing rollbacks. \n\t \n\t \n\t Version control offers us the ability to isolate changes, however, limited environments for testing nullify that benefit and force us to merge changes together early, which causes conflicts and bottlenecks. \n\t \n \n Ultimately, the principal problem is that when you have a limited number of servers to deploy to, the chance of any one of those becoming blocked with broken code goes up significantly. \n Continuous Integration isn\u2019t the (whole) solution \n \n \u201c...as long as you are shuffling around Blobs and putting them into production, as long as the deployment is not managed with the application as a single entity there is no real difference between doing this and using FTP on production\u201d -- Ori Pekelman,\u00a0 Containers are the new static binaries \n \n We\u2019ve known for some time about the limitations with this approach. In order to plug the gaps, various forms of automation have emerged which handle repetitive or easily programmed tasks such as running tests, moving code between servers, and provisioning the underlying infrastructure. At the same time, advancements in the technology have meant we have much more flexibility in what that infrastructure is. Essentially, with the development of Container-based virtualization, we can now bypass the environment limit that hamstrung the old Four-Tier system. \n The combination of automation and virtualisation has given us Continuous Integration (CI), which is great idea in principle, but isn\u2019t a complete solution on its own. The principal purpose of CI is mitigate risk in the build pipeline, and it can do this very effectively, however any build pipeline is only as good as its weakest link, and in many CI systems there are up to four of these\u2026 \n 1. The ability to match any environment\u00a0with production architecture \n Many CI tools use Docker or a similar virtualization tool to build an integration or testing environment for a specific change. This allows you to test your change in isolation, which is very important, but it also gives you the opportunity to test it against an identical operating environment. \n Unfortunately, there are only a few CI systems that can match containers to production exactly, which can lead to minor (but sometimes critical) differences between what gets deployed. It is also often very difficult to test multiple, coupled applications simultaneously, especially if they run in separate containers.\u00a0Most CI tools only allow you to deploy a single container for testing, which means you can only test one application, and your services must also run on that application, or be limited to whatever the CI provider offers. Bad luck if these don\u2019t match your production system. \n 2. The ability to test code with live data at any time \n CI tools are designed to build a system for development, however, they must also be able to test with a copy of live data. They must have access to this copy when deployed and they must be able to be updated with that data at any time. Your live instance is probably changing and you need to know that what you built last week is going to work with this week\u2019s data, so you need the ability to sync on-demand, and you need non-technical users to be able to do this. \n 3. Environments may\u00a0still limited by the Four-Tier model \n Ironically, even once you add CI to the mix, if you\u2019ve only got a limited number of environments to deploy to, you are still likely to have the same problems you had with the old Four-Tier model. Also, because you are deploying and testing faster, you are also likely to run into those limitations more frequently. Once again, you are blocked by your infrastructure. \n This is particularly true where your Staging environment is also your Integration environment, since in many CI architectures, Staging is the last opportunity to test production data, infrastructure, and incoming changes, so\u00a0becomes the default testing environment for these changes. As soon as that happens, the chance of it becoming blocked rises considerably.\u00a0 \n 4. Managing a CI pipeline requires people and knowledge \n There is no CI pipeline in the world which does not require some knowledge of how it operates, yet most CI pipelines push the complexities of configuration back onto the developer. In fact, an entire discipline (\u201cDevOps\u201d) has evolved to manage the complexity of solutions required to deal with these problems. \n While some CI providers have managed to partly simplify this process, it is still a non-trivial challenge in most cases. Developers need to be up-skilled and invested in, and since there are so many different ways of doing it only a portion of those skills are transferrable. Many businesses employ people full-time just to build and manage their build pipelines. \n Wasn\u2019t automation supposed to save us from this? \n So what is \u201cbest practice\u201d? \n An\u00a0ideal Continuous Deployment (CD) solution should overcome many of the limitations of self-managed or third-party CI pipelines by giving the developer a direct, consistent build-and-deploy pipeline that  fully replicates  the production environment, down to the byte level. \n At Platform.sh, we've implemented several technical solutions which help developers mitigate the issues discussed above and push best-practice in new directions...\u00a0\u00a0 \n \n\t \n\t Every branch in your version control system (Git) can have a corresponding environment, and any of them can be merged into production at any time. Say goodbye to blocked environments or workflows dependent on infrastructure being available. \n\t \n\t \n\t Development and testing environments are cloned from your production environment in under two minutes. With the exception of configuration changes made on that branch as part of your changes, new environments ALWAYS match their production environment.\u00a0Not only are you able to test code with perfect infrastructure consistency, you can now test your infrastructure changes as well. \n\t \n\t \n\t Environments can have their database, files and other services synchronised on-demand. Has your live data changed? You can test it in under two minutes. Non-technical user? There's a button for that. \n\t \n\t \n\t All of this is fully automated. The only knowledge the developer requires is some information about the target configuration they require (for example, which version of PHP am I using, or which folders are serving static assets) \u2013 this is basic stuff. \n\t \n\t \n\t Once a project is configured, it may never need to be changed again, and on-boarding for new developers is a no-brainer. Developers get to focus on what they are good at, and spend time building features that add value, rather than keeping environments up to date or debugging build failures. \n\t \n \n This architecture blows away the constraints of the Four-Tier model completely. Instead of moving changes through tiers of limited environments, developers can isolate individual changes to an unlimited number of disposable environments and apply whatever management and testing workflow necessary to get that production ready. Changes can be released on-demand, in the order that they are ready, not the order dictated by a release schedule based on having to double-check all your changes on a staging server because you can\u2019t guarantee they work. With proper CD in place, your velocity will increase and your error rate will go down (see  DevOps gives you wings  for more on this) \n In the coming months we\u2019re going to be looking at how you can maximize these benefits through two series of blog posts. The first will look at how Platform.sh\u2019s best-practice CD model can supercharge different development workflows (such as Scrum), and the second is going to help you integrate Platform.sh with some of your other tooling. \n \n--- \n Chris helps development teams, new customers\u00a0and Platform.sh clients across the Asia-Pacific get the most from their use of the product. If you'd like to learn more about Platform.sh, find out how we can supercharge your development workflow, or just have a chat,  drop him a line here... \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh joins Orange Cloud for Business at Huawei Connect 2017, Shanghai ", "url": "https://platform.sh/blog/platformsh-joins-orange-cloud-for-business-at-huawei-connect-2017-shanghai/", "documentId": "8de24b7bfed11c46d65420d3a4752c244b45b213", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh joins Orange Cloud for Business at Huawei Connect 2017, Shanghai \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         04 Sep 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Monday, September 4th \u2013 Paris, France: for immediate release \n A global city, a dynamic event, and a world-class hosting platform. Platform.sh is excited to be joining  Orange Cloud for Business  at  Huawei  Connect  in Shanghai, from September 5th to 7th, offering demonstrations of its unique Continuous Deployment cloud hosting product. \n The key to success in the online world is moving fast. Being able to respond in real time to changes in the market \u2013 as they happen and on the market\u2019s timescale \u2013 is no longer a competitive advantage, it is the price of entry. \n Using its unique Continuous Deployment technologies, Platform.sh enables Orange clients to deliver fast, improving development, deployment, testing and operations times by factors of up to 15x. And when you can deploy fast, you can deploy often. \n Clients of Orange Business Services in Asia can take full advantage of this service, with the availability this month of Platform.sh by Orange, on Orange Flexible Engine. \n The Platform.sh Technological Innovation \n Through Platform.sh\u2019s technological innovation, perfect copies of the production web hosting environment can be created automatically and with perfect consistency in less than 60 seconds. This Continuous Deployment model allows site builders to deliver an ongoing flow of change requests, one by one. It is not unusual for a Platform.sh project to have twenty pre-production environments running in parallel, delivering tens of new features into production each day. \n The service is particularly suited to transactional web applications with heavy traffic such as major e-commerce sites. Indeed, it allows an organization to become highly reactive to market trends and optimizing revenue through fast updates to live, as well as seamless scaling with no application interruption to deal with traffic spikes. It also comes with an enterprise-level 24/7/365 support offering and 99.99% SLA guarantees.  \n The Partnership \n Through Platform.sh\u2019s partnership with Orange, Orange customers and their web agency partners benefit from this innovative offer. \n \n \u201cAt Orange Cloud for Business, we strongly believe in the use of cloud services to improve productivity and help customers focus on their core business. Allowing developers to focus solely on the code without worrying about infrastructure management achieves this goal.\u201d - Philippe Laplane, CEO Orange Cloud for Business. \n \u201cWe are very excited to be presenting our product in the Chinese market. The combination of Platform.sh and Orange is especially powerful, combining Orange\u2019s digital know-how with Platform.sh\u2019s transformational hosting product.\u201d - Frederic Plais, Platform.sh President and CEO. \n \n Demonstrations of the Platform.sh solution will be available on the Orange Cloud for Business stand, from September 5th to 7th. \n About Orange Business Services \n The Orange entity for business, both a telecommunications operator and IT services company, supporting every aspect of your digital transformation. More than two million businesses in France and 3,000 multinationals place their trust in us. \n About Platform.sh \n Platform.sh is a second generation Platform-as-a-Service offering a continuous deployment cloud hosting solution. \n Platform.sh\u2019s fully automated cloud solutions covers the needs of everyone from small self-service accounts through to clients with multiple, dedicated cloud regions, running tens of thousands of instances, over multiple IaaS providers.  \n It is the official cloud partner of major open source projects such as Magento, Symfony, EzPublish, and Typo3. It has also been chosen by huge cloud players, such as Orange Business Services and Microsoft Germany, to propose a best of breed sovereign European PaaS. \n Platform.sh is a VC backed startup headquartered in Paris, with three fully owned subsidiaries and employees in five continents. It has met with explosive growth, acquiring thousands of clients from more than a hundred countries, doing as much business in the United-States as in Europe. Among its clients, you can find key accounts, such as Vivienne Westwood, Gap, IKEA, the Canadian Football League, the British Council, Arsenal Football Club, and Slate.fr. \n Media Enquiries \n For more information or to arrange an interview, please contact: \n Lyly Lepinay (France) \n Head of Digital Marketing \n lyly@platform.sh \n Christopher Skene (Asia) \n Business Development and Developer Engagement, Asia-Pacific \n chris.skene@platform.sh \n Ph. +61 (0) 422 969 899 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Why host your TYPO3 website with Platform.sh: Part 1, Git and the Read Only file system ", "url": "https://platform.sh/blog/why-host-your-typo3-website-with-platformsh-part-1-git-and-the-read-only-file-system/", "documentId": "402af56c9c00f4ef3e685b2983ab9a00d98cb47b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Why host your TYPO3 website with Platform.sh: Part 1, Git and the Read Only file system \n         \n\n        \n         \n            \n         \n         07 Jul 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         TYPO3 is one of the most powerful Open Source Content Management Systems, but it can only thrive if you leave it room to fully operate. The same can be said for Neos and the Flow Framework, two, now independent projects that were once created and managed by the TYPO3 community. \n As a long-time TYPO3 contributor, and someone that recently joined the Platform.sh\u2019s team, I am going to try to give you some tips and best practices via this series so your TYPO3 journey on Platform.sh is enjoyable and productive. (And by the end I hope I will have convinced you that the TYPO3 association\u00a0made a good decision by choosing Platform.sh as one of their hosting partners!) \n A Git/composer hosting platform \n The core philosophy of Platform.sh\u2019s platform is that code isn\u2019t meant to be uploaded. It\u2019s meant to be  deployed and compiled . \n Instead of manually uploading your core files, you manage them via  Git , and prepare the rest of your code with composer. \n How does that work at Platform.sh? \n When you create a new Platform.sh project, one of the available templates is TYPO3 which will install the most recently integrated TYPO3 version, usually in less than a minute. \n You will then have a fully working TYPO3 installation, with your database created, linked and all of the basic\u00a0requirements fulfilled. \n With Platform.sh, you will get a fully powered and functional TYPO3 instance.... and \u00a0the TYPO3 install will complain with some \u00a0errors.... saying\u00a0  typo3conf  and  typo3temp  are not writable. \n Should you worry?\u00a0No, not at all: that's actually good thing! \n That\u2019s because at Platform.sh, our disk-space is read-only. The default way\u00a0TYPO3 is installed is already secure but we still hardened it beyond the expectations\u00a0of the TYPO3 install tool. It expects to have read-write access to these folders and that is really not necessary. \n When a TYPO3 installed at Platform.sh, everything is already configured properly: when you run in production,\u00a0none of the TYPO3 source code will ever be compromised during execution at Platform.sh. That's why code that is read-only is a good thing. \n But how will we upload files? \n Don\u2019t worry! It is possible to mount a writable folder within your site, which will not only be writable by TYPO3, but which will also persist from container to container as you branch (more on that in later articles). \n When you use our TYPO3 one-click easy installation, the following folders (and their subfolders) are writable by default: \n \n\t typo3temp/assets \n\t typo3temp/var \n\t uploads \n\t fileadmin \n\t typo3conf/writeable \n\t typo3conf/l10n \n \n This means that your fileadmin and your uploads folder (which typically should not contain code) will still be fully editable and that TYPO3 will still be able to write temporary files and update its localization settings on the fly. \n So how can TYPO3 update its configuration during execution? \n Ok, this one is a little more complicated: TYPO3 should have never been able to modify its own configuration in the first place! \n TYPO3 was first created in 1998 and a lot of the settings that are stored in its configuration file (now called  LocalConfiguration.php ) should in reality have been stored in the TYPO3 database like more modern CMS do. But don't think TYPO3 is outdated just for that fact! It simply uses an older method for storing its settings. \n This sadly makes TYPO3, in theory, less secure than other CMS with a fixed read-only config file. The worst is that once the site is fully deployed and working, the config file is rarely modified, so what should we do? \n Don't worry! I'll teach you right now how to keep the flexibility of having a writable config file in a Cloud-Friendly instance (such as Platform.sh) until you are 100% happy with your deployment, and then, and how to completely secure your config file. \n Initially, when you use the Platform.sh TYPO3 installer, a special task is added during the build process in your  .platform.app.yaml  file: a symbolic link from  typo3conf/LocalConfiguration.php  to  typo3conf/writeable/LocalConfiguration.php  will be automatically created. The same is done for  typo3conf/ENABLE_INSTALL_TOOL . \n You can see in the  .platform.app.yaml  file the way it is done, in the  build:  step: \n \n \nif [ ! -f web/typo3conf/writeable/LocalConfiguration.php ]; then\ncd web\ntouch FIRST_INSTALL\ncd typo3conf ln -sf writeable/LocalConfiguration.php LocalConfiguration.php\nln -sf writeable/ENABLE_INSTALL_TOOL ENABLE_INSTALL_TOOL \nfi; \n \n \n That way, those two actual files exist within a writable mount and will be editable by TYPO3 itself, even if TYPO3 accesses them from within a read-only folder. \n We had to move them in a subdirectory, because mounting a directory also mounts all of its sub-directories and this would mount the ext subdirectory as writable, defeating the purpose of a read-only file system. \n From that moment on, you will be able to edit the  LocalConfiguration.php  file from within the TYPO3 Install Tool as often as you wish! \n As soon you are you fully satisfied with your installation however, you'll be able to remove the above build commands that create the symlinks and add your  LocalConfiguration.php  file in your git repository to have a fully read-only and 100% secure TYPO3. \n Why even have a read-only filesystem? \n You\u2019ll hear on our website all of the advantages of having a read-only filesystem (including increased security, protection against hackers, etc\u2026 ), but the number one advantage is even simpler: it mandates the use of Git (and optionally\u00a0 Composer ) for code deployment. \n It enforces good coding practices not just for you, but also for your collaborators and your client if you are an agency. \n You will still be able to easily work on your local computer to develop your extensions, simply syncing them via Git to your website instead of using a regular file transfer protocol (FTP or SCP, for example). \n This will not only enable you to easily work on your TYPO3 website, but you will also have the advantage of a code base that is fully tracked by Git with no possibility of having any untracked files! \n What about installing extensions? \n TYPO3 now supports optionally replacing the Extension repository with Composer and that\u2019s the mode used at Platform.sh. \n You will be able to easily add extensions using composer as you would on any other TYPO3 setups. For example: \n You can easily run it manually in your local CLI from Platform.sh. Here is how you would do it: \n \n \nplatform get <project id> -e <branch name>\ncomposer require typo3-ter/[extension name]\ngit add composer.*\ngit commit\ngit push \n \n \n In short, we select which project we want to use and check it out to allow editing. We are then ready to run any Composer command we need! \n Once we are done, we add the Composer files to Git. If you are not familiar with Git, add doesn\u2019t just mean adding new files to Git, as if they were new files, it also means \u201cadding\u201d the local files from your hard disk to the staging area where Git actually tracks changes. \n The  git commit  will store in your local git repository the files added to your staging area (you will be asked to provide a comment, such as \u201cAdded the news extension via composer\u201d), and the  git push  command will upload your changes to the Platform.sh servers where we will deploy your updates within a few seconds of the push, automatically. \n With a single-click install, full Git (and Composer) support and an easy to use command line interface, Platform.sh really gives you all of the tools you need to fully manage your TYPO3 installation in a secure and fully versioned way. \n In the next installment:  Branching and Workspaces, discover the full coolness. \n\n        \n\n\n\n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Hosting your TYPO3 website with Platform.sh: Part 2 Branching and Workspaces ", "url": "https://platform.sh/blog/hosting-your-typo3-website-with-platformsh-part-2-branching-and-workspaces/", "documentId": "5d4e9890219aa9f7130a369c36a8b63ef4441f80", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Hosting your TYPO3 website with Platform.sh: Part 2 Branching and Workspaces \n         \n\n        \n         \n            \n         \n         21 Jul 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         In the first article in this TYPO3 series, I explained that  when you host TYPO3 at Platform.sh, it is hosted on a read-only file system  which will both be more secure and which will ensure a good development workflow. \n Today, you\u2019ll learn how to use Platform.sh's branching with the TYPO3 workspaces so that you can easily develop a new version of your website without breaking your live site or losing data. \n Branching with Platform.sh \n One of the best features of Platform.sh is the ability to branch any environment within seconds, and use the new branch as a development server which can be merged back to the live site just a fast as it was initially created. \n If you are building a custom extension for a TYPO3 site and discover that you need to edit the controller of one of your plugins, you can easily branch the whole website in a few seconds with a custom label describing exactly what you are doing. This branching includes complete copies of all of the data, including the database, uploaded files, and any extra services that you use, like Solr or Redis. \n If there are multiple developers working on your project, or if you are working on more than one feature or bugfix in parallel, you can create multiple branches (full copies of the website, each with their own URL) for each case. Once you fix an issue or complete a feature, Platform.sh supports your testing and integration workflow, after which you can merge your changes back into the live site with minimal risk of incurring downtime or causing corruption on the live site. \n These development branches also help you when you're working in your local development branch (ie your laptop). Each branch in the cloud has its own copy of all the site's data, and you can connect to these data sources from your laptop with tunnels, meaning you don't have to export, download, and import the database every time you switch contexts. Just switch tunnels. And, it's easy with the  Platform CLI tool ... it's literally a one-line command. \n Of course, your branch database and files will slowly fall out of sync as your branch gets older, but with single push of the Synchronise button, you can easily refresh your branch to the latest database! \n Platform.sh has your back... \n Workspaces with TYPO3 \n For over 12 years, TYPO3 has been supporting workspaces with greater and greater assurance to the point where a few years ago, they became almost bullet-proof. \n You can easily create a new workspace in TYPO3 allowing you to seemingly work in a separate version of your website which is only accessible from a workspace preview link. \n Create new content, new pages and modify existing articles: nothing will change in the live site if you are working in a workspace. \n Ever since the DAM \u00a0(Digital Asset Management) was released (and later the superior FAL \u2013 File Abstraction Layer which replaced it), even files were properly tracked when working with Workspaces so that your user files would be properly maintained in the live site even if you were preparing brand new ones in a draft workspace. \n Granted, some custom-made TYPO3 extensions do not fully support workspaces, but they are getting rarer and it is easy for a developer to add workspace support, even to a third-party extension. \n TYPO3 Workspaces and Platform.sh Branches: made for each other? \n Platform.sh has a concept of data flowing down from the live site to the development branches, and code merging up from feature and development branches into the live site. There is no support for merging the actual data from a development branch into a live site. All of the changes that move from development into the live site need to be expressed in the Git repository. We consider this to be modern best practice web development. \n TYPO3 Workspaces are also amazing, but they only work on your database records and their associated file: each of the workspaces can have different content but all share the same source code. \n Do you see now how both systems complement each other? \n All you need to remember is: \n \n\t Work on your source code in your development branch \n\t Work on your database records and their associated records (like product or news images) in a workspace, on the live site \n\t Sync your live database and files down into development and feature branches, thus inheriting the live sites workspaces \n\t Merge code changes up from feature branches into the live site \n \n You will thus be able to easily prepare an updated version of your website with new content, new extensions, new images while keeping your live site untouched. \n When it will be time to go live, you\u2019ll be able to do so in two easy steps together taking about a minute: \n \n\t Merge your branch in your Platform.sh control panel. This will update your source code. \n\t Merge your workspace in your TYPO3 back-end (or change the active Workspace) \n \n This workflow is recommended only when your code is not changing the database schema at the same time. Changes that trigger database schema updates should be rolled out separately and independently from workspace updates. \n What about your templates? \n Most TYPO3 integrators place the website templates in the  /fileadmin/templates  directory out of habit. Since that directory is within the writable mounts, it means that the directory is synced between the branches, but can't be merged back to the live site, so any improvements wouldn't be easy to deploy. \n But honestly, why would you want to keep your templates in a writable mount? \n The actual location of your website template files is arbitrary and often only placed in  /fileadmin/templates  because that\u2019s where the now obsolete TemplaVoil\u00e0 was looking for its templates and the integrators are just used to using it. \n A better solution is to place your templates within the read-only space that is managed by Git, for example, in  /templates , so that not only will any changes be tracked by Git and protected from accidental changes, but you will be able to easily have different versions of your templates depending on which Platform.sh branch you are working on. Templates are code, after all. \n So, whether you are a TYPO3 developer frustrated by the fact that you can\u2019t have different extension source code depending on which workspace you are working on, or if you are a Platform.sh client wanting to work on databases records on development branches, you will find that combining the two will solve all of these problems. \n Even better, in both cases, Branches and Workspace both start as identical copies of their parent and only track actual changes, keeping the differences with the live site as the only data to keep and the time to merge and deploy to its minimum. \n A TYPO3 website hosted at Platform.sh is a little like a high-powered motorcycle: Platform.sh drives the back wheel with raw power, while the TYPO3 workspaces provide the steering with the front wheel. \n This is the second article in the TYPO3 at Platform.sh series. Next time: Caching, more Caching, and how your site can fly! \n\n        \n\n\n\n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Want to try Platform.sh? Get started for free ", "url": "https://platform.sh/blog/want-to-try-platformsh-get-started-for-free/", "documentId": "834b4872d6f3401c3fc941f6be4172b0786ab1e4", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Want to try Platform.sh? Get started for free \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         31 Jul 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         If you've been thinking about using Platform.sh, but haven't dipped your toes yet, you might be interested to know that Platform.sh offers a  free trial for new users . \n This trial gives you full access to  the Platform.sh development stack , including continuous deployment, a full development environment on each Git branch, seamless cloning, as well as access to ticketed support and our Slack channel to help get you started. \n Maybe you want to see if your site works with PHP 7.2 before go-live, or perhaps you have a Python or Ruby project you want to build? Maybe you're keen to try out a CMS using Go, or you are wondering about our beta support for Java? You can try all these things with a free trial, and more... There's even a one-click install for Drupal or Symfony. \n \nWe'll also extend a helping hand if you've had a trial in the past but didn't follow through... just  create a support ticket  and we'll be happy to give you a fresh month on your trial for free. \n \nIf you have more complicated requirements, want to talk to someone about our agency program, or need a bit of help first,  drop us a line via our contact form  and we'll be happy to help. \n Start your free trial here... \n Chris is Platform.sh's engagement lead in the Asia-Pacific, helping clients get started with Platform.sh. You can find him on  LinkedIn  or  Twitter . \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Deploy Down Under: Platform.sh is now available in Australia ", "url": "https://platform.sh/blog/deploy-down-under-platformsh-is-now-available-in-australia/", "documentId": "3784d072f3cc8e6e88aa8b7691111c165e35fa67", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Deploy Down Under: Platform.sh is now available in Australia \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         03 Jul 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Our game-changing\u00a0Continuous Deployment web hosting is now available in an Australian region. \n Customers in Australia, New Zealand and other nearby areas can benefit immediately from our  new, next-generation Australian cloud region , which allows you to deploy PHP, NodeJS, Ruby and Python projects in sizes up to 7GB, with full access to the complete Platform.sh development stack.\u00a0 \n Platform.sh ups the game for hosting in Australia, with a technology platform that is unmatched by any local supplier, featuring on-the-fly creation of complete testing environments for every Git branch, seamless scaling, and true Continuous Deployment capability. Our new Australian region is auto-balancing and auto-healing, ensuring that every site is available and performant. \n Frederic Plais, CEO of Platform.sh, is extremely enthusiastic about Platform.sh's entry into the Australian market: \n \n We believe we have the best hosting product on the market today. It\u2019s unique. The launch of our Australian region\u00a0is huge news for anyone building websites in Australia or New Zealand. Now, everyone has access to Continuous Deployment hosting with the benefits of low latency that a local cloud provides.\u00a0 \n \n The service\u00a0itself will run out of the AWS Asia Pacific (Sydney) region, providing excellent connectivity, low latency\u00a0and reliability to customers across Australia and New Zealand. \n New customers can sign up for a free trial and deploy a site in minutes. Existing customers wishing to try out the new region risk-free should drop us a line via our  contact form  or our  Slack channel . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "6 things to do to make your application cloud friendly ", "url": "https://platform.sh/blog/6-things-to-do-to-make-your-application-cloud-friendly/", "documentId": "4f95f97aa48e74844d1aa4567f9b332c28f723d4", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           6 things to do to make your application cloud friendly \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         07 Aug 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         As Director of Developer Experience, I get to play with a number of different systems.  There\u2019s a  lot  of existing web applications on the market, especially across all of the many languages we support (Shocking, right?).   That means I\u2019ve gotten to see some applications that play very well with modern cloud-based hosting as well as some that, well\u2026 let\u2019s say are less optimized for it. \n So what makes an application \u201ccloud-friendly\u201d?  What makes it \u201ccloud-native\u201d?  In a practical sense, how can developers build applications that will work with a modern hosting system such as Platform.sh rather than against it?  If you have a legacy application you want to make more cloud-friendly, what areas should you focus on? \n Let\u2019s look at some of the key ways to make your application modern-host-friendly (by which we mean Platform.sh, of course). \n There are a number of older applications on the market that do not follow these guidelines, for various (valid!) reasons.  In many cases there are workarounds (either simple or elaborate) to make them play nice.  In others it\u2019s better if the application itself is modernized.  In either case, these are the key areas to target to bring those older applications into the modern hosting era. \n \n This sounds familiar\u2026 \n If you\u2019re already familiar with the  12 Factor App , many of these recommendations will be very familiar.  If you\u2019re not, those guidelines are worth a read as they apply to most modern web applications.  Just don\u2019t treat them as a holy writ, of course. \n What I\u2019d like to talk about here is to come down a level to implementation, and see what those recommendations mean in practice when the rubber meets the road.  (Or the bits hit the network. Or something.) \n Cloud practices \n 1. Cleanly split code from content \n This is a biggie.  Platform.sh builds all of your code from Git into a read-only file system.  That makes it more secure, re-deployable (when doing a fast-forward merge to production), and forces good development practices (like \u201cfor the love of Pete, don\u2019t edit code in production!\u201d).  All good stuff. \n Having code writable by the web-server might look like a good idea at first. (It means the something like Wordpress could update its plugins.)  It is not. It is a very bad idea. It means that securing your server is going to  be next to impossible. That you have no idea what is running. That your application is going to drift and rot. Having Git as the only way to change the running code is good. It makes stuff repeatable, testable, debuggable. And secure. \n But most applications still need to upload files somewhere. So at Platform.sh we provide configurable managed writable file mounts. Unlike traditional 12 factors apps you don't  have  to use something like S3. You can run your unmodified application. And it works. \n (You can still use S3, of course, but then you miss out on the fast data cloning for each environment that we offer.) \n All we ask of you is to declare in your config file the directories that should be writable. But remember, having a directory with some files that are in Git and some that need to be writeable is not going to work.  Just split those to separate directories and don\u2019t confuse them. \n 2. Configuration is code or content \n Modern web applications are highly configurable beasts.  But is that configuration stored on disk or in the database?  Should you be able to download it, or manage it through Git like code? Do you need to be able to have an audit log of configuration changes? \n This is an either-or question. Choose a path; Stick to it. Know the repercussions. Because Platform.sh clones your production database when creating a development environment, it works out-of-the-box with both options:  configuration can be managed in and deployed from Git, or it can be in the database, treated like user generated content. Managing configuration in the database probably makes you more productive. But you lose traceability and merging those changes to production can be a brittle process. Managing all configuration in Git gives you a full audit-log, but requires a deploy for every change. \n One of the most robust solutions here is provided by Drupal 8, which has a powerful configuration system designed from the ground up to allow user configuration from the UI, but safe export of configuration to disk where it can be checked into Git and then safely reimported on deploy.  Other approaches are certainly valid, though, as long as the question \u201cis configuration code or content?\u201d is clearly answered. \n 3. Connections need to be runtime code \n One of the 12 Factor App recommendations is to use environment variables (\u201cenv vars\u201d) for all connection-related configuration.  Think database credentials, search index credentials, API keys, and so on.  That\u2019s a good recommendation, and is  exactly how Platform.sh works .  However, leveraging that properly requires an extra, oft-forgotten step: Reading those variables. \n Every application names its credentials differently.  Every cloud host provides its environment variables differently.  That means every application needs a place to have at least minimal glue code to read the host-provided environment variables and inject them into the application\u2019s settings system. \n A good cloud-friendly application has a clear place for that glue code to live, and that glue code by necessity needs to happen at runtime.  That means generating out a file full of constants (either in application code or in a static file like YAML or INI) won\u2019t work, because the necessary information isn\u2019t available when writing files!  Putting that file into a writeable file mount is also a non-starter, as that\u2019s potential security hole. \n When building your application, do yourself a favor: Make sure there\u2019s a \u201cput code to map environment variables into settings here\u201d marker that is clear and upfront. \n Some modern frameworks have native support for reading environment variables directly into their configuration.  Not all do, however, and sometimes they're insufficiently robust.  If your application framework does not support this, you should try to recreate the functionality with your own glue code. \n 4. Don\u2019t expect installation to be interactive \n Many systems still try to have the user to enter connection credentials through a UI, especially during an installer.  That won\u2019t work if the credentials are provided through environment variables.  For installers, always check to see if the needed credentials are already set.  If they are, great, you don\u2019t need to ask the user for them! \n After installation, while it can be very nice for the user to let them provide their own credentials for local development it  must  be easy to override those values from the environment.  However that\u2019s done, environment-provided connection information must be able to override anything provided through the UI. \n 5. Paths and domains must be relative and dynamic \n Many script-based applications (PHP, Python) need to know what the absolute path is to their code base on disk in order to include their source code.  That\u2019s all well-and-good, but just as with database credentials that information should be provided at runtime from the environment, not hard coded in a file. \n The same holds true for the domain that the application is running on.  Even in a \u201ctraditional\u201d dev/stage/prod model, each environment is going to have a different domain name.  On Platform.sh, every branch can be an environment with its own unique domain name.  Hard-coding that domain name in a config file, or worse yet in the database, is going to break the site on any environment other than production. \n Instead, if the domain is needed for just request-address verification (which is good), provide a way to inject the correct domain from the environment at runtime.  For multi-site or multi-domain cases, make sure the logic is dynamic based on some common base that is pulled from the environment.  Life will be a lot easier that way. \n 5. Boot fast \n A key part of a 12 Factor App, and of read-only production systems, is disposability.  The best way to handle updates is to prepare a new build artifact, knock over the old instance, and start the new one in its place.  The faster that happens the less downtime you have.  (It can only be zero if you know there\u2019s no data migrations to run.) \n Ironically, PHP does the best here among major languages.  Its shared-nothing architecture means that every request has its own bootstrap overhead, but it also means there\u2019s virtually no bootup overhead after a new deployment.  Once PHP-FPM starts you\u2019re good to go. \n Compile time matters for developer experience, but won\u2019t cause downtime.  Boot up time, however, can result in downtime if it takes too long.  If your application takes 5 minutes to boot then that\u2019s 5 minutes in which you\u2019re not serving requests.  The more can be pushed off to lazy initialization the better.  The first few requests may take a little longer to serve, but they will still be served. \n 6. Isolated compilation \n Many applications have a compile step, or build step, or whatever term.  That doesn\u2019t mean just compiled languages like Java or Go, however.  It also includes: \n \n Any app that downloads 3rd party dependencies on the fly (Composer for PHP, pip for Python, Bundler for Ruby, etc.) \n Any app that has a preprocessor (TypeScript for Javascript) \n Any app that needs to generate code (compiled templates or injection containers in PHP) \n Any application that uses Sass or Less \n Many other use cases... \n \n The possibilities here are legion, and that\u2019s fine; Platform.sh, like any good PaaS, natively supports having a build/compile step to turn \u201cwhat\u2019s in Git\u201d into \u201cwhat serves requests\u201d, repeatably and reliably. \n However, that compile step naturally happens in an environment other than production; shutting down the production runtime in order to compile a new version of the application is a no-go for most use cases.  That new version needs to be able to build itself without replacing production, which means without access to a database or other services.  The build process can do almost anything it wants in terms of code generation or compilation or reorganization\u2026 as long as it can do it without database access.  Relying on stateful information in a database (be it SQL, or Redis, or MongoDB, or anything else) for compilation destroys the safe repeatability of an isolated build environment.  Even trying to connect to stateful services is unsafe if you want reliability and consistency in your build. \n Take whatever compilation steps you want in your application, but make sure they can run in isolation, not while connected to your production database. \n Just try it out \n Not sure how well your application will play with modern cloud hosting?  Give it a try.  Nothing beats real-world testing, and you can  try out your application on Platform.sh free for a month  to see if it is cloud-friendly.  We suspect you\u2019ll like the experience so much you\u2019ll decide to stay, and your code will be better for it, too. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Open source software ROI for your organization \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Taking care of your health ", "url": "https://platform.sh/blog/taking-care-of-your-health/", "documentId": "127c6d3c3b3269320421cb53203cc86c80c4a9f5", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Taking care of your health \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         02 Oct 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         One of our most requested features is better built-in monitoring and notification support for user projects. We've just made it easy monitor your projects' health.  \n \n Many of the applications we host have a tendency to use up disk space faster than expected with cache and temp data, and when a disk gets full applications tend to misbehave.  And really, no one wants misbehaving applications. \n We are therefore happy to report that we now offer health notification checks on all Platform Professional projects, at no extra cost. \n Health notifications can be sent via email, Slack, or Pager Duty.  Any time disk space drops below 20% or 10%, or when it goes back up (because you cleared up space or increased your disk size), a notification will get sent to whatever destinations you have configured.  For example, to get email notifications you can simply run the following command using the Platform CLI tool: \n platform integration:add --type health.email --from-address admin@example.com --recipients it@example.com --recipients webmaster@example.com \n Then, any time one of those thresholds is crossed, both  it@example.com  and  webmaster@example.com  will be emailed.  (As a side note, your email address is still webmaster?  Neat!  That's so retro...) \n Slack and Pager Duty can be configured in the same way.  See  the documentation  for all the details. \n For now disk space is the only notification that gets generated but we plan to add more health checks in the future.  Until then, sleep tight knowing that your disk won't start misbehaving with your knowledge. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Screencast - Develop your Drupal 8 site with Drush, Composer and Platform.sh ", "url": "https://platform.sh/blog/screencast-develop-your-drupal-8-site-with-drush-composer-and-platformsh/", "documentId": "1a1cb81961b96389bd1fa79d81384e7a2210f799", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Screencast - Develop your Drupal 8 site with Drush, Composer and Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         21 Sep 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         In this tutorial we will see how to quickly deploy a new Drupal 8 site and build a couple of features, in a repeatable, testable and automated way, using a combination of Drupal\u2019s configuration management, Drush, and Platform.sh\u2019s great site management tools. \n Drupal 8 makes it very easy to import and export the configuration of your site, allowing you to store settings, that normally live in your database, in code. This is great for managing \u00a0configuration changes from development to production. In addition, the combination of  Drush ,  Composer \u00a0and Platform.sh make it very easy to automate your development and maintenance workflow. Drush provides the ability to control your Drupal site, while the Platform.sh CLI manages your environments. \n \n Before you start \n Before you start, you will need the following installed locally: \n \n\t The  Platform.sh CLI \n\t The latest stable PHP \n\t MySQL or MariaDB \n \n Plan \n In this guide, we will: \n \n\t Create a project and get a local copy \n\t Setup the local database \n\t Install Drupal remotely using the Platform.sh CLI \n\t Test and deploy a configuration change \n\t Switch to a new theme \n\t Add a new module \n\t Deploy to production \n\t Synchronise code and data to development environments \n \n Create your project and get a local copy \n Let\u2019s start by creating a Platform.sh project from the [web interface](https://platform.sh/free-trial) of directly from the  Platform.sh CLI \u00a0(warning: this feature requires the  experimental  tag in your configuration). \n \nplatform project:create --title \u2018Drupal 8\u2019\n \n When the project is ready, access the Web UI, click  Next  to confirm the project name, select  Create a blank site from a template  and then choose the Drupal 8 stack. \n This is the only time we\u2019ll be using the Platform.sh UI in this tutorial. \n From here on we\u2019ll be working with the CLI only. \n Clone and build the project locally: \n \nplatform get jsqpqkmu4axfm\ncd drupal-8\nplatform build\n \n This will download all our dependencies via  Composer \u00a0and organize our local codebase. \n Setup your local database \n Let\u2019s create a local MySQL database for our local Drupal installation. \n Platform.sh automatically loads a local settings file to ensure that we don\u2019t mix local configuration with remote environments. Edit  _www/sites/default/settings.local.php\u00a0 to match your local database configuration: \n \n$databases['default']['default'] = array(\n'driver' => 'mysql',\n'host' => '127.0.0.1',\n'username' => 'root',\n'password' => 'root',\n'database' => 'drupal_8',\n'prefix' => '',\n);\n$settings[\"hash_salt\"] = \"abc\";\n \n Now it\u2019s time for the fun part... \n Install Drupal using the Platform.sh CLI \n We can install the remote site from our terminal using the Platform.sh CLI, which can run any Drush command on the remote environment: \n \nplatform drush si\n \n Once the site is installed on the remote environment, you can synchronize it with your local site simply by running: \n \ndrush sql-sync @drupal-8.master @drupal-8._local\n \n Test a configuration change \n To see how to make a simple configuration change, we \u00a0can use Drush to change the site name and export the configuration, using  drush   config-export  (or  drush cex ). \n You will need to run this from the web root of your Drupal site, which in a Platform.sh local build is under an alias at  ./_www : \n \ncd _www\ndrush config-set system.site name \u201cMyDrupal 8 Site\u201d\ndrush config-export\n \n Now we can use Git to automatically deploy this new configuration to our remote site: \n \ncd ..\ngit add --all\ngit commit -m \u201cInitial configuration and set site name\u201d\ngit push platform master\n \n Platform.sh will automatically redeploy our remote site with these configuration changes. You can see the commands that are triggered during the deployment in the  .platform.app.yaml  file: \n \nhooks:\n# The deploy hook runs after your application has been deployed and started.\ndeploy: |\ncd web\ndrush -y cache-rebuild\ndrush -y updatedb\ndrush -y config-import\ndrush -y entup\n \n Start a new theme \n In our case, we want to use another theme for our site. But we don\u2019t want to mess up our master environment, which eventually is your production site, so \u00a0we will create a specific remote environment to test our new theme. \n Platform.sh makes it very easy and fast to clone any existing environment into an exact copy that we can use to implement any new feature: \n \nplatform environment:branch new-theme\n \n Now, let\u2019s use Composer to download the starter  Bootstrap \u00a0theme and enable it in our local site: \n \ncomposer require drupal/bootstrap\ndrush en bootstrap -y\ndrush config-set system.theme default bootstrap\n \n This will automatically update the  composer.json  and  composer.lock  files and set the  Bootstrap  theme as our new default. \n Again, we want to export this configuration and deploy it to our remote theme environment. \n \ndrush config-export\ngit add --all\ngit commit -m \u201cAdd and enable Bootstrap theme\u201d\ngit push\n \n This will automatically redeploy the remote new-theme environment with these changes. You now have a live environment to test your theme and continue to work on it. \n Add a new module \n This site is going to be an eCommerce site, so we\u2019re going to add  Drupal Commerce . Again, we don\u2019t want to mess up the existing master environment, so we will create another copy of our master environment to enable the Commerce module: \n \nplatform environment:branch commerce \n We need to make sure that our local database is clean and doesn\u2019t include previous configuration: \n \ndrush config-import\n \n We can then use Composer (again) to download the Commerce module and enable it in our local site: \n \ncomposer require drupal/commerce\ndrush en commerce -y\n\n \n Export the configuration and deploy it to our remote commerce environment. \n \ndrush config-export\ngit add --all\ngit commit -m \u201cEnable Commerce module\u201d\ngit push\n\n \n We now have the Commerce module enabled on your remote commerce environment and start configuring it and extending it following the same workflow. \n Deploy to production \n Let\u2019s say we are happy with our Bootstrap theme and we want to deploy it to production (also known as the master environment). \n Platform.sh makes it easy to deploy a feature to production following the exact same workflow. \n \nplatform checkout theme\nplatform environment:merge\n\n \n This will redeploy the master site with the content and configuration of our theme environment. \n Synchronise data to development environments \n Let\u2019s not forget to update our commerce environment so that it is up to date with what has been deployed to production. Platform.sh makes it easy to bring your development environments up to date with your production data using the  environment:synchronise  command: \n \nplatform checkout commerce\nplatform environment:synchronize \n \u00a0 \n That's it, time for you to continue building your site from here. If you have any questions, feel free to ask in the comments section or reach out to us in our  public Slack channel . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "DrupalCon New Orleans Survival Guide ", "url": "https://platform.sh/2016/05/drupalcon-nola-survival-guide/", "documentId": "afc86d712073327b3fe3e9faaaa41710c5f0b389", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           DrupalCon New Orleans Survival Guide \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         05 May 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Are you joining us at DrupalCon New Orleans next week? It\u2019s going to be a blast! \n Those who have attended a DrupalCon before know how intense they can be. For first-timers, a DrupalCon can be overwhelming. The Drupal Community is an amazing and welcoming group of people, almost unnervingly so at times. The energy around a DrupalCon is palpable, but that means it can be a shock to those used to a calmer event. \n So how do you get the most out of a DrupalCon? Glad you asked\u2026 \n \n Water \n No, really. DrupalCons are big and you\u2019ll be walking a lot and talking to a lot of people. Have a water bottle on you. A sholder-sling or belt clip bottle is best because it\u2019s easier to keep with you, but if your laptop bag or backpack has a bottle holder that works well, too. \n Sure, there will be coffee breaks. But the lines may be long, you don\u2019t want to wait for them to get a drink, and water is healthier for you anyway (which matters, really). \n Bring a notebook \n It doesn\u2019t have to be paper, of course. A tablet, phone, Chromebook, laptop, or whatever else lets you take notes is fine. You\u2019ll be exposed to a million new ideas this week, and your odds of remembering everything you found\u00a0 really cool I need to use that this will change my life \u00a0are slim. Write it down! At least write down key terms, phrases, tool, and links to Google later. \n Have lunch with strangers \n What good is hanging out with a conference of thousands of people if you only talk to the people you know? Take advantage of the general friendliness of the Drupal community to meet new people. Break away from your usual team and talk to someone else\u2019s team. Maybe it\u2019s developers you don\u2019t know. Maybe it\u2019s a vendor you\u2019re considering hiring and want to get to know better. (Yep, we\u2019ll be there!) Maybe it\u2019s the marketing director for another institution like yours. Or all of them at the same table. Spend time with new people and come away with new friends. \n One caveat,though: Most Drupal developers are very friendly, but please don\u2019t fawn. Yes, you may be casually chatting with the person who wrote the module that runs your entire business, but they\u2019re still just a (really smart!) person hanging around, learning stuff, and eating lunch. Please treat them as such. \n Mix in the Hallway Track \n DrupalCon New Orleans has 130 sessions across 13 tracks, with 11 concurrent sessions. That\u2019s a lot of content. Fortunately, it\u2019s also all recorded. DrupalCon has one of the best session recording programs of any conference I\u2019ve been to, so if there are too many simultaneous sessions you really want to attend, worry not! The Drupal Association has you covered. (Unless it\u2019s\u00a0 my session on PHP 7 \u00a0on Wednesday at 1pm. Then just go to the session.) \n So well covered, in fact, that you shouldn\u2019t try to pack a session into every time slot. Take some time to just talk and mingle with people. Get into heated (but polite) debates about technical issues with someone you just met. Stop by the expo hall to chat with the Platform.sh team (and the other sponsors, too). Step by the Business Showcase sessions in the vendor hall, especially at 2:00 on Wednesday to see\u00a0 Platform.sh\u2019s resident astronaut . :-) Collect swag from the vendor hall. (That\u2019s why you go to a conference, right? All the free swag?) \n Pace yourself \n There\u2019s so much to do at DrupalCon, including the after-parties, that it\u2019s easy to lose track of time, or have one too many beers with those new friends you just met. Be sure to pace yourself. DrupalCon is a week-long event; don\u2019t spend all your energy on day one. In addition to hydrating, get a good night\u2019s sleep every night. (Note: \u201cGood night\u2019s sleep\u201d is relative. A full 6 hours is generally considered a lot during DrupalCon week.) \n Also, eat healthy! Although the conference lunch tries to be reasonably healthy, it\u2019s very easy to fall into the \u201cpizza and beer and beer\u201d trap at the after parties with all of your new friends. Be careful to mix in plenty of protein and vegetables while you\u2019re at it, so that you can stay upright for the next night. You want to be awake and coherent for Thursday night\u2019s\u00a0 Trivia Night . \n Come for the sessions, stay for the sprints \n DrupalCon doesn\u2019t end with the closing ceremony! Drupal is all about contributing and giving back. That\u2019s how you pay for Open Source. And the best place to do that at DrupalCon is at the\u00a0 Sprints \u00a0on Friday. You do not need to be an accomplished developer, or any developer, in order to help out. There are sprint areas for coders, for front-end devs, for documentation, for UX testing, for marketing, you name it. If there\u2019s not yet a planned sprint for a topic you\u2019re interested in\u2026 guess what, you\u2019re now organizing it. (Hat tip to\u00a0 Cal Evans \u2026) \n Not sure what to do or where to start? There\u2019s even a\u00a0 First-time Sprinter Workshop , where people will be on hand to help you get started. Even if that means starting from \u201cSo, who\u2019s this Git I keep hearing about?\u201d someone will be able to get you onboarded and on your way. \n Go to the Prenote \n Most importantly, of course, plan to get up early enough on Tuesday to attend the\u00a0 DrupalCon Prenote . The Prenote is a DrupalCon tradition, and a great way to break the ice, whether you\u2019re a new attendee or seasoned DrupalCon veteran. Past years have included sketch comedy, super heros, sacrificing Dries for Christmas dinner, crustaceans, and musical comedy. I can\u2019t give away too much for this year\u2019s plans, but I will leak out\u2026 it will definitely sound better in person than on the recording. ;-) \n Always start the Con with Dries\u2019 favorite session. \n We\u2019ll see you in NOLA! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Automatically sanitize your database on development environments ", "url": "https://platform.sh/2016/05/sanitize-your-database/", "documentId": "0cc46fa1a0c62eabd3d13e068038fd0751db2a03", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Automatically sanitize your database on development environments \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         19 May 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         You\u2019re developing your site on Platform.sh and you love the fact that you get exact copies of your production site for every Git branch that you push. \n But now that you think about it, you realize that all those copies used by your development team to implement new features or fixes contain production data (like user emails, user passwords\u2026). And that all the people working on the project will have access to that sensitive data. \n So you come up with the idea to write a custom script to automatically sanitize the production data every time you copy the production site or synchronize your development environments. Next you think of a way to automatically run that script. Possibly a custom Jenkins job that you will maintain yourself. But, of course, you will need to update this Jenkins job for every new project you work on. Plus, you will have to figure out the permissions for this script to give proper access to your site. \n \n But wait, what if I told you that\u00a0 all this hassle can be handled in a simple deployment hook \u00a0that Platform.sh provides? \n \n Indeed, with Platform.sh, every action will trigger specific hooks where you can interact either with the build phase or the deployment phase of the process. \n For example with Drupal, you can use the\u00a0  drush sql-sanitize  \u00a0command to sanitize your database and get rid of sensitive live information. \n Also you need to make sure that the sanitization only runs on the development environments and never on the master environment (you will hate me if that happens): \n \n type: php:7.0\nbuild:\nflavor: drupal\nhooks:\nbuild: |\n# Whatever you want to do during the build phase.\ndeploy: |\ncd /app/public\nif [ $PLATFORM_ENVIRONMENT = \"master\" ]; then\n# Do whatever you want on the production site.\nelse\ndrush -y sql-sanitize --sanitize-email=user_%uid@example.com --sanitize-password=custompassword\nfi\ndrush -y updatedb\n \n \n If you are not working with Drupal, you can even run your own sanitization script. Read more about\u00a0 build and deployment hooks \u00a0on our public documentation. \n To access the deploy hook logs on the server: \n \n $ platform ssh\nweb@kjh43kbobssae-development--php:~$ cat /var/log/deploy.log\n[2016-05-18 10:14:13.872085] Launching hook 'cd /app/public\nif [ $PLATFORM_ENVIRONMENT = \"master\" ]; then\n# Do whatever you want on the production site. \nelse\ndrush -y sql-sanitize --sanitize-email=user_%uid@example.com --sanitize-password=custompassword\nfi\ndrush -y updatedb\nThe following operations will be done on the target database:\n* Reset passwords and email addresses in users table\n* Truncate Drupal's sessions table\nDo you really want to sanitize the current database? (y/n): y\nNo database updates required                                           [success]\n \n \n That\u2019s it! Sleep well now ;) \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "What if you could use Git to manage your whole infrastructure? ", "url": "https://platform.sh/2016/04/what-if-git-manage-infrastructure/", "documentId": "9f0abf0b3d6521d06d0683ad07b7d5de400a7c31", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           What if you could use Git to manage your whole infrastructure? \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         25 May 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         You\u2019re a cool kid who uses Git to manage the codebase of your applications because it\u2019s convenient! You regularly create exact copies of your entire codebase by running\u00a0  git branch  , pull requests to manage code review, use tags or branches to deploy to production. No doubt you host your Git repositories on GitHub/Bitbucket/Gitlab because, let\u2019s face it, you are cool\u2026 \n But you also get stuck every time you want to test a new feature, fix a bug that happens in production, or simply upgrade a service used in your infrastructure. Not so cool. \n \n \n Alright, you might have access to some internal tools which perform some of the following tasks (kudos if they do them all): \n \n\t create development and staging environments on the fly \n\t quickly synchronize and sanitize production database to those development and staging environments \n\t migrate files between environments \n\t backup production environment \n\t deploy to production environment (and easily revert if things go wrong) \n\t manage permissions and access between environments \n\t \u2026 \n \n Also, I\u2019m pretty sure that it looks something like this (even worse sometimes): \n \n I also suppose that you have someone ( even possibly a team ) responsible for maintaining those internal tools, making sure that they are properly running, up to date and always available for you to develop on\u2026 \n Now, what if I told you that\u00a0 all of those processes can be as simple as running\u00a0  git push  \u00a0and that you, as a developer, can have 100% control of it? You can\u00a0  git branch  the entire infrastructure as often as you need, and as many times as you need, to test and develop new features? You can also stay up to date with what is in production and so much more\u2026 without changing anything in your applications! \n \n That\u2019s what I mean! \n With Platform.sh, the entire architecture, along with the build and deployment processes, lives in your codebase within your Git repository. \n Any single change you make to your infrastructure ( upgrade a service, add an extension, define cron jobs, \u2026 ) will go through a Git commit so you can track it and know exactly what has been deployed, and where. \n This configuration is defined as a simple\u00a0  .yaml  \u00a0file, which looks like this ( Drupal in this case ): \n \n name: myapp\n\ntype: \"php:7.0\"\n\nbuild:\n  flavor: drupal\n\ndependencies:\n  php:\n    \"drush/drush\": \"7.1.0\"\n\nruntime:\n  extensions:\n    - http\n    - redis\n    - ssh2\n\nrelationships:\n  database: \"mysql:mysql\"\n  solr: \"solr:solr\"\n  redis: \"redis:redis\"\n\nweb:\n  locations:\n    \"/\":\n      root: \"public\"\n      expires: -1\n      passthru: \"/index.php\"\n\ndisk: 2048\n\nmounts:\n  \"/public/sites/default/files\": \"shared:files/files\"\n  \"/tmp\": \"shared:files/tmp\"\n  \"/private\": \"shared:files/private\"\n  \"/drush-backups\": \"shared:files/drush-backups\"\n\nhooks:\n  deploy: |\n    cd public\n    drush -y updatedb\n\ncrons:\n  drupal:\n    spec: \"*/20 * * * *\"\n    cmd: \"cd public ; drush core-cron\"\n \n \n To summarize, the main advantage of this approach is to reuse software development best practices and tools to manage your infrastructure. Such as: \n \n\t Version control to know exactly what changes have been made \n\t Rollback to a preceding version of the infrastructure \n\t Testing the infrastructure on demand \n\t Making many small deployments as single steps instead of big, more painful, deployments \n\t Design patterns like continuous integration and continuous deployment \n \n Watch\u00a0 Danilo Poccia session at Git Merge 2015 \u00a0to learn more about this topic. \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Software vendor, SaaS or IaaS - doesn\u2019t matter which. Platform.sh really is the killer app for you! ", "url": "https://platform.sh/2016/05/isv-saas-iaas-providers/", "documentId": "09e02dde7b993e17f7dc74eeac033921944edb69", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Software vendor, SaaS or IaaS - doesn\u2019t matter which. Platform.sh really is the killer app for you! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         25 May 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \u201cReally ?\u201d I hear you asking yourself. \u201cHell yeah\u201d I say\u2026.after all, we\u00a0 are \u00a0helping global software companies into the cloud, we\u00a0 are \u00a0giving hyperscaling hosters the \u2018fast growth sizzle\u2019 they\u2019re looking for, and we\u00a0 are \u00a0opening up new channels to bigger markets for SaaS providers. \n Your next question of course is \u201cSounds too good to be true, you need to tell me how\u201d, so here goes\u2026 \n \n SaaS vendors are creating whole new channels to market \u00a0- Let\u2019s start with Software-as-a-Service (SaaS), where one size actually does not fit all. For 10 years the multi-tenant SaaS model has been the best way to manage large numbers of customers with similar needs, but difficult to accommodate the edge case, or even entire sectors with a specific need. Making an application configurable for anything, AND uber extendable is pretty difficult, and so you just can\u2019t accommodate everybody, and consequently there is always room for more vendors in the same space. However, in this day and age, it\u2019s all about who can grow the fastest the quickest, and if you have something new and exciting, you need to reach out as far as you can, before the hard-to-reach corners of your market become occupied by copycats. \n So how does Platform.sh change all that? Well, we allow founders, CTOs and the guys who actually have to design application architectures, to solve the problem of managing many potential variations of their SaaS offering. If you can keep control of the base copy (in the Drupal world they call this a \u2018distribution\u2019), then you can give it to partners who specialise in their chosen sector (retail, finance or manufacturing for example) to enhance and deploy to the end client. And at the same time you are able to update the global customer base with security fixes and generic feature changes all at once, and with no risk. Attention all SaaS vendors not yet thinking about the possibilities a whole new tier of development agencies could bring your business. You should start to do so, because the copycats already are, and they\u2019re calling it \u201ca new business model\u201d. \n Software vendors who want to do \u2018The Cloud\u2019 properly \u00a0- Some of us have tried it already (I speak from experience), some of us have failed (luckily not), and everybody else has thought about it seriously. For those of us selling licenced copies of our application, it really is the wild west out there. Customers do all sorts of strange things to make it work the way they want, especially in the open-source world. Mostly, you can\u2019t even see what they\u2019re doing, so how is it cost effective to offer them all 1) help resolving problems they created in the first place, 2) generic feature updates, or 3) protection against zero-day exploits and so on? It\u2019s not cost-effective, unless you charge them a great deal of money, which of course they\u2019d rather be spending on something else. Some of them begrudgingly pay up, and some go down a different route and suffer accordingly. \n However, if you can apply those same Platform.sh principles around controlling the core code - because it sits within your brand new cloud offering - then you can update it without risk, and let anybody buy it and make it fit-for-purpose. \u201cWow, another new business model!\u201d I hear you say. And you\u2019d be right, because until now, the only other way to do this safely was build a multi-tenant SaaS, where of course one size does not fit all. \n Hosting vendors, even those with an IaaS offering \u00a0- If you\u2019re selling commodity hosting, you have to differentiate in some way, or struggle with margins. The usual answer - if you can - is to find large sums of money to build an IaaS. Or\u2026 leapfrog the competition and white-label our PaaS. Platform.sh is a PaaS that sits on (OpenStack etc.) and automates all your worries away. Much faster application development velocity plus zero systems administration for your customers, and a much smaller operations teams for you. Just go sell the sizzle, pretty compelling huh? And for all you hyper-scalers out there, acquiring market share and better access to the new ecosystems seems to be a strong driving force here. \n So what\u2019s our secret sauce ? \u00a0The latest code management, lifecycle automation and containerisation technologies are critical ingredients, mixed in with Platform.sh (our very own second-generation PaaS) to keep code, files, services and data in lock-step through the development and deployment process - no application failures, no performance problems, no downtime. So, that\u2019s all I\u2019m prepared to say for now, aside from this powerful combination of clever ideas and technology seems to be unlocking enormous amounts of technical and business potential amongst our very loyal customer base, which incidentally numbers 2,500 SMEs in the 2 years since launch. To find out more just\u00a0 contact us \u00a0or [me directly] (kieron@platform.sh). \n By the way, if you are wondering who these large customers are, the list is as long as my arm (well down to my elbow anyway). Just so you don\u2019t think we\u2019re showing off, I\u2019ll name the two you know best: Magento Commerce and Microsoft Azure :). Need I say more. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "May Features Update ", "url": "https://platform.sh/2016/05/new-features-may/", "documentId": "42a25beb3a48d566dd8a24991830872c62e3800a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           May Features Update \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         30 May 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         If you\u2019ve followed up on Platform.sh news recently you may have seen it\u2019s been quite a wild ride recently. Magento Commerce chose us to power and operate their new Cloud platform and we signed exclusive deals with Orange Business Services and Microsoft Azure to propose a sovereign hosting option with our incredible feature-set to their clients in France and Germany. \n But that didn\u2019t stop us from working on our core product\u2026 over the past couple of months we worked hard to squeeze more performance but also improve the overall robustness of Platform.sh not only for our Enterprise customers that already enjoy a 99.99% uptime guarantee but also for our profesionnal customers. \n And if this is not enough .. we had time to release a bunch of new features and enhancements. The following is not even the complete list, just some highlights so you can see what has been happening. \n \n The Web Interface \n Much has been improved over the last month or so and Aaron who has been doing much of the heavy lifting has written a\u00a0 specific blog post \u00a0but here are some of the recent changes: \n \n\t Legible Log Window ! In the activity log of the web interface, instead of a rediculously small pop-up you can now see in glorious detail the log of what an environment just did. \n\t Better error messages when you visit a project that does not exist, or that you do not have access to. \n\t Many accessibility fixes (tab accesibility, markup correction and contrast adjustments) \n \n PHP and NodeJS Runtimes \n We usually don\u2019t say much about these .. as runtimes are continuously updated (security updates happen on-the-fly) and we make sure this stays transparent to our users (as much as softwarely possible we don\u2019t introduce breaking changes\u2026) but here are some highlights from the previous weeks: \n \n\t NodeJS 6.2 \u00a0is now available, 4.4.x and 0.12.x were updated to their latest version \n\t Subversion and Mercurial CLI tools \u00a0are now included in the environment** \n\t PHP 5.6.x and PHP 7.x and HHVM were updated to their latest versions (duh) \n\t composer has been upgraded to 1.1.1 and blackfire-php to its latest version (1.10.6) \n\t The composer build flavor now pre-warms the composer cache before executing composer (faster fastness). \n\t Various image processing packages were added: advancecomp, jpegoptim, libjpeg-turbo-progs, optipng, pngcrush \n\t We fixed and issue with non-ASCII characters in project paths a build move failure on non-existent destination directory and a symlink moving issue during build \n\t And of course all the security updates \u2026 (imagetragick, the glibc issue, various Java, OpenSSL and OpenSSH issues, some Git CLI vulnerabilities) \n \n The CLI \n \n\t Adapt activity commands to show all environments\u2019 activities with \u2013all (-a) \n\t Adapt tables to the terminal width \n\t Allow nested property access (separated by .) in various commands \n\t Filter projects by region hostname with\u00a0  project:list --host <hostname>  \n\t Separate integration commands for more readable output:\n\t \n\t\t integrations is now aliased to a new command, integration:list \n\t\t integration:get now only shows details for an integration, instead of listing integrations (it now requires a second argument) \n\t\t integration:get now has a \u2013property (-P) option and more consistent formatting \n\t \n\t \n\t Remove \u2013build option for branch \n\t Add \u2013no-backup option to the legacy-migrate command \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Microsoft and Platform.sh announce joint PaaS offering for High Availability (HA) hosting ", "url": "https://platform.sh/2016/06/02/microsoft-joint-paas-offering/", "documentId": "a7264ce85b6916ab5332311503a17d75141f5397", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Microsoft and Platform.sh announce joint PaaS offering for High Availability (HA) hosting \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         02 Jun 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         English \n Customers gain automation on Microsoft Cloud Germany \n June 2nd 2016, Paris, France \u00a0- Today, Platform.sh, the Continuous Deployment Platform-as-a-Service cloud hosting company, announces their plans to enable companies to run highly available and scalable web applications based on Drupal, Symfony or PHP in German datacenters. Platform.sh manages the entire application lifecycle from development to production instances with 99.99% uptime guarantees for production environments. \n \n Platform.sh will be available on Azure from the second half of 2016 using Microsoft Cloud Germany: Customer data is stored in German datacenters only. Data is exchanged between two data centers through a private network to ensure data resides in Germany. Access to the customer data stored in these new datacenters will be under the control of T-Systems, a subsidiary of Deutsche Telekom, an independent German company acting as a data trustee. \n \n \u201cThe new Platform.sh offer allows enterprises operating in data-sensitive areas to benefit from the scalability and flexibility of the global Microsoft cloud platform combined with data storage in German data centers and a German data trustee\u201d, \u00a0says\u00a0 Peter Jaeger, Senior Director Developer Experience and member of the management team at Microsoft Germany. \u00a0 \u201cPlatform.sh solves a big problem in software development: instead of being held back from improving applications by existing infrastructure, companies can roll out updates quickly to respond to the needs of today\u2019s dynamic markets.\u201d \n \n Customers outside Germany are also able to deploy Platform.sh to all 24 Azure regions around the world. A first wave of customers is already being invited to participate in the beta phase. Companies interested in joining the program can find out more at\u00a0 https://platform.sh/azure/en \n \n \u201cMicrosoft is everybody\u2019s target partner,\u201d \u00a0said\u00a0 Frederic Plais, CEO at Platform.sh ,\u00a0 \u201cand so we are extremely pleased they selected us from such a strong list of global contenders. This strategic adoption of our Continuous Delivery PaaS sends a very strong signal to the market that Platform.sh truly is a killer app\u201d \n \n Among the notable Platform.sh features which attracted Microsoft is the rapid cloning technology which eliminates DevOps overhead and enables byte-for-byte copies of entire live sites, keeping the code, files, services and data in lockstep. This NoOps approach maintains perfect consistency between branched environments, which in itself is valuable for live site support, but even more so for development teams, who now have on-demand access to perfectly consistent copies of master environments. This means every new feature can be developed and successfully tested in its own exact copy of the live system, giving CTOs and CMOs confidence that it will behave exactly as expected when it goes through staging, or even straight to live. \n \n \u201cThis partnership opens up a whole new channel of customers for Platform.sh and allows us to accelerate value into the German market for Microsoft customers,\u201d \u00a0said\u00a0 Kieron Sambrook-Smith, Chief Commercial Officer at Platform.sh. \n \n Customers will benefit from improved development and deployment processes, up to 20% better developer productivity, a 40% faster UAT cycle and up to 90% reduction in systems administration activity and ticketing. New levels of Continuous Delivery are achievable through integration with the Platfrom.sh API from existing development tools and processes to request instant copies of environments for various purposes. \n The Platform.sh PaaS has been designed with continuous delivery and 99.99% high availability in mind. Scaling compute and storage resource up or down is both quick and seamless, whilst making critical changes to stack and core application components goes unnoticed by the shopping customer. In fact, over the 4 day Black Friday weekend last November, we were able to announce that not a single Enterprise customer experienced any application downtime whatsoever, despite all the usual problems. \n About Platform.sh \u00a0Platform.sh is a ground-breaking hosting and development tool for PHP and NodeJS web applications. It extends a branch-merge workflow to infrastructure so that every branch can be tested as if it were in production, and live sites scale effortlessly to serve the most demanding traffic. Enterprise plans boast a unique, triple-redundant offering, and 24/7 follow-the-sun support. Based on Open Source technologies, Platform.sh is ideal for agile software development, continuous integration (CI) and continuous delivery (CD). Based in Paris, France, the company has technical, support, and sales staff throughout Europe, the United States, and the Asia-Pacific region providing cloud services to thousands of companies in various areas including fashion, publishing, retail, travel, engineering and the public sector. \n Fran\u00e7ais \n #Microsoft et Platform.sh s\u2019associent pour lancer une offre de Platform-as-a-Service hautement disponible# \n Cette offre compl\u00e8tement automatis\u00e9e est notamment disponible sur le cloud souverain Allemand. \n Paris, le jeudi 2 juin 2016 \u00a0\u2013 Platform.sh, le PaaS fran\u00e7ais de nouvelle g\u00e9n\u00e9ration, et Microsoft, ont conclu un accord de partenariat visant \u00e0 offrir aux grands comptes Allemands, un service complet de gestion du cycle de vie des applications open source (notamment PHP et NodeJS), reposant sur l\u2019innovation technologique majeure des containers Linux et des micro services, et garantissant ainsi un taux de disponibilit\u00e9 des applications de 99,99 %. \n Microsoft se r\u00e9jouit d\u2019avoir identifi\u00e9 en Platform.sh, un partenaire PaaS strat\u00e9gique permettant d\u2019acc\u00e9l\u00e9rer leur attractivit\u00e9 sur les projets Open Source, notamment ceux ayant besoin d\u2019un h\u00e9bergement souverain en Allemagne, via l\u2019entit\u00e9 autonome cr\u00e9\u00e9e avec T-Systems AG. Du point de vue technologique, cette offre permet, en outre, \u00e0 tous les clients qui se trouvent en dehors de l\u2019Allemagne de d\u00e9ployer Platform.sh dans les 24 r\u00e9gions du monde d\u2019Azure. \n \n \u201cLa nouvelle offre propos\u00e9e avec Platform.sh permet aux entreprises op\u00e9rant dans un contexte hautement sensible aux donn\u00e9es, de profiter de la scalabilit\u00e9 et de la flexibilit\u00e9 de l\u2019offre globale de Microsoft, combin\u00e9e avec une approche souveraine Allemande sur le stockage et la protection des donn\u00e9es\u201d , d\u00e9clare\u00a0 Peter Jaeger, Senior Director Developer Experience et membre de l\u2019\u00e9quipe de direction de Microsoft Allemagne .\u00a0 \u201cPlatform.sh apporte une solution remarquable de d\u00e9ploiement continu pour les \u00e9quipes de d\u00e9veloppement, qui peuvent faire abstraction des questions d\u2019infrastructure et concentrer leurs efforts sur leurs applications afin qu\u2019elles r\u00e9pondent aux attentes toujours plus exigeantes des march\u00e9s.\u201d \n \n \n \u00ab C\u2019est extr\u00eamement valorisant pour une start-up technologique comme la n\u00f4tre d\u2019\u00eatre s\u00e9lectionn\u00e9e par Microsoft \u00bb , a d\u00e9clar\u00e9\u00a0 Fr\u00e9d\u00e9ric Plais, CEO de Platform.sh, \u00a0\u201cCette adoption strat\u00e9gique de notre PaaS envoie un signal tr\u00e8s fort au march\u00e9, validant l\u2019approche tr\u00e8s innovante de Platform.sh \u00bb. \n \n C\u2019est la capacit\u00e9 unique au monde de Platform.sh de reproduire \u00e0 la vol\u00e9e, des environnements de pr\u00e9-production (ou staging), qui sont des copies parfaites (\u00e0 l\u2019octet pr\u00e8s) du site en production, qui a s\u00e9duit Microsoft. Cette prouesse technologique permet de mettre en place un process automatis\u00e9 de d\u00e9ploiement continu. Ainsi les \u00e9quipes de d\u00e9veloppement peuvent d\u00e9ployer une par une et au fil de l\u2019eau, des nouvelles versions de leur application de fa\u00e7on s\u00e9curis\u00e9es, fiables et extr\u00eamement rapides. \n Le service est particuli\u00e8rement adapt\u00e9 \u00e0 des applications web transactionnelles \u00e0 fort trafic comme des sites e-commerce majeurs. En effet, il permet \u00e0 la fois une forte r\u00e9activit\u00e9 au march\u00e9, par la mise en place du d\u00e9ploiement continu, mais aussi une mont\u00e9e en \u00e9chelle \u00e9lastique et sans interruption des services afin de faire face \u00e0 des pics de trafic. Il est \u00e9galement accompagn\u00e9 d\u2019une offre de support de niveau entreprise 24/7/365 et des SLAs garanties. \n Les premiers clients ont d\u00e9j\u00e0 \u00e9t\u00e9 invit\u00e9s \u00e0 participer \u00e0 la phase de lancement sur\u00a0 https://platform.sh/azure/en \n \n \u00ab Ce partenariat nous permet de toucher un nouveau type de clients et ainsi asseoir notre notori\u00e9t\u00e9 aupr\u00e8s des clients de Microsoft sur le territoire Allemand \u00bb \u00a0se r\u00e9jouit\u00a0 Kieron Sambrook-Smith, Chief Revenue Officer de Platform.sh . \n \n Platform.sh am\u00e9liore \u00e0 l\u2019extr\u00eame, les diff\u00e9rents \u00e9l\u00e9ments du processus de d\u00e9veloppement et de d\u00e9ploiement, avec pour cons\u00e9quence : \n \u25cf Une disponibilit\u00e9 moyenne de l\u2019application mesur\u00e9e sup\u00e9rieure \u00e0 99,99% ; \n \u25cf Jusqu\u2019\u00e0 90% de r\u00e9duction des volumes de tickets de support aux \u00e9quipes d\u2019administration syst\u00e8me ou DevOps, par l\u2019automatisation compl\u00e8te des t\u00e2ches d\u2019exploitation et de mise en production; \n \u25cf Une meilleure productivit\u00e9 des d\u00e9veloppeurs (plus de 20%) ; \n \u25cf Une diminution des phases de test et assurance qualit\u00e9 (40% plus rapide) : \u00e0 chaque nouvelle version ou fonctionnalit\u00e9 est associ\u00e9e une URL sp\u00e9cifique testable par isolation. \n A propos de Platform.sh \u00a0Platform.sh est une Platform-as-a Service de nouvelle g\u00e9n\u00e9ration, combinant un h\u00e9bergement cloud \u00e0 haute disponibilit\u00e9 et un workflow de d\u00e9veloppement puissant de d\u00e9ploiement continu. Platform.sh permet de cr\u00e9er des branches de l\u2019infrastructure enti\u00e8re (et non seulement du code), de sorte que chaque branche peut \u00eatre test\u00e9e comme si elle \u00e9tait dans la production. Les sites live peuvent \u00eatre \u00e9galement mis \u00e0 l\u2019\u00e9chelle sans effort pour servir les pics de trafic les plus extr\u00eames. La solution propose une offre unique de triple redondance, et de support 24/7/365. Bas\u00e9 sur des technologies Open Source, Platform.sh est id\u00e9al pour le d\u00e9veloppement agile de logiciels, l\u2019int\u00e9gration continue (CI) et la livraison continue (CD). \n Platform.sh est une startup fran\u00e7aise, financ\u00e9e par des investisseurs priv\u00e9s professionnels (ISAI, Alven, Open Ocean et Hi Inov) et soutenue par le programme Horizon 2020 de l\u2019Union Europ\u00e9enne. Connaissant une croissance fulgurante, la soci\u00e9t\u00e9 emploie des ing\u00e9nieurs de haut niveau sur les 3 continents et r\u00e9alise la moiti\u00e9 de son activit\u00e9 aux Etats-Unis. La soci\u00e9t\u00e9 a ses origines dans le monde open source (ayant \u00e9t\u00e9 \u00e0 l\u2019origine du logiciel e-commerce PHP Drupal Commerce). \n Deutsch \n #Microsoft und Platform.sh k\u00fcndigen gemeinsames PaaS Angebot f\u00fcr Hochverf\u00fcgbarkeits-Hosting an#\u00a0 Kunden gewinnen an Automatisierung in der Microsoft Cloud Deutschland \n 25. Mai 2016, Paris, Frankreich \u00a0\u2013 Platform.sh, Anbieter einer innovativen Platform-As-A-Service (PaaS) L\u00f6sung f\u00fcr Continuous Deployment, k\u00fcndigt heute an, f\u00fcr Unternehmen hochverf\u00fcgbare und skalierbare Web-Anwendungen basierend auf Drupal, Symfony oder PHP in deutschen Rechenzentren zu betreiben. Platform.sh automatisiert den gesamten Anwendungslebenszyklus von Entwicklung bis Produktion mit einer Verf\u00fcgbarkeit von 99,99 %. Dreifache Datenredundanz stellt sicher, dass Ausfallzeiten vermieden werden. \n Platform.sh wird ab dem zweiten Halbjahr 2016 auf Azure in der Microsoft Cloud Deutschland verf\u00fcgbar sein: Kundendaten werden ausschlie\u00dflich in deutschen Rechenzentren gespeichert. Der Datenaustausch zwischen zwei Rechenzentren findet \u00fcber ein privates Netzwerk statt, um sicherzustellen, dass sich die Daten in Deutschland befinden. Zugriff auf die Kundendaten, die in diesen neuen Rechenzentren gespeichert werden, unterliegen der Kontrolle von T-Systems, einer Tochtergesellschaft der Deutschen Telekom, als unabh\u00e4ngiges deutsches Unternehmen, das als Datentreuh\u00e4nder fungiert. \n \n \u201cDas neue Platform.sh-Angebot erm\u00f6glicht Unternehmen, in datensensitiven Bereichen von der Skalierbarkeit und Flexibilit\u00e4t der weltweiten Microsoft Cloud Plattform zu profitieren, in Kombination mit Datenspeicherung in deutschen Rechenzentren unter der Kontrolle eines Datentreuh\u00e4nders\u201d , sagt\u00a0 Peter Jaeger, Senior Director Developer Experience (DX) und Mitglied der Gesch\u00e4ftsleitung bei Microsoft Deutschland .\u00a0 \u201cPlatform.sh l\u00f6st ein gro\u00dfes Problem in der Softwareentwicklung: statt Verbesserungen der Anwendung durch die vorhandene Infrastruktur aufzuhalten, k\u00f6nnen Unternehmen Updates schnell ausrollen und auf die Bed\u00fcrfnisse der heutigen dynamischen M\u00e4rkte reagieren.\u201d \n \n Kunden au\u00dferhalb Deutschlands k\u00f6nnen dar\u00fcber hinaus Platform.sh auch in allen 24 Azure-Regionen auf der ganzen Welt nutzen. Eine erste Welle von Kunden ist bereits zur Teilnahme an der Beta-Phase eingeladen. Unternehmen, die sich f\u00fcr das Programm interessieren, finden mehr dazu unter\u00a0 https://platform.sh/azure . \n \n \u201cMicrosoft ist jedermanns Wunschpartner\u201d , sagt\u00a0 Frederic Plais, CEO von Platform.sh ,\u00a0 \u201cund so sind wir sehr erfreut, dass sie uns aus einer starken Liste der globalen Anw\u00e4rter ausgew\u00e4hlt haben. Diese strategische Partnerschaft mit unserer Continuous Delivery PaaS L\u00f6sung ist ein starkes Signal f\u00fcr den Markt, dass Platform.sh wirklich eine \u201eKiller App\u201c ist, die noch dazu unter deutscher Datentreuhand verf\u00fcgbar ist.\u201d \n \n Zu den bemerkenswerten Funktionalit\u00e4ten von Platform.sh z\u00e4hlt die Rapid Cloning Technologie, \u00fcber welche DevOps Aufwand beseitigt wird und Byte-f\u00fcr-Byte Kopien der gesamten Live-Webseiten erm\u00f6glicht werden, um Code, Dateien, Dienste und Daten im Gleichschritt zu halten. Dieser NoOps Ansatz h\u00e4lt perfekten Abgleich zwischen verzweigten Umgebungen, was schon allein f\u00fcr die Live-Webseiten Unterst\u00fctzung wertvoll ist, aber umso mehr f\u00fcr die Entwicklungsteams, die jetzt auf Abruf Zugriff auf vollkommen konsistente Kopien der Hauptumgebungen haben. Dies bedeutet, dass jede neue Funktion in einer eigenen, exakten Kopie des Live-Systems entwickelt und erfolgreich getestet werden kann, was CTOs und GMOs die Zuversicht geben kann, dass sich die Weiterentwicklung genauso verh\u00e4lt wie erwartet, wenn sie in Staging oder direkt in Produktion \u00fcbergeht. \n \n \u201cDiese Partnerschaft er\u00f6ffnet einen ganz neuen Kanal an Kunden f\u00fcr Platform.sh und erm\u00f6glicht es uns, die Wertsch\u00f6pfung auf dem deutschen Markt zu beschleunigen\u201d , sagte\u00a0 Andrew Melck, Regional Manager DACH bei Platform.sh. \n \n Kunden profitieren von optimierten Entwicklungs- und Deployment-Prozessen, einer bis zu 20 Prozent h\u00f6heren Produktivit\u00e4t f\u00fcr Entwickler, einem 40 Prozent schnelleren Testing-Zyklus und bis zu 90-prozentiger Reduktion der Aufw\u00e4nde f\u00fcr Systemadministration und Support. Dank der Platform.sh API kann die Continuous Delivery auf ein neues Niveau gebracht werden, indem bestehende Entwicklungstools und Prozesse ohne Zeitverlust in verschiedenen Kopien der Umgebung f\u00fcr unterschiedlichste Zwecke integriert werden k\u00f6nnen. \n Die Platform.sh-PaaS wurde f\u00fcr Continuous Delivery und 99,99% Verf\u00fcgbarkeit konzipiert. Die Skalierung von Rechen- und Speicherressourcen nach oben oder unten ist damit schnell und nahtlos umsetzbar, w\u00e4hrend kritische Ver\u00e4nderungen von Kernkomponenten von den Website-Nutzern nicht bemerkt werden. Beim letzten vier Tage dauernden \u201cBlack Friday\u201d-Wochenende im November wurde trotz aller \u00fcblichen Probleme kein einziger Platform.sh-Kunde von Ausfallzeiten betroffen. \n \u00dcber Platform.sh \u00a0Platform.sh ist ein innovatives Hosting- und Entwicklungstool f\u00fcr PHP und NodeJS Web-Anwendungen. Es erweitert den Branch-Merge-Workflow auf die Infrastruktur, sodass jeder Branch getestet werden kann, als ob er live w\u00e4re. Unternehmenswebseiten lassen sich m\u00fchelos skalieren und dem anspruchsvollsten Traffic anpassen. Unternehmenskunden verf\u00fcgen mit Platform.sh \u00fcber ein einzigartiges, dreifach-redundantes Konzept mit weltweitem 24/7-Support. Basierend auf Open Source Technologien, eignet sich Platform.sh ideal f\u00fcr agile Softwareentwicklung, Continuous Integration (CI) und Continuous Delivery (CD). Das gleichnamige in Paris ans\u00e4ssige Unternehmen verf\u00fcgt \u00fcber Mitarbeiter f\u00fcr Technik, Support und Vertrieb in Europa, den Vereinigten Staaten und in der Region Asien-Pazifik, um Cloud-Services f\u00fcr Tausende von Unternehmen in verschiedenen Bereichen wie Mode, Verlagswesen, Einzelhandel, Reisen, Technik und f\u00fcr den \u00d6ffentlichen Sektor bereitzustellen. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Drupal 8 starter kit now with PHP 7 and Composer! ", "url": "https://platform.sh/blog/drupal-8-starter-kit-now-with-php-7-and-composer/", "documentId": "32ad4bdfeebcde57a4fbeb338b8bcc44597ca652", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Drupal 8 starter kit now with PHP 7 and Composer! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         07 Jun 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Drupal 8.1 has made a significant shift toward embracing Composer as the standard way to install and manage a Drupal site. Starting today, with Drupal 8.1.2, Platform.sh\u2019s Drupal 8 templates are also Composer-based, and default to using PHP 7. \n \n Wait, what about my existing sites? \n Absolutely nothing changes for sites already hosted with Platform.sh. If you\u2019re using Drush Make or just checking your entire Drupal site into Git, you can continue to do so. Nothing in this post applies to you (unless you want it to). \n Oh good. So what actually changes? \n When you create a new site with Platform.sh, you\u2019re given the opportunity to select a \u201ctemplate\u201d for a site. The template is really just a starter Git repository, complete with a recommended .platform.app.yaml file and .platform directory for a given application. Until now, the template for Drupal 7 and Drupal 8 used Drush Make as their build script. The Drupal 8 template now uses Composer, just like our Symfony template and most other PHP applications. \n The Composer template is closely based on the (excellent)\u00a0 Drupal-Composer project \u00a0built by the Drupal community. It adds only two patches to make Drupal install cleanly on a read-only file system, both of which have already gone through the Drupal issue queues and are just waiting to be committed. Once they\u2019ve been incorporated into a point release we\u2019ll drop those patches from our composer.json file. \n As Drupal 8 is also fully tested with PHP 7, we\u2019ve defaulted to PHP 7.0 for all newly created Drupal 8 sites. \n As Platform.sh containers are always \u201cproduction ready\u201d, the composer command we use is optimized for production. Specifically, we run: \n \n composer install --no-progress --prefer-dist --optimize-autoloader\n \n \n Neat. But wait, which Composer repository are you using for Drupal? \n Drupal currently has two different Composer services, a legacy one hosted at https://packagist.drupal-composer.org and a new, experimental one at https://packages.drupal.org/. We\u2019ve been in contact with the Drupal.org Infrastructure team, and they\u2019ve given us the go-ahead to default to the new, official service. \n If you want to switch back to the legacy service, be sure to check the\u00a0 Drupal.org documentation page \u00a0for notes on the different way it handles module versions. \n But, but, I have legacy code that doesn\u2019t work with PHP 7 yet! \n Not to worry! If you need to start a new Drupal 8 site but want to run it on PHP 5.6 instead, simply edit your\u00a0  .platform.app.yaml  \u00a0file and change the line \n type: \"php:7.0\"  \n to \n type: \"php:5.6\"  \n Then\u00a0  git push  . Yes, it really is that easy. \n (PHP versions before 5.6 are not supported by the PHP development team. We only provide those images to support legacy projects. Please use PHP 5.6 or, preferably, PHP 7 for all new projects. Security experts around the world thank you.) \n I already have a Drupal 8 project using Composer. Will it still work? \n Absolutely! Simply go to the\u00a0 template Git repository \u00a0and copy the\u00a0  .platform.app.yaml  \u00a0file and\u00a0  .platform  \u00a0directory, then stick those in your project\u2019s Git root. If you used the Drupal-Composer project to create it initially, all of the paths should still work fine. You will also need the\u00a0  settings.php  \u00a0and\u00a0  settings.platformsh.php  \u00a0files to ensure your site gets the correct database credentials and such. You can tweak the\u00a0  .platform.app.yaml  \u00a0file if needed, such as if your files are organized differently. \n You can also tweak those files as needed to configure your cluster exactly how you need. See the\u00a0 documentation \u00a0for more details. \n What about Drupal 7? \n We\u2019re still investigating whether we want to switch our Drupal 7 template over to Composer. (If you have thoughts on the matter, let us know.) Currently, Drupal 7\u2019s test suite doesn\u2019t fully pass under PHP 7 as there\u2019s still a few edge case bugs, and a number of contrib modules need minor tweaks. We may default Drupal 7 to PHP 7 in the future when we feel it\u2019s safe to do so. For now, we recommend PHP 5.6 for Drupal 7 sites. \n Wow, thanks, this is great! \n Happy to help! See you in the Cloud\u2026 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "UI version 2.10 released ", "url": "https://platform.sh/2016/06/release-ui-2-10/", "documentId": "2b62a4a3c47068440dbfa138e03caaf440d209bb", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           UI version 2.10 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Aaron Dudenhofer \n                  \n                   Product Engineer \n                  \n                  \n                 \n            \n          \n         \n         07 Jun 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         It has been a while since we have made an announcement about UI updates. But today, we\u2019re happy to anounce a new release for the Platform.sh web interface. We are constantly working on improving the user experience based on feedback that we receive from you through support tickets, chat, and at events and conferences. The latest round of improvements are based on accessibility, better messages, and better display of the activity logs. \n \n Accessibility improvements \n A lot of work has gone into this latest release to make the user interface more accessible. We improved some of the contrasts of our fonts and tested every page of not just the front interface, but also the environment and project settings interfaces. There were too many elements that were displayed only on hover states, and these were not accessible. Now everything should be accessible should you need to tab through the interface. \n \n Improved messages \n We have improved many of the messages that appear when an error occurs, verifying an action, or if access is blocked. (Have you ever wondered why your domains tab was disabled?) We\u2019ve also updated the action links to help users know what to do next when one of these messages appear. \n There were previously \u201cConnection Lost\u201d errors occuring and some errors that had resulted in blank pages that have been fixed to display the appropriate message. This is something that we will continue to be improving on as we introduce new features to reduce the potential for confusion as much as possible. \n \n Log messages \n One of the larger requests that we have recieved was to improve the display of the logs in the activity stream. So we have moved this information out of the small dropdown and into a larger modal popup. We have also added a copy to clipboard link to make it easier to share the log information when you need assistance. \n \n We\u2019re constantly working at improving our interface, and we love hearing feedback from you. Don\u2019t hesitate to open a ticket if you find something that doesn\u2019t make sense or something that could be improved! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Looking for our new marketing manager! Are you the one? ", "url": "https://platform.sh/2016/06/10/marketing-manager-paris/", "documentId": "650c0a96a652bb6ab85d95c9096d57c419f47e9d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Looking for our new marketing manager! Are you the one? \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Lyly Lepinay \n                  \n                   Head of Digital Marketing \n                  \n                  \n                 \n            \n          \n         \n         10 Jun 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh is a groundbreaking hosting and development tool for web applications. We\u2019re a European VC-Backed startup with a host of blue-chip Enterprise clients and a string of awards and grants (including \u20ac2m from the EU Horizon 2020 program). To reinforce our technical prowess, we are looking to grow our marketing team. If you\u2019re looking for an exciting, high-growth opportunity with an award-winning, cutting-edge company, this could be just the job for you. \n \n Context \n To support the expansion of our company, Platform.sh is looking for a Marketing Manager to help grow our brand. Reporting to the Head of Digital Marketing, the Marketing Manager will be responsible for supporting our sales teams by managing the planning, creation and production of our marketing materials and events as well as growing our communication channels. Platform.sh is a young company and as we grow you will have every opportunity to grow too, with the potential for greater responsibility and promotion. \n Responsibilities \n \n\t Project managing all marketing activities on the plan, reviewing and reporting on progress as required, managing risks and issues in order to achieve/exceed lead generation targets \n\t Working with partners, securing and growing Marketing co-funding and cooperation. \n\t Planning, organizing and executing events and campaigns focused on maximising lead generation. Reviewing the effectiveness of marketing activities and events \n\t Managing and maximising leads generated from Platform.sh\u2019s digital presence: website, newsletters, social media & webinars \n\t Working with internal and external counterparts to create press releases, cases studies and white papers \n\t Community management of social media networks \n\t Work in liaison with the media and influencers \n\t Support in the training and developing new members of the sales, pre-sales & engineering teams on marketing strategy, plans, and competitor activities etc. \n \n The ideal candidate \n 3 - 5 years experience in marketing including market analysis, community management, event management, SEO, paid media, content planning and creation. The ideal candidate can demonstrate the following: \n \n\t Creativity: \u00a0You have a creative flair and are not afraid to contribute new and original ideas that are commercially viable. \n\t Organisation, planning and time management: \u00a0You\u2019re a juggler by nature of multiple responsibilities, tasks and projects whilst respecting deadlines. You\u2019ve also been the guardian of many a content or marketing calendar before. \n\t Attention to detail: \u00a0Your keen eye can also catch the little things that can improve a process or user experience at an event or on our website. \n\t Interpersonal skills & teamwork: \u00a0You\u2019re a confident communicator who can positively negotiate and influence customers, suppliers, partners cross-department team members etc. in both French and English language. \n\t Teamworking: \u00a0is able to collaborate effectively across departments and geographies in order to deliver plans and objectives. Supports others in the achievement of company wide objectives. \n\t Copywriting and copyediting: \u00a0You can demonstrate previous copy editing work for marketing and communication materials. Reviewing a whitepaper on SaaS or DevOps does not faze you and you\u2019re probably already blogging. \n \n Bonus points \n \n\t Startup/technology background: \u00a0Bronze points for having good knowledge or background of the software/technology sector, particularly hosting, PaaS and agile development processes. \n\t CSS/HTML/Photoshop/Illustrator/Markdown: \u00a0Golden points if you don\u2019t always have to wait on other people to produce stuff. You can follow branding guidelines and produce visual content or web content all by yourself \n\t Salesforce/Adwords/etc..: \u00a0Fuschia colored silver points if you know how to use the technical tools of the domain and can set-up things autonomously. \n\t Git: \u00a0Diamond-serrated platinum points if you are a hacker at heart and can already use git, even basic knowledge of a programming language will be much appreciated \n \n Availability \n \n\t Start: Right away or as soon as possible \n\t Based in Paris, France. \n\t Must be able to travel \n \n To apply, write to\u00a0 jobs@platform.sh \u00a0with the title Marketing Manager FTW, including a cover letter and CV. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "The future of the PHP PaaS is here: Our journey to Platform.sh ", "url": "https://platform.sh/2016/06/future-php-paas/", "documentId": "ecab3ab630936b59596dde01cf0cb503aa97e926", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The future of the PHP PaaS is here: Our journey to Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Markus Hausammann \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         17 Jun 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         It\u2019s a problem every digital agency faces: how can we best deploy our resources for maximum customer benefit, efficiency and profit? Markus Hausamman at Cloud Solutions has long believed that the right Platform as a Service (PaaS) should be an essential part of the answer. A PaaS offloads the burden of infrastructure management and system administration to a third party, #ing up developers to work faster and more effectively - at least in theory. In practice he\u2019d never seen a truly effective solution \u201cin the wild\u201d. \n \n Markus first started looking at Platform.sh last year and gave us one of the most rigorous evaluations that we\u2019ve ever had from an agency. He checked out everything, and he liked what he saw. Now he\u2019s shared his experiences\u00a0 his company\u2019s journey to Platform.sh. \u00a0Like many others, Markus has been looking for a PaaS that delivers on its promises, and he believes that he\u2019s found it with Platform.sh. \n Here are a few quotes from the feature: \n \n \u201c[With Platform.sh] It seemed like many of the problems of the competition had been solved. I started to get the feeling that Platform.sh might be just what we had been looking for and decided to give it a serious try. The result: Minds blown. We realized that Platform.sh had taken the PHP PaaS idea to a whole new level. A few months later we\u2019re using Platform.sh for all our new projects and are migrating older projects over there too. Phil Sturgeon is right, once you\u2019ve tried a hover-car, you just don\u2019t want to drive a normal car anymore.\u201d \n \n \u2026 \n \n *For us, Platform.sh wins. It provides storage and data management by means of its \u201cbatteries included\u201d approach, on a level that Heroku can\u2019t. While technical skills are required to set up Platform.sh we think their approach is simpler, as well as being more consistent and robust. \n \n \u2026 \n \n *Additionally to all the described advantages of using a good PaaS like Platform.sh, this migration has forced us to significantly advance and fully automatize our build and deployment. We\u2019re thrilled with the monumental improvement of our deployment and hosting quality, the productivity boost as well as the peace of mind this new approach is giving us.\u201d \n \n Read Markus\u2019s full story. \n Are you interested in becoming a Platform.sh partner? We offer free user licenses to your whole development team along with attractive commissions.\u00a0 Find out more about our Agency Program \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Cloud adoption in Europe: Addressing data privacy concerns ", "url": "https://platform.sh/2016/06/cloud-adoption-europe-data-privacy/", "documentId": "699cc3b02d308b181ffcd4ded0f6d96578b84122", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Cloud adoption in Europe: Addressing data privacy concerns \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Robert Douglass \n                  \n                   Chief DevRel Officer \n                  \n                  \n                 \n            \n          \n         \n         21 Jun 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The\u00a0 Patriot Act \u00a0and NSA programs like\u00a0 Prism \u00a0raise scary questions about how safe your enterprise data is in the cloud, and experts say that these fears hurt cloud adoption. Europeans are particularly sensitive to data privacy given that they have EU and national level data privacy laws that prevent companies from sending customer data out of territory. \n \n The striking down of the Safe Harbour agreement by the European Court of Justice was a blow to many cloud providers, confirming the worst fears of critics who have, for a long time, pointed to the inextricable links between US-based companies and their offshore subsidiaries. \n Nevertheless, cloud adoption continues to accelerate, and there are several key advantages of cloud services compared to classical on-premise or co-location models: \n \n\t Expertise: \u00a0Most businesses have large and diverse IT ecosystems with many different platforms and technologies. System Administrators may be dealing with systems that they know little about and can easily make dangerous mistakes in terms of configurations and settings. A properly supported Cloud platform on the other hand has an expert team available that knows its chosen technology inside out. \n\t Resources: \u00a0Internal IT departments are coming under increasing budget pressure, with headcount remaining flat or even falling. As a result there\u2019s often not enough time to go around, meaning that IT staff don\u2019t have the time to keep systems up to date, preferring to let them run - even if that presents security holes. In contrast, cloud platforms are well-maintained and providers even work with customers to plan their migrations to secure, supported software versions. \n\t Fast hotfixing/patching: \u00a0In the most extreme cases, such as zero-day vulnerabilities, a Cloud platform comes into its own, with a dedicated security team on hand to\u00a0 apply hotfixes to many hundreds of sites. \n\t Scalability-elasticity: \u00a0You\u2019ve only got the hardware that you\u2019ve got. That might sound obvious, but the fact is that when a spike occurs and you\u2019re on-premise or in a co-location datacenter, that is very bad news - unless you\u2019re running much more hardware than you actually need. Otherwise, your site will crash, with all of the financial, reputational and technical problems that that brings. Highly available cloud architectures mean that you can rely on the platform to scale when it needs to, keeping your site up, and keeping the customer happy. \n \n Alongside these advantages, the\u00a0 revised Safe Harbor agreement \u00a0from earlier this year may help assuage fears, and some American cloud offerings are also already taking action. To assure people that their data is safe from subpoena from the American judicial or spying systems, several Cloud platform providers are looking at models that address national and regional privacy concerns. \n For example,\u00a0 Microsoft have done something quite smart with their Azure platform. \u00a0They\u2019ve formed a partnership with T-Systems, Deutsche Telekom\u2019s business services arm, and licensed the Azure cloud technology to be run in their datacenters. Because the data centers and personnel are 100% German-owned and operated, and are located inside of Germany, there is an added layer of protection for Azure customers. The setup allows no direct judicial route via the Patriot Act or otherwise for data to be subpoenaed from these datacenters, since they are fully out of the legal jurisdiction of the American court system. Yet, the technology is fully Azure, and all of the features of the Azure Cloud Platform are present, allowing customers to procure these Azure services directly from Microsoft in the same contractual frameworks as they procure other Microsoft products. \n For European enterprises who want their applications hosted in Europe, and 100% run by European companies, migrating to the cloud has not become any easier. As Microsoft Azure is one of the big three cloud computing platforms worldwide, it was natural for\u00a0 Platform.sh to partner with Microsoft \u00a0to offer our PaaS technologies utilizing the new data-sovereign regions. Now you know that you have options to host your applications safely and securely whilst meeting EU compliance and legislation. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Is the Cloud really someone else's computer? ", "url": "https://platform.sh/2016/06/is-thecloud-really-someone-elses-computer/", "documentId": "2114680163de8ccc168ba2f1a42f1f4261a68b2b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Is the Cloud really someone else's computer? \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         27 Jun 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The Cloud is what we used to call \"someone else\u2019s computer.\" \n I\u2019ve heard that line before many times. I\u2019ve even said it a few myself. There\u2019s a great deal of truth to it, too. In an age of increasing data collection and data surveillance, do you really want to entrust your data to someone else\u2019s hard drive? \n But analysts and marketers keep touting the advantages of \u201cthe cloud\u201d, as though it were actually something new and shiny rather than just shared hosting, rebranded. So which is it? Is the \u201ccloud\u201d really something new, or just the same security risk as the late 90s? \n The problem is that there are two very distinct concepts being conflated with the same term. (English, and analyst firms, are really good at that.) For the sake of disambiguation let\u2019s refer to them as The Cloud(\u2122) and cloud computing. \n \n The Cloud(\u2122) \n The Cloud(\u2122) refers to avoiding the costs, risks, and management headaches of maintaining your own server. It gets its name from the \u201cbig cloud graphic\u201d that often populated flow charts around 2000 or so to represent \u201cthe Internet, that big complex thing that we just assume works\u201d. The technology underlying it has changed over the years, and encompasses nearly every XaaS you can think of: Infrastructure as a Service (someone else\u2019s hard drive), Platform as a Service (someone else\u2019s operating system), Software as a Service (someone else\u2019s program), etc. All are, in market-speak, part of The Cloud(\u2122), or rather a form of IT outsourcing. \n As with any form of outsourcing, there are both costs and benefits. The benefits are fairly straightforward: Turn high-complexity tasks over to professionals who specialize in it, and therefore can do it better, faster, and cheaper than doing it in-house. That can result in cost savings, as well as better cost predictability. You can focus on your core business, rather than complex incidentals. Is it really important for your business to have a 24/7 on-call sysadmin every day of the year, just for the one day a year that the payroll system needs to be rebooted at 3 am? \n Of course, outsourcing always has costs. The largest is lack of control; whatever services you outsource are at the whim of the company you outsourced them to. Need to scale a service? Need to add a feature? Need to correct a mistake? Only if your vendor allows it. The other major concern is privacy: Data on someone else\u2019s hard drive means someone else can access it, or can be forced into accessing it, either legally or illegally. (Hello, NSA.) Do you trust your critical business data to someone else\u2019s hard drive? \n The trade-off between doing something yourself and outsourcing it is always a balancing act. What things are worth outsourcing and what services are better off kept within your own firewall (if you even have a firewall) is a case-by-case decision that every company needs to make, with open eyes about the pros and cons of doing so. \n Cloud Computing \n Despite the shared atmospheric reference, cloud computing is in no way coupled to outsourcing. Cloud computing is an evolved form of virtualization: Rather than have a single physical computer equal a single logical system, cloud computing takes a cluster of physical computers and creates many logical systems on top of them, abstracting away the different physical boxes. That lets you create new \u201cservers\u201d that are purpose-built for a specific use case entirely from software and throw them away when you\u2019re done, without having to get out your screwdriver or spend money on more electronics. \n The first generation of cloud computing systems used virtual machines, but more recently most systems have moved to far cheaper and more efficient Linux containers. In either case, though, the result is the same: Decouple physical hardware from logical systems and get vastly improved flexibility, security, power, and cost savings, plus open up new architectural designs that would have been impossible with server-per-physical-box. \n Of course, while cloud computing environments are powerful they are also not especially easy to setup and maintain. At one level it\u2019s \u201cjust software\u201d, and people have built cloud clusters using Raspberry Pis (Why? Because\u00a0 it\u2019s fun ,\u00a0 that\u2019s why ), but running a production-quality cloud computing cluster is, in the end, no easier than running a production-quality physical-computer cluster; you still need one of those anyway. That makes a cloud computing cluster ripe for outsourcing to The Cloud(\u2122), with all the same benefits and drawbacks as anything else that gets outsourced to an external vendor. \n Staying safe in The Cloud(\u2122) \n So you want the benefits of cloud computing, but want to minimize the risks of The Cloud(\u2122)? There are a number of questions you should ask yourself when evaluating a vendor. \n \n\t If I outgrow this service provider, can I take my business elsewhere or am I locked into their system? \n\t How well can I customize this service provider\u2019s service, or am I stuck with a one-size-fits-all approach? \n\t Do I trust the service provider\u2019s infrastructure, especially with regard to data integrity laws in various countries? \n \n How much each of those matters will depend on your business. However, remember the golden rule of The Cloud(\u2122): It\u2019s always someone else\u2019s hard drive, subject to someone else\u2019s business needs, not yours. Always make sure you have a backup plan to take your business elsewhere in a hurry should you ever need to. \n Platform.sh as a Service \n We of course feel Platform.sh does well on all of those questions. (This is our blog, after all.) \n All of the server containers we offer are standard, popular Open Source products: PHP, MySQL, PostgreSQL, MongoDB, Redis, Elasticsearch, Solr\u2026 every one of them could be installed on any server, cloud-based or otherwise. All code is your code, available over Git. You can even bring your own Git repository from GitHub, BitBucket, or your own server if you want to. All data in any database or stored on disk can be downloaded with a few commands. There\u2019s no proprietary lock in. Ever. \n By design, a cluster on Platform.sh is highly customizable. What PHP version do you want? We\u00a0 offer 4 , take your pick (but please pick PHP 7). You can even pick and choose which PHP extensions you want enabled. Want node.js? We have\u00a0 3 versions \u00a0of that. Need to have one of each? Or multiple PHP apps and a node.js app?\u00a0 You can do that, too . Pick a database, just add data. \n While our main hosting infrastructure runs on Amazon AWS, there\u2019s nothing Amazon-specific about it. In fact, we also offer European sovereign hosting through various partners in the UK, Germany, and France. (Expect more countries over time.) \n And if you want to have your cloud and host it too, Platform.sh\u2019s cluster software can be installed on\u00a0 your own physical hardware . That gives you the power of cloud computing with the self-reliance and control of self-hosting, rather than trusting The Cloud(\u2122). \n It\u2019s good to be wary of The Cloud(\u2122), and anyone who tells you it is the answer to all of your problems is probably trying to sell you something expensive. It may help, or not. But cloud computing is a powerful and cost-effective way to manage your software services, whether in The Cloud(\u2122) or not. \n With Platform.sh, you can get both. \n See you around The Cloud(\u2122). \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "UI version 2.11 released ", "url": "https://platform.sh/2016/06/release-ui-2-11/", "documentId": "9e1dcac21c25b6f908dac5c8281885927108f2ca", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           UI version 2.11 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Manauwar Alam \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         05 Jul 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Here are the list of web interface enhancements which will make your life easier: \n \n\t New warning notifications \n\t Grouping and hiding disabled environments \n\t Autofocus on text inputs \n\t Better environment variable display \n \n \n New warning notifications \n We have revamped the overall outlook of the various warning messages displayed in the UI. The informative texts also have better readability and appearance. \n For example when enabling/disabling outgoing email per environment: \n \n Or when you disable an environment. Since you can have multiple environments, these can be disabled if they are no longer required in order to reduce the resources usage. But this action will delete the services running, so better to inform you nicely about it :) \n \n Hide and group disabled environments \n As many of you requested, you now have the ability to hide and group the inactive environments in the UI. All disabled branches will be listed under the left side bar, if\u00a0  Show inactive  \u00a0is checked. All disabled branches would be listed down by pushing up enabled branch in alphabetical order. \n \n Autofocus on text field \n This is a small update, but so much more efficient when you create branches. While creating branch, user can directly enter branch name just after hitting the branch button from the top right corner. \n \n Display variable name \n On the configuration page, we have provided settings to declare variables, sometimes variable\u2019s name goes too long. We have increased the character limit for displaying untrimmed. Here is an example: \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "June Features Update ", "url": "https://platform.sh/2016/06/new-features-june/", "documentId": "fd2e8d3c0d5fd31abdd7a4eee72ee9cb8cfea2a9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           June Features Update \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         30 Jun 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         June has been a busy month again at Platform.sh! \n Maybe you have seen us at the following events: \n \n\t WordCamp Europe 2016 \u00a0in Vienna where\u00a0 Ori worked with some hard-core Drupalistas \n\t Viva Technology 2016 \u00a0in Paris where our\u00a0 moon-man \u00a0continued his mission to deploy to the moon \n \n Or maybe you have heard that we hired 4 new collaborators on our team. You can see them on our\u00a0 company team page . \n In the mean time, we continuously worked on our core product to squeeze more performance and improve its overall robustness. \n We also released a bunch of new features and enhancements. Here is a\u00a0 non exhaustive \u00a0listing of what has been happening. \n \n The Web Interface \n As usual, we\u2019re putting lots of effort improving the usability of Platform.sh which starts with what you can see. \n The web UI has been greatly improved over the last month and here are some of the new features you can see: \n \n\t Proper user warning before enabling email sending \n\t Proper user warning before deactivating an environment \n\t Ability to hide and regroup inactive environments in the sidebar (this has been asked often over the support :) ) \n\t Improve display of variables easier reading and avoid text wrapping \n\t Autofocus input field when branching an environment \n\t Automatic refresh of the project dropdown listing when changing the project title \n \n We\u2019ve also fixed multiple bugs: \n \n\t Access links breaking during build \n\t Wrong JSON display in the error alerts \n\t Broken links when exiting project setup early \n\t CSS animation issue on activity update \n\t Padding issue on warning window \n \n Services & Runtimes \n We usually don\u2019t say much about these. As we continuously keep those updated (security updates happen on-the-fly) and we make sure this stays transparent to our users (as much as softwarely possible we don\u2019t introduce breaking changes\u2026) but here are some highlights from the previous month: \n \n\t Introduce a new\u00a0  PLATFORM_PROJECT_ENTROPY  \u00a0environment variable which has a random value, stable throughout the project\u2019s life. This can be used for Drupal hash salt (see the\u00a0 example here ). \n\t Expose the hostname and IP address of each service in the\u00a0  PLATFORM_RELATIONSHIPS  \u00a0environment variable. \n\t Update MongoDB client to 3.2.7, Node.js to 4.4.5, Blackfire plugin to 1.10.6, Nginx to 1.11.1. \n \n The CLI \n We\u2019ve also implemented a lot of new features to the CLI based your feedbacks and ideas: \n \n\t Allow the update check interval to be overridden via\u00a0  ~/.platformsh/config.yaml  \n\t Sort projects and environments in\u00a0  project:list  \u00a0and\u00a0  environment:list  \u00a0with new\u00a0  --sort  \u00a0and\u00a0  --reverse  \u00a0options \n\t Add\u00a0  platform multi  \u00a0command, to execute arbitrary commands on multiple projects \n\t Add\u00a0  platform create  \u00a0command to create new projects from the CLI \n\t Allow the API token to be set via a file specified in\u00a0  ~/.platformsh/config.yaml  \n\t Create a settings.local.php for Drupal + Composer \n\t Use chmod to force deleting builds even when files are read-only \n\t Symlink all mounts, from the build to shared directories \n\t Remove minimum Drush version check \n\t Pass verbosity options on to Composer during build \n\t Add autocompletion and other improvements for\u00a0  user:role  \n\t Shared mount symlinks now overwrite existing files in the build \n\t Ignore whitespace in the user-specified API token file \n \n For more informations, you can access the public\u00a0 CLI Releases on GitHub . \n Drupal 8 with Composer \n In our quest to promote development best practices, we\u2019ve converted our\u00a0 Drupal 8 example repository \u00a0to work with Composer on PHP 7. \n Read more about it in\u00a0 Larry\u2019s blog post . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "No more default configuration files ", "url": "https://platform.sh/2016/07/no-more-default-configuration-files/", "documentId": "9fe805ccf95f3d23ecae61f14269e3597a886af3", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           No more default configuration files \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         05 Jul 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         When Platform.sh launched, the majority of our business was Drupal 7 sites running Drupal Commerce. While we still host many of those, our business has expanded to cover many application stacks and languages. Drupal 8 has been out for 8 months now, Symfony\u2019s market is growing, and we support both PHP and NodeJs with more languages on the way (stay tuned!). \n As a result some assumptions we baked into the system no longer make sense for the majority of or users. We are therefore removing the default Platform.sh configuration files that were previously used if your project didn\u2019t include one. \n \n Wait, but what about my existing sites! \n If you already have an existing project with Platform.sh, it is completely unaffected. This change only affects newly created projects as of Monday 25 July 2016. \n We still recommend that all projects ensure they have the appropriate configuration files committed to Git, but only new projects are technically required to do so. \n Whew. OK, so what\u2019s the problem? \n There are three files that drive your entire cluster with Platform.sh: \n \n\t .platform.app.yaml  \u00a0defines your application container, where your code runs. \n\t .platform/routes.yaml  \u00a0defines your routing container, and how it maps and caches incoming requests to your application container. \n\t .platform/services.yaml  \u00a0defines what other services should be included in each cluster, such as MySQL, Redis, or Elasticsearch. \n \n (No, really, that\u2019s it. That\u2019s your entire server cluster definition. Neat, eh?) \n Previously, if one of those files was missing we would create a default file automatically. Those default files were designed around a specific use case: Drupal 7 running on PHP 5.4 with Redis caching and Solr for search. However, that is increasingly not the typical case; Drupal 8 is growing fast, PHP 5.4 is no longer supported by the PHP team, the various services have new versions available, and Platform.sh offers a lot more than just Drupal and PHP. (A default PHP container with\u00a0  drush make  \u00a0makes little sense if your application is written in Node.js\u2026) That makes those defaults less and less useful to keep around. \n It also meant that to entirely disable additional services, say for a statically generated site (like the Platform.sh site itself), required adding a blank file to the repository to override the default 3 services. That\u2019s just silly. \n So what changes? \n We no longer add default files. No file, no behavior. That means you must provide, at least, a\u00a0  .platform.app.yaml  \u00a0file and a\u00a0  .platform/routes.yaml  \u00a0file for a site to work. If you don\u2019t provide those, trying to push a branch to our Git repository will fail as the code cannot be deployed. (The\u00a0  .platform/services.yaml  \u00a0is optional; if you don\u2019t need any services, skipping this file will simply not create any.) \n If you\u2019re already in the habit of adding those files to your Git repository for a new project, congratulations, nothing changes for you. :-) \n We are also dropping version-defaults for the app container and services. That is, if you ask for a mysql service you must also specify the version; we won\u2019t magically pick one for you if not specified, for the same reason: The defaults would be old-forever. We want you to be able to move your site to the latest and greatest version of your language and services of choice on your schedule, not ours. \n If you want to see the old defaults that were created, in case you want to use them yourself, they\u2019re listed in in our\u00a0 documentation site . \n For more information on those configuration files, see the documentation: \n \n\t .platform.app.yaml  \n\t .platform/routes.yaml  \n\t .platform/services.yaml  \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "UI version 2.12 released ", "url": "https://platform.sh/2016/07/release-ui-2-12/", "documentId": "8aa4fa02b2229a1e8daf81cdd4650d08a91eaacc", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           UI version 2.12 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Manauwar Alam \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         18 Jul 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         After only two weeks since our latest\u00a0 UI update \u00a0we have just deployed a new UI one! \n As you know, we are always trying to improve user experience based on your feedbacks. \n In this release, you can see a lot of new options for improving the configuration of your applications: \n \n\t Easier project setup \n\t Better domain name validation \n\t SSH key reminder \n\t Improved environment limit help \n\t Improved environment naming \n\t Clearer user management \n \n \n Easier project setup \n More details have been added to the project setup. \n It\u2019s now easier to import your existing application or website. The wizard now clearly explains the different configuration files you need to add to configure your applications, services and incoming URLs. \n \n Better domain name validation \n You can now add \u2018naked\u2019 domains directly instead of forcing the\u00a0  www.  \u00a0subdomain. \n \n SSH key reminder \n We have highlighted the \u201cAdd SSH key\u201d step so that you won\u2019t forget it anymore. :) \n \n Improved environment limit help \n We have also improved instructions such as how to add more environments if you have reached the limit. \n You can disable environments which are no longer needed, from their settings page. \n \n Improved environment naming \n Creating as many environments for development and testing as you need is a key feature of Platform.sh. \n That\u2019s why we have improved the environment creation process by checking existing branch names, and adding autofocus on the input field\u2026 \n \n Clearer user management \n Adding a user to an environment requires a rebuild. We have made this clearer for the project administrators. \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Httpoxy or how Platform.sh keeps your applications safe ", "url": "https://platform.sh/2016/07/httpoxy/", "documentId": "bd40ceb9b143d7b6bb87e7b8c15641d5c09da58e", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Httpoxy or how Platform.sh keeps your applications safe \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         20 Jul 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Keeping your applications running and secure remain our main goal! \n This week,\u00a0 Httpoxy , an important security vulnerability, has just been disclosed. \n It affects every application running in CGI, which includes PHP. \n As soon as we heard about it, we deployed a new version of our router container to block the Proxy header from incoming HTTP headers. \n Here is what\u00a0 Httpoxy \u00a0website says: \n \n If you\u2019re running PHP or CGI, you should block the Proxy header now.\n \n This fix has already been deployed in every Platform.sh region and we have refreshed all your projects so that you\u00a0 don\u2019t even need to redeploy your applications \u00a0in order to get the security in place. \n In other words:\u00a0 You are safe! . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "UI version 2.13 released ", "url": "https://platform.sh/2016/08/release-ui-2-13/", "documentId": "db4c3e03ac4941c8b13b5716668a6f7c7c6251f1", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           UI version 2.13 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Manauwar Alam \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         23 Aug 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         It\u2019s been a month now since our previous\u00a0 UI release 2.12\u00a0 . \n And today, we just deployed a new UI 2.13 release. \n You might already know, from past several months, we have been working continuously to provide better user interface for application management, which also comes from you as a feedback and part of feature requests. In this release you can see many enhancements to inform you precisely about warnings, errors and notifications. \n \n\t SSH Key already in use \n\t Error notifications \n\t Failed Build notifications \n\t Branching, handling mulitple environments \n\t Synchronization \n\t Live status \n \n \n SSH Key already in use \n Are you a existing customer of Platform.sh? Do you have multiple accounts? If yes, It\u2019s our job to keep you informed while adding SSH key which is already in use. \n \n Error notifications \n Platform.sh offers you a nice UI to handle many configurations of your applications. Sometimes action fails and things go wrong\u2013 might be poor network connectivity, limited access or just another reason\u2026 Don\u2019t worry! You will be informed nicely. :) \n \n \n Failed Build notification \n We won\u2019t let you go with failed build! It would be highlighted more for your quick attention! \n \n Branching, handling mulitple environments \n Platform.sh offers multiple environments for your continuous deployments. Now, you can organize all your enabled/disabled branches in a nested structure. All child environment would be visible under parent. No more confusion!! \n \n Synchronization \n Platform.sh offers synchronization. And, this is the key feature of continuous develoyment! Now, you can synchronize child environment from the parent with a nice prompt \n \n Also, to avoid complexities we won\u2019t let you to synchronize child from disabled parent. \n Live Status \n We are putting more effort to make our service more secure, reliable and scalable. And, this comes with regular updates and scheduled maintainance. Now it\u2019s very easy to check status. \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "GitFlow is now supported on Platform.sh! ", "url": "https://platform.sh/2016/08/gitflow-is-now-supported/", "documentId": "ecf256f1fb74fa7157a5e94ae76951b3eeedd37b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           GitFlow is now supported on Platform.sh! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Florian Margaine \n                  \n                   VP Engineering \n                  \n                  \n                 \n            \n          \n         \n         24 Aug 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We have just deployed an important update on our infrastructure, with many bug fixes and new features. \n Notably, some long-wanted features, like support for GitFlow\u2019s branch names. \n This update is already available for new projects, and existing projects will get it in the coming weeks. \n Some notable bug fixes and new features: \n \n\t More lax restrictions for service names (the key in the\u00a0  .platform/services.yaml  ), dashes and underscores are allowed. \n\t Show a warning when the cron is\u00a0  * * * * *  \u00a0explaining that the minimum is still 5 minutes. \n\t Allow a branch named\u00a0  HEAD  \u00a0to exist. \n\t Display user information when connecting via SSH to your environment. \n\t Restrict deletion of branch having an active child. \n \n \n The most notable new feature is the removal of restrictions for naming Git branches. \n Given that we give a URL for every Git branch, we needed to make sure that the branch name could be translated into a host name. \n With this constraint, one of the restrictions was that you couldn\u2019t put slashes (  /  ) in branch names. GitFlow uses slashes in its default settings, so the default setup was broken. Although in practice, you could switch to\u00a0  --  , it was still more painful than needed. \n It is now possible! \n We have introduced a change in generating the URL format: a random string is added to the URL. This allows us to strip out the invalid characters for URLs and still keep any other configuration unaffected. \n For example on a project with an id\u00a0 hvnz6xzcxx7qm \u00a0with a branch name\u00a0  beta/sprint1  , the URL would be something like\u00a0  https://hvnz6xzcxx7qm-beta-sprint1-dkrofi.eu.platform.sh  \u00a0with the random string\u00a0  dkrofi  \u00a0added to the url. \n Currently, this update only applies to new projects and new environments. We will deploy this change for all existing projects very soon. \n This restriction lift means that other things like capitalization are also properly handled \u2013\u00a0 most of what Git supports, we support it too ! \n Note that you need to upgrade your\u00a0 Platform.sh CLI \u00a0to the latest version (3.4.0) by running\u00a0  platform up  \u00a0in your terminal. \n Enjoy the new update and hack away! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Develop on GitHub, Deploy on Platform.sh, Test on Blackfire.io ", "url": "https://platform.sh/2016/08/github-blackfire-platformsh/", "documentId": "83b63bb1ee8b83980fb59bb4f9de38bb0b71771a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Develop on GitHub, Deploy on Platform.sh, Test on Blackfire.io \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         30 Aug 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         As you know\u00a0 GitHub \u00a0is awesome for managing your codebase,\u00a0 Platform.sh \u00a0is awesome for deploying your application and\u00a0 Blackfire \u00a0is awesome for testing your application performances. \n \n But did you know that those services can\u00a0 easily be integrated together \u00a0so that you get the best of all worlds without any hassle? \n What you get is that for every branch (or pull request) that you push to GitHub, Platform.sh automatically deploys your application to a dedicated environment, and Blackfire automatically profiles your application on that newly created environment. \n How it works \n A picture is worth a thousand words : \n \n On this screenshot, I have opened a pull request on GitHub. \n You can see a notification telling you that Platform.sh has deployed your pull request to an environment, and that Blackfire has profiled your application on that environment. \n The two\u00a0 details \u00a0links redirect to the Platform.sh environment and the Blackfire test results. \n How to configure \n I have made a tutorial video which explains how you can configure it on your project, and also how it works in real life. \n A video is worth a thousand words : \n \n If you face any issue setting up those integrations, don\u2019t hesitate to\u00a0 contact us on our public Slack channel . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh in a nutshell ", "url": "https://platform.sh/2016/09/platform-from-scratch-part-0/", "documentId": "6952430589da07a2b71d3ffd831b406364d5b184", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh in a nutshell \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   John Grubb \n                  \n                   Director of Customer Care \n                  \n                  \n                 \n            \n          \n         \n         12 Sep 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Hello, and welcome to \u201cPlatform.sh from Scratch\u201d. In this prologue to the series, I\u2019ll go over some of the very highest level concepts of Platform.sh so that you\u2019ll have a clearer understanding of what this product is and why it came to be. If we\u2019re successful here, by the end of this post you\u2019ll find it easier to reason about some of the design decisions that we\u2019ve made in building the product.\n \n \n Platform.sh is a \u201cPlatform as a Service\u201d, commonly referred to in this age of acronyms as a \u201cPaaS\u201d. The platform that we provide is essentially a suite of tools to make developing and hosting software applications a smoother end-to-end process. In order to understand what this means though, I\u2019m going to have to go into some detail in this first sidebar. Skip this if you\u2019re comfortable with this post so far.\n \n Sidebar - PaaS \n \n Everyone has heard of Salesforce. Salesforce has come to be the poster child for what is now referred to as \u201cSaaS\u201d - Software as a service. Prior to the SaaS era if you wanted a piece of software, be it a video game or Quickbooks or anything else, you had to drive to a store and buy a box with some disks in it. Once the internet reached a level of market penetration into people\u2019s homes though, those stores went out of business. This is an obvious evolution in hindsight. SaaS is a high level thing - it\u2019s a runnable piece of software providing a service that you can access over the internet (via a URL, an API, etc). You might be able to modify/config it a little bit, but will never be your entire business. It\u2019s not\u00a0 your \u00a0product. It\u2019s someone else\u2019s and will likely play some fractional part in your overall business plan.\n \n Almost \u00a0everyone by this point has heard of Amazon Web Services - AWS. AWS is basically what people are talking about when they say \u201c The Cloud \u201d. AWS is a suite of products that emerged from Amazon when they figured out that they needed a huge amount of datacenter capacity to be able to withstand massive retail events like \u201cBlack Friday\u201d and \u201cCyber Monday\u201d, and that for most of the rest of the year they had tons of excess capacity sitting around draining money from their wallet. What to do with all that excess capacity? Sell it to someone else.\n \n This relatively simple premise has evolved over the last 10-12 years into numerous products from S3 (basically a giant, limitless hard drive in the sky) to EC2 (basically a giant, limitless hosting server farm in the sky) to Redshift (basically a giant, limitless database that can be used for data warehousing) to SES (a simple service that sends emails) to an ever growing host of other services that always seems to come out just before your start-up figures out that it needs them.\n \n AWS and \u201cthe cloud\u201d in general is often given the acronym \u201cIaaS\u201d - infrastructure as a service. They\u2019re selling you the low level hardware abstractions that you can assemble into an infrastructure on which to run\u00a0 your \u00a0software and by extension\u00a0 your \u00a0company. It requires a decent bit of specialized knowledge for how to use the individual pieces as well as how to plumb them together, but for all intents is infinitely flexible.\n \n In the middle of these two is what\u2019s called \u201cplatform as a service\u201d - PaaS. This is what Platform.sh is - a suite of software and hosting services that lets you efficiently build and develop\u00a0 your \u00a0software application, and then\u00a0 deploy \u00a0your software application to a hosting environment that doesn\u2019t require as much specialized knowledge on how to plumb all the pieces together. Nor does the hosting environment require you - and this is a most important detail - to set up monitoring and alerting for when something goes wrong in the public environment.\n \n The PaaS takes elements of both IaaS and SaaS so that you benefit from the huge flexibility offered by a IaaS, without the burden of maintaining services, keeping them running 24/7, secured, up to date, and so on.\n \n So, back to the program. The development tool set of Platform.sh is entirely based around Git. Just in case the reader is not already familiar with Git, I should explain this a little bit.\n \n Sidebar - Git \n \n Software projects are typically composed of\u00a0 lots \u00a0of files. If you want to add a new feature, you might be required to make changes in more than one of those files. Of course, before you get started you\u2019ll want to make some kind of backup just in case. If it turns out that the change was buggy or unneeded and you want to revert back to a previous state, you\u2019d just restore those few files back to their previous versions.\n \n What if, however, you\u2019re working with a bunch of different people and more than one person is working on that change (an utterly common scenario)? How do you manage those backups between all those people? Saving copies of files is basically impossible to manage after a very short while, so out of this need SCM (source code management) was born. It\u2019s been through several different iterations by this point, and at this point in time the version of SCM that is leading the market is called\u00a0 Git .\n \n Git is pretty cool. It basically takes snapshots of your entire project codebase whenever you tell it to. It then keeps track of all those snapshots and lets you share those snapshots among a team of developers. Any snapshot can be reverted, and you can see the full history of every change to the codebase so you can keep track of \u201cwhat happened when\u201d. But wait! There\u2019s more!\n \n This is not an exclusive feature of Git, but it has a feature called \u201cbranching\u201d. Branching is intuitively named, and is basically the concept of taking a specific snapshot and making changes based off of that one snapshot while other work continues on down the main code line. This is the recommended way to work if you\u2019re going to make any kind of significant change to the software, and this method of working allows you to keep the main code line (almost always referred to as the \u201cmaster branch\u201d) in 100% working order. It can be thought of as having a furniture workshop away from your house where you can work and keep the house clean for company to come over at any moment, as opposed to working in the house and risking having a wreck to present should company decide to drop by.\n \n In essence branching is making a complete copy of your project at a point in time that you can hack on all you like without disturbing anyone else. If and when the change is ready, you \u201cmerge\u201d the code back in to the master branch, test it out to make sure everything is still groovy and then you can release the feature or bug fix to the public.\n \n \n # time, generally (but not absolutely) speaking --->\n--main--branch--always--in--a--working--state\n    \\                               /\n      -hacking--over--here--freely-\n \n \n You can read more about the super basics\u00a0 here \u00a0if you wish. For now, all you really need to know is that Git\n \n \n   Makes it easier to develop software as a team \n   Makes it very cheap and easy to try out new features without breaking anything \n   Makes it easier to manage changes to your software and to revert back to a known non-broken state \n \n update: Hey look,\u00a0 a really great post explaining all this \u00a0better than I did.\n \n Platform.sh has taken this branching and merging workflow and extended it out into the entire application stack. \u00a0When you\u2019re building a software project of any size, there are considerations beyond just the code your team is writing.\n \n Most applications of any size connect to some kind of database in the background, this is where they save \u201cdata stuff\u201d. User uploaded images are also a very common thing in the web app world, so if those images aren\u2019t there the app will look busted.\n \n You can branch your code all you like, but you need these other supporting resources to really do your job. Platform.sh makes branches not just of your code, but the entire infrastructure that your project runs on. This allows you to use the common branching/merging workflow with the complete support of everything else that your application depends on.\n \n This may seem like an obvious feature, since how can you develop a new feature without being able to run it (?), but no other service that I know of actually does this. A branch in Git triggers (for all intents) an exact and isolated copy of your production site in a couple of seconds without requiring you to set up any new servers, copy databases over, copy images and everything else, etc, etc, etc. It\u2019s a significant hassle to do all this stuff and it slows the team down every time you have to do it. Removing this need removes a major friction point in the workflow for building new features on your software product.\n \n But wait! There\u2019s more!!!\n \n This is where it starts getting really, really good. In case you\u2019re not aware, there\u2019s a website called GitHub. It\u2019s where a\u00a0 whole \u00a0lot of folks have decided to host their \u201cgit repos\u201d - repo being short for \u201crepository\u201d, which is basically that series of snapshots of the state of your project/codebase back to the beginning of time. If I were working on a project with a buddy, we could both use this same repository and work on the same project, whether I\u2019m in Germany or New Jersey or wherever. I can pull his changes over and he can pull mine and this is basically how open source software gets written these days.\n \n The same workflow applies though - if you want to make a new feature or even if you just want to fix a bug, you\u2019d make a new branch and do your work and then \u201csubmit a merge request\u201d. This basically pings the person who runs the project and says \u201chey, I would like to suggest making this change. Here\u2019s the code I\u2019m changing, maybe you could look it over and if you agree with this change you can merge it in\u201d. By way of an example,\u00a0 here\u2019s a list of \u201cpull (aka merge) requests\u201d \u00a0for the codebase that comprises\u00a0 the documentation for Platform.sh .\n \n Again, this is how software gets written and it\u2019s pretty mind blowing if you think about it. We software developers are so used to it our minds cease to be amazed, but not because it\u2019s not amazing. I mean, currently participating in that list of PRs are folks from France, Chicago, Hong Kong, the UK, and so on. Amazing. It is also, however, a pain in the neck.\n \n It\u2019s a pain in the neck because it\u2019s typically impossible to tell if something works or not just by looking at the code, so you have to pull their changes over to your computer and test them out somehow. I bet you can see where this is going! Platform has a GitHub integration (BitBucket too) that will automatically build a working version of any merge request that someone opens against your project. That let\u2019s you go visit a working copy of the project and test it out without having to do a thing. Now, I don\u2019t care how long you\u2019ve been doing this,\u00a0 that \u00a0is mind blowing.\n \n The net effect is that you no longer need to waste time manually setting up an environment to test one little change, then waste more time tearing it back down again. Platform.sh does all of that for you, so you can test changes out and keep right on moving.\n \n This GitHub integration is only one of the really cool and unique features that Platform provides, but this post has gotten absurdly long already. Fortunately, this is intended to be the prologue to this series, so I\u2019ll touch on as many of those features as I can as the series progresses.\n \n Thanks to my new coworkers\u00a0 Augustin ,\u00a0 Larry , and\u00a0 Florian \u00a0for the proofread and feedback. \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "UI version 2.14 released ", "url": "https://platform.sh/2016/09/release-ui-2-14/", "documentId": "87f70eca84649881a12da7aba0f1da53a99b233a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           UI version 2.14 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Manauwar Alam \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         13 Sep 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Following our recent deployment\u00a0 UI release 2.14 , check out our 4 improvements! \n First, you will find 2 new flexibilities in branch naming and their display in the UI. See how the long branch name will display in better way and would be visible on hover too. \n \n\t Long branch/environment name \n\t Display branch name on hover \n \n Second, you can see a simpler interface to improve user management under project settings. \n \n\t Nested branching \n\t Show inactive/Hide inactive \n \n \n Long branch/environment name \n Platform.sh lets you differentiate your multiple environments by giving you more flexibility in the naming. Whether they are for new features or release environments, you can now have your branch names as long as you want or need them to be. \n \n Display branch name on hover \n Of course having long branch names needs more space in the UI, which restricts the display. This might create confusion for you when you need to activate or deactivate any environment. \n \n Don\u2019t worry! It\u2019s our job to make sure you can see the full branch name whenever its needed. :) \n \n For more information on Git branching, read up on our last post on\u00a0 Gitflow . \n Better interface for User management \n As an Account owner of a project who manages multiple users across different environments might be complex, especially when you have a large number of environments. That\u2019s because you need to make sure each user has the right role and permissons all the time. \n Good news! We\u2019ve made your job to oversee your users and environments a lot easier with this new, improved interface. Now all your active/inactive environments are visible under a nested structure. No more confusion! :) \n \n Also, You now have a handy \u201cShow inactive/Hide inactive\u201d button at the bottom for active/inactive environments. \n If you have any feature requests or other feedback, please contact us on sayhello@platform.sh \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh Documentation - The Next Generation ", "url": "https://platform.sh/2016/09/documentation-tng/", "documentId": "5157b2df6bf51f6ab918f5a67540fb96c7673143", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh Documentation - The Next Generation \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         21 Sep 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh is a unique and powerful development tool. However, because it\u2019s so unlike any other development platform it\u2019s not always immediately obvious just what it can do. A great development platform deserves great documentation. \n \n For that reason, we\u2019re proud to release a major overhaul of our\u00a0 public documentation . We\u2019ve completely redesigned the information architecture (IA) to make it easier to navigate and easier to scan. We\u2019ve also collapsed the multiple separate \u201cbooks\u201d into a single hierarchy to make at-a-glance navigation easier. \n The new IA was based in a part on an online card-sort exercise we ran with several of our users a few weeks back (thank you to those that participated!) and in part from analyzing our Google Analytics logs. Nearly all of our most trafficked pages are now accessible in a single click (where some were 4 layers deep previously!), and several nearly-unused pages have been removed. \n We\u2019ve also added a new introduction section to provide a \u201cbig picture\u201d view of how Platform.sh works: our\u00a0 general philosophy , the\u00a0 basic building blocks , and the\u00a0 build and deploy \u00a0process. \n The documentation itself is built with\u00a0 GitBook , a Node.js-based static documentation generator. It is, of course, hosted on Platform.sh itself. You can see exactly how it\u2019s setup in the public\u00a0 GitHub repository . Oh, you didn\u2019t know that you can host Platform.sh projects on GitHub with transparent integration and an automatic environment created for every pull request?\u00a0 See the docs \u00a0for how. \n In fact, we\u2019d encourage you to have a look at the repository even if you\u2019re not curious. This overhaul isn\u2019t the last we\u2019ll be working on the docs. Good documentation is an ongoing process, and we welcome your feedback. In fact, we welcome your Pull Requests, too. Have a look at our\u00a0 contributing guidelines \u00a0and if you find errors, oversights, or simply something that isn\u2019t clear let us know either with a Pull Request or simply file an issue. \n Happy deploying! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Continuous Deployment - Now with Python and Ruby support! ", "url": "https://platform.sh/2016/09/python-ruby-support/", "documentId": "34097319e70450c5ec36d01a7f356e5ccd971790", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Continuous Deployment - Now with Python and Ruby support! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         23 Sep 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         It\u2019s easy to mistake Platform.sh for a PHP host. After all, we provide hosting, and most of our customers run a PHP-based application, most often Drupal. What Platform.sh offers, though, is not unique to Drupal, nor is it unique to PHP. Continuous deployment is a practice whose benefits are not limited to any one ecosystem or language. \n And we\u2019re happy to announce that our continuous deployment Platform-as-a-Service is now available to Ruby and Python developers, as well. \n \n When defining an application container with Platform.sh, you can pick any of our available platforms and versions with just a line in a config file. For instance: \n \n # .platform.app.yaml\ntype: 'php:7.0'\n \n \n We already support multiple versions of\u00a0 PHP , HHVM, and\u00a0 Node.js . \nWe\u2019re now adding\u00a0 Python \u00a0(both 2.7 and 3.5) and\u00a0 Ruby \u00a02.3 to that list, as beta releases. We\u2019re pretty confident in them, but there are a few edge case bits we want to stress test a bit before declaring them gold. Once we have a few customers running with them in production we\u2019ll remove the beta label. \n Try them out today: \n \n # .platform.app.yaml\ntype: 'python:3.5'\n \n \n \n # .platform.app.yaml\ntype: 'ruby:2.3'\n \n \n We have a few sample projects available to review and base your projects on. That includes both\u00a0 generic configuration for Python \u00a0(multiple options) and a sample\u00a0 Django \u00a0project, as well as starter kits for both\u00a0 Ruby on Rails \u00a0and\u00a0 Sinatra \u00a0for the Ruby folks. \n And of course all of our\u00a0 services \u00a0are available just as they are to any other language environment, and you\u2019re free to mix-and-match our new languages as well as the old ones in a\u00a0 multi-app environment \u00a0if that works for you. Or not. Your choice. \n Once you try a smooth continuous deployment toolchain you never want to go back. So give continuous Python and continuous Ruby a try. We think you\u2019ll like it. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "eZ Systems partners with Platform.sh to accelerate development of content-rich websites and applications ", "url": "https://platform.sh/2016/09/20/ez-systems-partnership/", "documentId": "230e368f409412e0a3f7ed0c271564f0a0b1b970", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           eZ Systems partners with Platform.sh to accelerate development of content-rich websites and applications \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         19 Sep 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         English \n eZ Systems partners with Platform.sh to accelerate development of content-rich websites and applications \u00a0Organisations can build digital experiences at speed and scale with eZ\u2019s open source, enterprise grade content management system \n \n Paris, France. 20th September, 2016 \u00a0- In their mission to help enterprises build stronger performing applications at speed and scale,\u00a0 eZ Systems \u00a0and Platform.sh announce today a new partnership that offers developers an accelerated path to build content-rich websites and web applications with eZ\u2019s open source content management system,\u00a0 eZ Platform , and its premium edition, eZ Enterprise. By taking advantage of\u00a0 Platform.sh\u2019s Platform-as-a-Service(PaaS) , eZ now allows developers to build, test, and deploy new features faster and more frequently, which in turn reduces costs, time, and risk for the business. \n Whether it\u2019s ecommerce, news and media sites, multi-channel applications or connected devices (the Internet of Things), users expect seamless, engaging digital experiences. This puts pressure on the C-suite, developers, marketers and editors to deliver new features quickly and on quality to meet users\u2019 heightened expectations. eZ\u2019s choice to integrate Platform.sh\u2019s PaaS into eZ\u2019s content management system provides developers a better user experience, elevating production uptime and continuous delivery of changes, which in turn equips business users and executives for digital success. \n \n \u201cThe PaaS concept brings the promise of helping developers focus on what really matters: developing new features. \u00a0 With Platform.sh for eZ Platform and eZ Enterprise, this promise turns real. Finally developers can focus on code, and not on infrastructure. \u00a0 This means a lot for the business! says\u00a0 Roland Benedetti, Chief Product and Marketing Officer, eZ Systems. \n \n This latest strategic partnership is testament to the level of trust that software vendors have in the power of Platform.sh\u2019s expertise in continuous delivery and PHP. \n \n \u201cWe are very pleased to sign this strategic agreement with another global software vendor. eZ Systems has a great reputation and has had a strong presence in the PHP marketplace for some time already,\u201d \u00a0said\u00a0 Frederic Plais, CEO at Platform.sh \n \n The new version of eZ\u2019s platform offers a strong differentiator from other CMS solutions. By choosing to partner with Platform.sh, eZ stands to benefit from accelerated licence sales, and incremental revenue growth from PaaS hosting as part of their business model. \n \n \u201cThe combination of the Platform.sh PaaS and eZ\u2019s new content management system gives eZ a considerable advantage over their competitors. We are pleased to have already acquired our first joint customer, Gelbe Seiten Marketing Gesellschaft bmbH (The Yellow Pages in Germany) last week,\u201d \u00a0adds\u00a0 Kieron Sambrook-Smith, Chief Commercial Officer at Platform.sh. \n \n Learn more about eZ Platform at\u00a0 http://ez.no/Products/eZ-Platform \u00a0and eZ\u2019s premium edition, eZ Enterprise, at\u00a0 http://ez.no/Products/eZ-Enterprise \n To start a one month free trial of eZ Platform using Platform.sh\u2019s PaaS, visit\u00a0 http://ezplatform.com/ \n About Platform.sh \u00a0Platform.sh is a continuous deployment cloud hosting solution that can scale applications from the smallest project to ones handling millions of visitors. It is ideal for agile software teams because of its unique feature: it can replicate a live production cluster in seconds and create byte-level clones of throwaway dev and staging environments, which makes testing and validation up to 7 times faster, that\u2019s weeks to days, and in some cases days to hous. We can provide 99.99% SLAs thanks to our 24/7 follow-the-sun support combined with a unique, triple-redundant architecture that\u2019s based on a high density grid of Linux micro-containers. Headquartered in Paris, France, with employees across five continents, the company serves thousands of clients worldwide, including Vivienne Westwood, The Canadian Football League, The British Council, Flixbus, and El Universo. \n About eZ Systems \u00a0 eZ Systems \u00a0is a global content management platform provider that is dedicated to helping businesses maximize the value of their content and deliver digital experiences that foster growth. Our software eZ Platform and eZ Enterprise helps developers, editors and marketers build content-rich websites and web applications\u2014from brand sites, ecommerce and mobile apps to intranets, web portals and the Internet of Things. Fueled by over 15 years of organic growth as the creators of the award-winning CMS eZ Publish, eZ\u2019s ecosystem contains 45,000+ users, 80+ business partners and 500+ enterprise customers. An international company, eZ has more than 85 employees across eight offices in North America, Europe and Asia. \n Fran\u00e7ais \n eZ Systems et Platform.sh s\u2019associent pour accel\u00e9rer le d\u00e9veloppement des sites et applications riches en contenus \n Les organisations peuvent cr\u00e9er des exp\u00e9riences digitales de mani\u00e8re rapide et optimale avec les logiciels eZ, en open source ou en version commerciale. \n Paris, France. 20 septembre 2016 \u00a0\u2013 eZ Systems et Platform.sh annoncent aujourd\u2019hui un partenariat technologique qui va permettre aux d\u00e9veloppeurs plus de rapidit\u00e9 dans leur processus de cr\u00e9ation de sites et d\u2019applis riches en contenus, via la plate-forme de gestion de contenu open source eZ platform et son \u00e9dition premium, eZ Enterprise. En s\u2019appuyant sur le PaaS (Platform as a Service) de Platform.sh, eZ permet d\u00e9sormais aux d\u00e9veloppeurs de cr\u00e9er, tester et d\u00e9ployer de nouvelles fonctionnalit\u00e9s plus rapidement et plus fr\u00e9quement, ce qui r\u00e9duit les co\u00fbts, les temps et les risques. \n Que ce soit pour le e-commerce ou les sites g\u00e9n\u00e9ralistes, sur des applications multicanales ou des objets connect\u00e9s (Internet of Things), les utilisateurs attendent des exp\u00e9riences digitales fluides et engageantes. La pression est de plus en plus grande pour les cr\u00e9ateurs (des d\u00e9veloppeurs aux contributeurs) qui doivent diffuser leur contenu encore plus vite, tout en gardant une qualit\u00e9 optimum. Le choix d\u2019eZ d\u2019int\u00e9grer la solution PaaS de Platform.sh \u00e0 son CMS offre aux d\u00e9veloppeurs une meilleure exp\u00e9rience en r\u00e9duisant leur temps de production, ce qui, cot\u00e9 business, \u00e9quipe les contributeurs et les \u00e9xecutifs pour le succ\u00e8s digital. \n \n \u00ab Le concept du PaaS permets aux d\u00e9veloppeurs de ce concentrer sur l\u2019essentiel: d\u00e9velopper de nouvelles fonctionnalit\u00e9s. Avec Platfrome.sh pour eZ Platform et eZ Enterprise, cette promesse devient possible. Les d\u00e9veloppeurs peuvent enfin se concenrtrer sur le code et non sur l\u2019infrastructure. Ce qui est un grand pas en avant cot\u00e9 business! \u00bb , explique\u00a0 Roland Benedetti, Chief Product and Marketing Officer chez eZ Systems. \n \n Ce dernier partenariat est une preuve de la confiance que les \u00e9diteurs de logiciels ont dans l\u2019expertise de Platform.sh en d\u00e9ploiement continu et en PHP. \n \n \u00ab \u00ab\u00a0Nous sommes enchant\u00e9s de ce nouveau contrat avec un \u00e9diteur. eZ Systems a une tr\u00e8s bonne r\u00e9putation et a depuis longtemps une place importante dans le monde PHP.\u00bb \u00a0d\u00e9clare\u00a0 Fr\u00e9d\u00e9ric Plais, le CEO de Platform.sh. \n \n La nouvelle version d\u2019eZ Platform offre une diff\u00e9rentiation forte par rapport aux autres CMS. En choisissant de collaborer avec Platform.sh, eZ devrait b\u00e9n\u00e9ficier de ventes de licences acc\u00e9l\u00e9r\u00e9es, et de la croissance progressive du chiffre d\u2019affaires du PaaS d\u2019h\u00e9bergement dans le cadre de leur mod\u00e8le d\u2019affaires. \n \n \u00abLa combinaison du PaaS de Platform.sh et du nouveau syst\u00e8me de gestion de contenu d\u2019eZ offre \u00e0 eZ un avantage consid\u00e9rable sur ses concurrents. Nous nous f\u00e9licitons de notre premier client commun, Gelbe Seiten Marketing Gesellschaft bmbH (les pages Jaunes allemandes) la semaine derni\u00e8re\u00bb \u00a0ajoute\u00a0 Kieron Sambrook-Smith, Chief Commercial Officer de Platform.sh . \n \n Pour en savoir plus \u00e0 propos d\u2019eZ Platform:\u00a0 http://ez.no/Products/eZ-Platform \u00a0et la version premium eZ Enterprise\u00a0 http://ez.no/Products/eZ-Enterprise \n Pour d\u00e9buter un mois d\u2019essai gratuit d\u2019eZ Platform avec le PaaS de Platform.sh:\u00a0 http://ezplatform.com/ \n A propos de Platform.sh \u00a0Platform.sh est une Platform-as-a Service de nouvelle g\u00e9n\u00e9ration, combinant un h\u00e9bergement cloud \u00e0 haute disponibilit\u00e9 et un workflow de d\u00e9veloppement puissant de d\u00e9ploiement continu. Platform.sh permet de cr\u00e9er des branches de l\u2019infrastructure enti\u00e8re (et non seulement du code), de sorte que chaque branche peut \u00eatre test\u00e9e comme si elle \u00e9tait dans la production. Les sites live peuvent \u00eatre \u00e9galement mis \u00e0 l\u2019\u00e9chelle sans effort pour servir les pics de trafic les plus extr\u00eames. La solution propose une offre unique de triple redondance, et de support 24/7/365. Bas\u00e9 sur des technologies Open Source, Platform.sh est id\u00e9al pour le d\u00e9veloppement agile de logiciels, l\u2019int\u00e9gration continue (CI) et la livraison continue (CD). \n Platform.sh est une startup fran\u00e7aise, financ\u00e9e par des investisseurs priv\u00e9s professionnels (ISAI, Alven, Open Ocean et Hi Inov) et soutenue par le programme Horizon 2020 de l\u2019Union Europ\u00e9enne. Connaissant une croissance fulgurante, la soci\u00e9t\u00e9 emploie des ing\u00e9nieurs de haut niveau sur les 3 continents et r\u00e9alise la moiti\u00e9 de son activit\u00e9 aux Etats-Unis. La soci\u00e9t\u00e9 a ses origines dans le monde open source (ayant \u00e9t\u00e9 \u00e0 l\u2019origine du logiciel e-commerce PHP Drupal Commerce). \n A propos d\u2019eZ Systems \u00a0 eZ Systems \u00a0est l\u2019\u00e9diteur d\u2019un logiciel de gestion de contenu reconnu dans le monde entier, avec le souhait de simplifier la mani\u00e8re dont les personnes int\u00e9ragissent avec le contenu. eZ Systems aide les entreprises de tout secteur d\u2019activit\u00e9, \u00e0 d\u00e9velopper leur strat\u00e9gie digitale gr\u00e2ce \u00e0 un logiciel et des services efficaces. Avec plus de 250 000 sites web et applications, des milliers d\u2019entreprises dans le monde comptent sur eZ Systems pour les aider \u00e0 optimiser la valeur de leur contenu. Avec plus de 15 ans de croissance organique en tant que cr\u00e9ateurs du CMS eZ Publish, plusieurs fois prim\u00e9, l\u00a0\u00bb\u00e9cosyst\u00e8me eZ compte plus de 45 000 utilisateurs, plus de 80 partenaires commerciaux, et plus de 500 entreprises clientes. eZ compte \u00e9galement plus de 80 salari\u00e9s \u00e0 travers le monde, de l\u2019Am\u00e9rique du Nord, \u00e0 l\u2019Asie en passant par l\u2019Europe. Pour en savoir plus, visitez\u00a0 http://ez.no/fr \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Regions", "title": "Host your Drupal, WordPress and other applications in Australia ", "url": "https://platform.sh/regions/australia/?utm_source=blog&utm_campaign=deploy_down_under", "documentId": "65bab968709f8c1635879803bb31385c41832399", "text": "\n   \n     \n       Dedicated Australian region \n       Say goodbye to downtime with blazing-fast hosting and fail-proof deployments, now in a locally based, low-latency Australian region. Spend more time on Dev, and less time on Ops. \n     \n   \n \n     \n       Powering the most-demanding modern web applications in Australia and around the world \n     \n     \n       \n         \n           High performance, automatic high availability, and dynamic scaling . Unique, triple-redundant architecture for 99.99% uptime SLAs. 24x7 support for guaranteed response times. Pay for the capacity only when you need it. \n           Fail-proof deployments for faster time to market . Robust workflow and infrastructure for your teams to develop and launch new features and offers that customers love, how you want, as often as you want. \n           Git-driven infrastructure for greater efficiency, quality, and control . Knowing exactly what's been deployed and where makes it easier for your teams to continuously deploy in frequent, small steps. \n         \n       \n       \n         \n           Multiapp, multistack, multicloud for seamless integration . Whatever your microservices, applications, and infrastructure look like now or later, integrate seamlessly and flexibly at build time from day one. \n           End-to-end process automation for productivity boost . Our entirely automated development process boosts developer productivity by 20%. That's more time spent on creating, less time on sysadmin tasks. \n           Reliable and secure Australian cloud hosting . Whether you're running a high-traffic Drupal website, a Magento store, or a microservices Node.js cluster, Platform.sh has you covered. \n         \n       \n     \n   \n   \n     \n       Platform.sh provides governments the control they require and the freedom their developers expect.\n       \n         \n   Find out how \n   \n \n\n       \n     \n     \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Deploy your beta version of Open Social on Platform.sh ", "url": "https://platform.sh/2016/09/27/open-social-partnership/", "documentId": "2bf06ce9eef6034ca46ef4228e7e49d84d9a03d8", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Deploy your beta version of Open Social on Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Robert Douglass \n                  \n                   Chief DevRel Officer \n                  \n                  \n                 \n            \n          \n         \n         27 Sep 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Paris, France. Amsterdam, The Netherlands. 27th September, 2016 \u00a0- In an increasingly connected world, organizations are looking for simpler and faster ways to collaborate, interact, and engage with their stakeholders. To reinvent the way social communities and intranets are built and operated, GoalGorilla chose to partner with Platform.sh to deploy their open-source social business software,\u00a0 Open Social . \n \n Creating great social software takes a lot of time and effort. By making Open Social available as a fully maintained service and a Drupal distribution, Open Social provides organizations a basis to build communities and intranets without a large, upfront investment. \n \n \u201cOur customers expect their communities to be secure and available, all the time. Platform.sh mission is to make software run, everywhere and always. Open Social and Platform.sh are a natural match.\u201d \u00a0explains\u00a0 Taco Potze, Development Director of Open Social. \n \n Open Social needed a solution that allows them to distribute their software quickly and easily to the widest audiences. Their two key factors in choosing a hosting solution was one that can automate the software distribution from their Github as well as automate the deployment process. Platform.sh\u2019s solution offers both. \n \n \u201cThe Open Social application can play a transformative role in an organisation\u2019s communications. Deploying directly onto Platform.sh removes the last barrier and sets the stage for success for people evaluating the solution\u201d \u00a0says\u00a0 Robert Douglass, VP Customer Success, Platform.sh. \n \n Organisations can start using the beta version of Open Social at\u00a0 https://www.getopensocial.com/pricing . \n About Platform.sh \u00a0Platform.sh is a continuous deployment cloud hosting solution that can scale applications from the smallest project to ones handling millions of visitors. It is ideal for agile software teams because of its unique feature: it can replicate a live production cluster in seconds and create byte-level clones of throwaway dev and staging environments, which makes testing and validation up to 7 times faster, that\u2019s weeks to days, and in some cases days to hours. We can provide 99.99% SLAs thanks to our 24/7 follow-the-sun support combined with a unique, triple-redundant architecture that\u2019s based on a high density grid of Linux micro-containers. Headquartered in Paris, France, with employees across five continents, the company serves thousands of clients worldwide, including Vivienne Westwood, The Canadian Football League, The British Council, Flixbus, and El Universo. \n About Open Social \u00a0 Open Social \u00a0empowers people by providing an open-source platform to build online communities of like minded individuals. Replacing traditional intranets, it fuels bottom-up innovation within organizations. \n Prominent NGO and semi-government organizations are building strong business cases with the help of Open Social\u2019s software. Open Social is offered in three versions: a free distribution, a fully maintained software-as-a-service and an enterprise edition. Hosted in the cloud in either the USA or the EU, it is easy to setup, secure and flexible to integrate with existing infrastructure of its customers. \n Open Social is built with \u2018Drupal 8\u2019, a web technology for creating ambitious digital experiences which has more than a hundred thousand active contributors worldwide. The project is developed by a core team of eight people and is funded by\u00a0 GoalGorilla , a leading Drupal agency from The Netherlands. Open Social is based in tech-hub TQ in Amsterdam and in Twente, both are part of the Dutch StartupDelta; Europe\u2019s largest startup ecosystem. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Changing the Node.js version in your application container ", "url": "https://platform.sh/blog/changing-the-nodejs-version-in-your-application-container/", "documentId": "5ce1155d77d70ea9ea64ee6b6446da63277bce2b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Changing the Node.js version in your application container \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         06 Feb 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh provides Node.js in all our containers, regardless of whether it's a proper Node.js container, currently this is 6.x LTS. Though it is still a maintained release, we often get asked if it is possible to use a different version than the one provided. This is usually because people want the latest LTS (8.x) or the most recent 9.x version. \n With Node's frequent release cycle and our precompiled container images, providing multiple versions with different dependencies is prohibitive, however there is another way you can run a different version of Node, and that is using Node Version Manager. \n Node Version Manager, or NVM, is a tool for managing multiple versions of Node.js in one installation. You can use NVM with any of our container types that have node installed to change or update the version.\u00a0 \n Full instructions are available on our new documentation page for NVM... \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh\u2013deploying the future of content with one click \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Out of the lab: Node.js 12 features graduate from experimental status \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Off with its head! Headless Chrome as a service. \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Using Platform.sh with Scrum ", "url": "https://platform.sh/blog/using-platformsh-with-scrum/", "documentId": "df2db9dca43fa09b5a5d1ebd49a212b844966f8d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Using Platform.sh with Scrum \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         13 Feb 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Scrum is easy to do badly, and hard to do well. One of its main challenges is effectively managing changes in a way that doesn't cause conflicts. What is not regularly understood is that this is often a symptom of the testing and deployment infrastructure and is therefore hard to solve using Scrum techniques alone. Platform.sh's development model unblocks Scrum projects and allows them to run how Scrum was supposed to. \n What is Scrum? \n Scrum is probably the most popular of the methods we generally call Agile. In Scrum, individual User Stories or Features are prioritized for development and estimated, then organized into a series of Sprints of equal lengths (usually between one week and a month). Sprints are planned just before each Sprint begins, which ensures that only the most important work at that time is scheduled. \n The team shepherded by a Scrum Master, however it is the team who is responsible for ensuring that the stories are completed. A lot of emphasis in Scrum is placed on the communication between the team through Sprint Planning, daily Stand-up meetings, and Retrospectives. \n Scrum is relatively easy to get your head around, as it places only a few restrictions on the development team, buyt it can be difficult to get right. Two of the biggest challenges of Scrum that can seriously impact on its efficiency are testing and feature conflicts. \n Managing conflicts \n When using scrum, teams can very easily get caught in a cycle of rework which blocks other activity. Testing and quality assuring Features together is often necessary. The only way to do this, however, is usually in the main integration branch, and this leads to issues with rework, bugs, and (in the worst case scenario) backing out if something has failed testing. \n This last problem is the most nefarious, as it requires rebuilding the integration environment from a known good point (usually production) and reapplying changes from good features that have not been released, or alternatively continuing with the knowledge that your integration environment is now out of sync with production. \n Take, for example, a basic Scrum development pattern where multiple feature branches are made off of a production branch (Figure 1). \n \n Feature1 gets tested first in the single test environment, and because it's now ready to go, further changes are simply deployed on top of it (Figure 2). That all works fine until someone decides that feature2 isn't production ready... \n \n So testing features in isolation is desirable, however this is not realistically possible when running a single testing server. Testing multiple, regularly changing feature branches locally adds a considerable resource overhead and testers often do not have the necessary skills to spin up test environments for every change, let alone do it quickly. You might be able to automate this, but that will suck considerable time and resources out of your budget. \n Essentially, having only a single testing or QA environment can seriously hamstring even the most diligent Scrum team. Scrum allows the team a lot of self-management, but this comes at a price. Inevitably, because we can\u2019t all be good at everything and must divide the work up between people with different skills, Scrum projects often end up with a lot of pieces of work happening simultaneously. This will often lead to a situation where there are features in the project which conflict with each other a a code level. \n Without an environment for each branch, testing and quality assurance of individual features can only happen when merged into the main development branch. If one of them is rejected or conflicts, you\u2019ve got a major headache. More likely, many will need fixes or changes, which effectively makes your development branch unreleasable. Welcome to hell. \n Scrum on Platform.sh \n So how is Scrum different on Platform.sh? Our unique git-based environment workflow unblocks individual features and allows you not only to work the way Scrum intends, but also helps you when things go wrong. \n Scrum demands that we isolate features into workable Stories or Features. Platform.sh\u00a0gives you a complete development environment for every git branch, with real production data, which unblocks testing for these Stories, while simultaneously enabling parallel development. \n \n Features can now be kept nicely inside individual development branches in your version control system and only merged when ready. Even better, since the aim of scrum is to build in sprint-sized iterations, you can also use Platform.sh\u2019s unique child environment branching to isolate your work further. \n \n With this structure, individual features can be properly tested, reviewed in concert with other features, and demonstrated in the sprint review. What\u2019s more, if you happen to overlap your sprints for some horrible (but entirely plausible) reason you can start the next Sprint independently of the current one, without risk of collision. Something like a broken feature, that would risk a Sprint completion under normal circumstances, can simply be omitted in a new integration branch in a matter of minutes (Figure 5). \n \n What\u2019s next? \n Doing Scrum right is just one of the many ways you can use Platform.sh. If you\u2019d like to learn more about how to use Platform.sh your way, get in touch. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "We are nothing without our customers' success ", "url": "https://platform.sh/blog/we-are-nothing-without-our-customers-success/", "documentId": "a4c45c0aea804926669344c4bd8987f0fe2ba784", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           We are nothing without our customers' success \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Maria Antinkaapo \n                  \n                   VP Customer Success \n                  \n                  \n                 \n            \n          \n         \n         22 Feb 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We published this post in February 2018 because above all, we value the relationship we have with our customers, and strive for transparency in everything we do. One of our company values is being fair, and telling it like it is. A lot has happened since this post so in the interest of telling it like it is, we wanted to share a few updated stats. \n \n Since 2018 our 24/7 global customer success team has grown more than 3X in size, and spans six continents (sorry, Antarctica \ud83d\udc27). \n We\u2019ve improved our response time on urgent Enterprise tickets nearly 4X (while our contractual SLA is 1 hour, we often respond in ten minutes). \n Our customer satisfaction rating on all tickets averages greater than 92%. We\u2019re aiming for 100% of course, and appreciate the feedback that keeps our team constantly improving. \n \n We\u2019ve been able to improve our overall service levels even while growing our customer base tremendously over the same time period. We remain committed to being open and transparent with our  customers  and partners. We\u2019d want the same from our business partners! \n \u2014Maria Antinkaapo, 4 Dec 2019 \n \n Have you had to wait a long time for an answer to your support ticket? We hear you, we\u2019re sorry and here\u2019s what we\u2019re doing to fix it. \n Nothing is more infuriating than waiting on someone else when your website is having a problem. Things are broken, you need help fixing them, and nobody seems to be listening. You feel powerless and frustrated, and you just can\u2019t believe it is taking so long. What gives?!? \n If that has been your experience with Platform.sh Customer Support recently, you\u2019re not the only one. In fact, the number one message we hear from our customers right now is that our response on support is too slow. How did we let that happen?  \n 2017 was a super successful year for us. We doubled our customer base and experienced exciting growth through partners like Magento, EZ Platform, and Symfony. We got a lot of validation that our product is useful and is what developers and site owners are looking for.  \n Unfortunately we didn\u2019t manage to keep up with staff, processes, and tooling on the support team, leading to longer wait times in the support queues. Believe me, this has been painful to experience and acknowledge. We preferred it when everyone (ourselves included) thought we were perfect. =) \n What are we going to do to fix the problem, now that we\u2019ve fallen behind?  \n These are the first things we have put in place: \n \n\t \n\t Recruit more people : Our target is to more than double the size of the support team in 2018. If you\u2019re looking for a job, we\u2019ve got them, and would be happy to receive your application. [ https://stackoverflow.com/jobs/companies/platform-sh ] \n\t \n\t \n\t Set up more training : We\u2019ve initiated an internal bi-monthly training program and are building out our library of training materials so that our new hires can hit the ground running, and so that you are always talking to support engineers with up-to-date knowledge and skills. \n\t \n\t \n\t Provide better tooling : We\u2019re making major improvements on our helpdesk system and our internal tooling to reduce the number of steps it takes to diagnose problems and make suggestions. \n\t \n\t \n\t Improve data and statistics : We\u2019re stepping up our collection of data and metrics pertaining to Customer Support to make our decisions more data driven. With greater insight into our client interactions, we can offer the best support. \u00a0 \n\t \n \n Finally, and most importantly, we  created a whole new team  to help you succeed: the Customer Care team. We are an entire team dedicated to listening to your needs, hearing any complaints (and hopefully, eventually, praise), and guiding future decisions and improvements based on that valuable feedback.  \n We are doing our utmost to make sure you won\u2019t have to endure more long waits. If you have feedback, suggestions, praise, or complaints, we want to hear from you, either in a comment below or by writing to  customercare@platform.sh \n We are nothing without our customers\u2019 success. This is one of our company values. We believe in it. And we\u2019re doing everything to make this right. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Using cloud technology and automation to help enterprises become GDPR ready  ", "url": "https://platform.sh/blog/using-cloud-technology-and-automation-to-help-enterprises-become-gdpr-ready/", "documentId": "a290b3e2f8a3ba15186e2266c5f570a0d66faeb9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Using cloud technology and automation to help enterprises become GDPR ready  \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Joey Stanford \n                  \n                   Security, Compliance and Data Protection Officer \n                  \n                  \n                 \n            \n          \n         \n         06 Mar 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         With less than 100 days to go until the  EU General Data Protection Regulation (GDPR)  comes into force, many companies are realizing that they are underprepared for the new regulation. In fact, according to a November 2017 survey,  only 6% of companies reported that they are completely prepared , whilst as much as  1 in 4 admit that they are still behind  in meeting the deadline.  \n Platform.sh brings its expertise in cloud technology and data integrity to provide enterprises a secure and high-performing platform to help them stay protected and respect their data privacy responsibilities, whilst focusing on developing their core product. Fully automating all system administration operations and allowing explicit management of the full lifecycle of environments, both in production and in development, through what the company calls a \u201cNoOps\u201d approach, is the key to lowering the bar for GDPR compliance. \n \n \u201cSensitive to the growing sovereign cloud hosting needs in Europe, we built security and data privacy into the heart of Platform.sh. Our objective is to help enterprises inside and outside the European Union implement DevOps easily, and develop and deploy new features faster, continuously, and securely. The Horizon 2020 grant from the European Commission helped us implement compliance requirements in a multi-cloud approach to be able to comply with the most stringent of privacy policies.\u201d  \n Fred Plais, CEO, Platform.sh  \n \n For the past few years, the fast-growing startup has heavily invested in R&D projects specifically to resolve an age-old challenge for IT and business: how to have a faster time-to-market whilst improving security and compliance outcomes. By following a continuous deployment approach, Platform.sh has removed the contradiction in traditional infrastructures allowing organizations to  turn the improved velocity of this paradigm to their advantage, addressing any remaining technical GDPR issues they face without sacrificing quality or reliability. \n \n \u201cA lot of companies still have their heads firmly in the ground regarding the GDPR. They sometimes fail to understand that they can\u2019t just wave a magic wand and become compliant. They will need to change the way they operate their web systems. The capacity to have quick project turnaround with a clear perimeter between the data controller (the client) and the data processor (the hosting provider, including all the third party services every provider in the chain uses) is paramount. This is where a fully-automated solution like ours really shines.\u201d \n Ori Pekelman, CPO, Platform.sh \n \n Sovereign cloud hosting in Europe \n To help clients meet their compliance and data security obligations, Platform.sh built exclusive partnerships with Microsoft Azure Germany and Orange Business Cloud to offer sovereign cloud hosting in both Germany and France.  \n Platform.sh supports not only European clients such as the French Lawyer Bar (avocats.fr), the Dalloz publishing house, Orange Belgium, Intermarch\u00e9, Hachette, Ikea or Mercedes Benz to benefit from sovereign cloud hosting, but also its global clientele. Wherever they are hosted, international brands and organizations such as Gap, Vivienne Westwood,  The Financial Times, and Stanford University,  are more advanced in preparing for the more stringent constraints brought by the GDPR. In effect any enterprise operating on the global market with clients or users in the European Union is subject to the new rules with penalties that can amount to 20M\u20ac or 4% of their global turnover. \n Enterprises interested in learning how they can accelerate their GDPR readiness can  contact us  for more information.  \n \u00a0 \n About Platform.sh \n Platform.sh  is a continuous deployment cloud hosting service  that can scale  applications from the smallest project to those handling millions of visitors. It is  ideal for agile software teams  because of its unique feature: it can clone the live production cluster byte-for-byte in seconds to create ephemeral dev and staging environments, making testing and validation up to 20x faster . It can provide  99.99% SLAs thanks to 24/7 follow-the-sun support combined with a unique, triple-redundant architecture based on a high-density grid of Linux micro-containers.  Headquartered in Paris, France, with employees across five continents, the company serves over 3000 clients worldwide, including Gap, Ikea, Orange Belgium, Slate.fr, Intermarch\u00e9, Vivienne Westwood, The Financial Times, Stanford University, University of Cambridge, Daimler Benz, and Lufthansa. \n \u00a0 \n \u00a0 \n FR \n Les solutions d\u2019automatisation du Cloud au service de la conformit\u00e9 \u00e0 la RGPD \n Platform.sh, entreprise fran\u00e7aise proposant un PAAS de nouvelle g\u00e9n\u00e9ration, accompagne les entreprises dans leur mise en conformit\u00e9 \u00e0 la R\u00e9glementation G\u00e9n\u00e9rale sur la Protection des Donn\u00e9es (RGPD) \n \u00a0 \n Paris, France, 5 mars 2018 \n \u00c0 moins de 60 jours du top d\u00e9part de la nouvelle loi sur la protection des donn\u00e9es personnelles, de nombreuses entreprises prennent conscience qu'elles ne sont pas encore pr\u00eates \u00e0 s\u2019aligner \u00e0 cette nouvelle r\u00e9glementation. En effet, dans une enqu\u00eate men\u00e9e en novembre 2017,  seulement 6% des entreprises ont d\u00e9clar\u00e9 \u00eatre compl\u00e8tement pr\u00e9par\u00e9es , alors qu' une entreprise sur quatre admet \u00eatre en retard  dans sa pr\u00e9paration pour respecter cette date butoir.  \n Platform.sh, \u00e9ditrice d\u2019une solution d'h\u00e9bergement cloud en d\u00e9ploiement continu, a permis \u00e0 ses clients de mieux se pr\u00e9parer pour la conformit\u00e9 \u00e0 la R\u00e9glementation G\u00e9n\u00e9rale sur la Protection des Donn\u00e9es (RGPD) gr\u00e2ce \u00e0 ses capacit\u00e9s d'automatisation. Plusieurs milliers d\u2019entreprises et organisations utilisant Platform.sh sont ainsi \u00e0 un stade avanc\u00e9 dans leur pr\u00e9paration \u00e0 la RGPD pour son entr\u00e9e en vigueur le 25 mai 2018, date fix\u00e9e par la Commission Europ\u00e9enne. \n Platform.sh apporte son expertise en mati\u00e8re de technologie cloud et de confidentialit\u00e9 des donn\u00e9es pour fournir aux entreprises une plate-forme s\u00e9curis\u00e9e et performante permettant de les aider \u00e0 pr\u00e9server leur s\u00e9curit\u00e9 informatique et \u00e0 respecter la confidentialit\u00e9 des donn\u00e9es, tout en se concentrant sur le d\u00e9veloppement de leur produit.  \n L'automatisation de toutes les op\u00e9rations d'administration syst\u00e8me avec une gestion explicite du cycle de vie complet des environnements de production comme de d\u00e9veloppement, \u00e0 travers ce que l'entreprise appelle une approche \"NoOps\u201d est la cl\u00e9 de cette mise en conformit\u00e9 avec la RGPD. \n \u201cEn tant que laur\u00e9ats du programme projet Horizon 2020 de la Commission europ\u00e9enne, nous sommes tr\u00e8s sensibles aux besoins grandissants d\u2019un cloud souverain en Europe, nous avons plac\u00e9 la s\u00e9curit\u00e9 et la protection des donn\u00e9es au coeur de l\u2019architecture de Platform.sh. Notre objectif est d\u2019aider les entreprises, \u00e0 l\u2019int\u00e9rieur et \u00e0 l\u2019ext\u00e9rieur de l\u2019Union Europ\u00e9enne, \u00e0 impl\u00e9menter tr\u00e8s facilement leurs \u201cDevOps\u201d (concat\u00e9nation du mot \u00ab D\u00e9veloppement \u00bb et du mot \u00ab Op\u00e9rations \u00bb), \u00e0 d\u00e9velopper et d\u00e9ployer de nouvelles fonctionnalit\u00e9s plus rapidement, de fa\u00e7on continue et en toute s\u00e9curit\u00e9. La subvention nous a aid\u00e9 \u00e0 mettre en \u0153uvre des garanties de conformit\u00e9 dans une approche multi-cloud pour \u00eatre en mesure de se conformer aux politiques de confidentialit\u00e9 les plus strictes\"  Indique Fr\u00e9d\u00e9ric Plais, CEO de Platform.sh  \n Ces derni\u00e8res ann\u00e9es, cette start-up en pleine croissance a fortement investi dans des projets de R&D sp\u00e9cifiquement orient\u00e9s vers l'am\u00e9lioration de la productivit\u00e9 des clients gr\u00e2ce \u00e0 une approche de d\u00e9ploiement continu, tout en gagnant en s\u00e9curit\u00e9 et en conformit\u00e9; des aspects souvent contradictoires dans les infrastructures traditionnelles. \n Pour  Ori Pekelman, CPO de Platform.sh,  \u201cBeaucoup d'entreprises sont encore t\u00e9tanis\u00e9es dans leur approche de la RGPD, elles ne comprennent toujours pas qu'elles ne peuvent pas rentrer en conformit\u00e9 d\u2019un coup de baguette magique. Elles devront faire des modifications, souvent d\u2019\u00e9l\u00e9ments importants, dans leur fa\u00e7on d\u2019exploiter leurs syst\u00e8mes Web. La capacit\u00e9 d'avoir une v\u00e9locit\u00e9 de changement rapide pour les projets avec un p\u00e9rim\u00e8tre clair entre le contr\u00f4leur de donn\u00e9es (le client) et le processeur de donn\u00e9es (le fournisseur d'h\u00e9bergement... Et tous les services tiers que chaque fournisseur de la cha\u00eene utilise) sont primordiaux. C'est dans ce type de situation qu'une solution enti\u00e8rement automatis\u00e9e comme la n\u00f4tre se d\u00e9marque fortement.\" \n H\u00e9bergement cloud souverain en Europe \n Pour aider ses clients \u00e0 respecter la conformit\u00e9 et la s\u00e9curit\u00e9 des donn\u00e9es, Platform.sh a \u00e9tabli des partenariats exclusifs avec Microsoft Azure Allemagne et Orange Cloud for Business afin d'offrir un h\u00e9bergement cloud souverain en Allemagne et en France, c\u2019est-\u00e0-dire h\u00e9berg\u00e9s physiquement \u00e0 l\u2019int\u00e9rieur de leurs fronti\u00e8res. Les entreprises peuvent ainsi garantir la confidentialit\u00e9 des donn\u00e9es pour leurs utilisateurs dans l'Union europ\u00e9enne.  \n Platform.sh aide non seulement les clients europ\u00e9ens tels que le barreau fran\u00e7ais (avocats.fr), la maison d'\u00e9dition Dalloz, Orange Belgium, Intermarch\u00e9, Hachette, Ikea ou Mercedes Benz \u00e0 b\u00e9n\u00e9ficier de l'h\u00e9bergement cloud souverain mais aussi des clients d\u2019horizons internationaux. De grandes marques et institutions telles que  Gap, Vivienne Westwood, The Financial Times et Stanford University  seront mieux pr\u00e9par\u00e9es \u00e0 faire face aux contraintes, plus rigoureuses, impos\u00e9es par la RGPD.   En effet, toute entreprise op\u00e9rant sur le march\u00e9 mondial avec des clients ou utilisateurs dans l'Union Europ\u00e9enne est soumise \u00e0 ces nouvelles r\u00e8gles dont les p\u00e9nalit\u00e9s peuvent atteindre 20M\u20ac ou 4% de leur chiffre d'affaires global. \n\u00a0 \n A propos de Platform.sh \n Platform.sh est un service d'h\u00e9bergement cloud en d\u00e9ploiement continu capable de faire \u00e9voluer les applications, du plus petit projet \u00e0 celles qui g\u00e8rent des millions de visiteurs. Il est id\u00e9al pour les \u00e9quipes logicielles agiles en raison de sa caract\u00e9ristique unique : il peut cloner un cluster de production en quelques secondes pour cr\u00e9er des environnements de d\u00e9veloppement et de test \u00e9ph\u00e9m\u00e8res, rendant les tests et la validation jusqu'\u00e0 20 fois plus rapides. Platform.sh Entreprise offre une disponibilit\u00e9 de 99,99% de son infrastructure et un support 24/7.  Bas\u00e9e \u00e0 Paris, avec des employ\u00e9s r\u00e9partis sur cinq continents, la soci\u00e9t\u00e9 compte plus de 3000 clients dont, Gap, Orange Belgium, Slate.fr, Intermarch\u00e9, Vivienne Westwood, The Financial Times, Stanford, Cambridge, Daimler Benz et Lufthansa. \n \u00a0 \n \n DE \n Mit Cloud-technologie und Automatisierung GDPR-f\u00e4hig sein \n Paris, Frankreich, 22 Februar 2018, : Platform.sh, die Cloud Hosting-L\u00f6sung f\u00fcr kontinuierliche Entwicklung und Bereitstellung, unterst\u00fctzt seine Kunden mit seinen Automatisierungsm\u00f6glichkeiten bei der Vorbereitung ihrer GDPR-Konformit\u00e4t. Mehr als 3.000 Unternehmen und Organisationen, die Platform.sh bereits nutzen, konnten jetzt einen gro\u00dfen Schritt vorw\u00e4rts tun, um den Anforderungen vor Ablauf der von der Europ\u00e4ischen Kommission festgesetzten Frist im Mai 2018 zu entsprechen. \n Weniger als 100 Tage vor dem Inkrafttreten der Allgemeinen Datenschutzverordnung der EU (GDPR) stellen viele Unternehmen fest, dass sie auf die Einhaltung der neuen Verordnung noch nicht ausreichend vorbereitet sind. Tats\u00e4chlich gaben in einer Umfrage vom November 2017   nur sechs Prozent der befragten Unternehmen an, dass sie bereits vollst\u00e4ndig vorbereitet seien , w\u00e4hrend   jedes vierte Unternehmen einr\u00e4umt, dass es angesichts der demn\u00e4chst ablaufenden Frist immer noch im R\u00fcckstand sei . \n Platform.sh bringt seine Expertise im Bereich Cloud-Technologie und Datenschutz ein, um Unternehmen eine sichere und leistungsstarke Plattform zur Verf\u00fcgung zu stellen, die ihnen dabei hilft, sicher zu operieren und ihren datenschutzrechtlichen Verpflichtungen nachzukommen, w\u00e4hrend sie sich auf die Entwicklung ihres Kernprodukts konzentrieren k\u00f6nnen. Der Schl\u00fcssel hierf\u00fcr besteht in der kompletten Automatisierung aller Systemadministrationsvorg\u00e4nge und in einem expliziten Management des gesamten Lebenszyklus\u2018 von Umgebungen sowohl in der Produktion als auch in der Entwicklung durch einen so genannten \u201eNoOps\u201c-Ansatz. \n \n \u201eDa wir uns der gro\u00dfen Nachfrage nach souver\u00e4nem Cloud-Hosting-Angeboten in Europa bewusst sind, haben wir die Aspekte Sicherheit und Datenschutz zum organischen Bestandteil von platform.sh gemacht. Unser Ziel ist es, Unternehmen innerhalb und au\u00dferhalb der Europ\u00e4ischen Union dabei zu unterst\u00fctzen, DevOps einfach zu implementieren und neue Funktionen schneller, kontinuierlicher und sicherer zu entwickeln und umzusetzen. Die Mittel, die wir von der EU-Kommission im Rahmen des Horizont 2020-F\u00f6rderprogramms f\u00fcr Forschung und Innovation erhalten haben, haben uns geholfen, Compliance-Anforderungen in einem Multi-Cloud-Ansatz umzusetzen, mit dem die strengsten Datenschutzbestimmungen eingehalten werden k\u00f6nnen. \n Fred Plais, CEO, Platform.sh \n \n In den letzten Jahren hat das schnell wachsende Start-up Platform.sh stark in F&E-Projekte investiert, um damit besonders auch einen traditionellen Zielkonflikt aufzul\u00f6sen: Unternehmen m\u00f6chten mit ihren L\u00f6sungen einerseits m\u00f6glichst schnell an den Markt gehen und gleichzeitig die Sicherheit und Compliance dieser L\u00f6sungen verbessern. Mit seiner Technologie der kontinuierlichen Entwicklung konnte Platform.sh diesen Widerspruch aufl\u00f6sen und Unternehmen in die Lage versetzen, die damit verbundene Zeitersparnis zu nutzen und verbleibende Datenschutzaufgaben ohne Abstriche bei der Qualit\u00e4t oder Zuverl\u00e4ssigkeit zu erledigen. \n \n \u201eViele Unternehmen stecken beim Thema GDPR immer noch den Kopf in den Sand. Sie verstehen manchmal nicht, dass es keinen Zaubertrick gibt, mit dem sie die geforderte Konformit\u00e4t erreichen k\u00f6nnen. Sie werden die Art und Weise, wie sie ihre Websysteme betreiben, \u00e4ndern m\u00fcssen. Die F\u00e4higkeit, einen schnellen Projektdurchlauf mit einer klaren Schnittstelle zwischen dem Datencontroller (dem Kunden) und dem Datenverarbeiter (dem Hosting-Provider) zu haben, ist von gr\u00f6\u00dfter Wichtigkeit. Hier kann eine vollautomatische L\u00f6sung wie die unsere ihre Vorteile klar ausspielen\". \n Ori Pekelman, CPO, Platform.sh \n \n Souver\u00e4nes Cloud Hosting in Europa \n Um Kunden bei der Einhaltung von Compliance und Datensicherheit zu unterst\u00fctzen, hat Platform.sh exklusive Partnerschaften mit Microsoft Azure Deutschland und Orange Business Cloud geschlossen, um souver\u00e4nes Cloud Hosting in Deutschland und Frankreich anbieten zu k\u00f6nnen. \n Platform.sh  hilft nicht nur europ\u00e4ischen Kunden wie der Franz\u00f6sischen Anwaltskammer (avocats.fr), dem Dalloz-Verlag, Orange Belgien, Intermarch\u00e9, Hachette, Ikea oder die Daimler AG, von souver\u00e4nem Cloud Hosting zu profitieren. Auch seinem globalen Kundenstamm (darunter Gap, Vivienne Westwood,  The Financial Times und die Stanford University ), leistet das Unternehmen Unterst\u00fctzung bei der Einhaltung der strengeren Auflagen des GDPR. Schlie\u00dflich unterliegt jedes Unternehmen, das auf dem Weltmarkt mit Kunden oder Nutzern in der Europ\u00e4ischen Union t\u00e4tig ist, den neuen Regeln und kann mit Strafen belegt werden, die bis zu 20 Mio. \u20ac oder vier Prozent des weltweiten Umsatzes betragen k\u00f6nnen. \n Unternehmen, die daran interessiert sind, zu erfahren, wie sie ihre GDPR-Konformit\u00e4t schneller erreichen k\u00f6nnen, finden hier weitere Informationen. \n \u00a0 \n \u00dcber Platform.sh \n Platform.sh  ist ein Cloud Hosting Service f\u00fcr kontinuierliche Entwicklung und Bereitstellung, der Anwendungen vom kleinsten Projekt bis hin zu Anwendungen mit Millionen von Besuchern skalieren kann. Seine einzigartige Technologie eignet es ideal f\u00fcr agile Software-Teams: Es kann den Live-Produktionscluster Byte-f\u00fcr-Byte in Sekunden klonen, um ephemere Entwicklungs- und Staging-Umgebungen zu erstellen, was das Testen und Validieren bis zu 20-mal schneller macht. Dank der 24/7 Follow-the-Sun-Unterst\u00fctzung und der einzigartigen, dreifach redundanten Architektur, die auf einem hochdichten Grid aus Linux-Mikrocontainern basiert, k\u00f6nnen SLAs mit 99,99 Prozent Verf\u00fcgbarkeit bereitgestellt werden. Das Unternehmen mit Hauptsitz in Paris und Mitarbeitern auf f\u00fcnf Kontinenten betreut \u00fcber 3000 Kunden weltweit, darunter Gap, Orange Belgien, Slate.fr, Intermarch\u00e9, Vivienne Westwood, The Financial Times, die Stanford University, die Cambridge University, die Daimler AG und die Lufthansa AG. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Announcing the Platform.sh WAF ", "url": "https://platform.sh/blog/announcing-the-platformsh-waf/", "documentId": "0bf20f915a294475d75f2072c0a80927c9c6fff3", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Announcing the Platform.sh WAF \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         16 Mar 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         One of the best features of a Software as a Service platform (like Platform.sh) is the regular, automatic upgrades.  When the system gets better it gets better for everyone, and often at no extra cost to you. \n Today we\u2019re happy to announce our latest new feature, already available and deployed for all Platform.sh Professional and Platform.sh Enterprise customers: A Web Application Firewall (WAF) framework. \n A WAF is an application-level security tool, designed to filter incoming requests by looking at their content and rejecting known-bad or known-hostile requests before they even reach the application.  That provides better security faster, as the application never even sees the bad request. \n WAFs can range anywhere from rudimentary blocking of trivial malformed requests up to complex machine learning heuristic analysis AI buzzword-compliant behemoths.  We\u2019ve implemented ours as an extensible system that will allow us to grow an analysis and blocklist over time.  For now it\u2019s just blocking malformed requests, such as  application/json  requests that contain malformed JSON.  We will be adding to that list as time goes on, however, as we confirm invalid requests that we can reliably detect and block. \n Sounds great, what do I need to do to get it? \n Nothing.  You already have it.  We deployed it last Friday.  (Because when else are you going to deploy features?) \n This is just our latest effort to give our customers the piece of mind they deserve. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "SA-CORE-2018-002 Drupal core vulnerability: We've got you covered ", "url": "https://platform.sh/blog/drupal-sa-core-2018-002/", "documentId": "cdb937bd60d0d3981df9c56217656a72d3d8d7bc", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           SA-CORE-2018-002 Drupal core vulnerability: We've got you covered \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         28 Mar 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         An hour ago the  SA-CORE-2018-002  critical Drupal vulnerability was disclosed. It was announced a week ago  PSA-2018-001 . That allowed us to gather our technical team and make sure we can develop and deploy a mitigation to all our clients immediately as the issue is made known. \n If you\u2019re not running on Platform.sh, please stop reading this post and go update your Drupal site to version 8.5.1 / 8.4.9 / 8.3.8 / 7.58  right now .  We\u2019re serious; upgrade first and ask questions later. \n If you are running on Platform.sh: You\u2019re safe and can continue reading\u2026 then upgrade. \n The vulnerability (also referred to as CVE-2108-7600) affects the vast majority of Drupal 6.x, 7.x and 8.x sites and allows arbitrary remote code execution that allow anonymous remote users to take full control of any affected Drupal site prior to 8.5.1 / 8.4.9 / 8.3.8 / 7.58. \n The same issue is present in  Backdrop CMS  installations prior to 1.9.3. \n If your Drupal site is not hosted on Platform.sh we encourage you to immediately update all your Drupal sites to 8.5.1 / 7.58 or to take your site offline. This is serious and trivially exploitable. You can expect automated attacks to appear within hours at most. If you are not on Platform.sh or another provider that has implemented a mitigation your site will be hacked. This is as critical as the notorious  \u201cDrupaGeddon\u201d episode  from three and a half years ago. \n If you are hosting on Platform.sh\u2026 \n Platform.sh is pleased to announce all Drupal sites hosted on all our regions and all our plans are automatically safe from this attack. \n Platform.sh has many security layers that make attacks such as this much harder than on comparable services. Starting from our read-only hosts and our read-only containers, through our auditable and reproducible build-chain, and static-analysis based protective block. \n In response to this latest vulnerability, we\u2019ve taken two important steps: \n \n \n We\u2019ve added a new rule to our  Web Application Firewall (WAF)  on all regions and on all Enterprise clusters that detects and blocks requests trying to exploit this latest attack vector, even if your site hasn\u2019t been updated.  (But still, please update.) \n \n \n We are adding a check to our  protective block  to prevent deployment of affected Drupal versions.  If you try to push an insecure Drupal version our system will flag it for you and warn you that you are pushing known-insecure code. Please update your code base as soon as possible. \n \n \n As a client if you need any further assistance or want more information about the vulnerability, how it may affect you, and our mitigation strategy don\u2019t hesitate to contact support. We have set our WAF to an especially aggressive stance for now and this may result in some users seeing a \u201c400 Bad Request\u201d message in some edge cases for legitimate traffic. If you experience this, please contact our support immediately they will be able to help. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "More details on Drupal SA-CORE-2018-002 ", "url": "https://platform.sh/blog/drupal-sa-core-2018-002-details/", "documentId": "83ffbbad8f89ac9674b9907c4942f08285840f34", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           More details on Drupal SA-CORE-2018-002 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Damien Tournoud \n                  \n                   CTO \n                  \n                  \n                 \n            \n          \n         \n         28 Mar 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh customers should visit  Safe from DrupalGeddon II aka SA-CORE-2018-02  for the specific steps we took to protect all our Drupal instances. \n Earlier today, a critical remote code execution vulnerability in Drupal 6, 7, and 8 was disclosed. This highly-critical issue affects all Drupal 7.x and 8.x sites and most Drupal 6.x sites. You should update immediately any Drupal site you have to versions 8.5.1, 8.4.6, or 7.58, as appropriate. \n How to know if I am affected? \n We are currently not aware of exploits of this vulnerability in the wild but this will undoubtedly change in the next few hours. Writing an exploit for this is trivial and you should expect automated internet-wide attacks before the day is out. \n You should take immediate steps to protect yourself. This is as bad or worse than the previous highly-critical vulnerability SA-CORE-2014-05 that wreaked havoc three and a half years ago affecting more than  12 Million websites . \n (Like, seriously, if you are reading this and you are not on Platform.sh or another provider that has put a platform-level mitigation in place, go update your sites and then come back and finish reading.  Please.  Platform.sh customers, see below for how to quickly update your site.) \n Where does the vulnerability come from? \n The issue is in Drupal\u2019s handling of HTTP request parameters that contain certain special characters. These characters have special meaning in various places in Drupal, which if misinterpreted could lead to unexpected code paths being executed.  The solution in the latest patch is to filter out such values before passing them off to application code. \n Fortunately that same strategy can be implemented at the network layer.  We have therefore applied the same logic to our  Web Application Firewall  to reject requests containing such values and deployed it across all projects in all regions, both Platform.sh Professional and Platform.sh Enterprise.  That should protect all Drupal and Backdrop installations running anywhere on Platform.sh until they are upgraded. \n What to do? \n You must update any and all Drupal instances with 6.x, 7.x and 8.x or Backdrop CMS, or verify that your hosting provider has put in place an automated mitigation strategy for this vulnerability.  (All Platform.sh clients are safe; our new WAF now detects and blocks all variants of this attack).  Even if your hosting provider has a mitigation strategy in place you should update immediately anyway. \n Drupal 6.x is no longer maintained and unlike Drupal 7.x and 8.x it does not support automated updates.  Third-party support providers may provide a patch but you should make plans to upgrade from Drupal 6 to Drupal 8 as soon as possible. \n Hopefully you are using Composer for your Drupal 7.x and 8.x or Drush make for Drupal 7.x, as is the default with Platform.sh installations. \n To upgrade Drupal via Composer \n To update your Drupal instances, and test nothing breaks you can follow the following simple procedure: \n Verify that your composer.json file does not lock down drupal core to a minor version it should be something like \u201cdrupal/core\u201d: \u201c~8.0\u201d.  Then run: \n git checkout -b security_update\ncomposer update\n Make sure that Drupal Core was updated to 8.5.1 or higher.  (Check  composer.lock  using  git diff ). Commit and push your changes: \n git commit \u2013am \u2019fix for SA-CORE-2018-02\u2019 && git push \n On Platform.sh you can test that everything is fine on your automatically-generated staging environment, then merge to master putting this to production. \n If you do not use Platform.sh you should test this either locally or your testing server; and follow your normal procedure to update your live sites. \n To upgrade Drupal using Drush Make \n If you are using \u201cDrush Make\u201d style of dependency management, again, make sure you are not locked down to a vulnerable version such as: \n projects[drupal][version] = 7.57 \n if it is, bump it up to  7.58 .  Then make a branch and update it: \n git checkout -b security_update\ndrush pm-update\n Commit the changes and push the result to Platform.sh for testing.  Once you\u2019re satisfied nothing is broken merge back to master and deploy. \n To upgrade Drupal if you're checking Drupal core into your repository \n If you\u2019re running a \u201cvanilla\u201d Drupal setup, with all of Drupal checked into Git, the easiest way to upgrade is using  drush . \n In your local environment, go to your Drupal document root and run: \n git checkout -b security_update\ndrush pm-update drupal\n Commit the changes and push the result to Platform.sh for testing.  Once you\u2019re satisfied nothing is broken merge back to master and deploy.\nAfterward, look into how to migrate your site to a dependency managed configuration, preferably Composer.  It will make maintenance far easier and more robust in the future. \n As a reminder, your Platform.sh instances are not vulnerable as they are protected by our WAF . You should still apply the fixes ASAP. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Drupal critical core vulnerability announced ", "url": "https://platform.sh/blog/drupal-critical-core-vulnerability-announced/", "documentId": "9c4393ef378b1df98914e2be06e5b5244927d837", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Drupal critical core vulnerability announced \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Joey Stanford \n                  \n                   Security, Compliance and Data Protection Officer \n                  \n                  \n                 \n            \n          \n         \n         28 Mar 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         A week ago the Drupal security team published a dire-sounding advisory  PSA-2018-001 , rated highly-critical for Drupal core. The announcement has now been made as  SA-CORE-2018-002 . \n The last time around when there was a Highly-Critical vulnerability for Drupal Core AKA the  \u201cDrupaGeddon\u201d episode  millions of sites were affected, so we are taking this extremely seriously. \n All Drupal users are advised to update their sites to 8.5.1 / 8.4.9 / 8.3.8 / 7.58 immediately.  We are working on a platform-level fix as well and will announce more details very soon. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh is going the distance in China with Impact China 2018 ", "url": "https://platform.sh/blog/platformsh-is-going-the-distance-in-china-with-impact-china-2018/", "documentId": "961307013f0c3d0ddae900ad23c38f2747ed51a3", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh is going the distance in China with Impact China 2018 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         03 Apr 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \n \n \nIf you are going to expand your operations or launch your product in another country, especially in China, would you travel ten thousand miles, multiple times, for multiple weeks, in multiple cities to learn how?\n \n \n \u8bfb\u4e07\u5377\u4e66\u4e0d\u5982\u884c\u4e07\u91cc\u8def \n \n Better to travel 10,000 miles than to read 10,000 books \n \n \nThanks to the elite Impact China 2018 program, Platform.sh is doing exactly that, travelling up-and-down the length of China to speak and meet digital agencies, software vendors, and technology providers to understand the Chinese market, get a precise vision of the tech ecosystem in China, and sign key partnership agreements to help you deploy your websites and applications in China.\n \n \nOrganized by  BpiFrance , the leading French investment bank, and  Business France , the French national agency for international business development, Impact China is a prestigious program, granted to 5 highly innovative French companies to help them gain momentum in the Middle Kingdom. The Impact China 2018 selection jury is composed of 15 VCs and experts on the Chinese tech ecosystem.\n \n \nThrough Impact China, Platform.sh aims to bring its unique continuous deployment cloud hosting service to the region in 2018, offering companies the ability to deploy web applications and services both inside and outside China using the same Platform.sh \u201cNoOps\u201d tooling, on dedicated, High Availability cloud hosting.\n \n \n Augustin Delaporte (General Manager China) \n \n It is amazing to see all the difficulties that foreigners face when entering the Chinese market. By operating and having a presence in China, Platform.sh have the opportunity to solve those issues and facilitate our customers experience who are planning on deploying to China. \n \n \nToday, our team is already preparing the second phase of Impact China 2018 which happens from 25th to July 6th. Please  contact us  if you are interested in meeting us during the next session, or discussing options for Chinese deployments.\n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Your Guide to GDPR Compliance (Introduction) ", "url": "https://platform.sh/blog/your-guide-to-gdpr-compliance-introduction/", "documentId": "ab37fc52ecfe78b93a86a2d9f45eb783961208b5", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Your Guide to GDPR Compliance (Introduction) \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ivana Kotur \n                  \n                   Compliance Coordinator \n                  \n                  \n                 \n            \n          \n         \n         04 Apr 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         With the recent news on Cambridge Analytica and calls to #deleteFacebook, protecting people\u2019s rights and freedoms in relation to their personal data and privacy is vital if companies want to retain consumer trust. If you\u2019re doing business in the EU, whether you\u2019re based in the European Union or not, you would have already heard about the looming GDPR deadline by now (50 days left!). If you haven\u2019t already, you need to start with GDPR compliance today! \n This road has many steps and each of them is equally important. But, don\u2019t worry, we are here to guide you. As there is not one compliance approach that fits everyone, this guide helps you to better understand what the GDPR is and the core activities you will have to deal with. From this guide, you will then be able to tailor and implement these changes according to your company organization and business structure.  \n This post is the introduction to the GDPR in a series of seven posts: \n \n\t Understanding your responsibilities and obligations \n\t Six principles of processing personal data \n\t Data protection by design and default \n\t Data subject rights \n\t Data protection impact assessment and security measures for processing data \n\t Transfers of personal data to third countries \n\t Training your employees \n \n Should you panic? \n We said 50 days, and 50 days is a real short time-frame. \n No you should not panic. Though you should take this seriously. Even if you are already on a GDPR journey, it will not end in 50 days. And if you are not, there are simple steps you can take to limit your exposure and liability. The EU regulators are not mad. Each country\u2019s regulatory agency is not going to crack down on all websites on the 26th of May. Don\u2019t expect black helicopters. This is a positive thing. More on that later. \n What does the GDPR mean for businesses? \n EU Data Protection Regulation (GDPR)   replaces the Data Protection Directive 95/46 EC and it is coming into force on May 25th 2018. The aim of the GDPR is to protect EU citizens from privacy and data breaches. \n The GDPR brings significant changes: \n \n\t Territorial scope has increased : The GDPR now applies to all companies and organizations processing the personal data of people residing in the Union, regardless of the company\u2019s location \n\t Fines are significantly higher : \u20ac10,000,000 or, in case of an undertaking, 2% total worldwide annual turnover in the preceding financial year (whichever is greater) or \u20ac20,000,000 or, in case of an undertaking, 4% total worldwide annual turnover in the preceding financial year (whichever is higher) \n\t Conditions for consent have been expanded , as well as people\u2019s rights (right to access, right to be forgotten) \n\t Privacy by design and by default   became an important\u00a0 part of Regulation, as well as the appointment of a Data protection Officer (see   Article 37 ) \n \n We know, the terminology can be bewildering. \u201cUndertaking\u201d here means   parent companies and subsidiaries. So not just the company operating a service but whatever the EU will consider to be the \u201cglobal entity\u201d. Hiding behind a Double Irish Sandwich with Dutch dressing \u2013 meaning creating a complex corporate structure to avoid taxes and liabilities like many large companies do \u2013 will no longer work. \n Defining and Processing Personal Data \n Before we discuss the various steps, it is important to understand what private data is, how you process and store it, for how long you need to retain it, and for what purposes. \n The Regulation defines Personal Data as follows: \n \u201c Any information relating to an identified or identifiable natural person (\u2018data subject\u2019) as a name, an identification number, location data, an online identifier or to one or more factors specific to the physical, physiological, genetic, mental, economic, cultural or social identity of that natural person.\u201d \n GDPR also refers to special categories of data such as: \n \n\t racial or ethnic origin \n\t political opinions \n\t religious or philosophical beliefs \n\t trade union membership \n\t genetic data \n\t biometric data for the purpose of uniquely identifying a natural person \n\t data concerning health \n\t data concerning a natural person's sex life or sexual orientation \n \n The Regulation sees protecting personal data as a fundamental right and therefore sensitive types of data like the above should not be processed except under special conditions ( Article 9 GDPR .) There is a paradigm shift where personal data is owned by the individual and the key objectives of the Regulation, as   Troy Hunt   said, it is to give citizens and residents back control of their personal data. \n The EU doesn\u2019t give companies a lot of wriggle room here. If a piece of information gives you a handle on a specific individual, this is \u201csubject data\u201d; an IP, a browser fingerprint, a photo. There is a lot of legalese but the GDPR is written so it covers future technologies, so don\u2019t think that there is a \u201cclosed list\u201d of items under the GDPR. If it is data that allows you to identify someone or that pertains to a potentially identifiable person, it is in scope. \n Now that we have defined personal data, we will now discuss how GDPR impacts how you process, retain, and store data, i.e. its territorial and material scope. \n The  material scope   of the GDPR applies to all personal data \u201cthat are processed wholly or partly by automated means and data which form part of a filing system or are intended to form part of a filing system.\u201d \n Out of the material scope are personal data: \n \n\t used in the course of an activity which falls outside the scope of EU law \n\t used in border checks, asylum, and immigration status \n\t used by a person for non-commercial and/or non-professional purposes \n\t used by authorities for the purposes of crime prevention, investigation, etc. \n \n The territorial scope of the Regulation applies to all companies who process personal data of people who are in the EU regardless of their citizenship and where the processing takes place. Companies and organizations who are not in EU must still comply to the GDPR if they handle personal data as part of business transactions for goods/services in the EU or if they monitor the behavior of individuals within the EU. \n The GDPR gives EU residents (and by extension a big chunk of the world\u2019s population) new rights and it will take some time until the dust settles, the courts have not ruled on a single case. It may very possibly be a gamechanger for anyone having any digital presence (and who doesn\u2019t?). So you both want, now, to be sure you are reducing your short-term risks and know what your exposure will be in 50 days... but also you will want to start integrating this to your longer term plans. This is an opportunity. \n By our own culture Platform.sh was always privacy-minded. Part of our mission and our ambition is to level the playing field between actors such as Amazon, Facebook or Google and, well, anyone that is not Amazon, Facebook and Google. In a world where these are potentially competitors to just about anyone doing anything, from grocery stores to film studios, from charities to newspapers, being privacy-first can be a huge advantage. \n Preparing for the GDPR can seem complicated when you don\u2019t know where to start, which is why we created this guide. Check back for our next segment where we will talk about the different roles and responsibilities for people affected by the GDPR. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Focus on your status messages ", "url": "https://platform.sh/blog/focus-on-your-status-messages/", "documentId": "782012e4828f9dcfffd9ab74b5973ce32ad70f50", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Focus on your status messages \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         24 Apr 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We've offered customers the ability to subscribe to updates and notices about our service for a long time, using  https://status.platform.sh/ . That's great if you want to know when we have maintenance planned but as we've grown and added new regions to our network network it's become apparent that not all customers want to know what's happening on every part of our network. (Who knew?) \n For that reason we've now added support for separate notification channels on our status service. When creating a new subscription or editing your existing one you should see a screen something like this: \n \n That will let you select just the regions and message types you care about. \u00a0That way, you can safely ignore maintenance windows in the Netherlands you don't care about for your Australian site. \u00a0(Of course, if you really do care what's happening to servers on the other side of the world that's fine by us. We don't judge.) \n If you aren't already subscribed to get status notifications this is a good time to do it. \u00a0And while you're at it, make sure you have  health notifications  setup for your specific project, too. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Five reasons why Platform.sh is the PaaS you need for Drupal 8 ", "url": "https://platform.sh/2015/07/16/five-platform-sh-the-paas-for-drupal-8/", "documentId": "5e0c6b97ddcbb984e67457802dc04b54c8acd746", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Five reasons why Platform.sh is the PaaS you need for Drupal 8 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         16 Jul 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         If you are thinking about building something on Drupal 8, or maybe you saw the the recent television\u00a0 interview with our CEO Frederic Plais on France\u2019s BFM Business channel , then here is what some of the hype is all about. \n \n 1. Drupal 8 is coming, and Platform.sh has been ready since 2014 \n While other PaaS providers are playing catch-up, we\u2019ve been running Drupal 8\u00a0 successfully \u00a0since last year, providing\u00a0 Drush 7 \u00a0support and a\u00a0 Symfony-based CLI \u00a0for local development. Platform.sh is also multi-technology, so that Drupalists looking to \u201cget off the island\u201d can easily run Drupal and Symfony and very soon Drupal and Node.js side-by-side. \n 2. Leading Swiss publisher Suedostschweiz.ch is using Platform.sh and Drupal 8 in production, others are already in the pipeline \n Since going live in June,\u00a0 Suedostschweiz.ch \u00a0has been providing Switzerland with cutting-edge news, radio and TV in the form of a specially developed Drupal 8 portal. Since its launch, the site has taken over 12m hits in a 7 day period, making it one of the largest Drupal 8 sites in the world right now. \n And that\u2019s just the beginning. We have several other Drupal 8 sites that are currently in development and we\u2019re working with our partners to deliver many more. \n Click here for more on the S\u00fcdostschweiz project \n 3. Platform.sh and Fastly (CDN) unleash Drupal 8 tagged caching \n News portals and other sites with frequent content updates have been subject to at least one serious constraint up to now; careful scheduling of content updates that requires the entire global cache to be invalidated and re-built. The downside being massive spikes as every request is passed through to your backend webservers. That\u2019s now a thing of the past, as Platform.sh can selectively invalidate both the reverse proxy, and via our own specially developed API, the CDN itself. This is one of the reasons Suedostschweiz.ch selected Platform.sh for its new hosting PaaS. \n 4. The Drupal Association (DA) is using Platform.sh for Drupal 8 (D8) Usability Testing \n The Drupal 8 Usability Testing that was recently conducted in Minneapolis made great use of Platform.sh. This phase of Drupal 8 development is crucial to the success of the new CMS, and benefited greatly from Platform.sh\u2019s unique ability to spin up multiple identical environments - on-demand and within seconds - for testing against many hundreds of different variables. Many of Drupal\u2019s leading lights are clearly recognising the value of Platform.sh to their landmark projects. \n Click here to find out more on the D8 usability testing \n 5. Platform.sh Enterprise offers a Drupal 8-ready, triple-redundant architecture that is secure, resilient and effortlessly scalable. \n 24/7 white glove support and comprehensive documentation round out the offer. With highly credible financial backers (including the recent grant from the European Union\u2019s Horizon 2020 program see\u00a0 https://platform.sh/2015/06/european-horizon-2020-grant/ \u00a0), we are accelerating our roadmap with a wealth of features that will boost the benefits of Drupal 8 and everything that goes with it. \n Interested? Then get in touch at\u00a0 https://platform.sh/contact/ \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Your Guide to GDPR Compliance: Roles and Responsibilities ", "url": "https://platform.sh/blog/your-guide-to-gdpr-compliance-roles-and-responsibilities/", "documentId": "06bbaa1971f840b597a758677168137cab938a84", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Your Guide to GDPR Compliance: Roles and Responsibilities \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ivana Kotur \n                  \n                   Compliance Coordinator \n                  \n                  \n                 \n            \n          \n         \n         09 Apr 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         In our  introductory GDPR blog post , we introduced the different definitions of personal data and how organizations can handle, process, and store it. In this blog post, we will talk about the roles and responsibilities of people who are affected by GDPR, so let\u2019s quickly explain what these are. \u00a0 \n Am I a controller am I a processor? What are these terms? And who is a \u201cdata subject\u201d? \n For any kind of service provider or entity that has a computer, somewhere, these three roles are probably going to apply to you in one way or another. If your computer has a list of people (your clients, your employees) or something that might identify people e.g. a log that contains IP addresses, a list of phone numbers), well, these entities apply.\u00a0 \n Out of the three types of entities that come into play, the simplest is data subject. That is the person who is identifiable in a list (whether it is the complete personal details such as first name, last name etc. or just an identifiable number like your mobile phone.)\u00a0 \n Controller and processor are the more complicated bits. If it is only your computer that has this list of personal data and it never leaves your sight, well, you are both. You control the data and you process it. But often enough we use third-party services to manage parts or the whole system that contains PII (personally identifiable information, another cool term). If this system is established on your behalf (i.e. the list of your employees, your clients), congratulations, you are a controller. The other party, the service provider is the processor. They process data for you. As often happens, they, in turn, may use some other company\u2019s services (like a hosting provider), these are \u201csub-processors\u201d. \n The data subject is the one that received new rights and new protections. Controllers of data and processors of data just received some new obligations they need to comply with. The GDPR draws clear lines to what are the rules that apply to each role.\u00a0 \n But as you may have understood already\u2026 you are often going to be all three. You are the controller of some data, very possibly a processor of some and always, you and your employees are \u201cdata subjects\u201d as well as your clients, prospects and, well anyone you have data about in a computer system. \n A recap: \n Data  subject  is a natural person (any living human) in an EU member state. From now on they must give explicit permission for the use of their personal data.\u00a0 \n Data controller  collects and determines the purposes and means of the processing of personal data. This is the entity for the benefit of which the data is being collected, treated, used. \n Data processor  processes personal data on behalf of the controller. This is a service provider (a SaaS application, a hosting company, well, anyone that gives a service that is used it that collection, treatment and use). \n Supervisory authority  is an independent public authority, which is established by a Member State and it is responsible for enforcement of the GDPR. These are important: the GDPR applies all over the EU, but the specifics may very well vary somewhat between the different countries. \n Let\u2019s look at three examples: \n Example 1: A US fashion retailer collects personal data from new and existing customers in Europe from its website and sees a drop in customer loyalty in Spain. In order to improve customer satisfaction and loyalty, the retailer outsources its data processing to a Spanish market research agency for all the data collected by the retailer. The agency then analyzes the data and provides insights and business recommendations to the retailer. \n The fashion retailer is the data controller and the market research agency is the data processor. As both parties collect and process the data of individuals based in a European member state, they must comply with GDPR. These customers now have new rights and if the fashion retailer or the market research agency don\u2019t comply (we will discuss this in our upcoming blog post) the customers will be able to lodge a complaint, which can result in hefty fines. \n Example 2: A theater company in Berlin, Germany collects data from its newsletter subscribers via its website. The website is hosted with a local cloud hosting provider, including all the data from the company\u2019s subscriptions. When a person wants to unsubscribe from the newsletter, the cloud hosting provider is instructed by the theater company to delete the data within 30 days.\u00a0 \n The theater company is the data controller and the cloud hosting provider is the processor. Both parties are in Germany, which is a European member state, and therefore must comply to GDPR. \n Example 3: I have a contacts list on my personal phone, with photos, dates of birth, and I have messages that are very private with many of them\u2026. Scot free.\u00a0 \n The GDPR does not regulate your private affairs, it is here to protect you not police you. The question is always what is the scope and purpose of data collection and use. This applies to companies, legal entities, not individuals. Therefore this is an example where collecting and processing data is out of material scope. \n The job of preparing for the GDPR is to first understand your role in the different business activities you have (from internal HR to marketing) in regards to the other entities and service providers you work with. Map out these relationships, including vendors, first. Once you do that you need to understand how the data flow works and who has what responsibilities, in which circumstance. And lastly, you will need to go over the chain and make sure everything is aligned. If you are a \u201ccontroller\u201d on a specific subject, are the \u201cprocessors\u201d, which you are using, ready? Do you have the contracts with them that cover you? Can you pass the buck along? \n Whatever role your company is, data controller or processor, every company should undertake these responsibilities: \n \n\t Put GDPR compliance efforts in place  \u2014 Yes! Putting in the effort, by itself, already advances you on the path to compliance. Not doing anything, even if you believe you are not affected by the GDPR for some reason, creates a large business risk for you. In addition, you will miss out on an opportunity to actively engage your customers to promote your privacy and security features \n\t\u00a0 \n\t Appoint a Data Protection Officer . The DPO has to have a large degree of independence, direct access to the highest management, as he/she will:\u00a0\n\t \n\t\t inform and advise the controller or the processor; \n\t\t monitor GDPR compliance, including the assignment of responsibilities, awareness-raising, and training of staff involved in processing operations, and the related audits; \n\t\t provide advice and monitor performance of a data protection impact assessment;\u00a0 \n\t\t cooperate with the supervisory authority and be responsible for the entire relationship between supervisory authority and controller/processor; \n\t\t act as the contact point for the supervisory authority. \n\t\t\u00a0 \n\t \n\t \n\t The DPO should  deliver regular reports to management  on the state of compliance \n\t\u00a0 \n\t Top management should provide personnel, financing, and information systems resources which will  demonstrate  commitment  to the GDPR  compliance project \n \n That\u2019s it for now. In our next post we will talk about  six principles for the processing of personal data . \n\u00a0 \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "What will you do after you deploy? ", "url": "https://platform.sh/blog/what-will-you-do-after-you-deploy/", "documentId": "ab1572ef03376c8f74fa155828ea7c7e29400145", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           What will you do after you deploy? \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         17 Apr 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         A key part of Platform.sh\u2019s benefit comes from its integrated build and deploy hooks.  Deploying a new version of your site or application rarely means simply dumping what\u2019s in Git onto a server anymore.  Platform.sh was built from the ground up to let you execute whatever commands you need to \u201cbuild\u201d your application \u2014 turning what\u2019s in Git into what\u2019s actually on the server \u2014 and then to \u201cdeploy\u201d the application \u2014 cleanup tasks like database migrations that should be run before the site is opened to visitors again. \n There\u2019s a caveat there, however.  Some deploy tasks need to block the site from new visitors until they complete; think updating the database schema, for instance.  Others may not really need exclusive access to the site, but they still get it.  That keeps the site unresponsive for critical seconds until those tasks complete. \n So, let\u2019s fix that.  We\u2019ve now added a third hook,  post_deploy .  It works pretty much as you\u2019d expect.  You can do all the same things in it that you can do with a  deploy  hook, but it runs after the site is reopened to the world to accept new requests.  Any tasks that don\u2019t need exclusive access to the database can be moved there, keeping the site up and responsive as much as possible while allowing for more robust and flexible automated tasks. \n For example, the following configuration would run any pending database updates as part of the  deploy  hook but then import new content in the  post_deploy  hook.  The new content will become available as soon as possible but the site will still be up and running while it\u2019s being updated.  Once the import is done we\u2019ll also clear the cache a second time to ensure the new content is visible to the next request. \n hooks:\n    deploy: |\n        set -e\n        update_db.php\n        clear_cache.php\n    post_deploy: |\n        set -e\n        migrate_content.php import/\n        clear_cache.php\n What\u2019s \u201csafe\u201d to move to the  post_deploy  hook?  That\u2019s up to you.  What does or does not need an exclusive database lock will vary by site.  Sometimes a cache clear is safe to do post-open, other times not.  You get to make that determination for your application. \n See the  hook documentation  for more information, and enjoy faster deploy tasks. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Your Guide to GDPR Compliance: The Six Principles of Processing Personal Data ", "url": "https://platform.sh/blog/your-guide-to-gdpr-compliance-the-six-principles-of-processing-personal-data/", "documentId": "375347aaf67ea931bf38f1033f91dca8d9fe99be", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Your Guide to GDPR Compliance: The Six Principles of Processing Personal Data \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ivana Kotur \n                  \n                   Compliance Coordinator \n                  \n                  \n                 \n            \n          \n         \n         20 Apr 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         After our   introduction to GDPR   and our first post on   roles and responsibilities , our 2nd blog post will discuss the importance of the six principles of processing data. These principles are the core of the Regulation and you need to keep them in mind during your entire compliance journey. \n Infringements of the six principles carry the maximum penalty up to 20 000 000 EUR, or in the case of an undertaking, up to 4 % of the total worldwide annual turnover of the preceding financial year, whichever is higher ( Article 83. ) These numbers are huge! So it\u2019s worth reading this blog post carefully in its entirety. ;) \n The six data protection principles are: \n \n\t Lawfulness, fairness and transparency \n\t Purpose limitation \n\t Data minimization \n\t Accuracy \n\t Storage limitation \n\t Integrity and confidentiality \n \n \u00a0 \n Let\u2019s go through each of them. \n \u00a0 \n 1. Lawfulness, fairness, and transparency \n Fairness and transparency mean the following: \n \n\t The data subject (a person whom you have data) must know how their data will be processed \n \n \n\t The controller   (the entity for which the data is stored or processed, the service provider) should provide the data subject with any further information regarding the specific circumstances and context in which the personal data are processed \n \n \n\t The data subject should be informed of the existence of profiling and the consequences of such profiling (the \u2018why\u2019 and the \u2018what for\u2019) \n \n \n\t Companies should use privacy notices and terms and conditions \n \n \u00a0 \n For processing to be lawful according to the GDPR   Article 6   at least one of the following conditions needs to be met: \n \n\t The data subject gave their consent \n \n \n\t There\u2019s a contractual obligation to which the data subject is party \n \n \n\t There\u2019s a legal obligation to which the controller is subject \n \n \n\t To protect the vital interests of the data subject or of another natural person \n \n \n\t To perform a task that\u2019s in the public interest or in the exercise of official authority vested in the controller \n \n \n\t There are legitimate interests pursued by the controller or by a third party \n \n \u00a0 \n But note that the last condition is not absolute. It can be overruled by the interests or fundamental rights and freedoms of the data subject, especially if the data subject is a child. \n One important point, mentioned in the   EU GDPR Implementation Guide , is that   if there is no lawful basis, then by definition the processing data will be illegal . \n According to   Bird & Bird guide to GDPR , to demonstrate lawfulness of processing you should do the following: \n \n\t Ensure you are clear about the grounds for lawful processing used by your organization and check that these grounds will still be applicable under the GDPR \n \n \n\t Ensure the quality of consent meets new requirements \n \n \n\t Consider whether new rules on children\u2019s data are likely to affect you, and, if so, which national rules you will need to follow \n \n \n\t Ensure that your internal governance processes will enable you to demonstrate how decisions to use data for further processing purposes have been reached and that relevant factors have been considered \n \n \u00a0 \n We cannot talk about lawfulness without mentioning people\u2019s consent. Let\u2019s see what consent is and which conditions you should meet so that consent is lawful. \n \n Consent means any freely given,   specific , informed and unambiguous indication of the data   subject's wishes by which he or she, by a statement or by a clear affirmative action, signifies agreement to the processing of personal data relating to him or her. \n \n Keep in mind that   silence, pre-ticked boxes or inactivity cannot demonstrate consent.   You can\u2019t just dance your way around this. The fine print won\u2019t do. \n Here\u2019s some pointers to bear in mind when asking for consent: \n \n\t The controller must be able to demonstrate that the consent has been given.   This is really important, because you might need to profoundly change some of your systems: you need to track consent. When was it given? In what context? Remember opt-out simply no longer works. \n \n \n\t The   request for consent must be presented in an intelligible and easily accessible form , using clear and plain language. \n \n \n\t If processing is carried out for multiple purposes, consent must be given for each of them. \n \n \n\t The   data subject should have the right to withdraw consent at any time   (but withdrawal cannot affect the lawfulness of processing based on consent before its withdrawal.) \n \n \n\t The   consent must be as easy to withdraw as it was given . And this too needs to be tracked. \n \n \u00a0 \n Consent should not be regarded as freely given if the data subject has no genuine or free choice or is unable to refuse or withdraw consent without detriment.   Recital 42. GDPR . \n Children are less aware of risk and consequences hence specific protection will be applied to processing their data. \n \n\t For consent to be lawful children need to be at least 16 years old \n \n \n\t Below the age of 16 years parental authorization is required \n \n \n\t Member states can reduce the child\u2019s age but not below 13 years \n \n \n\t The Controller shall make reasonable efforts to verify parental authorization \n \n \n\t These rules shall not affect the general contract law of Member States \n \n \u00a0 \n As we have already mentioned in our   first blog post , there are special categories of data for which processing is not allowed under GDPR. There are, of course, exceptions if the data subject has given explicit consent, or processing is necessary to protect the vital interest of the data subject or to use for or defend legal claims, public health, and scientific or historical research purposes. A third reason is if the data subject made it public herself. It is important to emphasize, however, that the first rule of processing this data is that the data subject gives   explicit   consent. This consent must be very clearly documented and that the procedures are very well stated. \n 2. Purpose limitation \n According to the second principle, data should only be collected for specified, explicit, and legitimate purposes. Further processing for archiving purposes in the public interest, scientific, or historical research purposes or statistical purposes will not be considered to be incompatible with the initial purposes. \n In short, the data subject must have clear information for what the data will be used for and you must limit the processing to only what is necessary. \n 3. Data minimization \n Data minimization means that the data you collect and process must be adequate, relevant, and limited to what is necessary in relation to the purposes for which they are processed. \n This means: \n \n\t Don\u2019t hold any more data than it is required \n \n \n\t Don\u2019t collect additional data if you don\u2019t need it for processing \n \n \n\t Be sure that you know how the data is used in order to ensure data minimization \n \n 4. Accuracy \n Personal data should be accurate and, where necessary, kept up to date. Make sure to verify that the data you collect is accurate and include steps to identify out of date data and send requests to the data subject to provide accurate information. \n A person\u2019s right to rectification as cited in   Article 16 of the GDPR   is closely associated with this principle. It says that a data subject has the right to correct any inaccurate data concerning him or her and to have incomplete personal data completed. \n 5. Storage limitation \n Personal data should be kept only for as long as necessary. However, it could be possible to store data for longer periods if it will be processed solely for archiving purposes in the public interest, scientific or historical research purposes, or statistical purposes. \n All in all, if you do not need the data anymore, destroy it. And this again, is hard. This is a domain in which you might need to carefully review what you are doing. Things like backups make this difficult. You are going to need to have a very strict retention policy. Your approach to storage limitation should be a part of data retention policy, along with maximum and minimum retention periods. Do not hold out-of-date information unless there is a lawful basis for processing the data - deal with it. \n 6. Integrity and confidentiality \n The last principle requires data to be processed in a manner that ensures appropriate security, including protection against unauthorized or unlawful processing and against accidental loss, destruction or damage, using appropriate technical or organizational measures. \n The security part is easy to understand, but you might wonder about the rationality of integrity. Why would the regulator care? The reason is simple. Under this framework the basic assumption is that companies are going to store data on you, so you have a personal interest that this data is accurate (as noted above) and available. \n And as for the security part, this is extremely important because violation of this principle can result in data breaches and these might bring the heaviest penalties. \n Confidentiality means that data should be available only to a restricted few in the organization, not everyone. \n At any rate you should perform a   Data Protection Impact Assessment   to identify the risks to personal data. This is as simple as mapping all the places you have personal data in and asking yourself the questions: If someone was to gain access to this (read or write access) what is the outcome?  How bad is this?  Would they risk being spammed? (bad)  Would they risk their identity stolen (much worse)? \n This is paramount and if you can\u2019t do everything, we suggest that you take a look at carrying out the assessment as a minimum. This is one action you should not skip. \n Another recommendation by the   EU GDPR Implementation Guide   is to implement an information security solution, which will help you protect the confidentiality, integrity, and availability of your organization\u2019s information assets. Be sure you have all physical and technical security in place. There is no \u201cOne True Guide\u201d for this. You are expected to apply security measures based on your impact analysis. So if a database leak could be \u201cbad, real bad\u201d then you have to put in security measures that would mitigate that scenario. For example, combining pseudonymization and encryption are good tools for that, but often this requires a lot of thought and planning, so don\u2019t take this lightly. \n It should be clear now how important these principles are. All levels within the organization have to be dedicated in protecting the information and to feel a sense of responsibility. Training and staff awareness programs are great ways to ensure this. \n We will go into further details in the following articles on how you can go about prioritizing what you need to do. The main message here is that this whole regulation flows from some simple principles. You need to understand those principles and implement your responses accordingly - not only in light of what checkboxes you need to tick as some consultants may tell you. Respecting the spirit of the law here may bring you much better closer to compliance than mechanically implementing this or that security mechanism. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Documentation version 3.0 released ", "url": "https://platform.sh/2015/07/release-docs-3-0/", "documentId": "edf98d90177770df7cab10713706320afcba82aa", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Documentation version 3.0 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         25 Jul 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, we are proud to announce version\u00a0 3.0 of the Platform.sh documentation . \n In this release, we have split the documentation into multiple guides: \n \n\t Overview : gives a general idea on the concepts of Platform.sh and a glimpse of what you can do with the Web Interface and the command Line Interface. \n\t User Guide : everything you need to know to properly work with Platform.sh. \n\t Get started with Drupal : start from scratch and build your Drupal site on Platform.sh. \n\t Migrate an existing Drupal site : migrate your existing Drupal site to Platform.sh. \n\t \n\t Get started with Symfony : start from scratch and build your Symfony site on Platform.sh. \n \n Our goal is to provide many more guides for any use case you might need to work with Platform.sh. \n Homepage \n \n One really noticeable change is the homepage where you can directly access any guide or section that you want. \n Contribute \n It\u2019s easy to contribute to the Platform.sh documentation, and we\u2019ll be thrilled if you do. \n If you\u2019re on a page that you want to improve or contribute to, simply click on the GitHub icon on the top of the page, and it\u2019ll redirect you to the GitHub page. \n \n From there, you can make your changes and open a Pull Request which will be reviewed and merged by our team. Every Pull Request is automatically deployed on a Platform.sh environment so you can check your changes live. \n Known issue \n Our current documentation doesn\u2019t provide a search across multiple guides. We\u2019re working on a proper solution for this. So stay tuned! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "The correct way to work with Drupal distributions ", "url": "https://platform.sh/2015/07/28/work-with-distribution/", "documentId": "1e910bee9ab70d1dfe6c614dd6d3ec35c7cd3c86", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The correct way to work with Drupal distributions \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         28 Jul 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Have you ever wondered how you can easily build your Drupal site on top of a distribution? And how to keep it up to date? And how to keep your Git repository clean and containing only your custom code? And how to reuse this distribution on other sites? \n If so, you are not alone. There are many agencies and developers who would greatly benefit from having a simple and easy way to work with distributions when building their Drupal sites. \n Since that\u00a0 Platform.sh natively supports Drush Make files and building distributions , you can push a single file which lists all the dependencies for your site, and Platform.sh will download them automatically when you push your changes. \n \n Example with Commerce Kickstart \n Let\u2019s say you want to build your site on top of\u00a0 Commerce Kickstart \u00a0which is a Drupal distribution based on\u00a0 Drupal Commerce . \n Instead of downloading and extracting the whole Commerce Kickstart distribution in your Git repository, you can simply add it to your\u00a0  project.make  \u00a0file and define its type as:\u00a0  profile  . This will produce a Drupal site with\u00a0  commerce_kickstart  \u00a0inside\u00a0  profiles/commerce_kickstart  . \n Then you can add any contributed modules, themes, libraries\u2026 to this make file, and even override the ones included in the distribution (to specify a new version, apply patches\u2026). \n Finally you simply add your custom code to your Git repository. \n Your Git repository should look something like this: \n \n .git/\n.platform/\n.platform.app.yaml\nlibraries/\nmodules/\nproject.make\nthemes/\n \n \n And your\u00a0  project.make  : \n \n api = 2\ncore = 7.x\nprojects[drupal][type] = core\nprojects[commerce_kickstart][type] = profile\nprojects[commerce_kickstart][download][type] = git\nprojects[commerce_kickstart][download][url] = \"https://github.com/commerceguys/commerce_kickstart.git\"\nprojects[commerce_kickstart][download][branch] = \"7.x-2.x\"\nprojects[commerce_kickstart][download][revision] = \"94ec50f15cce56b45978eb444206244db1177c86\"\n; Example of a module override: Downgrade CTools from 1.7 (included in Kickstart) to 1.6\nprojects[ctools][version] = 1.6\n \n \n Now, everytime you want to upgrade or apply a patch to the Commerce Kickstart distribution, or any contributed project, you simply need to change 1 line in your\u00a0  project.make  \u00a0file and push again. \n Example with a private distribution \n If you maintain your own distribution in a private Git repository and want to use it for your project, do it the same way. \n In that case, make sure you have added the SSH key provided by Platform.sh so that it can pull from your private repository. \n Building locally \n When working locally, you can still use the\u00a0 Platform.sh CLI \u00a0to build your site the same way as Platform.sh would do when pushing via Git: \n \n platform build\n \n \n Or simply use Drush: \n \n mkdir -p web\ndrush make project.make web -y --concurrency=4\n \n \n That\u2019s it! Feel free to comment if you have any questions. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Creating flamegraphs with XHProf ", "url": "https://platform.sh/2015/07/29/flamegraphs/", "documentId": "17d7b5421b8e2bf6b16fe9cec2703acd31d831aa", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Creating flamegraphs with XHProf \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christian Sieber \n                  \n                   Director Accounts &amp; User tools \n                  \n                  \n                 \n            \n          \n         \n         29 Jul 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         One of the most frequent needs a web application has is a way to diagnose and evaluate performance problems. Because Platform.sh already generates a matching new environment for each Git branch, diagnosing performance problems for new and existing code has become easier than ever to do without impacting the behavior of a production site. This post will demonstrate how to use a Platform.sh environment along with the XHProf PHP extension to do performance profiling of a Drupal application and create flamegraph images that allow for easy evaluation of performance hotspots. Special thanks to\u00a0 YesCT \u00a0and\u00a0 msonnabaum \u00a0for their work in putting this tooling and\u00a0 this blog post \u00a0together describing this process. \n This post assumes that the reader has created a new Git branch (and corresponding Platform.sh environment) or wishes to use an existing one to perform this work. Please see\u00a0 the documentation page \u00a0for details on this process. \n \n The first thing we need to do is make sure that the XHProf extension is enabled on our Platform.sh project. We do this by adding a key to the extensions list in our\u00a0  .platform.app.yaml  \u00a0file, like so: \n \n runtime:\nextensions:\n- name: redis\n- name: xhprof\n \n \n This will enable the extension for us automatically. Now we add some lines to our deploy hooks to ensure that our tools are present. (We\u2019ll be using the Platform application\u2019s temp directory, and while this is persistent across deployments of the same environment, we want our code to be mergeable and keep the tools around. Let\u2019s add this to the deploy hooks section of\u00a0  .platform.app.yaml  : \n \n hooks:\ndeploy: |\ncd /app/tmp\n[ -d xhprof ] || mkdir xhprof\n[ -d fg ] || git clone https://github.com/brendangregg/FlameGraph.git fg\n[ -d xhpfg ] || git clone https://github.com/msonnabaum/xhprof-flamegraphs.git xhpfg\n \n \n Next, we need to tell our codebase to actually use XHProf during page requests. We\u2019ll do this by adding some code to the front of Drupal\u2019s\u00a0  index.php  \u00a0file. There are two ways of doing this: In vanilla mode (i.e. with the entire Drupal site committed to the Git repository) we simply edit the index.php file. If we\u2019re using project mode, we add the below patch to our repository and add a line to our\u00a0  project.make  \u00a0file to allow us to patch Drupal during the build process. \n This is the patch for\u00a0  index.php  : \n \n diff --git a/index.php b/index.php\nindex 8b83199..021ba09 100644\n--- a/index.php\n+++ b/index.php\n@@ -11,6 +11,15 @@\n* See COPYRIGHT.txt and LICENSE.txt.\n*/\n+// Enable XHProf profile collection:\n+xhprof_sample_enable();\n+register_shutdown_function(function () {\n+  $url_parts = implode(\"_\", arg());\n+  $filename = '/app/tmp/xhprof/' . $url_parts . '.' . uniqid() . '.sample_xhprof';\n+  file_put_contents($filename, serialize(xhprof_sample_disable()));\n+  chmod($filename, 0777);\n+});\n+\n/**\n* Root directory of Drupal installation.\n*/\n \n \n And we add this line to our makefile in project mode: \n \n projects[drupal][patch][] = \"patches/drupal-enable-profiling.patch\"\n \n \n With this additional code committed, we\u2019re ready to push to Platform.sh and have our new environment built. Once that\u2019s done, now the fun begins! We need to SSH to our Platform.sh environment (using the CLI this is achieved with\u00a0  platform ssh  ) and we\u2019ll end up in our home directory, which is\u00a0  /app  . Our codebase lives in\u00a0  /app/public  , but we set up our deploy hooks to use the application\u2019s temporary directory for our tools and results. Our temp directory should look something like this: \n \n web@ns6k2cp43m25z-xhprof-test--php:~$ cd /app/tmp\nweb@ns6k2cp43m25z-xhprof-test--php:~/tmp$ ls -lha\ntotal 24K\ndrwxr-xr-x 7 web web 4.0K Jul 29 14:15 .\ndrwxr-xr-x 8 web web  139 Jul 28 16:39 ..\n-r--r--r-- 1 web web  491 Jun 14 02:04 .htaccess\ndrwxr-xr-x 6 web web 4.0K Jul 28 15:33 fg\ndrwxr-xr-x 2 web web 4.0K Jul 28 17:49 xhprof\ndrwxr-xr-x 3 web web 4.0K Jul 28 15:33 xhpfg\n \n \n This sets up the directory our profiling patch is expecting to store files in, and grabs the tools we\u2019ll need to turn those profiles into a flamegraph. Now it\u2019s time to test! Using the Platform.sh environment\u2019s URL, we load whatever page we\u2019re interested in profiling. (Usually its a good idea to load this page several times so that we can collect a decent set of statistics to build our flamegraph on.) Once we\u2019ve done that, we\u2019ll have a pile of profile result files in our\u00a0  /app/tmp/xhprof  \u00a0directory, like so: \n \n web@ns6k2cp43m25z-xhprof-test--php:~$ ls -lha tmp/xhprof/\ntotal 284K\ndrwxr-xr-x 2 web web 4.0K Jul 28 16:45 .\ndrwxr-xr-x 7 web web 4.0K Jul 28 15:49 ..\n-rwxrwxrwx 1 web web  12K Jul 28 16:44 node.55b7b17f3c9fb.sample_xhprof\n-rwxrwxrwx 1 web web  23K Jul 28 16:45 node.55b7b19d948cd.sample_xhprof\n-rwxrwxrwx 1 web web  16K Jul 28 16:45 node.55b7b1a690f65.sample_xhprof\n-rwxrwxrwx 1 web web  96K Jul 28 16:44 user_1_orders.55b7b16f39561.sample_xhprof\n-rwxrwxrwx 1 web web  56K Jul 28 16:44 user_1_orders.55b7b17cb2462.sample_xhprof\n-rwxrwxrwx 1 web web  25K Jul 28 16:45 user_1_orders.55b7b1996f888.sample_xhprof\n-rwxrwxrwx 1 web web  30K Jul 28 16:45 user_1_orders.55b7b1a351e10.sample_xhprof\n \n \n Notice that our patch names the result files based on the requested path, which makes it easy to grab just the ones we need. In this case, we\u2019re interested in the performance of a user\u2019s order page, and so we\u2019ll use those results. We create a separate folder for the results and move only those files into it: \n \n cd /app/tmp\nmkdir xhprof_user_1_orders\nmv xhprof/user_1_orders.* xhprof_user_1_orders/\n \n \n Now we should have just those results files available in our second folder. To create a flamegraph, we use the flamegraph tools (the Perl locale errors can be safely ignored) which we downloaded using a deploy hook: \n \n /app/tmp/xhpfg/xhprof-sample-to-flamegraph-stacks /app/tmp/xhprof_user_1_orders \\\n| /app/tmp/fg/flamegraph.pl > /app/tmp/flamegraph.user_1_orders.svg\ncp /app/tmp/flamegraph.user_1_orders.svg /app/public/sites/default/files/flamegraph.user_1_orders.svg\n \n \n Ta-da! Now our SVG is viewable in our Drupal files directory from our Platform.sh environment. We can load it up in a web browser and examine performance, using the flamegraph to identify functions which are consuming more time during the page request than we expect. An example: \n \n This lets us easily identify pieces of our code which need attention or contain performance-impacting bugs \u2013 we can browse the various components of the graph and peer into the children of each function call, looking for problem areas that need developer attention. (The colors are only used for contrast and don\u2019t mean anything.) The Platform.sh team recently used this method to identify some problem code and wound up achieving a performance boost of roughly 1,200% on our order refresh actions. This is definitely a tool that is worth the effort to set up and use. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Move fast, break less ", "url": "https://platform.sh/2015/08/07/move-fast-without-breaking-things/", "documentId": "57aa655aedeb9c7bdbd73f357440bc281fdd89d5", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Move fast, break less \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         07 Aug 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         One of Facebooks\u2019s mottos is\u00a0 \u201cmove fast and break things\u201d . Being Facebook allows you to have multiple Mottos (remember \u201cWhat would you do if you weren\u2019t afraid?\u201d). And being Facebook allows you to break things without losing all of your clients. But beware of drinking to Kool-aid of \u201cbusiness advice\u201d from companies 1,000,000 times bigger than yours. \n \n It has been said that \u201centerprise is slow not because it is stupid, enterprise is slow because it has paying customers\u201d, Google, Facebook and its likes changed the paradigm because their main product was no longer their product, but their customers. Weirdly enough this is what allows them to continuously break their products (oh the humanity!). \n When you are a small startup, whatever you do your product is going to be your product. And moving fast is your advantage over the established players. Fast is your single advantage. \n As soon as the behemoths (either enterprise players in you target market or Silicon Valley giants suchs as Google) can be persuaded that what ever disruption you bring to that market is worth the while, they can align dozens if not hundreds of engineers, and don\u2019t bet on them being stupid (anyone who bets his business on his competitors being stupid, incompetent or both, well is probably quite stupid and incompetent). \n So moving fast is your best bet; Fast enough to capture a market you can defend when the others start accelerating. Fast enough to be able to raise enough money to keep going fast. But moving fast usually also translates into amassing technical debt. Its hard to have great unit testing coverage, while moving fast, so it does tend to break things, and not in the good way. And small structures have a harder time to negate the effects of technical debt than more \u201cmature\u201d organizations, you can\u2019t \u201cjust put a dozen more people in QA\u201d. Weirdly enough, people have higher standards regarding your service promising disruption of whatever, as compared to your old telco or cable operator. Going fast is not about going Berserk. Its about getting the method and the tooling right so breakage is minimized and manageable. \n Slow down to go fast \n Also remember that this \u201cgo fast and break things\u201d motto goes against some other ideas, that have proven at least as valuable .. and\u00a0 \u201cslow down to go fast\u201d \u00a0is one of them. \n You need to choose well what you are willing to have broken from time to time, and what might make you crush and burn. Some bumps on the road can be fatal if you hit them at full speed (Security !). \n \n The highest speed is 0 \n I love the highway metaphor on this: if you gradually increase the speed limit on the motorway (imagining that there will always be people to drive at the maximum allowed speed) the overall speed will gradually increase, until a tipping point where it will become zero. It will become zero because at a point in time there will systematically be accidents all the time blocking all traffic. \n This is true even if we imagine \u201cdifferent lanes\u201d. At a point in time accidents on the \u201cfast lanes\u201d will be so violent they will impact \u201cslow lanes\u201d too. The optimal speed in which you create and deploy new features should not be \u201cthe fastest you could possibly go\u201d but the fastest you can safely go. And safety here does not mean having no accidents at all, just trying to be sure they are not going to make you crash and burn. That you don\u2019t have a big \u201cget out of business button\u201d somewhere. \n Remember how many people there are at Facebook to handle the bumps. How much procedures they have to handle crisis situations. And also remember the other side of this adage\u00a0 \u201con a stable infrastructure\u201d . \n You need architecture and infrastructure to go fast \n This is where smart software architecture also comes into place. Decoupling to services and identifying those elements that evolve at a much faster pace than the others (because they do not impact security, because they have partial failure modes that permit them to deliver value even when there are problems..). \n This is where services like Platform.sh offer incredible value. Platform.sh allows you to move fast while breaking very little. To churn out new features daily while ensuring not only the global quality of your service .. but also that there is no downtime, remember these days your clients expect you to be always up; Even if your startup is just 3 weeks old (twitter used to be down for hours on end\u2026 and no one would complain\u2026). \n Platform.sh not only gives you a fully managed and automated stack, it allows you to have your own architecture on top of it. Unlike other services you get a PaaS where you can coherently manage your whole infrastructure whether its a monolithic application, or a micro-service oriented architecture. \n And because it also integrates seamlessly with the rest of you tooling, like Bitbucket of Github.. your CI systems, your code review system going for continuous deployment does not mean you are \u201chacking production\u201d. On the contrary what you have is a fully traceable fully auditable infrastructure that can evolve with your needs. \n Not invented here Infrastructure \n Investing now, when your company is so young, in the DevOps staff, in the sysadmins, in the complex machinery that is needed in order to have all the Continuous Integration and Continuous Delivery systems to ensure high availability\u2026 well is not investing in your product. You won\u2019t be moving fast if half your time is spent on generic stuff everyone else is doing. Put money in developers that do features not sysadmins that say \u201cno deployments on Friday afternoon\u201d. \n Friday is a good day for deployments. \n Because Platform.sh gives you an a couple of interesting guarantees, and one is that deployments never fail. When you deploy a new feature instead of modifying things on your existing production cluster, we simply create a brand new one; We can #ze the incoming traffic while all this is happening, so we can insure your data stays in a consistent state (there won\u2019t be any lost transactions). If everything went fine, we will start sending traffic to the newly created cluster and later destroy the previous cluster; If something went sideways, we simply do nothing; This means that there is zero downtime for deployments. \n Continuous Everything is about confidence \n What these features allow for is a true form of continuous development and deployment; The project manager describes a feature. Developers create a code branch for that feature (we automatically create a full clone of production for each branch), when the feature is complete a project manager or QA can now validate the feature is what was wanted. They test it in total isolation. This feature is the only difference with production. They can test it with the real data. So they can be totally confident it is what they wanted. To put it into production a developer simply merges the change with the master environment. He can do so with confidence because deployments never break production. Time to start working on the next feature now; Deploying 20 times a day becomes a normal reality; Not something you need to be a huge Silicon Valley startup with armies of engineers to do. Any user of Platform.sh can do this. This is how you can move fast and not break things. \n How Platform.sh helps you go fast \n With Platform.sh you can do true Scrum style development where you integrate into your \u201cdefinition of done\u201d, \u201cvalidated feature\u201d but also Scrum-Ban or pure Kanban style of continuous delivery. Only developing, testing and deploying features in total isolation allow for this; and currently nothing we know of but Platform.sh supports this. \n Downtime sucks \n Downtime is very often directly linked to broken deployments and poorly tested code. Because we eliminate those we allow you to deploy with confidence. You can iterate fast, react to the market. Test new features. Change. All without downtime. Because downtime sucks. \n Go fast and stay in the race \n Platform.sh kills development-staging-production and replaces it with something much better; A world where fear of change disappears. Where your teams can realize their true potential Platform.sh allows you to be bolder. To move fast, and yet, not break things. \n And the Enterprise offering of Platform.sh is not only a highly available system, it is also a very scalable system, so if moving fast allows you to have early traction, well you know that you won\u2019t be failing by succeeding. We can just make your clusters bigger, dynamically, without downtime, we can add more redundancy, so when customers are there to give you money, you are there to take it. So its not about doing a single sprint. You can go fast and keep going. Like a marathon runner. \n So you can continue on innovating, moving fast. \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Hiring interns, or Come dear great soul, you are called upon, waited for ", "url": "https://platform.sh/2015/08/10/platform-sh-hiring-interns/", "documentId": "6e2ec5c8bf65c92776938ec438c8da65c0f7c319", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Hiring interns, or Come dear great soul, you are called upon, waited for \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         10 Aug 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh, the award-winning Platform-as-a-Service solution from Paris, France, is offering internships to aspiring ambitious cloud engineers. Platform.sh is a second generation PaaS. If you know Heroku, it is something similar, just better. \n Do you want hands-on experience with a state of the art container-based high availability cloud infrastructure? \n \n Does working with Python, Go, Clojure, and so on interest you? Does working with a distributed team of world-class experts in distributed computing sound like an experience you want on your resum\u00e9? Would you like some experience with an infrastructure that uses Zookeeper, Kafka, Riemann, Puppet, Ceph, and a broad assortment of Python libraries? \n We don\u2019t expect you to be an expert, but you should be abreast of current technologies, know and use Linux, use Git, and have an understanding of how networks operate. \n We also expect you to be able to code in multiple programming languages (although you will probably not be contributing code directly to the main core, not just yet, anyway). \n A PaaS is a weird piece of software. In a way, it is the new form of the Operating System. It runs other software. It should be able to run any application (and in the world of the Web, applications can be very wild things). \n Your main job will be to create packages and example configurations of various applications and infrastructure elements, so already having experience with web applications is a serious plus. This can include PHP applications like Drupal and WordPress, or experience with other tools, like Ruby on Rails, Node.js, Django, and others. \n We take internships seriously, and these are the first opportunities we are opening up. You will have serious mentoring. You will be able to see how an ambitious startup rises. \n Depending on how you perform, you might get opportunities to contribute to some of our core projects, or participate in international events and conferences. \n You\u2019ll get the most from these learning opportunities if you\u2019re in the same room as some of our other engineers, so you should be willing to relocate to Paris. Many of us speak French, but we use English for all of our professional communications within the team, so a degree of fluency is required. \n To apply write to\u00a0 jobs@platform.sh \u00a0with the title \u201cDev Internship\u201d, please include a short motivation and description of what you\u2019ve been up-to until now. It\u2019s never a bad thing to point us to your Github/Bitbucket account, or to any other # software contributions you\u2019ve made. Be concise, yet thorough. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Open source software ROI for your organization \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh / Bitbucket Integration, featured on the Bitbucket Blog ", "url": "https://platform.sh/2015/08/17/featured-on-bitbucket/", "documentId": "85ea15ab730589b6316ecf7d165002b2fa48f8c0", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh / Bitbucket Integration, featured on the Bitbucket Blog \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         17 Aug 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The very nice and competent people from Atlassian did us the great honor of featuring Platform.sh on their official blog today.\u00a0 Check it out here \n We have also made a short screencast to show how the Bitbucket / Platform.sh Integration works. \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "PHP versions 5.4, 5.5 and 5.6 supported ", "url": "https://platform.sh/2015/09/release-php/", "documentId": "20cfb436934ec9e8d25aeeeb7b91604d7e3e7932", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           PHP versions 5.4, 5.5 and 5.6 supported \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         08 Sep 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Hi, I\u2019m proud to announce that starting today, testing and deploying your applications on various PHP versions has never been that easy! \n \n \n Switching from a PHP version to another is a matter of a single line change in your application configuration file. \n Platform.sh supports the following PHP versions: \n \n\t 5.4 \n\t 5.5 \n\t 5.6 \n \n Also, you can choose to enable and disable any PHP extensions that you want to use or not. \n How to do? \n Let\u2019s say you want to test your application with a different PHP version. \n Start by branching your environment to get a fresh new environment. Call this environment\u00a0  PHP-5-6  . \n If you are using the\u00a0 CLI , simply type: \n \n $ platform environment:branch php-5-6\n \n \n On your\u00a0  .platform.app.yaml  \u00a0file, simply change the type to: \n \n type: php:5.6\n \n \n Commit and push this change: \n \n $ git add .platform.app.yaml\n$ git commit -m \"Upgrade to PHP 5.6\"\n$ git push\n \n \n That\u2019s it! \u00a0Your new environment is now built with PHP 5.6. \n You can confirm by SSH in the environment and type\u00a0  php -v  : \n \n web@tfq54akunfoby-php-5-6--php:~$ php -v\nPHP 5.6.12-1~dotdeb+7.1 (cli) (built: Aug  8 2015 01:28:25)\n \n \n Deploy the changes \n Once you are sure everything works as expected, you can merge this change to deploy the parent environment with the new version. \n With the CLI, it\u2019s simply: \n \n $ platform environment:merge\n \n \n Read more about configuring PHP version and extensions on\u00a0 our public documentation . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh hosts Symfony documentation GitHub pull requests ", "url": "https://platform.sh/2015/09/symfony-documentation-pull-requests/", "documentId": "5f6140d5c415afc93e1bbcc018d79b6feea3412f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh hosts Symfony documentation GitHub pull requests \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Symfony \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         10 Sep 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Note : This article has been published on Symfony official blog.\u00a0 Read the source . \n Symfony\u2019s documentation \u00a0is an open source project with more than 800 contributors. That\u2019s great! But our goal is to always make it easier to contribute and faster to merge in changes. And today, we\u2019ve started doing something really cool to improve our workflow: integration with Platform.sh. \n \n Platform.sh is a hosting solution that provides out-of-the-box continuous deployment for Symfony, Drupal and any other PHP applications. It extends the concept of a Git branch at the infrastructure level. Basically, this means that it\u2019s easy to deploy every branch and/or Pull Request to its own URL. \n Symfony\u2019s documentation is written in Sphinx (Markdown on steroids) with linking, complex code blocks and more. That gives us a lot of flexibility, but also causes 2 major problems: \n \n\t When someone makes a pull request to the docs, they can\u2019t immediately see how it will render. \n\t It\u2019s tough to review, since it takes too much time for a reviewer to pull down the branch, compile it locally, then open it up in a browser. \n \n The problem is shared with any real coding projects: when you finish a feature, you then need to manually deploy it to a server before it can be reviewed and tested. \n But what if each pull request could be automatically deployed to its own server with its own URL? \n This is something we\u2019ve wanted for a long time\u2026 That\u2019s why we were thrilled when Platform.sh approached us and said \u201cYeah, that\u2019s easy to do!\u201d. \n So, as of today, I\u2019m excited to say that the Symfony documentation is the first open source project (we know of at least) that automatically builds and deploys any code change from any contributor into an isolated environment with its own URL, so it can easily be reviewed and tested. Boom! \n For example,\u00a0 Pull Request #5530 \u00a0documents an entire new feature. By simply clicking \u201cDetails\u201d next to the \u201cplatformsh\u201d check on the bottom, we can review this pull request in its true HTML format. \n You see that there is a URL provided by Platform.sh and including the http://pr-5530-6qmocelev2lwe.eu.platform.sh/ \n How is the madness possible? \n First, Platform.sh was awesome enough to setup our environment for #! If you see them on\u00a0 Twitter \u00a0or at a conference, give them a big thank you! \n Second, the only thing required to integrate with Platform.sh is to add a configuration file called\u00a0  .platform.app.yaml  \u00a0in your repository which describes how the code should be built - similar to\u00a0  .travis.yml  . That - and a GitHub webhook - were enough to start automatically deploying pull requests. \n Third,\u00a0 WouterJ \u00a0(core docs contributor) created a symfony.com-like theme to make the previews as realistic as possible. \n So, next time you make a pull request to the docs, check out how it looks! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "RabbitMQ version 3.5 supported ", "url": "https://platform.sh/2015/09/release-rabbitmq/", "documentId": "6bbebdae0accadb0834ddf8e4dcac774257438a0", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           RabbitMQ version 3.5 supported \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Simon Ruggier \n                  \n                   Cloud Engineer \n                  \n                  \n                 \n            \n          \n         \n         16 Sep 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, we are proud to announce that\u00a0 RabbitMQ \u00a0is available on Platform.sh. \n \n \n RabbitMQ is an open source message broker service (sometimes called message-oriented middleware) that implements the Advanced Message Queuing Protocol (AMQP). \n We support the latest release: 3.5.4. \n Read our\u00a0 public documentation \u00a0for how to use and configure the service. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "PHP Micro-Services can be simple, fast and testable ", "url": "https://platform.sh/2015/09/php-micro-services/", "documentId": "8c41d03beb90c426273bf3e4ac65cf6826e43a12", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           PHP Micro-Services can be simple, fast and testable \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         21 Sep 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         I have been doing the REST style Micro-Services oriented architectures for the past seven or eight years now (seems it has become all the rage recently). And in many, many cases, I find it is a much cleaner, more robust approach than the traditional big monolithic option. We are not going to go into the implementation question of the services themselves but see what are some of the issues they present in terms of operations and workflow.\u00a0For simplicity\u2019s sake we will use a fictional example with a couple of services. \n \n Built upon micro-services \n Platform.sh by itself is basically implemented in this style with very clear responsibilities for each element and strict rules on who can depend on whom. It is one of the things that guarantees our robustness: A distributed system does not try to prevent failure, but to limit its scope and give some guarantees on how the system functions as a whole when parts of it fail. The monoliths usually fail globally on any single part failing. And errors are part of life. \n Built for micro-services \n And as such, Platform.sh is also uniquely adapted to developing, testing, and hosting PHP applications in micro-services oriented style. \n Platform.sh supports multiple applications in the same repository, so you can deploy in a single push your whole infrastructure with its underlying dependencies. \n E pluribus unum \n But let\u2019s first talk about micro-services. If you haven\u2019t heard about this particular style of developing applications, well the gist of it is decoupling your web-app (or basically any application) and breaking it up into a number of small usually REST style APIs each with its own responsibility, the better implementations usually rely on hypermedia to stich everything back together into a coherent entity. \n This allows to follow the best practices of separation of concerns and the single responsibility principle and results in often not only better performance (you can easily fine tune caching strategies for each service) and simpler maintenance (you don\u2019t need to update your whole stack just to update a single \u201cfunction\u201d) but more importantly better development velocity. The smaller the units you have to manage in an application, the more self contained they are, the more they have an explicit contract, the faster you can move without breaking everything. \n Micro-Services are a graph on a grid \n Another important element is that each service can come with its own infrastructure level dependencies. Your \u201cimage server\u201d does not need access to the database. Your geolocation service might need a PostGIS, while your \u201cuser service\u201d will be bound to you \u201cmain data store\u201d, a MySQL or a PostgreSQL, you might want a traversal search engine such as Elastic Search. Separating dependencies is, again, extremely useful in ensuring the management of your whole thing is easier, its easier to swap out parts your infrastructure (you want to change from MySQL to PostgreSQL as your main store.. ? well, a single service depends on it). \n Sometimes the final consumer of these services will directly be a web application (angular style) sometimes it will be a traditional web application. Often it will be just another service. When you abstract away the underlying grid of backends and datastores it allows you to reason more simply about your whole architecture. \n The Challenges \n Over the years it has also become apparent to me that there are some unique challenges that arise from this particular style. \n 1. Operational Complexity \n A first challenge is simply the operational complexity in sysadmin terms. Instead of having a single app-server and a single database you can find yourself with a myriad of applications written in different languages, having different constraints and depending on different back-end services. Sysadmins hate this. And when you do stuff like that by hand, they are right. More moving parts in a system that is not fully-automated means many more points of failure. \n 2. Dependency and version management \n This is probably the big one: managing versions, because each service evolves at a different rhythm it makes ensuring the global coherence a complicated task: \n Imagine I am working on a new feature for a front application, that requires modification in a couple of different services. All three (the front and the two services) will now be in flux. \n One of the guarantees you really want to have is that you can deploy the different services at different times (remember\u2026 decoupling). Because having to deploy everything at the same time is basically a sure recipe for downtime. \n \n Let\u2019s imagine you have been good and not only you use hypermedia as your external versioning system, you use semver for your internal one. Let\u2019s say the change we want to do is add an avatar to the user page, and let\u2019s say the specs say it needs to be in grayscale. We did not have that field in the \u201cuser service\u201d and our \u201cimage service\u201d did not include the operation of transforming an image to grayscale. So three services will need to change.. the user service will get an extra field, so we need to change that in the model of the front app, and we need to add a capability to the image server. Our initial versioning scheme will be ImageServer 1.4.1, User Service 1.1.2 and Front 2.1.3 This change is just a single one in a more major refactoring of the front application with many other incompatible changes, let\u2019s assume these do not affect our two services here. \n \n 3. Testability \n We now from code that making small units with small scopes helps you write testable code. But with services this can be tricky. When you do your unit testing, you know you have checked-out a specific version of the code. Lock files let you know the precise versions of libraries you are importing. \n And doing real integration tests on the services is hard because you usually would want to test them with their true dependencies, with the true network structure. \n In our example, how could you test that the not only the current front (2.1) works well with the 1.5 and 1.2 but also its next minor releases (2.2) and their patch levels (2.2.1 etc..)? \n And that\u2019s the main problem with micro-services, testing each one might be easy\u2026 testing them together is hard! \n 4. Latency \n If you only use HTTP to communicate between your services, and some of your services might have blocking IO behavior\u2026 the total latency of your system might very well become the sum of the latency of each. Which is very bad. This can be compounded by other elements like having to loop and make multiple requests in a single call.. or having a \u201cSpaghetti style\u201d services dependency model where everybody calls everybody all the time. \n This is especially true in the case of PHP as it is hard to do asynchronous IO. \n Platform.sh to the rescue! \n \n Platform.sh is the first PaaS to support multiple applications each with their own dependencies as a single coherent cluster. \n Each application is deployed to an isolated container. And you can describe which service has access to which other. You can in a single file describe the whole routing structure of the application. \n The applications in the cluster are isolated, but can have access to commons services such as caches (like Redis), Message Queues (RabbitMQ, Kafka), Search Engines (like Elastic search) or simply SQL databases. \n Asynchronous deployment allow for continuous deployment \n We want to be able to release new versions of our Image and User services well before the whole version 3.0 of the front will be out; The earlier you will release your services the less chances you will have of \u201cbreaking something else\u201d. Release Early, release often, and even better put: continuously deploy. In the world of Micro-Services the main issue is not backward compatibility but forward compatibility. \n The smaller the different parts of an application you are deploying, the earlier you deploy, the less global breakage you are will probably cause. And the easier it will be to detect and correct production bugs. \n As far as the User Service is concerned this is a schema change, but as we are only adding things so we are allowed to use a minor revision for the service. Next versions will be ImageServer 1.5 User 1.2 and Front 3.0. These are internal revisions we do not expose on the API, they do not change the endpoint. \n With Platform.sh, you can deploy these multiple applications with their multiple backend services with a single command. You can backup the whole infrastructure, consistently, with a single command: and only the subtrees that were modified will get redeployed. \n Let\u2019s get nitty-gritty \n In your git repo you can have multiple applications each with its own  .platform.app.yaml  \u00a0that describes everything you want to for that particular service\u2026 and you can link them together by saying that an application or a service depends on another one. \n Platform.sh will very conveniently expose in the environment of each service metadata such as the http endpoint for each other service, as well as all of the commons services they can communicate by. \n Repository structure \n Even more conveniently each service can be in its own repository as a git submodule (or a subtree)!. The layout of your repository could look like: \n \n\t image_api \n\t user_api \n\t front_app \n \n In a real application we would probably have a couple of other services\u2026 \n Each directory being its own git submodule and being a full web application, with its own\u00a0  .platform.app.yaml  \u00a0that can control everything, how much memory and disk space it will be allocated, which services it depends on, how should caching behave etc.. \n When you push your repo, platform.sh will resolve the whole dependency graph and take care of building your full infrastructure. \n Configuring apps \n If we look at each sub-directory (and in this case git repo) we should have at the root a\u00a0  .platform.app.yaml  \u00a0file. \n Your image_api\u00a0  .platform.app.yaml  \u00a0file might look like this... \n \n name: image_api\ntype: php:5.6\nbuild:\n  flavor: composer\ndisk:1024\nmounts:\n  \"/tmp\": \"shared:files/tmp\"\n  \"/images\": \"shared:files/images\"\nweb:\n  locations:\n    \"/\":\n      root: \"public\"\n      passthru: \"/index.php\"\n \n \n Your user_api\u00a0  .platform.app.yaml  \u00a0file might look like this: \n \n name: user_api\ntype: php:5.4\nbuild:\n  flavor: composer\nrelationships:\n  main_store: \"database:mysql\"\n  image: \"image_api:php\"\ndisk:128\nweb:\n  locations:\n    \"/\":\n      root: \"public\"\n      passthru: \"/index.php\"\n \n \n And your front\u00a0  .platform.app.yaml  \u00a0(this is an example of a static front using grunt for building) : \n \n name: front\ntype: php:5.6\nbuild:\n  flavor: composer\nrelationships:\n  user: \"user_api:php\"\n  image: \"image_api:php\"\n  article: \"article_api:php\"\ndependencies:\n  nodejs:\n    - bower: \"*\"\n    - grunt: \"*\"\n  ruby:\n    - saas : \"*\"\ndisk:1024\nmounts:\n  \"/tmp\": \"shared:files/tmp\"\n  \"/images\": \"shared:files/images\"\nweb:\n  locations:\n    \"/\":\n      root: \"public\"\n      index:\n        - index.html\nhooks:\n  build: |\n    bower install\n    grunt\n \n \n Drums! \n You can branch. You can have different versions of each component; And when you push\u2026 you get a fully functioning cluster. You want to test current front with Image Server 1.5, not a problem sir. \n In your main repo directory just.. \n \n $ git checkout -b'next_release'\n$ cd image_api && git checkout 'dev_1_5' && cd ..\n$ git submodules update\n$ git commit -am'test bleeding edge front with images server 1.5'\n$ git push\n \n \n And.. a brand new cluster will have been born (every service is redeployed with all of the backend stuff in place, with the same data as the parent environment, in the precise same state). You can now test all of that. And as always merging this to master is all you need to put the whole shebang into production. Because every service is injected in its environment all the information it needs on the other ones.. there is no configuration to be made.. the cluster is self-aware. \n You want to test it now with user_api 1.2.2 ?\u00a0  cd image_api && git checkout 'dev_1_2_2'\u00a0  \u2026 you see the picture. \n Conclusion \n Platform.sh solves the four challenges of doing micro-service oriented architectures: \n \n\t Operational complexity : because every component is managed automatically with 0 sysadmin chores \u2026 there is no added complexity \n\t Version management : because Platform.sh treats the infrastructure as it treats code.. in Git.. you have very simple absolutely explicit version management, that can not be any simpler \n\t Testability : having resolved the two previous issues, testability becomesalmost a non issues, at any time you can deploy new clusters with mixed and matched versions, you can run those on your CI system and be guaranteed thatthe whole thing is running nicely\u2026 and will continue to run with the nextdeployment and the one after it.. \n\t Latency : Platform.sh allows your components not only to communicate over HTTP but also using high throughput / low latency message queues, caching and search services. Per route caching also allows you to fine-tune the behavior of each service to optimize for freshness vs latency. As for the Spaghetti issue? well, that remains your responsibility. If you go for Italian this needs to be Lasagna. Or even a nice antipasti platter where everything goes together so tremendously well (I mean the Zucchini! wow. Just wow), but side-by-side. \n \n Post-Scriptum. About money. \n \n The last challenge with micro-services, is that you needed buckloads of money or an army of DevOps people to go that way. When you pay per server or per service.. it can add up to quite a hefty tab quickly. And if you need to manually containerize all the things.. that can take time. \n With Platform.sh you don\u2019t pay per application, just the global resources your whole project will use; With any other PaaS you will need to deploy multiple applications, and pay for each one separately. \n And you have nothing to do to have each element deployed in its own container, and have the thing stitched back together. That\u2019s our job. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "HHVM versions 3.9 and 3.12 supported ", "url": "https://platform.sh/2015/09/release-hhvm/", "documentId": "34e4abaf9778f3155d55bef85637bc62153173e0", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           HHVM versions 3.9 and 3.12 supported \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christian Sieber \n                  \n                   Director Accounts &amp; User tools \n                  \n                  \n                 \n            \n          \n         \n         23 Sep 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today we are proud to announce that\u00a0 HHVM \u00a0is available as an application service on Platform.sh. \n \n HHVM is a drop-in replacement for the PHP interpreter which was initially created by engineers at Facebook, but which has evolved into an open-source project with a large community of contributors. It boasts dramatic gains in performance and scalability over PHP and introduces many new features as a dialect of the PHP language called\u00a0 Hack . These include scalar typehints and a static type-checker, asynchronous I/O primitives for cooperative multi-tasking, and numerous native data structures (such as shapes and collections) that allow for improvements in developer productivity. \n In particular, the HHVM team recently concluded a sprint focused on improving performance for open-source PHP content management systems. \n Platform.sh looks forward to being one of the first PaaS hosting solutions to support applications running on HHVM. Check out our\u00a0 public documentation \u00a0for information on how to use and configure the service. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Symfony founder Fabien Potencier names Platform.sh Killer App ", "url": "https://platform.sh/2015/10/fabpot-platformsh-killer-app/", "documentId": "ee5750e55ef01baab65c88d6163027a59438dd4f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Symfony founder Fabien Potencier names Platform.sh Killer App \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Andrew Melck \n                  \n                   Regional Business Development Manager DACH \n                  \n                  \n                 \n            \n          \n         \n         28 Oct 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \n Symfony founder Fabien Potencier names Platform.sh \u201cKiller App\u201d \n Symfony founder and SensioLabs CEO Fabien Potencier took time in a recent interview on the topic of PHP 7 to single out Platform.sh as a \u201cKiller App\u201d that unifies production hosting with a development and deployment workflow. \n Speaking to the prominent French online portal\u00a0 Journal du Net , Fabien discussed microservices, the PHP7/HHVM clash, and the growing ecosystem of software projects that use Symfony as their basis, including Drupal 8, EZ Publish, Laravel and phpBB. \n \n The full quote reads: \n \n We have dedicated significant resources to ensure the [Symfony] framework runs smoothly on Salesforce\u2019s Heroku and Commerce Guys\u2019 Platform.sh. We\u2019re also working with the latter to integrate Blackfire into their stack. By the way, Platform.sh\u2019s approach is very attractive. In my opinion it\u2019s something of a killer application. It allows one to benefit from a production hosting solution integrated with a development and deployment workflow. \n \n You can read the full interview (in French) on the\u00a0 Journal du net \u00a0website. \n About Platform.sh \n Platform.sh is a groundbreaking hosting and development tool for web applications. \n It extends a branch-merge workflow to infrastructure so that every branch can be tested as if it were in production, and live sites scale effortlessly to serve the most demanding traffic. \n Enterprise plans boast a unique, triple-redundant offering, and 24/7 follow-the-sun support. Based on Open Source technologies, Platform.sh is ideal for agile software development, continuous integration and continuous delivery. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh Best Horizontal Cloud Solution for 2015 in Europe ", "url": "https://platform.sh/2015/10/best-horizontal-cloud-solution-for-2015-in-europe/", "documentId": "b5a53367632dc736d0b1a5a60a44719ba6db6f0c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh Best Horizontal Cloud Solution for 2015 in Europe \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         09 Oct 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \n \n After wining the French National Award in July, yesterday in Barcelona, Platform.sh was awarded the title of \u201cBest Horizontal Cloud Solution for 2015 in Europe\u201d by Eurocloud.\n \n \n We feel very humbled by this award and believe there could hardly be a more meaningful award for Platform.sh. Platform.sh is solving a hard and generic problem for people building websites: we enable them to painlessly and safely deploy new features to their websites as often as they need to.\n \n Even though, we aim at being a global company and currently have customers in more than 50 countries, and employees in eight different countries, we\u2019re also very attached to our European roots, and have been supported by the European Union\u2019s R&D programs.\n \n \n We\u2019d like to share this success firstly with all our team members, whom are doing an amazing job at building a super innovative product, promoting and selling it.\n \n We are also very grateful to our clients, partners and investors that have made this journey possible. This award is yours and we\u2019re grateful. And we are hard at work at giving you week after week new amazing features. Stay tuned.\n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh to exhibit at BADCamp 2015 ", "url": "https://platform.sh/2015/10/badcamp/", "documentId": "a244942d725ead245a3e3ef098eb1aba3063851d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh to exhibit at BADCamp 2015 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Doug Goldberg \n                  \n                   Senior Vice President of Operations and Global Alliances \n                  \n                  \n                 \n            \n          \n         \n         20 Oct 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh to appear at North America\u2019s largest free Drupal event. \n Platform.sh is a Contrib Level sponsor at the\u00a0 2015 BADCamp \u00a0October 22 through October 25 on the UC Berkeley Campus in Berkeley, CA. \n BADCamp is just another stop on our busy fall expo tour. The company was also featured as a sponsor and breakout session presenter at the Drupalcon Barcelona Conference in September, and DrupalCamp LA in August. \n Platform.sh will also exhibit at Symfony Live San Francisco held October 28 to 30 in San Francisco. \n \n Throughout the event, Platform.sh will be on-hand to help attendees garner a deeper understanding of how Platform.sh can augment your development strategy through expert technology and architecture of your infrastructure. \n Platform.sh will have three senior members of its team in attendance including Fred Plais, CEO, Doug Goldberg, VP Sales (U.S.) and Christian Sieber, Products Engineer. \n All three will be exhibiting on the camp expo floor providing demos. \n Through our long history with Drupal, we have developed intimate knowledge around the types of solutions that will deliver peak performance for your online site or ecommerce store. \n Stop by our sponsor booth for a demo and to learn how Platform.sh can change the way you think about Platform as a Service (PaaS). \n About Platform.sh \n Platform.sh is a groundbreaking hosting and development tool for web applications. \n It extends a branch-merge workflow to infrastructure so that every branch can be tested as if it were in production, and live sites scale effortlessly to serve the most demanding traffic. \n Enterprise plans boast a unique, triple-redundant offering, and 24/7 follow-the-sun support. Based on Open Source technologies, Platform.sh is ideal for agile software development, continuous integration and continuous delivery. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Regions", "title": "Platform.sh for Government ", "url": "https://platform.sh/regions/australia/government/", "documentId": "c31b3a8d64a5ebbe80182ce1ecbcc386955153aa", "text": "\n   \n     \n       Platform.sh for government \n     \n   \n   \n     \n       Take your digital game to the next level with Platform.sh for government, a secure, auditable,\u2028and cost-effective Platform-as-a-Service for web applications. \n     \n   \n   \n     \n       \n         \n           \n             \n           \n         \n         \n           \n \n   The control governments require,\u2028the freedom developers expect \n   Our government guide details how dev teams can help deliver better citizen services, faster\u2014with less complexity and at a lower total cost of ownership. \n   \n     \n     \n   \n   \n     \n     \n   \n   \n     Email Address \n     \n   \n   \n     Company \n     \n   \n   \n       Get the guide \n       \n   \n \n \n   Success! Check your inbox for a follow-up email from one of our experts. \n   \n     Download Guide \n   \n \n\n         \n       \n     \n   \n \n   \n     \n       Secure, reliable, cost effective \n     \n     \n       \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Government-grade security \n    \n    \n     Three-tier firewall, always-on DoS protection and inline mitigation, automatic SSL, and immutable containers provide unbeatable out-of-the-box security. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Auditable deployment certainty \n    \n    \n     A full audit trail for every change guarantees that the code you commit is the code that\u2019s deployed. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Predictable, reliable, repeatable \n    \n    \n     Version-controlled, infrastructure-defined\u2028 \u201cin code\u201d results in fully testable, repeatable infrastructure deployments. Code always runs as designed. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Enterprise-level support and uptime SLAs \n    \n    \n     Government plans come with up to 99.99% uptime SLA and one-hour priority support. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Three-zone resiliency\u2028 and failover \n    \n    \n     Even the smallest projects are backed by three availability zones and high-availability storage, with automated failover. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Automated, complete backups \n    \n    \n     For when only a complete rollback will do, automated and on-demand, full-cluster snapshots offer piece of mind. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       Take advantage of proven development best practices \n     \n   \n   \n     \n       \n     \n     \n       \n         Give your developers freedom to innovate, without sacrificing security. \n         Move from development to production at the click of\u2028 a button. \n         Mix and match technologies in the same project\u2028with microservices. \n         Scale on demand. \n         No longer worry about infrastructure management\u2028or updates. \n       \n     \n   \n \n   \n     \n       Government-grade Drupal and\u2028 govCMS hosting  \n     \n   \n   \n     \n       \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n     \n \n    \n   \n  \n   \n    \n     All major Drupal distributions are supported (e.g., GovCMS, aGov, and Sector). \n    \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Securely integrate Node.js or legacy projects in the same build. \n    \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     No restrictions on code inclusion. \n    \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       Ready to get started? \n      \n      \n       \n         Contact our team \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Concerned about the recent European Court ruling on Safe Harbor? ", "url": "https://platform.sh/2015/11/safe-harbour-safe/", "documentId": "1c2448c2ea181e882a75c7cd0a559a09d92e00be", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Concerned about the recent European Court ruling on Safe Harbor? \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         03 Nov 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh takes you well outside this jurisdiction anyway. \n Any EU based organisation who thought their EU originated confidential data was protected if residing on servers located in the U.S., will now be doubting that protection. Any number of agencies may have been able to access all of it. In short, the European Court of Justice (ECJ) has called for the invalidation of the Safe Harbor agreement between the US and the EU, citing that Safe Harbor does not sufficiently protect an EU citizens data that is stored in the U.S. and is hence subject to government surveillance. The ECJ has overturned the Safe Harbor agreement, thus resulting in a potential suspension of data transfer should a particular company not adequately protect user data. \n \n Having done some research into this ruling and plagiarised some clear thinking out there on the web, I have concluded that while this decision does not spell an immediate end for Safe Harbor, it does give regulators the right to investigate and suspend data transfers if they don\u2019t feel the data is significantly protected - potentially a major setback for businesses that want to collaborate across borders (including most eCommerce). Although negotiations between the U.S. and EU are already underway, ahead of any resolution to this current state of uncertainty, I\u2019d like you to consider some of the following prevailing views: \n \n\t For companies whose business it is to consolidate and analyse data and then sell indirect access to this data, the dissolution of Safe Harbor is problematic as it impacts their core business model. \n\t For Cloud vendors that sell to Enterprises - anywhere in the world - where the focus is on processing and analysing a single customer\u2019s data (versus aggregating multiple customers\u2019 data), it should be less of a problem, assuming that they have built their cloud platform to support multiple cloud instances that can be deployed in local data centres ! This gives customers the option of choosing which data centre they want to use when they sign up for the service. Unfortunately, most cloud vendors who sell to Enterprise have not set up their cloud offering in this way and don\u2019t have multiple data centres throughout the world. \n\t The EU\u2019s ruling has made the cloud very physical by shifting the focus to the physical location in which it is stored and how it is transferred. One sure way that U.S. companies can comply is to only shortlist EU companies that have data centres located in the EU. They should also make sure to understand and meet the data protection laws in each country in which they plan to do business. For example, if a US company plans to have customers in the large German market they should only pick a company providing services based on hosting facilities in data centres located in Germany itself, and owned by a local German entity. It\u2019s next to impossible to meet the German data protection laws\u2019 requirements otherwise. \n \n Platform.sh gives you the flexibility and choice to deploy different applications to specific geographical hosting infrastructures that protect your data according to its required level of security. Please see our web page\u00a0 https://platform.sh/enterprise/on-premises-paas/ . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Java Ant and Maven build scripts supported ", "url": "https://platform.sh/2015/11/support-maven-and-ant/", "documentId": "0e1f63d444a0de35a12734500f105fe15fe85b3a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Java Ant and Maven build scripts supported \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         17 Nov 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh is a tool for serious people; And serious people use Java tooling. \n Anyway, if you are serious or not.. you can now use Ant and Maven build scripts on Platform.sh this is supported for PHP versions 5.6 and up (and will not be back-ported to earlier versions). \n This is great news for people who have their tool-chain based on these environments\u2026 and this should allow you to pull basically any Java dependency and use it in your Platform.sh project. \n \n So make sure that in your .platform.app.yaml you specify the PHP version as follows: \n \n type: php:5.6\n \n \n \n To use Ant or Maven simply call them from your build hook. Assuming you have a build.xml file in your root directory you could simply run: \n \n hooks:\nbuild: ant\n \n \n \n For maven you would have a pom.xml file in a subdirectory you would do something like: \n \n hooks:\nbuild: mvn compile\n \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "NodeJS versions 0.12, 4.4 and 6.2 supported ", "url": "https://platform.sh/2015/12/release-nodejs/", "documentId": "bfe56397f655847d2596cbcc983dedcf7710e2f0", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           NodeJS versions 0.12, 4.4 and 6.2 supported \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         07 Dec 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We are terribly happy to announce beta support for NodeJS in Platform.sh. \n \n Javascript developers can now enjoy the same incredible features with: \n \n\t Fully managed backend services: from MongoDB and RabbitMQ to Elasticsearch, Postgres, MariaDB, Redis, Kafka, and others! \n\t Automatically generated staging clusters for every pull request that contain a byte level copy of production data in 30 seconds. \n\t Micro-Service support: deploy multiple managed applications to the same cluster. \n \n Have a look at the\u00a0 NodeJS user guide \u00a0to learn how to launch your first node application. There\u2019s also a full\u00a0  mean.io  \u00a0example\u00a0 here . \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh\u2013deploying the future of content with one click \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Out of the lab: Node.js 12 features graduate from experimental status \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Off with its head! Headless Chrome as a service. \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Drupal 8.0 has been released... Party time! ", "url": "https://platform.sh/2015/11/drupal-8-release-party/", "documentId": "ebccb692b9eb6d03ff314f18c5b79676408ecab7", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Drupal 8.0 has been released... Party time! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         19 Nov 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today is a very important day for the Drupal community around the globe! \n After many years and more than 3,300 people involved in contributing to the codebase, organizing events, conducting usability tests, mentoring new contributors, founding sponsors, etc, a\u00a0 stable version of Drupal 8 has been released . And parties are happening everywhere. \n \n Let\u2019s party! \n \n After all that time and effort, it\u2019s time to party! You can find more about all the Drupal 8 release party around you in the\u00a0 Drupical website , or check the\u00a0 celebratedrupal8.com \u00a0website which contains a lot of good stuff about the new Drupal 8 release. \n And what about\u00a0 us ? Well, As you might have gathered, it\u2019s been a very tough week. But its all about resilience and not letting those damn bastards get in our way of life. So we will celebrate in Paris with the local community. You can learn more about the event on the\u00a0 meetup page . \n Deploy it today on Platform.sh \n \n Previous betas and release candidates have been available on Platform.sh for a while now. But it\u2019s time to try the 8.0 version which is already there. \n Simply get your free trial\u00a0 here . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "All Platform.sh clients kept automatically safe from serious PHP bug ", "url": "https://platform.sh/2015/12/php-session-bug/", "documentId": "062b19212ef2c1d5f0e4ae8394dc7c86aeb808c1", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           All Platform.sh clients kept automatically safe from serious PHP bug \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         17 Dec 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         There is a serious PHP bug for which there are exploits in the wild affecting the the PHP session extension (ext/session); vulnerable versions include PHP < 5.4.45, < 5.5.29, < 5.6.13. The bug has only been partially publicly disclosed, so for the moment, we can\u2019t give precise technical details. \n PHP released fixed versions on September 4th, but there has been some recent coverage of this vulnerability, which is why we\u2019re discussing it now. We\u2019d like to reassure our customers that their sites have been updated automatically and aren\u2019t vulnerable to the issue, and that no further action is required by customers. \n Furthermore, after careful analysis, we determined that Drupal 7 and Drupal 8 were not vulnerable to this issue at any time. Other PHP programs may be affected (Joomla! CMS versions 1.5.0 through 3.4.5 are known to be vulnerable, but many others might be). \n If you don\u2019t host your site on Platform.sh you are encouraged to update your PHP to a current version. If you are on Platform.sh enjoy the holiday season, we\u2019ve got you covered. \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Perfectly Lovely, Astonishingly Tremendous, Fabulously Outstanding, Remarkably Magnificent, Serene & Happy 2016. ", "url": "https://platform.sh/blog/2016/01/happy-new-year/", "documentId": "a3b9488a769326c2b132b2fa01d0813f89a98c10", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Perfectly Lovely, Astonishingly Tremendous, Fabulously Outstanding, Remarkably Magnificent, Serene & Happy 2016. \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         26 Jan 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \u00a0 \n We couldn\u2019t let January end without wishing you all the best for the upcoming year. A year can be a very, very long and eventful thing full of accomplishments and joy. \n The wild ride \n For us, last year was a wild ride. When 2015 started - it seems so long ago now - we were just a few months out of beta after two years of R&D, bringing the most advanced Drupal hosting solution to the market. \n By the end of the year we were hosting more than a thousand sites many of which are large eCommerce and media websites, and everything went absolutely quietly over the demanding times of end-of-year sales. On Black Friday PagerDuty stayed silent. Our triple redundant high-availability infrastructure kept its promises. \n Award winning! \n We won a couple of\u00a0 prestigious awards \u00a0and the European Union thought we were cool enough to award us a\u00a0 2M\u20ac grant \u00a0to press-on with our R&D efforts.\u00a0 Our team grew : we welcomed Simon, Csaba and Brad, Andrew, Florian and Doug and we are still hiring. New faces are nice and our team now spans 8 countries, and we run sites in more than 120 countries (not that many unchecked boxes left). \n An eventful year \n 2015 was eventful in Paris where are headquarters are, with too many tragedies, and at times it was hard to keep focus, but the response to Platform.sh was tremendous and kept us energized and optimistic and we have to thank our many customers and incredible partners not only for their support and trust but also for being demanding. \n \n Pushing the boundaries \n Because of you we are driven to push the boundaries further! \n In 2015 we made the most advanced Drupal hosting even more tremendous, with\u00a0 HHVM \u00a0support,\u00a0 PHP7 \u00a0support,\u00a0 Drupal 8.0 \u00a0(we are hosting the largest Drupal 8.0 sites), we made the managed CDN integration even better, added seamless\u00a0 Bitbucket and\u00a0 Blackfire.io \u00a0integrations, we released a\u00a0 new documentation web \u00a0and a\u00a0 new management interface , our\u00a0 CLI \u00a0gained incredible new functionalities\u2026 we added support for\u00a0 multiple applications in the same cluster \u00a0so you can go Headless \u2026 or make hybrid applications\u2026 and these are only the changes that are visible to our clients: internally we have made leaps and bounds performing high-end rocket surgery on our hyper-dense-high-availability-micro-container-grid to get more runtime performance and better/faster operations. Due to popular demand, we started offering a free trial allowing you to try us out and set up a new Drupal site with a couple of minutes. \n ##Going deeper and further But you asked for more. Many of our agency partners were not doing only Drupal work and wanted to do everything on Platform.sh, so\u2026 \n In 2015 we added\u00a0 Symfony support , (and later in the year offered as the default cloud solution for Symfony on http://symfony.com/download \u2026 ), we added\u00a0 PostgreSQL, ElasticSearch, MongoDB and RabbitMQ . We added\u00a0 Python, Ruby, Java and NodeJS \u00a0build-time support. Then we added a\u00a0 NodeJS runtime \u00a0(did you know you can deploy NodeJS applications to Platform.sh?). We started having Laravel and WordPress clients, then many bespoke PHP applications. We ramped up our support for all of those. Some of our agency partners chose Magento, so we worked hard on creating the most productive environment for\u00a0 Magento \u00a0hosting and development! \n ##Scaling the scalability \n But you asked for more. Some of our clients needed a hosting solution to handle not a couple of sites but hundreds of managed sites. So we added the\u00a0 private cloud region \u00a0offering. We added our managed site factory option (some of our clients are SaaS providers .. they just fire up a new instance for every new client). And as always we kept everything simple. A couple of Yaml files, and everything, absolutely everything automated. \n But you asked for more. Some of our clients wanted to be able to host the production sites themselves on-premises or with a European cloud provider while still retaining the incredible productivity gains the public Amazon cloud provides.. so we made that a reality. In 2015 we added the capability of having a managed\u00a0 PaaS running in your own datacenter ! \n 2015 was a wild ride and through an eventful year, thanks to you, we had a great time. \n #So.. .. We wish you bigger, more demanding projects, for you to keep asking us for more and a Perfectly Lovely, Astonishingly Tremendous, Fabulously Outstanding, Remarkably Magnificent, Serene & Happy 2016. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "CLI version 2.11 released ", "url": "https://platform.sh/2016/01/release-cli-2-11/", "documentId": "723840573914a72df19eceac4f135976d3ff2722", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           CLI version 2.11 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         26 Jan 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \u00a0 \n It has been a while since we told you about the evolution of the\u00a0 Platform.sh CLI .. and much has happened. We worked hard on its usability for you, the developer, but also as a chain in your automation workflow. The CLI has become Jenkins\u2019 best friend. \n Patrick \u00a0has been working really really hard on making it better each day. And he has been doing some tremendous work. Not only making it advance by leaps and bounds, but also supporting users on the public github issue queue.. on our own support systems.. through chat.. by parachuting into enemy territory (not sure about the last one). And doing all of that between concerts (if you are in London, you are in luck! You can catch his Quartet\u2019s\u00a0 next concert on the 14th of February ). \n It is now at its\u00a0 113th release! \u00a0There were countless optimizations (well, yes, and some bugfixes) but also a bunch of new features \u2026 by the reverse order of their appearance here are some of newest features for the Platform.sh Command Line Interface: \n You can now\u00a0 create local SSH tunnels \u00a0to any environment ! which makes working locally so much more fun and productive! you can tunnel to any Platform.sh service (for example MySQL) so you can use desktop tools to easily work with the Platform.sh services. \n Just type\u00a0  platform tunnel:open  \u00a0and you will see something like: \n \n     SSH tunnel opened on port 30000 to relationship: redis\nSSH tunnel opened on port 30001 to relationship: solr\nSSH tunnel opened on port 30002 to relationship: database\nLogs are written to: /Users/the_user/.platformsh/tunnels.log\nList tunnels with: platform tunnels\nView tunnel details with: platform tunnel:info\nClose tunnels with: platform tunnel:close\n \n \n You can now run locally on your terminal\u00a0  redis-cli -h localhost -p 30000  \u00a0which will connect to the\u00a0 remote \u00a0redis server on your current Platform.sh environment. \n The CLI can now\u00a0 process submodules in\u00a0  platform get  \u00a0which is really great when you are doing multiple applications in the same project. \n The new\u00a0  platform app:config-get  \u00a0command now allows you to read the remote application config ! This opens so many new venues for interesting automation! \n The new\u00a0  platform apps  \u00a0allows you to list all the apps in the local repository.. And there is generally much better support for multiple applications in SSH-related commands such as better support for Drush aliases where there are multiple applications: aliases will be generated separately for every Drupal application, with the correct URL and document root. \n The CLI has learnt a new trick and\u00a0 checks for updates automatically \u00a0(there were many other improvements to the install/update process). \n Some of you manage many, many projects on Platform.sh (there are clients with more than a hundred separate instances..). So we added the\u00a0  platform project:delete  which goes a long way when you have to manage dozens of projects some of them just test ones. \n A small but nice addition, was to allow setting the\u00a0  restrict_robots  \u00a0property via\u00a0  platform environment:info  . People who manage many site appreciate being able to automate go-live operations. \n platform users, user:add, user:role, user:delete  \u00a0is an incredible addition\u2026 you can now fully automate all user-related operations \u2026 so you can programmatically control which user has which access to which project and which environment. Other people would call this an enterprise feature. \n platform sql  \u00a0allows you to run SQL on the remote environment, while\u00a0  platform sql-dump  \u00a0makes a local dump of the remote environment\u2019s database. \n And more \u2026 and more .. making a full account will take pages and pages. So I invite you to make sure you have recently updated your CLI (afterwards it will auto-update\u2026). And run\u00a0  platform list  \u00a0- it will give you the list of commands the CLI understands. And then you can ask it for help.. it is nice. \n For example you can try typing\u00a0  platform help integration:add  . \n Oh yeah. One last thing. You can also try the most important feature ever introduced to Platform.sh (the team here has total consensus on this). Running\u00a0  platform bot  . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Marketing Manager Germany ", "url": "https://platform.sh/2016/03/04/platform-sh-hiring-marketing-manager-germany/", "documentId": "abd4eaded46d8987521bdb924e7ceffd6b40d14f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Marketing Manager Germany \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Andrew Melck \n                  \n                   Regional Business Development Manager DACH \n                  \n                  \n                 \n            \n          \n         \n         04 Mar 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         About Platform.sh \n Platform.sh is a groundbreaking hosting and development tool for web applications. We\u2019re a European startup with a host of blue-chip Enterprise clients and a string of awards and grants (including around \u20ac2m from the EU Horizon 2020 program). Now it\u2019s time to reinforce our technical prowess with marketing know-how to help us take on the rapidly growing Cloud Hosting market in Germany. If you\u2019re looking for an exciting, high-growth opportunity with a young, cutting-edge company this could be just the job for you. \n \n Job Summary / Purpose \n Leading all local/German marketing activities, campaigns, events and communications for our revolutionary second-generation PaaS hosted offering in order to generate new business and optimise existing customer sales. The Marketing Manager ensures that all local marketing efforts support the company\u2019s overall strategy and goals. Platform.sh is a young company and as we grow you will have every opportunity to grow too, with the potential for greater responsibility and promotion. \n Responsibilities \n \n\t Researching and monitoring marketing and competitor activity. Use research and analysis to develop a marketing plan that is aligned to the company\u2019s marketing strategy and appropriate to the German Market. Be responsible for refining the core positioning and messaging for our portfolio within the German market. \n\t Project managing all marketing activities on the plan, reviewing and reporting on progress as required, managing risks and issues in order to achieve/exceed lead generation targets. \n\t Working with partners, securing and growing Marketing co-funding and cooperation. \n\t Planning, organizing and executing events and campaigns focusing on maximising lead generation. Reviewing the effectiveness of marketing activities and events. \n\t Managing follow up activities that arise from events including lead generation, involving sales managers as appropriate. \n\t Responsible for managing and maximising leads generated from Platform.sh\u2019s German digital presence: website, newsletters, social media & webinars \n\t Working with internal and external counterparts to create press releases, cases studies and white papers; building and managing relationships with Germany-based bloggers and journalists. \n\t Developing marketing tools and collateral (with a particular emphasis on German Language collateral) to ensure materials remain current, competitive and customer focused. \n\t Training and developing new members of the sales, pre-sales & marketing teams on marketing strategy, plans, and competitor activities etc. \n \n Essential Skills \n \n\t Sales Orientation \u2013 is commercially astute. Ensures promotional/marketing activity identifies opportunities to grow the sales funnel and increase sales in a customer-focused manner. \n\t Creativity \u2013 has creative flair. Is able to come up with new and original ideas that are commercially viable. \n\t Organisation, planning and time management \u2013 is able to juggle multiple responsibilities, tasks and projects. Is able to delegate where appropriate and manage time effectively. Never misses a deadline. \n\t Attention to detail \u2013 has an ability to identify all errors in order to achieve exceptional levels of accuracy and a professional finish to all marketing materials. \n\t Communication: Is able to professionally and confidently communicate to customers, suppliers, cross-department team members etc. in both German and English language. Excellent written and presentation skills, with an ability to generate engaging and fit for purpose marketing materials. Is a good listener and is able to flex communication style to the audience. \n\t Teamworking \u2013 is able to collaborate effectively across departments and geographies in order to deliver plans and objectives. Supports others in the achievement of company wide objectives. \n\t Influencing & relationship building \u2013 has the confidence and credibility to make suggestions based on functional knowledge and experience. Able to influence cross-functional teams and customers alike without formal authority. Connects at all levels \u2013 customers, team members, senior managers \u2013 to deliver results. Uses exceptional relationship building to effectively network with customers, prospects and partners. \n \n Essential Experience and Knowledge \n \n\t Minimum of 5+ years\u2019 experience in marketing management including researching competitor activity, the development and execution of marketing plans, \n\t Proficient in MS Office, Google Apps and online marketing tools e.g. Salesforce, Social Media, website & newsletter publishing tools, webinar tools etc. \n\t Proven experience achieving/exceeding lead generation targets \n\t Experience in PR desirable, writing press releases, managing journalist/blogger relations. \n\t Startup/technology background desirable \n\t Strong knowledge of software/technology sector, particularly hosting, PaaS and agile development processes an advantage. \n \n Other \n \n\t Start: April 2016 \n\t Based in Cologne, Germany. Some home office/remote working an option \n\t Must be able to travel \n \n Education \n \n\t Desired \u2013 Bachelor/Masters degree or Diploma in Business Studies/Sales/Marketing-related fields (upper second or higher). \n \n Package \n Competitive package with base salary and profit/performance-related bonus, benefits as agreed. \n Process \n Online interview, telephone interview, meetings with Germany team & CCO. \n To apply write to\u00a0 jobs@platform.sh \u00a0with the title Germany Marketing Manager, including a cover letter, CV and examples of your work up to this point. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "CLI version 3.0 released ", "url": "https://platform.sh/2016/03/release-cli-3-0/", "documentId": "1a07bb6c6f3a0128b556c8fa35306e2f39e93378", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           CLI version 3.0 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Patrick Dawkins \n                  \n                   Product Engineer \n                  \n                  \n                 \n            \n          \n         \n         22 Mar 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We are proud to release a new major version of the\u00a0 Platform.sh CLI . We got some great feedback from you and there are some\u00a0 major changes \u00a0to the way the CLI works\u2026 so you should pay attention \u2026 \n This post will help you with updating your CLI installation, and it will explain some of the major changes. \n \n Updating \n You can update with the command:\u00a0  platform self-update  \u00a0(but do read this first). \n New file structure \n The Platform.sh CLI version 3.0.0 includes a major change to the way it structures your files. \n Previously the CLI always needed your project to have all its code inside a\u00a0  repository  subdirectory, and it kept its own data one level up, in files such as\u00a0  .platform-project  ,\u00a0  builds  , and a\u00a0  www  \u00a0symlink. Example structure with the CLI version 2.x.x: \n \n $ ls -A1 my-project\n.platform-project\nbuilds\nrepository\nwww\n$ ls -A1 my-project/repository\n.git\n.platform\n.platform.app.yaml\n# and your project's files\n \n \n This worked well, but it was always a little bit confusing for new users, and it works differently from many other CLI tools. It also means the CLI could not recognise a project from a plain repository (fetched via\u00a0  git clone  ) - now it can. \n So, the CLI version 3 has changed the file structure. It runs\u00a0 directly inside \u00a0your project\u2019s repository. \n Example structure with the CLI version 3.x.x: \n \n $ ls -A1 my-project\n.git\n.platform\n.platform.app.yaml\n_www\n# and your project's files\n \n \n For each project, the CLI will prompt you to \u2018migrate\u2019 to the new file structure. You can do this by accepting the prompt, or you can manually run the command:\u00a0  platform legacy-migrate  . A backup of your project will be created to ensure you do not lose any data. \n New web root location. \n The CLI version 3 has a different location for the local \u201cweb root\u201d symlink: it has changed from\u00a0  www  \u00a0to\u00a0  _www  . This is to avoid conflicts with files in your repository. \n The web root will only exist if you run the command:\u00a0  platform build  \n You may need to update your local web server configuration: just change\u00a0  www  \u00a0to  _www  . \n New metadata location. \n The CLI version 3 keeps its own metadata about your project inside a folder named\u00a0  .platform/local/  . This is automatically excluded from Git. \n New PHP requirement \n Because of new dependencies, version 3 requires PHP version 5.5.9 as a minimum. It is tested with PHP 5.5, 5.6, 7.0, and HHVM. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Perfectly Posh adopts Platform.sh for Drupal Commerce based e-commerce application ", "url": "https://platform.sh/2016/03/perfectly-posh-adopts-platform-sh-for-drupal-commerce/", "documentId": "4ccb53426b4ee9d3c10b345f7db0382680ddb956", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Perfectly Posh adopts Platform.sh for Drupal Commerce based e-commerce application \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Doug Goldberg \n                  \n                   Senior Vice President of Operations and Global Alliances \n                  \n                  \n                 \n            \n          \n         \n         24 Mar 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Custom Platform.sh Enterprise subscription deployed to handle massive peak traffic \n Michigan, U.S. Thursday, March 24, 2016, for immediate release \n Today, Platform.sh announces the adoption by Perfectly Posh of our Platform as a Service (PaaS) for their online sales operations. Founded in 2011, Perfectly Posh sells naturally based, pampering products across the USA through over 45,000 Independent Consultants.\u00a0Perfectly Posh has selected Platform.sh Enterprise for their online e-commerce application, migrating to a custom offering designed to fit the high growth demands of a company on the move. \n \n The main reasons for selecting Platform.sh were: \n \n\t \n\t A hosting stack tuned for high performance e-commerce; \n\t \n\t \n\t Seamless scaling of Web and Database servers during peak periods with no application downtime; \n\t \n\t \n\t Ability to customize this infrastructure around their specific needs; \n\t \n\t \n\t Reliability guaranteed with a 99.99% uptime SLA; and \n\t \n\t \n\t Significant productivity improvements, enabling a change to the development regime that eliminates infrastructure management overheads, and accelerates code though to production via better CI (Continuous Integration) enablement and 100% consistency between environments. \n\t \n \n This combination of capabilities allows the business to reduce overall development costs and manage risk when deploying changes into the production environment, reducing the potential for revenue loss, and enabling revenue optimization changes into live during peak traffic periods, providing enormous competitive advantage. \n \n \u201cAs we evaluated our hosting options we met with many different companies; most of them said \u2018You are exactly the type of customer we want to work with\u2019, but none of them could fit us into the standard offering they wanted to sell us. When we met Platform.sh we were excited, because we found a company that not only had an amazing service, but who were willing to engage with us as a true partner, and were committed to our success. They architected a custom hardware stack that fit our e-commerce application perfectly. We\u2019re excited to grow together.\u201d \u00a0 -Dallas Despain, Director of Engineering, Perfectly Posh \n \n \n \u201cWe are extremely pleased that Perfectly Posh has chosen us to be the foundation upon which they continue their amazing growth. This customer manages one of the largest Drupal Commerce implementations in the world, and to be chosen to help support this mission-critical application is an affirmation of our next generation PaaS and deep knowledge of the e-commerce Use Case.\u201d \u00a0 -Kieron Sambrook-Smith, Chief Commercial Officer, Platform.sh \n \n What is Platform.sh \n Platform.sh is a second generation Platform-as-a-Service offering a continuous deployment cloud hosting solution. \n It is a fully automated cloud solution that can cover the needs of small self-service accounts but also powers multiple dedicated cloud regions running tens of thousands of instances over multiple IaaS providers. Targeting the web application market and foremost large PHP e-commerce sites and media sites, it has been chosen as the official cloud partner of major open source projects such as Symfony, EzPublish, and Drupal Commerce. It has also been chosen by major Open Source software vendors and is now powering their SaaS offering through its technology. It has signed exclusive deals with two major European sovereign cloud providers. \n Platform.sh is a VC backed startup headquartered in Paris, with three fully owned subsidiaries and employees on three continents. In its 18 months of activity it has met with explosive growth, acquiring thousands of clients from more than a hundred countries, doing as much business in the United-States as in Europe. Among its clients you can find key accounts, such as Vivienne Westwood, the British Retailer Reiss, the Canadian Football League, the British Council, Parc Asterix, Seloger.com, the German startup Flixbus, and the South-American El Universo. \n About Perfectly Posh \n Perfectly Posh \u00a0is a pampering brand founded on four core principles: we simply pamper, we use the best ingredients in our products, we are made in the USA, and everyone deserves a little time to take care of themselves, in other words: You Deserve It. \n Download \u00a0this press release \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Continuous Deployment solution Platform.sh now available on the hosted infrastructure of Cloudwatt Orange Business Services ", "url": "https://platform.sh/2016/03/platform-available-on-cloudwatt-by-orange/", "documentId": "18c04953b94f0843ba812b581611e5a42ba301db", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Continuous Deployment solution Platform.sh now available on the hosted infrastructure of Cloudwatt Orange Business Services \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Kieron Sambrook-Smith \n                  \n                   Chief Commercial Officer \n                  \n                  \n                 \n            \n          \n         \n         24 Mar 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \u00a0 \n Paris, France. - March 24, 2016, \u00a0for immediate release \n The power of continuous deployment is now available on the hosted infrastructure of Cloudwatt Orange Business Services thanks to the newly formed partnership between Platform.sh and Orange Business Services \n \n A partnership with the cloud infrastructure solution Platform.sh \n Orange Cloud for Business, Orange\u2019s Business Services subsidiary dedicated to Cloud Computing activities, signs a partnership with Platform.sh to offer a\u00a0second generation PaaS\u00a0(1)\u00a0based on the major technological innovation of Linux containers. The purpose of this partnership enables developers to completely ignore hosting infrastructure and systems operations, to focus solely on developing their applications and websites in a logical way that allows \u201cDevOps\u201d to give way to \u201cNoOps\u201d. \n In approaching Platform.sh, Orange Cloud for Business gives customers agile application development capabilities, whilst ensuring safe national data location. As well as saving time, this platform enables customers to lower their total cost of ownership (TCO) by 30%. \n Platform.sh, a service based on a major technological innovation \n Through Platform.sh technological innovation, development environments can be created - which are perfect copies of production - on the fly, and in less than 60 seconds. This continuous deployment model allows site builders to deliver an ongoing flow of change requests, one by one. It is common for a Platform.sh project to have twenty pre-production environments running in parallel, delivering tens of new features into production each day. \n The service is particularly suited to transactional web applications with heavy traffic such as major e-commerce sites. Indeed, it allows an organisation to become highly reactive to market trends and optimising revenue through fast updates to live, as well as seamless scaling with no application interruption to deal with traffic spikes. It also comes with an enterprise-level 24/7/365 support offering and 99.99% SLA guarantees. This partnership will enable Orange customers and their web agency partners to benefit from this innovative offer. \n \n \u201cWe were attracted by the innovation of the Platform.sh solution and the dynamism of the team. At Orange Cloud for Business, we strongly believe in the use of cloud services to improve productivity and help customers focus on their core business. Allowing developers to focus solely on the code without worrying about infrastructure management achieves this goal.\u201d \u00a0- Philippe Laplane, CEO Orange Cloud for Business. \n \n \n \u201cOur goal is to reach many potential customers with our solution by relying on an efficient Public Cloud. By partnering with Orange we can both respond to data sovereignty requests within the European territory, whilst enjoying a strong commercial advantage by accessing the customer portfolio of this French group.\u201d \u00a0- Frederic Plais, Platform.sh President and CEO. \n \n Cloud Computing World Expo (Porte de Versailles): Demonstrations of the Platform.sh solution March 23, 2016 from 11:00 on the Orange stand (F25) \n About Orange Business Services, \n The Orange entity for business, both a telecommunications operator and IT services company, supporting every aspect of your digital transformation. More than two million businesses in France and 3,000 multinationals place their trust in us. \n What is Platform.sh \n Platform.sh is a second generation Platform-as-a-Service offering a continuous deployment cloud hosting solution. \n Platform.sh\u2019s fully automated cloud solutions covers the needs of small self-service accounts but can also power multiple dedicated cloud regions running tens of thousands of instances over multiple IaaS providers. Targeting the web application market and foremost large PHP e-commerce sites and media sites it has been chosen as the official cloud partner of major open source projects such as Symfony, EzPublish and Drupal Commerce. It has also been chosen by major Open Source software vendors and is now powering their SaaS offering through its technology. It has signed exclusive deals with two major European sovereign cloud providers. \n Platform.sh is a VC backed startup headquarterd in Paris, with three fully owend subsidiaries and employees in three continents. In its 18 months of activity it has met with explosive growth acquiring thousands of clients from more than a hundred countries, doing as much business in the United-States as in Europe. Among its clients you can find key accounts, such as Vivienne Westwood, the British Retailer Reiss, the Canadian Football League, the British Council, Parc Asterix, Seloger.com, the German startup Flixbus or the South-American El Universo. \n (1)\u00a0 PaaS is a cloud model that enables the physical infrastructure to be outsourced, along with middleware applications, the database, data integration layer and application development environments. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh becomes an independent company in a sweeping reorganization of Commerce Guys activities ", "url": "https://platform.sh/blog/2016/02/platform.sh-independent-company", "documentId": "8dcb9d2f02f680798dcb429f44fc3d95f6379462", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh becomes an independent company in a sweeping reorganization of Commerce Guys activities \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Fred Plais \n                  \n                   CEO \n                  \n                  \n                 \n            \n          \n         \n         09 Feb 2016 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         These are exciting times for us and we wanted to share the news\u2026 the award winning, container powered, git orchestrated, continuous deployment cloud hosting solution, initially created by Commerce Guys now valiantly stands on its own two feet. And the team is ecstatic. \n The gist of it is: \n \n\t Platform.sh becomes an independent company \n\t Commerce Guys refocuses on the development of Drupal Commerce \n\t Actualys acquires Commerce Guys service activities in France \n\t Acro Media acquires Commerce Guys services activities in the US \n \n \n .. why go independent ? \n This reorganization will allow for both products (Platform.sh and Drupal Commerce) to accelerate their development with renewed focus. \n Platform.sh has met with explosive growth. In its 18 months of activity, Platform.sh has acquired thousands of clients from 104 countries, doing as much business in the United-States as in Europe. Among its clients you can find key accounts such as Vivienne Westwood, the British Retailer Reiss, the Canadian Football League, the British Council, Parc Asterix, Seloger.com, the German startup Flixbus or the South-American El Universo. \n Immediately after showing Platform.sh to our agency partners and clients for the first time, we received consistent feedback that we should widen our technology stack spectrum beyond Drupal. \n Therefore, we decided to cover other PHP applications as a starting point, including Symfony, Magento and WordPress as well as supporting bespoke PHP applications. And we are continuing to enlarge the scope of our offering at a rapid pace (Node.js was the latest announcement we made). \n As the benefits that we offer (productivity gains through shorter release cycles enabled by our continuous delivery model), work for any web technology, it was clear Platform.sh had to follow its own way. \n We will continue to offer the best Drupal hosting solution on the market.. but we will also continue to add more and more features and support for many exciting technologies. \n The investment funds supporting Platform.sh (ISAI, Alven Capital, Open Ocean and Hi Inov) are even more engaged than ever in the development of Platform.sh. \n And we even made a nice video to present the company or our revamped team page, check it out! \u00a0 \n \n \u00a0 \n And what about Drupal Commerce? \n Going stronger than ever ! \n Commerce Guys has long been a leader in the development of e-commerce websites using Drupal, with its flagship Drupal Commerce project now running on over 60,000 sites. A production ready release of Drupal Commerce for Drupal 8 will drive more growth when it enters beta in March 2016. In the meantime, developers are already using the standalone libraries published by Commerce Guys to support the next release, helping the company spread its knowledge and experience beyond the Drupal community. \n Ryan Szrama, the creator of Ubercart and of Drupal Commerce, succeeds Fr\u00e9d\u00e9ric Plais as President of Commerce Guys. He will lead the company to refocus on the development and support of Drupal Commerce. Project co-maintainers Bojan \u017divanovi\u0107 and Matt Glaman will direct the company\u2019s product development and consulting programs respectively, with goals to achieve a full release on Drupal 8 by DrupalCon New Orleans and to offer more strategic consulting and support to companies adopting Drupal Commerce. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "How micro is your microservice? ", "url": "https://platform.sh/blog/how-micro-is-your-microservice/", "documentId": "76df20b1af6167ddcd9a50bb5368f835c537f07b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           How micro is your microservice? \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         07 Aug 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Microservices  have been all the rage for the past several years.  They\u2019re the new way to make applications scalable, robust, and break down the old silos that kept different layers of an application at odds with each other. \n But let\u2019s not pretend they don\u2019t have costs of their own.  They do.  And, in fact, they are frequently, perhaps most of the time, not the right choice.  There are, however, other options besides one monolith to rule them all and microservice-all-the-things. \n What is a microservice? \n As usual, let\u2019s start with the canonical source of human knowledge,  Wikipedia : \n \n \u201cThere is no industry consensus yet regarding the properties of microservices, and an official definition is missing as well.\u201d \n \n Well that was helpful. \n Still, there are common attributes that tend to typify a microservice design: \n \n Single-purpose components \n Linked together over a non-shared medium (usually a network with HTTP or similar, but technically inter-process communication would qualify) \n Maintained by separate teams \n And released (or replaced) on their own, independent schedule \n \n The separate teams part is often overlooked, but shouldn\u2019t be.  The advantages of the microservice approach make it clear why: \n \n Allow the use of different languages and tools for different services (PHP/MongoDB for one and Node/MySQL for another, for instance.) \n Allows small, interdisciplinary teams to manage targeted components (that is, the team has one coder, one UI person, and one DB monkey rather than having a team of coders, a team of UI people, and a team of DB monkeys) \n Allows different components to evolve and scale scale independently \n Encourages strong separation of concerns \n \n Most of those benefits tie closely to  Conway\u2019s Law : \n \n Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization\u2019s communication structure. \n \n A microservice approach works best when you have discrete teams that can view each other as customers or vendors, despite being within the same organization.  And if you\u2019re in an organization where that\u2019s the case then microservices are definitely an approach to consider. \n However, as with any architecture there are tradeoffs.  Microservices have cost: \n \n Adding network services to your system introduces the network as a point of failure. \n PointS of failure should always be plural, as a network, even a virtual and containerized one, has many, many points of failure. \n The network will always be 10x slower than calling a function, even a virtual network.  If you\u2019re using a shared-nothing framework like PHP you have to factor in the process startup cost of every microservice. \n If you need to move some logic from one microservice to another it\u2019s 10x harder than from one library to another within an application. \n You need to staff multiple interdisciplinary teams. \n Teams need to coordinate carefully to avoid breaking any informal APIs \n Coarse APIs \n Needing new information from another team involves a much longer turnaround time than just accessing a database. \n \n Or, more simply: Microservices add complexity.  A lot of complexity.  That means a lot more places where things can go wrong.  A common refrain from microservice skeptics (with whom I agree) is \n \n \u201cif one of your microservices going down means the others don\u2019t work, you don\u2019t have a microservice; you have a distributed monolith.\u201d \n \n To be sure, that doesn\u2019t mean you shouldn\u2019t use microservices.  Sometimes that is the right approach to a problem.  However, the scale at which that\u2019s the is considerably higher than most people realize. \n What\u2019s the alternative? \n Fortunately, there are other options than the extremes of a single monolith and a large team of separate applications that happen to talk to each other.  There\u2019s no formal term for these yet, but I will refer to them as \u201cclustered applications\u201d. \n A clustered application: \n \n Is maintained by a single interdisciplinary team \n Is split into discrete components that run as their own processes, possibly in separate containers \n Deploys as a single unit \n May be in multiple languages but usually uses a single language \n May share its datastore(s) between processes \n \n This \u201cin between\u201d model has been with us for a very long time.  The simplest example is also the oldest: cron tasks.  Especially in the PHP world, many applications have had a separate cron process from their web request/response process for literally decades.  The web process exists as, essentially, a monolith, but any tasks that can be pushed off to \u201clater\u201d get saved for later.  The cron process, which could share, some, all, or none of the same code, takes care of the \u201clater\u201d.  That could include sending emails, maintenance tasks, refreshing 3rd party data, and anything else that doesn\u2019t have to happen immediately upon a user request for the response to be generated. \n Moving up a level from cron are queue workers.  Again, the idea is to split off any tasks that do not absolutely  need  to be completed before a response can be generated and push them to \u201clater\u201d.  In the case of a queue worker \u201clater\u201d is generally sooner than with a cron job but that\u2019s not guaranteed.  The workers could be part and parcel of the application, or they could be a stand-alone application in the same language, or they could be in an entirely different language.  A PHP application with a Node.js worker is one common pattern, but it could really be any combination. \n Another variant is to make an \u201cAdmin\u201d area of a site a separate application from the front-end.  It would still be working on the same database, but it\u2019s possible then to have two entirely separate user pools, two different sets of access control, two different caching configurations, etc.  Often the admin could be built as just an API with a single-page-app frontend (since all users will be authenticated with a known set of browser characteristics and no need for SEO) while the public-facing application produces straight HTML for better performance, scalability, cacheability, accessibility, and SEO. \n Similarly, one could make a website in Django but build a partner REST API in a separate application, possibly in Go to squeeze the last drop of performance out of your system. \n There\u2019s an important commonality to all of these examples: Any given web request runs through exactly one of them at a time.  That helps to avoid the main pitfall of microservices, which is adding network requests to every web request.  The fewer internal IO calls you have the better; just ask anyone who\u2019s complained about an application making too many SQL queries per request.  The boundaries where it\u2019s reasonable to \u201ccut\u201d an application into multiple clustered services are anywhere there is, or can be, an asynchronous boundary. \n There is still additional complexity overhead beyond a traditional monolith: while an individual request only needs one working service and there\u2019s only one team to coordinate, there\u2019s still multiple services to have to manage.  The communication paths between them are still points of failure, even if they\u2019re much more performance tolerant.  There could also be an unpredictable delay between actions; an hourly cron could run 1 minute or 59 minutes after the web request that gave it an email to send.  A queue could fill up with lots of traffic.  Queues are not always perfectly reliable. \n Still, that cost is lower than the overhead of full separate-team microservices while offering many (but not all) of the benefits in terms of separation of concerns and allowing different parts of the system to scale and evolve mostly independently.  (You can always throw more worker processes at the queue even if you don\u2019t need more resources for web requests.)  It\u2019s a model well worth considering before diving into microservices. \n How do I do either of these on Platform.sh? \n I\u2019m so glad you asked!  Platform.sh is quite capable of supporting both models.  While our CPO might yell at me for this, I would say that if you want to do \u201cmicroservices\u201d you need multiple Platform.sh projects. \n Each microservice is supposed to have its own team, its own datastore, its own release cycle, etc.  Doing that in a single project, with a single Git repository, is rather counter to that design.  If your system is to be built with 4 microservices, then that\u2019s 4 Platform.sh projects; however, bear in mind that\u2019s a logical separation.  Since they\u2019re all on Platform.sh and presumably in the same region, they\u2019re still physically located in the same data center.  The latency between them shouldn\u2019t be noticeably different than if they were in the same project. \n Clustered applications, though, are where Platform.sh especially shines.  Every project can have  multiple applications  in a single project/Git repository, either in the same language or different language.  They can share the same data store or not. \n To use the same codebase for both the web front-end and a background worker (which is very common), we support the ability to spin up the same built application image as a separate  worker container .  Each container is the same codebase but can have different disk configuration, different environment variables, and start a different process.  However, because they all run the same code base it\u2019s only a single code base to maintain, a single set of unit tests to write, etc. \n And of course  cron tasks  are available on every app container for all the things cron tasks are good for. \n Within a clustered application processes will usually communicate either by sharing a database (be it MariaDB, PostgreSQL, or MongoDB) or through a queue server, for which we offer  RabbitMQ . \n Mixing and matching is also entirely possible.  In a past life (in the bad old days before Platform.sh existed) I built a customer site that consisted of an admin curation tool built in Drupal 7 that pulled data in from a 3rd party, allowed users to process it, and then exported pre-formatted JSON to Elasticsearch.  That exporting was done via a cron job, however, to avoid blocking the UI.  A Silex application then served a read-only API off of the data in Elasticsearch, and far faster than a Drupal request could possibly have done. \n Were I building that system today it would make a perfect case for a multi-app Platform.sh project: A Drupal app container, a MySQL service, an Elasticsearch service, and a Silex app container. \n Please code responsibly \n There are always tradeoffs in different software design decisions.  Sometimes the extra management, performance, and complexity overhead of microservices is worth it.  Sometimes it\u2019s\u2026 not, and a tried-and-true monolith is the most effective solution. \n Or maybe there\u2019s an in-between that will get you a better balance between complexity, performance, and scalability.  Sometimes all you need is \u201cjust\u201d a clustered application. \n Pick the approach that fits your needs best, not the one that fits the marketing zeitgeist best.  Don\u2019t worry, we can handle all of them. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Of Cicadas and cron jobs ", "url": "https://platform.sh/blog/of-cicadas-and-cron-jobs/", "documentId": "12386b4c7fb655f7ff2c8b3a86e5812dbcb0521d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Of Cicadas and cron jobs \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         21 Aug 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The cicada is a flying insect found world-wide.  It\u2019s loud but not particularly threatening.  It\u2019s most famous attribute, though, is that many species of cicada (particularly in North America) are periodic, only emerging every 13 or 17 years depending on the species.  When it does emerge, a huge brood reaches maturity all at once, mates, lays eggs, and then dies.  The eggs hatch and the offspring spend the next 13 or 17 years living deep underground and burrowing before repeating the cycle again. \n But why 13 and 17 years?  That\u2019s a rather odd set of numbers\u2026  And that\u2019s actually the point.  Those lifespans are both prime numbers, that is, they are divisible only by themselves and one.  Many cicada predators also have multi-year life cycles rather than emerging every year.  So what are the odds of a large number of cicada predators emerging in the same year as a large number of cicadas? \n Very low, in fact.  That\u2019s the point.  Because a prime number is only divisible by 1 and itself, a smaller number sequence will overlap with it only when those two are multiplied.  That is, a 4 year cycle predator and a 13 year cicada will only emerge at the same time every 4 * 13 = 52 years.  If the cicada emerged every 12 years, however, the 4 year predator would have a veritable buffet every third generation and the cicadas would have a bad time every time. \n Over time, evolutionary pressure weeded out the many-common-divisor periodic species of cicada, leaving only those that have overlapping generations every year and those that have a huge all-at-once generation on a prime-number schedule. \n What can we learn from the little cicada?  If you have two repeating events, and you want them to happen at the same time as rarely as possible, have them repeat on prime numbers. \n But what does that have to do with web development? \n A website frequently has background tasks that it needs to run from time to time; sometimes every few minutes, sometimes every few hours, sometimes every few days.  Most often these are run using a  cron  task. \n Generally speaking it\u2019s a bad idea to run more than one cron job at once.  Even if they don\u2019t interfere with each other they may use a lot of CPU, and you don\u2019t want them to slam the system all at once.  In fact, on Platform.sh we don\u2019t allow that to happen: If a cron task tries to start but there\u2019s another already running, we force the new one to pause and wait for the first to complete. \n That can sometimes cause issues if, say, a nightly backup process wants to start while a routine every-few-minutes cron task is running.  The snapshot will start but block waiting for the other cron task to finish, which if it\u2019s a long running task could result in a brief period of site outage while the snapshot waits its turn. \n Avoiding predatory cron jobs \n So how do we make sure one cron job runs at the same time as another as little as possible?  The same way cicadas avoid predators: Prime numbers! \n More specifically, say we have a cron task that runs normal system maintenance every 20 minutes.  Then we have an import process that periodically reads data from an external system every 10 minutes, and another that runs every 5 minutes to send out pending emails. \n The result will be that every 10 minutes we have two cron tasks competing to run at the same time, and every 20 minutes we have three cron tasks competing.  That\u2019s no good at all! \n Instead, let\u2019s set the system maintenance to run every 23 minutes, the import to run every 11 minutes, and the email runner every 7 minutes.  It\u2019s almost the same schedule, but because the numbers are prime they will only very rarely overlap.  (Every 77 minutes in the shortest case.)  That spreads the load out far better and avoids any process blocking on another. \n Now if we want to add a nightly backup, we can have it run at, say, 17 minutes past 4:00 am.  It will be extremely rare for the other cron tasks to hit at the 17 minute mark exactly, so our snapshot will almost never need to block on another cron task and our site won\u2019t freeze while it waits. \n Isn\u2019t it nice when bugs end up helping your software run faster? \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Deploy your Python 3.7 code to the Moon ", "url": "https://platform.sh/blog/deploy-your-python-37-code-to-the-moon/", "documentId": "45c8215996806d7d979d606b74fc624ddc982db7", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Deploy your Python 3.7 code to the Moon \n         \n\n        \n         \n            \n         \n         05 Sep 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Python is one of the most popular programming languages of the last decade ( hey most of Platform.sh is written in Python ! ). It doesn't matter if you do data science, develop a video game or you just need to write a quick-and-dirty script. Python will always serve you well. This multi purpose language is also a big player in the world of web development and that's why the batteries included infrastructure for building and deploying\u00a0your Python projects is available on Platform.sh, and we've just added Python 3.7\u00a0to the list of supported versions. \n What's\u00a0new in 3.7? \n The latest major release of the language introduces many cool new features. In case you are bored of writing  self.attribute = attribute  in your  __init__  methods all the time, you might like Data classes, documented in  PEP\u00a0557 . Class definition and creation of the object, storing a bunch of data can be really easy now: \n \n from dataclasses import dataclass                                                  \n                                                                                   \n                                                                                   \n @dataclass                                                                         \n class C:                                                                           \n      i: int                                                                         \n      j: int = None                                                                  \n      database: InitVar[DatabaseType] = None                                         \n                                                                                   \n      def __post_init__(self, database):                                             \n          if self.j is None and database is not None:                                \n              self.j = database.lookup('j')                                          \n                                                                                   \n                                                                                   \n c = C(10, database=my_database)  \n \n Note the types are just documentation. They aren\u2019t examined at runtime. \n Another visible change is the new  breakpoint() \u00a0built-in function, which makes debugging your code smoother. It can be put anywhere in the code instead of  import pdb; pdb.set_trace()  line. The main benefit of  breakpoint()  is that it is configurable via the\u00a0 PYTHONBREAKPOINT  environment variable. You can simply ignore all the  breakpoint()  calls in your code by setting its value to zero: \n \n $ PYTHONBREAKPOINT=0 python3.7 script.py \n \n or switch to use a debugger of your choice instead of the default\u00a0 PDB : \n \n $ PYTHONBREAKPOINT=pudb.set_trace python3.7 script.py \n \n The  asyncio  standard library module has received many new features too. For example the new  asyncio.run()  function removes the burden of creating the event loop explicitly. Creating a trivial coroutine is now as simple as this: \n \nimport asyncio\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\nasync def hello_world():\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\n\u00a0\u00a0\u00a0 print(\"Hello World!\")\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\nasyncio.run(hello_world())\n \n Python 3.7 brings also performance improvement, higher precision timing functions, typing enhancements and much more features and fixes, take a look at the   official documentation  for the complete list.  Be aware that Python 3.7 final was released upstream only a couple of months ago and older versions of some Python libraries and frameworks like  Django \u00a0<\u00a02.0,  gevent \u00a0<\u00a01.3.6 are not fully compatible with the latest Python version. \n PIP 18.0 \n The brand new pip 18.0 is coming to Platform.sh alongside new the Python release! Version number might be a bit surprising. We all remember using pip version 9 or 10 recently. Pip development team have switched to a Calendar based versioning scheme. This is not the only thing that changed. Support for packages specifying build system requirements in  pyproject.toml  file, aka  PEP\u00a0518  was introduced in version 10 and improved in the latest release. Last two releases contains also a plenty of fixes, see the  relase notes  for more information. \n Try it out! \n Are you thrilled to try all these great features yourself? You can do so on Platform.sh! The only thing you have to do is to put following line into your  .platform.app.yaml  file: \n \n type: \"python:3.7\" \n \n Commit the changes, push your code and enjoy the flight! \n\n        \n\n\n\n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Sharpen your tusks: it's time for Python 3.8 \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Apache Kafka now available \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Even more batteries included: Platform.sh configuration libraries \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh deploys to Canada ", "url": "https://platform.sh/blog/platformsh-deploys-to-canada/", "documentId": "8fe0d25ebf9c683b40c0ca0ac5bd389f444ab322", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh deploys to Canada \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Gauthier Garnier \n                  \n                   Partner Manager \n                  \n                  \n                 \n            \n          \n         \n         14 Aug 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh continues to expand its service to new places, and we\u2019re excited to announce the immediate availability of Canada as a new region in North America. \n The new region opens up more opportunities for projects of all types and sizes. Companies and organizations such as the Canadian Football League are already using our new region to improve their developer productivity and reduce their DevOps workload.\u00a0 \n \n \u201cAs an organization, we decided to go with 'Platform as a Service-Plus'. That is, a service that provided one-command deploys, auto-scaling but also a level of human expertise on tap that can work with you to diagnose the issues that are bound to crop up in any server environment.\u201d\u00a0 \n Sully Syed, Director Media Technology, Canadian Football League. \n \n Because we are compliant with both Canada\u2019s Personal Information Protection and Electronic Documents Act (PIPEDA) and Canada's Anti-Spam Law (CASL), your organization will find a safe haven with Platform.sh. \n Frederic Plais, CEO of Platform.sh, sees the launch of this new region as a natural step as the company grows in popularity in North America. \n \n \u201cWe\u2019re on a mission to simplify the cloud infrastructure so that developers can really just focus on coding. Now, everyone can turn an idea into a real, functioning project with Platform.sh in an instant. We\u2019re really pleased to be offering our solution to customers in Canada, and we\u2019ll continue to open new regions in the future.\u201d \n \n New customers can  sign up for a free trial and deploy a site in minutes . Existing customers who\u2019d like to try out the new region risk-free can drop us a message via our contact form or our  Slack channel . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "We're improving our communications tools at Platform.sh ", "url": "https://platform.sh/blog/were-improving-our-communications-tools-at-platformsh/", "documentId": "aa943017a6f51aaa6e99b3d9762797c7e51bb972", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           We're improving our communications tools at Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Joey Stanford \n                  \n                   Security, Compliance and Data Protection Officer \n                  \n                  \n                 \n            \n          \n         \n         26 Oct 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We take user privacy seriously at Platform.sh, and we want to make sure we give you the most control possible over how and when we communicate with you. We are transferring contacts that have previously opted-in\u00a0to a new email management system,\u00a0Marketo,\u00a0in order to\u00a0continue to improve data privacy\u00a0and ensure we can send important notifications about Platform.sh to existing customers and others that we've communicated with. \n To change your opt-in status, or discuss this change in general, please email us at sayhello@platform.sh. \n You can read our complete\u00a0Privacy Policy\u00a0 here . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Why you should care about WeChat before it's too late! ", "url": "https://platform.sh/blog/why-you-should-care-about-wechat-before-its-too-late/", "documentId": "cdcc10a47f0f99726941e2e61284234bc8bed3bb", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Why you should care about WeChat before it's too late! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         31 Oct 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Launched by Chinese tech giant, Tencent, in 2011, WeChat is the Chinese super-app you won\u2019t be able to avoid in the near future. But it\u2019s not too late to step in. \n In this post, I\u2019ll explain how Chinese users surf the Internet, and introduce the most important WeChat concepts that you need to understand before taking the leap. \n The future of the Internet is on mobile \n I\u2019m sure you\u2019re familiar with Black Friday, Cyber Monday, and Thanksgiving. But have you heard about Single\u2019s Day? Single\u2019s Day, which takes place on November 11 (11/11), is the unofficial Chinese holiday celebrating the pride of being single. (It\u2019s like the anti-Valentine\u2019s Day.) And it\u2019s famous for being the largest shopping day in the world. \n Last year, Alibaba\u2019s marketplaces, Tmall and Taobao, made more than US$25.4 billion in sales during Single\u2019s Day. This event is now nearly  four times the size of America\u2019s biggest shopping days, Black Friday and Cyber Monday . And nearly 90% of the sales happened on mobile! \n \n Today,  China\u2019s Internet population has reached 802 million people , representing about 57.7% of the entire Chinese population. More importantly, 788 million users are mobile users, accounting for 98% of the country\u2019s total user base. \n In comparison, there\u2019s an estimated of 300 million Internet users in the US. \n On an average day, WeChat receives approximately 30% of all the time spent in mobile apps in China ( based on the 2017 Internet Trends Report ). \n On top of that, WeChat accounts for  90% of all messaging app users in China , while Facebook Messenger  doesn\u2019t reach 30% in the US . \n So yes, WeChat is huge and dominant in China, and it\u2019s coming to your door. \n Quick tour of WeChat \n With more than  1 billion monthly active users  WeChat is the largest messaging app in China. \n WeChat embeds a complete ecosystem of tools and services, enabling users to buy train and plane tickets, read news, purchase and manage city services, pay for utilities, book a doctor\u2019s appointment, pay for traffic fines, hail a ride share, book a stay at a hotel, get a bike share, order takeout, donate to charity, pay taxes, and more. \n WeChat also includes a payment system, called  WeChat Pay , used by more than  800 million users worldwide , accepts  13 currencies  in more than  25 countries , and is available in more than  300,000 offline stores . WeChat Pay has already replaced cash for many Chinese citizens. \n Today, WeChat is mostly used in China, but it\u2019s expanding very quickly overseas. International brands that have already taken the leap are targeting Chinese consumers in mainland China, as well as Chinese tourists and expatriates consuming overseas ( travel retail ). Those brands build marketing campaigns or e-commerce applications on WeChat. In 2013, McDonalds paved the way as the first major overseas company to launch an e-commerce campaign on WeChat. Today, most luxury brands and retail stores have already launched WeChat campaigns, WeChat stores, and WeChat mini programs. Even Google launched its own  WeChat mini program in China . \n There are two WeChat networks: overseas (WeChat) and domestic (Weixin) \n The most important thing to understand before getting started on WeChat is that there are  two different WeChat networks . \n \n Weixin  for the domestic audience which regroups all users registered from mainland China, Macau, Hong Kong, Taiwan, South Korea, and Japan \n WeChat  for the overseas audience which regroups users from every other country. \n \n For  individual account  (users), the mobile phone used to register will define the network that you belong to, whereas for  official account  (businesses), the location of your\u00a0business entity will define which network you belong to. \n While it\u2019s true that contacts are shared between both networks (a user on the domestic network can communicate with users on the overseas network and vice versa), you should know that a user registered on the domestic network won\u2019t be able to follow or join an official account on the overseas network. \n This means that if you open a WeChat official account (overseas) for your brand or company, you won\u2019t have access to the audience of the domestic network. To access the domestic audience, you need a Weixin official account (domestic), which requires you to have a business entity in China. \n Also, some marketing features (like advertising, tracking, reporting) are currently  available only in the domestic network. However, those features are frequently deployed on the overseas network, eliminating the issue in most cases. \n As more countries are added to the domestic network, the boundaries between both networks are shrinking, and more features are being rolled out on both networks. \n So, opening a WeChat official account today is a very good first step into the giant WeChat ecosystem. \n There are two WeChat application types: H5 site and mini program \n In the past, brands were building WeChat-optimized websites (aka H5 site), which open in the WeChat browser, to run marketing campaigns, increase brand awareness, and sell products. Today, many brands are still building H5 sites as they\u2019re easy to develop and deploy using the same technologies developers use every day. \n In January 2017, Tencent launched their  WeChat mini programs . A WeChat mini program is a lightweight application (less than 10MB) that runs instantly on WeChat\u2019s interface. WeChat mini programs have seen an explosive growth, and there are more than  1 million WeChat mini programs  available today, with 280 million daily users. It\u2019s quite impressive knowing that it took Apple  10 years to reach 2.1 million mobile applications in its app store ! \n E-commerce and gaming are the most popular segments among mini programs. Many major consumer brands have already launched their own mini program, offering an incredible potential to attract customers and monetize on WeChat. \n According to the  Mini Program Ecosystem Evolution 2018  report from Jisu, mini programs have reached a \u201chyper-growth\u201d period and are beyond the early stages of \u201cexploration\u201d and \u201cmarket activation.\u201d Even though mini programs are on their way to \u2018maturity stage,\u2019, it\u2019s still not too late for brands to join this incredible consumption trend. \n Both H5 sites and mini programs have pros and cons; your choice will depend on what you want to achieve. In either case, feel free to contact us for more details about this topic. \n Deploy your WeChat application on Platform.sh \n Whether you plan to build a WeChat H5 site or a WeChat mini program on the overseas network, Platform.sh is definitely the right choice. \n Platform.sh has unique support for multi-applications, enabling you to develop your back end and your front end together in production-like environments. This capability makes building new features and testing backward compatibilities (APIs) extremely simple. Remember that both WeChat H5 sites and WeChat mini programs are always powered by both a back end and a front end. \n Platform.sh also supports most of the web programming languages (including PHP, Ruby, Node.js, Python, Go, Java), so you can build your WeChat applications using the frameworks and tools you\u2019re already familiar with. \n With instant cloning of entire development environments, Platform.sh enables you to implement fast development cycles and iterate quickly when developing and testing your applications. \n Read more about Platform.sh support for WeChat H5 sites and mini programs on our  WeChat landing page . \n Talk with you soon on WeChat! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Good morning, Australia: we\u2019re back in business ", "url": "https://platform.sh/blog/good-morning-australia-were-back-in-business/", "documentId": "4b565dd5c7af6a0a4271ec22376c2a939a47ce39", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Good morning, Australia: we\u2019re back in business \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         15 Nov 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         It\u2019s been just over a year since Platform.sh launched its service in Australia, and we thought it was time to take a step back and reflect.\u00a0 \n We\u2019re excited to share that the product we\u2019re delivering today meets our quality bar. But the past year has been a challenge for us \u2014 and for those who\u2019ve  entrusted us with their pixels. The good news? We\u2019ve not only ramped up service delivery, but we have fantastic news about pricing, plan sizes, and a range of other cool stuff. \n Delivering online services is a zero-sum game: it doesn\u2019t really matter how many awesome features the product has if it doesn\u2019t have the stability you planned. Unfortunately, that\u2019s where we were 2017. We rolled out some awesome, new tech in Australia that just wasn\u2019t ready for primetime; as a result, if you were a Platform.sh client before April, things were a bit bumpy.  \n Better uptime \n We\u2019re happy to share that, through the concerted efforts of our engineering and operations teams, our new tech has paid dividends for Australian clients, with uptime in the public region exceeding 99.9%. Even better, clients are now protected by auto-rebalancing and auto-recovery. We now routinely resize, update, and make changes to hosts in that region \u2014 all behind the scenes.  \n Better support \n We recognize that, sometimes, things can go awry. We\u2019ve ramped up our APAC Support team to \u00a0better support you. Overall, the Platform.sh global support team will be more than 40 people strong by the end of 2018, with a team entirely dedicated to Asia-Pacific countries. By this time next year, we expect to grow the team by 50%. \n Better pricing \n Beginning immediately, Platform.sh will reduce the price of its Professional hosting in Australia by approximately 25% to bring it into line with our other regions. This will apply to all customers and will be reflected in your November 2018 invoice. \n Better plan sizes \n We\u2019ve also recently introduced some new plan sizes, allowing larger projects to run on our Professional regions . These are a really good fit fo r regional businesses, programs for government, not-for-profits, and education. \n Better Partner Programs, government services, TAM services \n There are many other new things coming your way: \n \n\t New Partner Program for agencies, including direct access to pre-sales and bid management, and access to client productivity metrics  \n\t Better offers and discounts for not-for-profits and education providers \n\t A special offer for freelancers \n\t Special services for government agencies \n\t Consulting and advisory (Technical Account Management) for maximising project velocity \n \n If you\u2019d like to talk to someone about how Platform.sh can help you, or perhaps renew your acquaintance,  get in touch today . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Update to our Privacy Policy ", "url": "https://platform.sh/blog/update-to-our-privacy-policy/", "documentId": "e923ea6bc5db635a85c29918e9b880d90ec807fc", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Update to our Privacy Policy \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Joey Stanford \n                  \n                   Security, Compliance and Data Protection Officer \n                  \n                  \n                 \n            \n          \n         \n         19 Nov 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We have updated our Privacy Policy, located at  https://platform.sh/privacy-policy , to version 2.1. \n We have made these specific changes:  \n \n\t \n\t We fixed some grammar and punctuation mistakes \n\t \n\t \n\t We added the clause \u201cand other privacy regulations as described in this Privacy Policy\u201d to indicate that we take measures to insure compliance with privacy regulations beyond just GDPR. \n\t \n\t \n\t We have added a toll free contact number for use by California citizens pursuant to the California Consumer Privacy Act of 2018. Please note that the best way to contact us is still via our contact page. \n\t \n \n If you have any questions about this, please  contact us . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh Wins 2018 Stratus Award for Cloud Computing ", "url": "https://platform.sh/blog/platformsh-wins-2018-stratus-award-for-cloud-computing/", "documentId": "bdb0dadc5ec9ec8328c13b284ada2f39ccd39633", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh Wins 2018 Stratus Award for Cloud Computing \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Global Newswire \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         30 Aug 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         SAN FRANCISCO\u00a0--\u00a0 Platform.sh , provider of the idea-to-cloud application platform that simplifies cloud infrastructures, has been named winner of a\u00a0 2018 Stratus Award for Cloud Computing \u00a0in the Platform as a Service category by Business Intelligence Group. The Stratus Awards honor companies, products and people that offer unique, cloud-based solutions. \n Platform.sh\u2019s comprehensive idea-to-cloud application platform enables enterprises to realize all of the promises and benefits of the cloud without its ever-growing complexities. More than 650 enterprise customers across the globe currently use the Platform.sh product today to develop, test, deploy and run their web applications on diverse cloud providers with speed and confidence. \n \n \u201cPlatform.sh is clearly ahead of the pack helping to drive innovations in the cloud,\u201d said Maria Jimenez, Chief Nominations Officer of Business Intelligence Group. \u201cThe cloud is now part of all of our daily lives and the staff and volunteer judges are pleased to shed a little light on these innovative services, organizations and executives.\u201d \n \n Cloud infrastructures are inherently messy and require a deep level of expertise. As a result, implementing a continuous deployment strategy to ensure fast-evolving business needs are met, while also ensuring uptime, security and compliance, has become one of the most daunting challenges in software development. Platform.sh\u2019s idea-to-cloud platform \u2013 which combines an automated cloud with unique rapid cloning technology to instantly spin up and deploy exact clones of entire live web applications in less than 60 seconds \u2013 makes this simple. \n \n \u201cWe are dedicated to our mission to simplify our customers\u2019 cloud infrastructures, and we\u2019re honored to be recognized by Business Intelligence Group for our efforts,\u201d said Frederic Plais, CEO of Platform.sh. \u201cEnterprises are increasingly seeking comprehensive PaaS solutions that enable them to leverage the power of the cloud while minimizing its complexity, and this award is further validation that our approach resonates with today\u2019s modern enterprises.\u201d \n \n About Platform.sh \n Platform.sh is an idea-to-cloud application platform that simplifies cloud infrastructures. Its unique git-driven technology enables development teams to develop, test, deploy and run with speed and confidence. Adopters of Platform.sh have experienced a 90 percent reduction in DevOps efforts as compared to DIY solutions and 40 percent better productivity as compared to managed hosting providers at a significantly lower total cost. The company is recognized as a leader as a laureate of the European Commission H2020 program. Headquartered in Paris, France and San Francisco, Platform.sh serves thousands of self-serve and enterprise customers worldwide, including The Financial Times, Gap, Magento Commerce, Orange, Hachette, Stanford University, Harvard University, The British Council, and Lufthansa. \n About Business Intelligence Group \n The Business Intelligence Group was founded with the mission of recognizing true talent and superior performance in the business world. Unlike other industry and\u00a0 business award programs , business executives\u2014those with experience and knowledge\u2014judge the programs. The organization\u2019s proprietary and unique scoring system selectively measures performance across multiple business domains and then rewards those companies whose achievements stand above those of their peers. \n Press Contact: \n Kory Buckley \n 10Fold for Platform.sh \n Platform.sh@10fold.com \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Adobe Summit 2019: take-aways \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh and Drupal 7.32 Core SQL Injection ", "url": "https://platform.sh/2014/10/15/sa-core-2014-005/", "documentId": "e3880f01f4f2175d21b56fd2ff7f0447502102cb", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh and Drupal 7.32 Core SQL Injection \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Shannon Vettes \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         15 Oct 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         On October 15, 2014, the Drupal Security Team released Drupal 7.32 to remedy a severe SQL injection vulnerability in core. Platform.sh took immediate actions to protect all Drupal customers. Here is the list of specific actions that have been taken, and some answers to questions that our customers have asked us. \n \n Steps taken by Commerce Guys: \n All customers have been contacted directly with instructions for eliminating the vulnerability. \n Platform.sh is able to recognize whether a Drupal site is vulnerable to this attack. Whenever the vulnerability is detected, this is what happens: \n On Platform.sh Standard production sites , POST requests are blocked, and GET requests are sanitized (query strings, cookies, and custom headers are stripped). This allows your site to remain online, although it will not be functional as a CMS. \n On Platform.sh Standard development sites , access is denied outright and a message is shown with instructions to fix the problem. \n Platform.sh Enterprise customers, as well as customers with application support packages, \u00a0will have their sites updated directly by the Platform.sh team. They will be contacted to confirm this patch is being managed for them, so if you didn\u2019t get contacted you need to perform this update yourselves. \n As soon as your Drupal site has been upgraded to 7.32, or patched manually, the security measures above will be deactivated and your site will operate normally. Note that every environment needs to be updated (via Git push, Synchronize, or Merge). \n How will the site be blocked? \n If you are trying to access a Drupal site hosted on Platform.sh and see this message, Platform.sh has blocked your request. \n \n We apologize, but this page is not currently accessible. The site administrator has been informed and we hope to have the issue resolved soon. \n \n Once the Drupal site has been updated, this message will disappear and the site will return to normal. \n How do I apply the security upgrade? \n You need to upgrade your website to\u00a0 Drupal 7.32 , or apply\u00a0 this patch \u00a0for any Drupal 7 version. \n On Platform.sh, it depends on the way you deployed your website: \n \n\t If you are deploying your website with the Drush Make workflow, simply edit your\u00a0  project.make  \u00a0file and replace the Drupal core version with\u00a0  projects[drupal][version] = 7.32  . \n\t If you are using a distribution of Drupal (Drupal Commons, Commerce Kickstart, etc.) that is not yet updated, add:\u00a0  projects[yourcoreprojectname][patch][] = \"<link to the patch>\"  \u00a0to the project. \n\t If you are deploying your website manually (\u201cvanilla mode\u201d), apply this patch manually. \n \n Remember, for customers who subscribe to Platform.sh Enterprise, Developer Support, and Application Support packages, the patch will be made for you. \n If you are a Platform.sh Standard customer, you need to apply the patch yourself, otherwise a protective block will be placed on only the sensitive pages until the patch is applied. \n This is terrible, I can\u2019t afford to have downtime! \n You\u2019re right. However, this particular security announcement from the Drupal Security Team is particularly nasty as it reveals a security hole that is both easy to exploit and can be used to completely infiltrate your site. Being hacked is worse than downtime, which is why the Platform.sh team has taken steps to help guarantee that no security breach takes place. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "1000 tickets strong ", "url": "https://platform.sh/2014/10/22/1000-tickets-strong/", "documentId": "0e28f1d4c8f01b97e380a866d4074de80c929149", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           1000 tickets strong \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Shannon Vettes \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         22 Oct 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Since taking over the Support Director role at Commerce Guys, I\u2019ve had quite a laundry list of things to do to improve this already rolling program and keep our Platform.sh and Application Support customers happy. Despite that (never-ending) to-do list, I wanted to take a moment to recognize that we just passed our 1,000th ticket! It\u2019s small as milestones go, but it represents a lot of success for our team, so I wanted to share some fun facts with you all to celebrate! \n Recent program stats: \n \n\t 100% of our P1 tickets are replied to in 30 minutes or less; \n\t 91% of our customers provided feedback saying they are satisfied with our work to date; \n\t 99% of tickets have been treated within our SLA standards; and \n\t 100% of customers were informed about the Drupal security bug and we patched all our enterprise customers in just a few minutes on Wednesday! \n \n Congrats on passing the 1,000 ticket mark team! Keep up the great work! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Deploy with PHP 7.3 this Friday, er, Thursday ", "url": "https://platform.sh/blog/deploy-with-php-73-this-friday-er-thursday/", "documentId": "6c5abceda73b34736dc1680f91a4822679249405", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Deploy with PHP 7.3 this Friday, er, Thursday \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         06 Dec 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         PHP continues its steady march forward, and today marks the release of the latest version,  PHP 7.3 . \n It also marks its release on Platform.sh, and our first holiday gift to you this season. \n So what\u2019s new? \n PHP 7.3 brings continued incremental performance improvements to the language.  It\u2019s not as big as the jump to 7.0 was (few things can be), but the same code running under PHP 7.3 should be a bit faster than on 7.2. \n While there\u2019s no earth-shattering additions in this version, there are a few nice pluses.  Like a handful of new utility functions, such as  is_countable() ,  array_key_first() , and  array_key_last()  (all of which are fairly self-explanatory).  What\u2019s most exciting for language nerds that follow PHP\u2019s development (like yours truly)? Trailing commas in function calls are now legal, just as they have been on array definitions for years; Heredoc and Nowdoc syntax are now also more forgiving, allowing for more nicely formatted, multiline strings; the JSON utilities can now be set to throw exceptions, like most newer functionality, allowing error handling to be more consistent throughout the application. \n OK, it\u2019s not going to change the world, but it\u2019s still nice. \n There are also a number of deprecations around edge cases to flag behaviors that are expected to go away in PHP 8.0.  (Yes, we did just say that number.)  See the  Changelog  for the full list of changes and fixes. \n Cool, so how do I do it? \n As always at Platform.sh, it\u2019s just a YAML tweak away.  In your  .platform.app.yaml  file (not on the master branch), change your application  type  to  php:7.3 , like so: \n type: php:7.3\n That\u2019s it.  When next you push on that branch, you\u2019ll get the PHP 7.3 container.  Test it out, and make sure everything is working (it should be fine), then merge back to master when you\u2019re ready. \n Enjoy the latest and greatest PHP has to offer\u2014any day of the week! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Wunderkraut adopts Platform.sh for all of its 14 international offices ", "url": "https://platform.sh/2014/09/wunderkraut-chooses-platform/", "documentId": "df5fb3c48f70ff2a96f53fbc8eef637cefdd7a17", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Wunderkraut adopts Platform.sh for all of its 14 international offices \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   PR Newswire \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         30 Sep 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Commerce Guys , the creators behind Drupal Commerce and Platform.sh, announces a strategic partnership with\u00a0 Wunderkraut , the leading European pure play Drupal agency. \n Today, Commerce Guys announces its first Agency Enterprise Agreement (AEA) with Wunderkraut, under which they will adopt the Platform.sh service for cloud hosting and development in all 14 of its international offices. Wunderkraut has in excess of 100 developers who will be transitioning onto Platform.sh for the majority of their development efforts. \n \n Platform.sh is an innovative new way to develop and host in the cloud designed for Drupal and other PHP applications such as Symfony. It allows branching and merging at will to develop even the smallest feature with a live byte-for-byte copy of the original environment. Testing can be done any time, under the exact same conditions as Production. Platform.sh also scales for the biggest applications and sites. Antoine Crochet-Damais dubbed Platform.sh \u201cCloud Hosting 2.0\u201d in a Journal du Net article,* citing its unique infrastructure for continuous integration and use of infrastructure-oriented containers inspired by the Docker project. Platform.sh officially launched in May of this year. \n Wunderkraut has worked in partnership with Commerce Guys for some time, and were one of the first companies to be invited to the private beta test of Platform.sh earlier this year. Since then, the Wunderkraut team has deployed several live sites on both Platform.sh offerings: the self-service container-based version and the fully redundant Enterprise version. They have several more projects under development, and have provided invaluable feedback and contributions for improving the Platform.sh experience. \n Vesa Palmu, CEO of Wunderkraut said of the partnership, \u201cPlatform.sh is a unique product in the PaaS (Platform as a Service) market. Not only does it provide very competitive hosting and performance capabilities, but it differentiates with an unmatched development workflow that enhances team performance, reduces management complexity and saves money. Wunderkraut will also recommend Platform.sh to our customers because it provides them all of the necessary ingredients to enable Continuous Integration (CI) in a cost-effective manner, no matter how large or small the project.\u201d \n \u201cWunderkraut is a very influential agency with great talent and reach all over Europe. They\u2019ve been helping us to offer a relevant experience to Drupal developers with Platform.sh. It\u2019s very flattering and exciting to see the adoption of Platform.sh within their teams across the business.\u201d said Fred Plais, CEO of Commerce Guys. \n About Wunderkraut \n \n Wunderkraut\u2019s mission is to improve the business of our customers with digital tools, providing end-to-end digital services from developing strategy, providing consultancy and training to service design, development and support. We have 150 staff across 9 countries serving some of Europe\u2019s best-known brands and forward-thinking governments, and our solid processes, business focus and great communications are as important as our technical knowledge in making these projects a success. \n Some of the best available digital tools we use include Agile business development methods, agile project management and open source software. What makes us different though is our consultative, collaborative approach. We use our experience to help you define the right questions before starting work on the answers, building a clear strategy with you. We work in long term, highly collaborative relationships with our customers, forming \u2018one team\u2019 that operates in a borderless way across the organisations. Our agile approach means we meet the deadlines, stay within the budget and reach the goals of a project \u2014 three things that are sadly rare in digital projects. Our customer testimonials show our repeated success at this. \n About Commerce Guys \n Commerce Guys is the creator of Drupal Commerce, one of the world\u2019s fastest growing eCommerce solutions with over 45,000 active sites worldwide. Drupal Commerce is revolutionary software that integrates commerce, content and community to create engaging Web experiences that bring e-retailers more traffic to drive more results. Commerce Guys recently launched Platform.sh, the Continuous Delivery Cloud for web development and hosting. \n Commerce Guys won the overall grand prize and the gold prize in the Technology category at the E-commerce Awards 2013. The company was also awarded the gold prize for Best New Electronic Software Solution at the 2013 American Business Awards, also known as The Stevies. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Protecting your apps ", "url": "https://platform.sh/2014/10/21/protecting-your-apps/", "documentId": "a57b225de0ee09bf4cd0a66b64bdbc3a7fb82b72", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Protecting your apps \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Damien Tournoud \n                  \n                   CTO \n                  \n                  \n                 \n            \n          \n         \n         21 Oct 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         It has been a rough couple of weeks. First there was\u00a0 Shellshock , then AWS rebooting all instances because of a\u00a0 vulnerability in the Xen hypervisor ,\u00a0 POODLE , and now a\u00a0 Drupal SQL Injection issue . This last vulnerability is unique in Drupal history because it is trivially exploitable and affects the integrity of all deployed Drupal 7 websites. \n \n In preparation for this release, Moshe Weitzman from Acquia, David Strauss from Pantheon, and I, all three of us members of the Drupal security team, had a fruitful collaboration on how to best protect our customers. Moshe already\u00a0 mentioned this collaboration on the Acquia blog . \n Our first instinct was to deploy some form of web application firewall to protect our customers. Unfortunately, along with the team at Acquia, we quickly came to the conclusion that there is no way to design a set of rules sufficiently broad to catch all possible attacks without also causing a significant amount of false positives. \n Platform.sh, in addition to Drupal, runs a wide range of PHP applications. Our customers are leveraging Platform.sh to power development and production hosting of Drupal, Symfony, Pagekit, WordPress or even Magento projects. \n So Platform.sh ended up with a unique approach: we deployed an automated protective blocking system. It works a bit like an antivirus: it compares the code you deploy on Platform.sh with a database of signatures of known security issues in open source projects. \n This check is run every time you push code and also when the database of signatures is updated. For the few vulnerabilities deemed as\u00a0 highly critical , because they are remotely exploitable and affect the integrity of the whole application, we protectively block access to the application and inform our customers. \n We were surprised that such a database of vulnerability signatures in open source projects does not exist yet. So we are going to reach out to multiple parties to see if there is interest in maintaining one in the open. Let us know if you want to collaborate on this. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "CLI version 1.2 released ", "url": "https://platform.sh/2014/10/release-cli-1-2/", "documentId": "46ef2fbcf619d380893720e819cdd7def9258e63", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           CLI version 1.2 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Patrick Dawkins \n                  \n                   Product Engineer \n                  \n                  \n                 \n            \n          \n         \n         29 Oct 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We are proud to announce the latest release of the\u00a0 Platform.sh CLI . \n \n To install or upgrade, you can use Composer: \n \n composer global require 'platformsh/cli:1.*'\n \n \n New features in the latest release (version 1.2.2) include: \n \n\t Toolstack-based detection and building: this means that both\u00a0 Symfony \u00a0and\u00a0 Drupal \u00a0projects can now be built locally in the same way they are built on Platform.sh . \n\t A much more colorful interface: the commands in\u00a0  platform list  \u00a0are color-coded according to whether they run locally or require a connection. \n\t There is a new\u00a0  platform url  \u00a0command, which gets the public URL to your Platform.sh environment and opens it in your browser. \n\t All of the more risky commands now have confirm steps to protect against accidents. \n\t The frequently used\u00a0  platform checkout  \u00a0command has been improved, for a faster experience. \n\t \n\t Drupal users will benefit from a new\u00a0  platform drush-aliases  \u00a0command, which lets you see your project\u2019s Drush aliases. It also lets you customize the alias group name - if you type: \n <p><code>platform drush-aliases -g myproject </code></p>\n\n<p>you will then have aliases such as&nbsp; <code>@myproject.master </code>&nbsp;instead of <code>@l0ngpr0j3ct1d.master </code>.</p>\n</li>\n \n \n The release also includes a host of bug fixes, performance and stability improvements. \n About the Platform.sh CLI \n The Platform.sh CLI (command-line interface) is an easy and fast tool which helps you manage your Platform.sh_ projects from the command line. You can use it to administer projects and environments, and to help you build projects locally for development. \n It is based on the\u00a0 Symfony Console Component , a flexible and widely used library for building PHP command-line applications. Naturally, it also relies on\u00a0 Git . \n For more information (and to file issues) see the\u00a0 public GitHub repository . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Leading digital agencies adopt Platform.sh to support Continuous Delivery ", "url": "https://platform.sh/2014/11/us-platform-adoption/", "documentId": "8e5c4cb0a3fe2333ae0dd6247d7753830ba4fdeb", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Leading digital agencies adopt Platform.sh to support Continuous Delivery \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   PR Newswire \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         05 Nov 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh becoming the hosting and development tool of choice for Drupal and Symfony web applications in North America and Europe. \n Ann Arbor, Michigan, November 5, 2014 \u00a0- A growing list of North American digital agencies will use Platform.sh, the continuous delivery cloud by\u00a0 Commerce Guys , for much of their development and production hosting needs. These announcements follow similar recent decisions by leading European digital agencies to do the same, signifying rapid uptake of the Platform.sh Platform-as-a-Service (PaaS) product. \n Platform.sh is a fully automated Git-driven web application hosting PaaS that manages not only the entire production infrastructure, but also any number of development and staging environments. It extends a branch-merge workflow to infrastructure so that every branch can be tested as if it were in production, and scales for the largest sites. \n Antoine Crochet-Damais dubbed Platform.sh \u201cCloud Hosting 2.0\u201d in a\u00a0 Journal du Net article \u00a0citing its unique infrastructure for continuous integration. Platform.sh officially launched in May of this year. \n \n Benefits to web agencies include: \n \n\t Savings on System Administration and DevOps \n\t Accelerated development schedules from specialized build and deployment tools \n\t Enhanced confidence in deployment \n\t Rock-solid production hosting with a competitive SLA and 24/7 support \n \n The new Platform.sh Agency Program is designed to simplify use of Platform.sh across an entire development team, along with 24/7 support and rebates on production hosting. Commerce Guys is pleased to announce Therefore Interactive as the first firm to take advantage of this new program. \n The following digital agencies have all experienced the benefits of Platform.sh, and are now delivering new projects and in some cases transitioning customers to Platform.sh. \n \n\t Globant \n\t Therefore Interactive \n\t Palantir \n\t Promet Source \n\t Third and Grove \n\t Digital Bridge \n\t Drop Forge Labs \n\t Texas Creative \n\t Bluespark Labs \n\t Blue Oak Interactive \n \n \u201cThe guys at Commerce Guys understand what it means to partner with an agency. We\u2019ve been very pleased with the Platform.sh products and service levels, and even more importantly, this has been reflected in our ability to service and provide for our customers\u201d said Alex De Winne, President & CEO at Therefore Interactive of Toronto, Canada. \n \u201cDigital Bridge Solutions is proud to be partnering with Commerce Guys to lead the adoption of Platform.sh among North American Drupal agencies. We have had great support from the highest levels of the Commerce Guys organization in educating our team on the capabilities of the platform. Our code deployment processes for our Production clients on Platform.sh have been extremely easy and efficient as a result\u201d said Chris Rooney, President & Founder, Digital Bridge Solutions. \n \u201cWe are excited to adopt Commerce Guys\u2019 cutting-edge PaaS product as our preferred hosting and continuous integration solution. Platform.sh has significantly streamlined our operations at DropForge Labs and enabled us to focus on value delivery. The development workflow has not only reduced complexity and standardized our deployment processes, but also eliminated the traditional overhead associated with DevOps.\u201d said Andrew Santiago, President & CEO of DropForge Labs. \u201cIt is evident that the vast feature set, incredible performance, and phenomenal customer service has positioned Commerce Guys to be the market leader in this space. We look forward to a lasting partnership with Commerce Guys and will continue to recommend Platform.sh to all of our customers.\u201d \n \u201cIt\u2019s thrilling to see such rapid adoption by our partners. Platform.sh meets developers\u2019 needs by removing DevOps activities, encouraging frequent deployment, and allowing them to respond and react more quickly to their customers.\u201d said Scott Dahlgren, Managing Director of North American Operations for Commerce Guys. \u201cOur partners are using Platform.sh to improve the quality of their delivery while reducing costs, making them more competitive in the market.\u201d \n Commerce Guys is now accepting agencies for its new program. For more information, contact\u00a0 scott@commerceguys.com . \n About Commerce Guys \n Commerce Guys is the creator of Drupal Commerce, one of the world\u2019s fastest growing eCommerce solutions with over 50,000 active sites worldwide. Drupal Commerce is revolutionary software that integrates commerce, content and community to create engaging Web experiences that bring e-retailers more traffic to drive more results. Commerce Guys recently launched Platform.sh, the Continuous Delivery Cloud for web development and hosting. \n Commerce Guys won the overall grand prize and the gold prize in the Technology category at the E-commerce Awards 2013. The company was also awarded the gold prize for Best New Electronic Software Solution at the 2013 American Business Awards, also known as The Stevies. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "HTTP caching, custom PHP configurations, build dependencies ", "url": "https://platform.sh/blog/2014/caching-custom-php-build-dependencies/", "documentId": "3ee85738e6087af16db270ad6b2b2a27f369a10b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           HTTP caching, custom PHP configurations, build dependencies \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         10 Nov 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \u00a0 \n We have been busy! Today, we are happy to announce three important new features of Platform.sh: \n \n\t Support for\u00a0 HTTP caching \u00a0at the web server level, finely configurable on a per-route basis; \n\t Support for\u00a0 tweaking the PHP configuration , by enabling / disabling extensions and shipping your own\u00a0  php.ini  ; \n\t Support for specifying\u00a0 build dependencies , i.e. PHP, Python, Ruby or Node.js tools (like\u00a0  sass  ,\u00a0  grunt  ,\u00a0  uglifyjs  \u00a0and more) that you want to leverage to build your PHP application. \n \n \n HTTP caching \n Platform.sh now has an integrated reverse proxy cache, similar to Varnish but built directly into our web server (based on Nginx). The cache strategy is configurable on a route-by-route basis directly in your\u00a0  .platform/routes.yaml  \u00a0file. \n We decided to go with a simple, easy to understand, caching strategy. As most of the CDNs before us, we do not support the\u00a0  Vary  \u00a0HTTP header. Instead, we give you the ability to explicitly specify how the cache key is built. You can specify which cookies are whitelisted and part of the cache key, and which headers (in addition to the default headers) also participate. \n The default configuration whitelists all the cookies and some selected headers that are often used for content negotiation (  Accept  \u00a0and\u00a0  Accept-Language  ): \n \n http://{default}/:\ntype: upstream\nupstream: php:php\ncache:\nenabled: true\nheaders: [ \"Accept\", \"Accept-Language\" ]\ncookies: [ \"*\" ]\n \n \n You can tweak this configuration to fit the use case of your application, and you can also completely disable caching on the route: \n \n http://{default}/:\ntype: upstream\nupstream: php:php\ncache:\nenabled: false\n \n \n Read more about configuring the cache on\u00a0 our documentation . \n Custom PHP configurations \n Platform.sh now supports custom PHP configurations. You can specify this configuration directly in the\u00a0  .platform.app.yaml  \u00a0file, and you can also provide a\u00a0  php.ini  \u00a0file in your project, for additional configuration tweaks. \n In your\u00a0  .platform.app.yaml  \u00a0configuration file, you can now add a\u00a0  runtime  \u00a0key like: \n \n runtime:\nextensions:\n- http\n- ssh2\ndisabled_extensions:\n- sqlite3\n \n \n Platform.sh comes with\u00a0  pdo  ,\u00a0  mysql  ,\u00a0  mysqli  ,\u00a0  pdo_mysql  ,\u00a0  sqlite3  ,\u00a0  pdo_sqlite3  ,\u00a0  gd  ,\u00a0  curl  ,\u00a0  intl  ,\u00a0  mcrypt  \u00a0and\u00a0  zendopcache  \u00a0extensions enabled by default. You can disable those by adding them to the\u00a0  disabled_extensions  \u00a0list. \n In addition, we ship with\u00a0  enchant  ,\u00a0  gearman  ,\u00a0  geoip  ,\u00a0  gmp  ,\u00a0  http  ,\u00a0  imagick  ,\u00a0  imap  ,\u00a0  ldap  ,\u00a0  pgsql  ,\u00a0  pdo_pgsql  ,\u00a0  pinba  ,\u00a0  pspell  ,\u00a0  recode  ,\u00a0  redis  ,\u00a0  snmp  ,\u00a0  spplus  ,\u00a0  ssh2  ,\u00a0  tidy  ,\u00a0  xdebug  ,\u00a0  xmlrpc  \u00a0and\u00a0  xsl  \u00a0that you can enable. \n You can also provide a\u00a0  php.ini  \u00a0file that will be appended to the configuration maintained by Platform.sh. This file needs to be at the root of the application at the end of the build process, so depending on your build process, you might have to move it in place in a\u00a0  build  \u00a0hook. \n Note: we do not limit what you can put in the php.ini file in any way, but many settings can completely break your application. This is a facility for advanced users. \n Build dependencies \n Last but not least, the build process of Platform.sh now supports specifying build dependencies. Modern web applications often depend for their build process on tools that are written in a different language than that application itself. So we are now allowing you to specify those dependencies easily, regardless of the stack your application is written in. \n We support pulling PHP, Python, Ruby and Node.js dependencies. Those dependencies are independent of the eventual dependencies of your application, and are available in the\u00a0  PATH  , during the build process and in the runtime environment of your application. \n You can specify those dependencies directly in your\u00a0  .platform.app.yaml  , like this: \n \n dependencies:\nphp:\ndrush/drush: \"6.4.0\"\npython:\nbehave: \"*\"\nruby:\nsass: \"3.4.7\"\nnodejs:\ngrunt: \"~0.4.5\"\n \n \n And yes, that means that you can now specify the version of\u00a0  drush  \u00a0you want for Drupal projects. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "UI version 1.9 released ", "url": "https://platform.sh/2014/12/release-ui-1-9/", "documentId": "2202e7430e7ae319ccc9054fe3c3c1d69c4aba6c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           UI version 1.9 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         03 Dec 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, we are proud to announce the latest release of the Platform.sh UI. \n After listening to your feedback, we came up with improvements that will make your Platform.sh experience even better: \n \n\t Quick access to your environments \n\t Easy copy and paste of the Git and SSH commands \n\t Unified configuration screens \n \n \n Quick access to your environment \n No need to open a popup window which displays the web URL and SSH command anymore! \n You can now hover the\u00a0 Access info \u00a0link under the environment name to quickly access the information you need. \n \n Easy copy of the Git and SSH commands \n No need to select the content of the text box and right click to copy it! \n You can now hover the command an use the new\u00a0 CLICK TO COPY \u00a0feature which will copy the whole command into your clipboard. \n \n \n Unified configuration screens \n We have also unified the look and feel of the configuration screens and fixed many issues you were having with the different configuration forms. \n Read more about the\u00a0 Platform.sh UI . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "CLI version 1.6 released ", "url": "https://platform.sh/2014/12/release-cli-1-6/", "documentId": "d638cff74e3b7bbd6322932255fe3834e30fc21c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           CLI version 1.6 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Patrick Dawkins \n                  \n                   Product Engineer \n                  \n                  \n                 \n            \n          \n         \n         10 Dec 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We are proud to announce the latest release (version 1.6.0) of the\u00a0 Platform.sh CLI . \n \n To install or upgrade, you can use Composer: \n \n composer global require 'platformsh/cli:1.*'\n \n \n We have not written about the CLI for a while, so here are the new features we have added over the last month (since version 1.2): \n \n\t Command-line auto-completion: just press <Tab> while typing a command, and the CLI will auto-complete command names, option names, project IDs and environment IDs. You will need to set this up by adding a couple of lines to your\u00a0  .bashrc  \u00a0(or equivalent) file - see the\u00a0 installation instructions \u00a0for more information. \n\t There are three new commands for managing your environment\u2019s variables:\u00a0  platform variable:get  ,\u00a0  platform variable:set  , and\u00a0  platform variable:delete  . \n\t A new\u00a0  platform init  \u00a0command - if you cloned your Platform.sh repository directly using Git, you can use this to set up a local project. \n\t A new\u00a0  platform docs  \u00a0command, to visit or search our documentation. \n\t A new\u00a0  platform web  \u00a0command to open the Web UI for the current project and/or environment. \n\t The command\u00a0  platform ssh  \u00a0can now accept a remote command to run on the server, for example\u00a0  platform ssh 'tail -f /var/log/access.log'  . \n \n We have also made several bug fixes and stability improvements. \n About the Platform.sh CLI \n The Platform.sh CLI (command-line interface) is an easy and fast tool which helps you manage your\u00a0 Platform.sh \u00a0projects from the command line. You can use it to administer projects and environments, and to help you build projects locally for development. \n It is based on the\u00a0 Symfony Console Component , a flexible and widely used library for building PHP command-line applications. Naturally, it also relies on\u00a0 Git . \n For more information (and to file issues) see the\u00a0 public GitHub repository . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Git clients vulnerable ", "url": "https://platform.sh/2014/12/10/git-clients-vulnerable/", "documentId": "04447179c1c2e7b0b3ce632aee0fb9d4d3e03d01", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Git clients vulnerable \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Damien Tournoud \n                  \n                   CTO \n                  \n                  \n                 \n            \n          \n         \n         19 Dec 2014 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         On December 19, 2014, the maintainers of Git, the code revisioning tool used by Platform.sh,\u00a0 announced a vulnerability affecting Mac OS X and Windows users . Platform.sh customers are advised to upgrade their Git clients. \n Who is vulnerable, and what to do? \n The vulnerability affects Mac OS X and Windows users. Linux and Unix users are not affected. Git hosting services like Github.com and Bitbucket.com are not affected. Platform.sh, which hosts Git repositories for its customers, is also not affected. \n Git for Windows \u00a0can be used to upgrade Windows clients.\u00a0 Homebrew \u00a0can be used to upgrade Git on Mac OS X. \n Platform.sh infrastructure not at risk \n As the vulnerability is a client-side issue, and because Platform.sh runs 100% Linux infrastructure, Platform.sh\u2019s Git servers are not vulnerable to this problem. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Recommended hosting solution for Symfony applications ", "url": "https://platform.sh/2015/01/08/recommended-hosting-solution-symfony/", "documentId": "3070c388f73c338d65a78802602d4cd9ebf65917", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Recommended hosting solution for Symfony applications \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         08 Jan 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, we\u2019re proud to announce that Platform.sh is now listed as a\u00a0 recommended hosting solution for Symfony applications , alongside Heroku Cloud and Microsoft Azure Website Cloud. \n Symfony documentation \n The official Symfony documentation provides a step-by-step tutorial on how to\u00a0 deploy your application to Platform.sh . \n Platform.sh documentation \n You can read more about deploying and configuring Symfony applications on the\u00a0 Platform.sh documentation . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Platform.sh 2014, a year in review! ", "url": "https://platform.sh/2015/01/05/2014-year-in-review/", "documentId": "8533ec3009887483e06fb4ea28435b1474b1ded7", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh 2014, a year in review! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Robert Douglass \n                  \n                   Chief DevRel Officer \n                  \n                  \n                 \n            \n          \n         \n         05 Jan 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         June 10, 2014 was a special day for the Platform.sh team. We watched from around the world as something magical happened: our first online sale! Now, six months later, it\u2019s time to look back on the year and celebrate some of our successes. \n \n Great Partners \n Much of Platform.sh\u2019s growth has been due to the deep partnerships we\u2019ve formed. Wunderkraut \u00a0and\u00a0 Sensio Labs \u00a0both supported Platform.sh in the early phases providing valuable feedback, beta testing, and most importantly, customers, helping us grow quickly and prove the value of our product. \n Since then\u00a0 many other agencies \u00a0have signed up as partners, and are enjoying the benefits of continuous delivery. \n SaaS Products \n Platform.sh offers a unique set of advantages for companies that are building Software-as-a-Service products. SaaS providers who have chosen Platform.sh as their main deployment tool for new customers include\u00a0 Indivizo \u00a0and\u00a0 Roomify . \n Money Saved \n While making a first sale is a great milestone, saving your clients real money is an even better achievement. More than one of our customers report direct, measurable savings after adopting Platform.sh and the development workflows that it enables: \n \n \u201cOur success would not have been nearly so rapid without Platform.sh, which has transformed our ability to deliver important new website features and react to market conditions. We calculate a savings of at least 38% since the introduction of Platform.sh for our development and production hosting.\u201d \u2013 Ivan Lopez, CEO, Wauwaa.com \n \n 100s of Customers \n Our ambitious goal by the end of the year was to have 100 customers. We rejoiced the day we hit that goal, and promptly set about hitting it again. \n Staying Secure \n The past six months saw a number of highly publicized security vulnerabilities in various software components that could affect Platform.sh users. We were given the chance to\u00a0 flex our security muscles , successfully staying ahead of the curve and protecting our customers, even from the worst bug in the history of the Drupal project. Our fix blocking the Drupalgeddon attack was deployed within minutes of the vulnerability being announced. \n First \u201cP1\u201d ticket - better than pair programming \n The first crisis is also a milestone when you\u2019re launching a product, and our first \u201cPriority 1\u201d support ticket was no exception. We were attending the\u00a0 AWS Summit in Paris \u00a0when one of our beta customers had a problem. We were so eager to help that we put our heads together and solved the problem from the conference. \n <img src=\u201d/images/blog/aws-summit.jpg ) \n What\u2019s next \n 2015 is going to be a busy year for our team. We have many goals for improving the hosting experience of Platform.sh, including: \n \n\t Bringing more services online, including Elasticsearch, MongoDB, and Node.js. \n\t Providing a complete solution for local development tools. \n\t Deep integration with external services like Github, Bitbucket, Hipchat, Jira, and more. \n \n We\u2019ve set up very high expectations to provide some great features in \n \n\t We\u2019re convinced that we can achieve those objectives due to Platform.sh scalable architecture. \n \n Stay tuned! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blackfire Integration", "title": "Support for Blackfire Profiler ", "url": "https://platform.sh/blackfire-integration/", "documentId": "f3e34967f4c7966cf519a8944ed65a7ce0749c26", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Support for Blackfire Profiler \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         02 Feb 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, we are very happy to announce that the PHP containers deployed on Platform.sh come pre-installed with the\u00a0 Blackfire Profiler \u00a0developed by\u00a0 SensioLabs . \n The Blackfire Profiler monitors your Platform.sh code and reports on consumed server resources like memory, CPU time, and I/O. With the Blackfire Profiler on Platform.sh, you can quickly identify performance bottlenecks in code, and even compare two different codebases directly to see which performs better. Best of all, the Blackfire Profiler is currently totally #, and easy to set up. \n \n What can you do with it? \n Blackfire Profiler automatically instruments your code to gather data about consumed server resources like memory, CPU time, and I/O. \n You can launch profiling from a web-browser widget or through a CLI utility to keep track of the results online, where it will be easy to select two profiles and compare them. \n Even with a low overhead, Blackfire profiler will go deep into the details and show you information about your entire stack; including, for instance, SQL database engines or cache servers. \n Call graphs are displayed in a lovely UI where it\u2019s easy to focus in on the relevant data by quickly finding the hotpath, and not displaying \u201cnoisy\u201d function calls. \n Still in beta but already adopted by thousands of developers worldwide, Blackfire is provided as a free SaaS service. Paid tiers with additional features are planned for later this year. \n Those who have tried it seem to love it. Check it out for yourself ! \n \n Get Started \n Blackfire Profiler \u00a0is already installed in your PHP container, which means that the only step for you to use Blackfire is to configure the environment and install the web browser Companion. \n Read more on configuring the Blackfire Profiler on the\u00a0 Platform.sh documentation . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "File Structure for a Platform.sh Application ", "url": "https://platform.sh/2015/02/11/file-structure-platform-application/", "documentId": "b81eca7262af1ce4db394f3df3b4babc6c5ff828", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           File Structure for a Platform.sh Application \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         11 Feb 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh offers a deterministic approach to deploying applications. That means that the contents of your Git repository will determine exactly how infrastructure will get orchestrated, including what running services are available, and what scripts need to run during the building of your applications. \n The deterministic magic that makes this all happen is a file called\u00a0  .platform.app.yaml  which defines the properties of an application. You can create a version of this file for each application you\u2019re deploying, in the root directory for that app in your Git repository. \n This blog post shows how to structure your Git repository, and discusses the Platform.sh-specific files that are needed, as well as where your application code fits into that. \n \n Define your application(s) \n The structure of a Git repository for a single application is structured like this: \n \n .git/\n.platform/\nroutes.yaml\nservices.yaml\n.platform.app.yaml\nYOUR APPLICATION FILES\n...\n \n \n Platform.sh supports deploying multiple applications inside the same Git repository , which means a\u00a0  .platform.app.yaml  \u00a0needs to be placed in the root directory of each of your applications. \n Here is an example a Drupal app and a Symfony app together: \n \n .git/\n.platform/\nroutes.yaml\nservices.yaml\ndrupal-app/\n.platform.app.yaml\nYOUR DRUPAL FILES\n...\nsymfony-app/\n.platform.app.yaml\nYOUR SYMFONY FILES\n...\n...\n \n \n Read more about\u00a0 .platform.app.yaml file in our documentation . \n \n tip \n You can find many working examples in our\u00a0 Github repository . \n \n Services and Routes \n Two additional configuration files allow you to\u00a0 define what services you want to deploy \u00a0for each application and\u00a0 what routes will serve your applications . \n Services \n In Platform.sh, each service ( MySQL, Solr, Redis, ElasticSearch\u2026 ) runs within a specific isolated container. These containers get orchestrated into virtual clusters that comprise your application. You list which services you need, and how they\u2019re configured, within the special\u00a0  services.yaml  \u00a0file in your Git repository. The services will be provisioned when you\u00a0  git push  \u00a0to Platform.sh. \n Services are defined via a configuration file:\u00a0  .platform/services.yaml  . The file describes a list of services, including what version when multiple versions are available, and how much persistent storage should be allocated to that service. \n Read more about\u00a0 .platform/services.yaml file in our documentation . \n Routes \n In Platform.sh, Routes are descriptions of incoming URLs and what Platform.sh should do with them, including sending them to an application, or redirecting them. Routes also specify how the web server should handle caching, and whether Server Side Includes are to be used. \n Routes are defined via a configuration file:\u00a0  .platform/routes.yaml  . Routes can also be defined via the Platform.sh web UI. The\u00a0  {default}  \u00a0placeholder in any Route always gets expanded to whatever the default domain for the current environment. \n \n note \n \n \n If you update your Routes via the Web UI, you will need to\u00a0  git pull  \u00a0to see the updated\u00a0  .platform/routes.yaml  \u00a0file. \n \n Read more about\u00a0 .platform/routes.yaml file in our documentation . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Containers are the new static binaries ", "url": "https://platform.sh/blog/containers-are-the-new-static-binaries/", "documentId": "79d3dffe0e9c875c1b34bfe2fb16bc2bebf3fb5c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Containers are the new static binaries \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         26 Feb 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \n Containerization technologies offer higher density vs VMs but also some very useful abstractions. If not orchestrated, and built in a consistent and repeatable way they can become a maintenance nightmare (as relying on any kind of blobbish static executables can be).Both the performance impact and the complexity they can present can be managed by applying what we believe are very rational patterns. \n \u2013 TLDR; Now go read the whole thing. \n \n A dreaded interview question \n As an interview question I ask \u201cWhat are some of the advantages and some of the disadvantages of static binaries against dynamically linked binaries?\u201d The correct answer is \u201cstatic binaries are easier to deploy but harder to update.\u201d You get bonus points for saying \u201cthere will be differences in startup times\u201d (if libraries are already cached by the OS, dynamic linking might yield better performance, or on the contrary, if on a cold cache the OS has to seek all over the disk to find many small files, going dynamic may take longer). \u201cMemory footprint will be higher for static binaries\u201d is again a correct answer. And of course \u201cDisk space utilization will be higher for static binaries\u201d. \n \n Now, you may say that except the first thing - \u201charder to update\u201d - all of these other considerations have little to no consequence; disk space is so cheap, memory is getting cheaper. So\u2026 who cares? Deployment is a pain well worth a bit of overhead. And in the use-cases of yonder you might be right, Linux never really suffered from DLL Hell, still the upside sounds compelling for static binaries. If you have a single instance of your program running on a server the overhead will be negligible in all but the most extreme use cases. And you think, well updating may be just a teeny-weeny harder, but with all my DevOps goodness I should be fine. \n Come containers. \n We like containers. Platform.sh runs as a high density grid of micro-containers. I posit that containers compound this issue; and that where these days the sorrow starts ebbing (it will run deep and wide, bear with me). \n We know why containers are great, right? And it\u2019s not only the performance gains (as measured against other forms of virtualization). They give us a new abstraction. And a damn good one. Applications are more than code. More than the executable that we run. An application is one with its underlying infrastructure. It is nothing without its configuration, its data, its place in a topology. Just a bunch of useless bits. And the container is just that \u201cthe minimal set of stuff needed to run the application, bundled together in one place, with no external dependencies\u201d. This is precisely the abstraction that Docker added on top of LXC by not being \u201ca lighter vm\u201d but insisting on the portability of a single application. Or more precisely a single service that can be a part of an application. \n So basically containers are the new static binaries. They take the idea further. They \u201cstatically bind\u201d not only the code but everything else. Basically everything we said about static binaries will be true for \u201ccontainers as applications\u201d; They are easier to deploy. And they are harder to upgrade. And, by the way, the overhead they represent might also now be compounded if they are running static binaries. If you have thousands of containers running on server (and we do) the \u201cinconsequential\u201d overhead of those has just been multiplied by a couple of factors. The more we think about those containers as blobs the more they resemble good old virtualization. They become new \u201cVM appliances\u201d. \n \u00a0You would argue this is untrue because of the micro-services approach. Every container is a single service, more horizontal in nature, not an obese \u201cappliance\u201d. But here we see that it is hard to delineate precisely the bounds of what makes an \u201capplication\u201d. These days an application will usually be an ensemble, a graph composed of multiple services; As such our single container, though already useful is not yet the whole thing. If the application is for example a web application, it may rely on not only an internal API but also caching mechanisms, a search engine, and maybe a second App to handle CMS content, there is a very good chance that without a specific Nginx config, it won\u2019t run. Without all of these in a coherent state we are back to useless bits. With containers deploying each part of this service graph is easier. As each service will probably simply expose to the others a single TCP socket. The opacity here is extremely useful as an abstraction. But without careful architecture you get hit by the same penalties as static binaries: higher overhead, higher cost of update. \n When looking at the orchestration layer, the opacity of each component, of each container, having everything bound together neatly in one place, without the need to know any of the internals, makes our life clearly easier. This is a kind of plug-and-play architecture. A lego of components. But at the price of higher overhead and probably long-term instability. It might be plug and play, well, like Windows 95 was, because the internal opacity can also bring us flakiness. Where in a traditional architecture we would have had maybe two or three servers for a simple application, we might now have the equivalent of dozens for the same functional perimeter. Each component is separated, but they way they are glued together can be unstable. Do you really want to try to switch off and on again your datacenter in order to resolve an issue? Plug and play is nice, but when talking about deployments consistency is more important. Please remember that this is not something imposed by the Container orientation by itself; LXC and other containerization-like techniques are just isolating a binary from the rest of the OS. With enough care we can pay very little to no overhead at all. If we work on the correct abstractions we can avoid the flakiness. More on that later. \n Now, lets get back to the first counter argument to static binaries, the updating thing. \n Updating things in a blob world \n Imagine that we have a security issue in a library. Lets say in a popular, widely used one (that never happens, right?) We might very well have thousands and thousands of copies of the vulnerable routines hidden away in binaries, themselves hidden inside the blobs that are containers. There are very few tools to help us discover which those might be, and which binary used which library at which version. A problem like this is not something that is bound to happen soon. But this is something that is bound to happen. Imagine that many of the services you are running, have been pulled from a public repository of \u201ccontainer images\u201d. How will you know which one is affected? And the more \u201cmicro-service\u201d you went, the more of these images you are going to have. The complexity is staggering. Here at Platform.sh we can run above a thousand five hundred containers per host and have hundreds of hosts across which we run containers. As a rule of thumb, the smaller the granularity of services we run the happier we are, which is also why minimizing overhead is of extreme important to us. Without a consistent, traceable build process, without an orchestration layer, reacting to a critical flaw in a widely used library would amount to \u201ca riddle, wrapped in a mystery, inside an enigma;\u201d in the words of Winston Churchill. \n Now, say what you may about Debian; compare this nightmare scenario, updating those opaque blobs inside opaque blobs coming from a third party\u2026 to updating a single shared library and gracefully restarting a bunch of servers. That day, The Debian Way wins. \n There are of-course many ways to lessen the blow. And the first that comes to mind is imposing fully traceable, repeatable builds. This means that the good practice is to build your container images from source. It is much easier to find vulnerable containers through scanning their underlying code, and if everything is automated from build to deployment it means that you pay no cost for deploying the exact same version again (the built container, being simply a cache of the build process). The cost to redeploy an updated version is also marginal (patch the source, push to git, a single image is built and voil\u00e0.). This is how we do it in Platform.sh. \n Containers in Platform.sh are truly still blobs; We build each one once. They are still a content addressable thing. If you deploy 100 MySQL servers in a grid, on each host it is going to be on, we are only going to pay the disk space and much of the memory penalty once. Everything shared will only cost the OS once. This is because all our containers are read only. We mount anything that might be mutable on a different filesystem, so the r/w parts are always explicit. When we need to upgrade a piece of software, this just means pushing the commit, and it gets built and deployed. And because the relationships in a topology are semantic, because we understand who depends on whom, now it is just an issue of refreshing clusters, which happens without downtime. \n Abstractions \n Containers and VMs are not only run-time concepts. It\u2019s not only about their efficiency, they are also abstractions, and most of what we do in software is about expressing the correct level of abstraction. Abstractions serve us to hide complexity and put system frontiers. They allow us to separate responsibilities, they allow us to manage change. But Blobs by themselves are not abstractions, anyway these are not useful ones. They are the ABI, \u201cApplication Binary Interface\u201d not an API, they are implementation details. For precisely this reason, having a \u201cbuild process\u201d for your apps and then your containers is not enough, not by a long shot. You want this build process to have other qualities, primarily that the more you go towards the outer layers of your build the more declarative and less imperatively scripty you get. In Platform.sh we not only build the Application, we also build the infrastructure. And the build is based simply on declaring the dependencies of the application. \n Consistent Change \n We want declarative infrastructures because we are pursuing what can seem as an oxymoron - consistent source based deployments (where the source moves). You want to be able to update everything, update it dynamically, update it safely, and update it all the time, but you don\u2019t want the application to break all the time. So in Platform.sh the git commit that represents an application holds two things at the same time: an immutable reference to the source (application but also any dependencies such as the precise version of your database, or even the memory that was allocated to a service), and an immutable reference to the built containers that represents a hash of the binary blob (the built file system). You get the benefits of static binaries. The whole shebang, together, will always run, together, as an integral unit. It no longer has any external dependencies. But it the fact the what we manage together is not only the consistent state of each micro-container, but also the graph of services, their relations, the order in which they need to run, the order in which they need to stop. How to #ze them and how to gracefully restart them; How to clone them and how to move them between hosts. These are the orchestration level abstractions, that we believe to be an integral part of the application that allow us to confidently, continuously deploy. \n With the extra layers of orchestration, by letting git be the repo of all things, you can now also update. Just push a new commit; We will rebuild everything that needs to be rebuilt, and know how to \u201cdiff\u201d the current infrastructure from the one that is newly described and update the running environments so the new world represents its description. And now the infrastructure is at a new commit. It is again immutable. If you were to revert, you will get the precise state in which you were before. And you can always diff. You can always know what has precisely changed between two application deployment states. \n Infrastructure rot \n \n Building afresh, and declarative immutable infrastructures is what defends your application from infrastructure rot. Because like code, infrastructures rot, and maybe faster. A tweaked configuration parameter here, a changed memory allocation there; then cloned a VM or a Container (now running on different specs\u2026) Why is this parameter there now? No-one will know. And no-one will dare change it. Infrastructures rot like code does. When fear of change comes. When there are no commit messages. Copy and pasted code has no semantics; It may work, but it rots. The same is true for any part of the whole infrastructure. \n But Puppet and Friends? \n \n But there are so many nice automation tools these days, you might say; And the code that runs the scripts is of course in a git repo\u2026 We love Puppet, and we love Fabric, we use both and all of these (with Ansible and Salt, and even Chef, are great useful tools). But as long as you are shuffling around Blobs and putting them into production, as long as the deployment is not managed with the application as a single entity there is no real difference between doing this and using FTP on production (well that\u2019s a bit harsh maybe\u2026 still you have no real consistency guarantees, you have no guarantee that deployment and application will not diverge). You might of course be one of the golden ones, already doing continuous deployment and have heavily invested in both testing your deployment and in huge amounts of homemade tooling to make the whole thing smooth. When you continuously deploy with these methods, you may not be able to avoid failure, but as you detect it at a smaller granularity, you don\u2019t let the thing rot. It may continuously break, but you can continuously repair it. So, failure here is in no way unavoidable, avoiding it is simply very costly. \n Somewhat orthogonal to configuration management and deployers, we can see of late the emergence of an orchestration layer for containers; from the older Mesos project to the more recent Swarm, Fleet, Flynn and Kubernetes (and probably a dozen others, seems to be a new one every week). Most still lack maturity, and from these, the one that accounts for many of the concerns I am raising is probably Kubernetes. It exposes some of the primitives that would allow with sufficient investment to create an orchestration layer that allows for consistent operations. But it is a very low level beast. It exposes a lot of moving parts.. which defeats some of the purpose. We wanted to \u201ccontainerize\u201d firstly because we wanted a simple abstraction. There are so many moving parts that transposing now a whole cluster becomes difficult. If an app is just a small Symfony thing, that just depends on MySQL and ElasticSearch the whole configuration for this should be no more than a 10 lines file. But being simple should still allow it to have all the orchestration capabilities of a more complicated App. It may be simple buy it may still be critical; It may still need to evolve fast. \n This might be a transitory phase. As these projects mature and evolve higher abstractions may appear to hide away the details. But for the moment when you go the way of the container; When you have chosen the static route, there are few options that are not extremely costly to avoid infrastructure rot. Updating the stuff stays hard. \n The zeitgeist is going static \n It is almost a funny thing, to see this circular trend between \u201cDynamic\u201d and \u201cStatic\u201d be it types, compilation or tests\u2026 and now infrastructures and deployments. And the pendulum over the last two years or so is clearly swaying back to static; Ruby was all the rage just a small decade ago. \n How many projects have you seen lately whose main value proposition seems to be \u201cThe same thing, reimplemented in Go, as a single static binary\u201d? \n Now, don\u2019t get me wrong, if at its start I had little consideration for the design goals of the language, I have grown much warmer to it; its \u201cno-nonsense\u201d approach coupled with the very lively community around it have produced many a great project. \n And here at Platform.sh, though most of our code is in Python, we write all of our high throughput concurrent servers in Go, and we are very happy with it; It\u2019s more than \u201cconcurrency for idiots\u201d: many small language features make quickly writing robust network servers easier than in most other languages (probably not Erlang or Elixir, but again deploying and managing those does demand so much more know-how). \n So this is not a rant against Go. Not one against static typing, or static tests, not even static infrastructures. In the words of the GoLang FAQ \u201c\u2026 although Go has static types the language attempts to make types feel lighter weight than in typical OO languages. \u201c \n Static typing is great because you really want the error to pop before you deploy the code and run it. Static tests are great because they are faster, and you can never really know what paths a running program will take. And statically linked binaries are great because easier deployments which also means faster adoption when you are doing Bleeding-Edge Github style open source. Static Immutable infrastructures are great because do you really want these kind of things to be where your bugs get expressed? And Static Containers can also be great. As long as you remember that \u201cAll this has happened before, and all of it will happen again.\u201d \n So .. if you are going the container way I really believe you should think of the following: \n \n\t Going descriptive versus script oriented orchestration. Name things give them a role. \n\t Colocating everything that is a dependency; If you need it in order to run the app, its part of the app. \n\t Going Micro-Container. Watching every ounce of overhead. Watching every cache that gets busted. Deduplicating everything that can be. \n\t Building everything. Building all the time. \n\t Knowing an application is a graph. And its an ordered one. All dependencies must be managed all operations on a cluster must be ordered. \n\t Versioning everything. \n \n And you\u2019ll be fine. By the way, we are. \n If you find this compelling.. check out how Platform.sh supplants the paradigm of dev-staging-prod with one allowing you to clone an entire production cluster in a matter of seconds, creating a live ad-hoc environment for every git branch. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "CLI version 1.7 released ", "url": "https://platform.sh/2015/01/release-cli-1-7/", "documentId": "ade2c06ce947cf3e3569ea4642b56d46f016da7b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           CLI version 1.7 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Patrick Dawkins \n                  \n                   Product Engineer \n                  \n                  \n                 \n            \n          \n         \n         20 Jan 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We are proud to announce the latest release of the\u00a0 Platform.sh CLI . \n \n To install or upgrade, you can use Composer: \n \n composer global require 'platformsh/cli:1.*'\n \n \n New features in the latest release (version 1.7.1) include: \n \n\t A new\u00a0  platform httpaccess  \u00a0command to control HTTP access for an environment. \n\t The\u00a0  platform build  \u00a0command now saves archives (compressed copies) of each local build, which are re-used when possible. This saves build time, particularly if you are switching between branches locally. There is a\u00a0  --no-archive  \u00a0option to skip this behavior. \n\t Many commands now take the environment as an argument, rather than an option, which saves typing:\n\t \n\t\t platform environment:activate [environment]  \n\t\t platform backup [environment]  \n\t\t platform environment:deactivate [environment]  \n\t\t platform environment:delete [environment]  \n\t\t platform branch [name] [parent]  \n\t\t platform merge [environment]  \n\t \n\t \n\t The following commands now work with multiple environments:\n\t \n\t\t platform environment:activate [env1] [env2] [env3] [...]  \n\t\t platform environment:deactivate [env1] [env2] [env3] [...]  \n\t\t platform environment:delete [env1] [env2] [env3] [...]  \n\t \n\t \n\t You can now deactivate all merged branches with:\u00a0  platform environment:deactivate --merged [base]  \n\t You can delete all inactive environments with:\u00a0  platform environment:delete --inactive  \n \n About the Platform.sh CLI \n The Platform.sh CLI (command-line interface) is an easy and fast tool which helps you manage your\u00a0 Platform.sh \u00a0projects from the command line. You can use it to administer projects and environments, and to help you build projects locally for development. \n It is based on the\u00a0 Symfony Console Component , a flexible and widely used library for building PHP command-line applications. Naturally, it also relies on\u00a0 Git . \n For more information (and to file issues) see the\u00a0 public GitHub repository . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "UI version 1.10 released ", "url": "https://platform.sh/2015/01/release-ui-1-10/", "documentId": "13e7d842e6bcd9ce1767ec7cdbd6a3dab154275d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           UI version 1.10 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         26 Jan 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, we are proud to announce the latest release of the Platform.sh UI. \n We came up with some improvements that will make your Platform.sh experience even better: \n \n\t Easy upload and validation of your SSH key \n\t Restore a snapshot from the UI \n \n \n SSH key upload \n No need to leave the Platform.sh UI to add your SSH key. \n When you see this icon, this means you don\u2019t have uploaded your SSH key yet: \n \n This will open a popup so you can add your key directly: \n \n Read more on\u00a0 how to add your SSH key . \n Restore a snapshot \n After creating a snapshot, it\u2019s easy to restore it by simply clicking on the\u00a0  restore  \u00a0link in your activity stream: \n \n Read more about the\u00a0 Platform.sh UI . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "How the Platform.sh PaaS works ", "url": "https://platform.sh/blog/how-platform-paas-works/", "documentId": "a84772015d6ec4cb988415fcc825ce5275fb209a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           How the Platform.sh PaaS works \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         03 Mar 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \n In this post I will present, in very broad strokes, the workings of Platform.sh from a functional perspective. This will not be a discussion of the intricate technical details, but rather a high-level description to help you understand what is happening under the hood. \n \u2013 TLDR; Now go read the whole thing. \n \n \n Platform.sh is a PaaS \n Basically what this means, is that you, the user, only have to concern yourself with writing the application code. We take care of all the rest. We automatically manage everything that is needed to deploy the application, and all of its runtime dependencies. You need a database? We will deploy and configure it. And we will configure your app so it connects to it, as well as the copies of it that are made for each git branch. The same goes for search engines, caches, and the file system. We will configure the web server, we will configure the network. We take care of making sure everything can be consistently backed up, restored, etc. If something crashes, we take care of healing it; it\u2019s our job to make sure your application\u2019s infrastructure stays alive. \n You take care of the code. That\u2019s all. Batteries included. You don\u2019t have to do any kind of sysadmin work. In order to put your code intro production, you just git push it. \n We do give you all the tools to see what\u2019s happening and to control precisely everything. It\u2019s not a black box. You can ssh to the server. You can connect directly to the database and continue to use all the tools you are accustomed to. You can also automate everything. We have a REST API, as well as a very convenient CLI (command line interface) tool. \n Platform.sh is a new kind of PaaS \n You can call it a \u201csecond generation PaaS\u201d. In first generation PaaS systems, like Heroku (but basically all the others), the service would manage the application (and do the same kind of magic, you push code and it puts it into production), and sometimes another service (like for Heroku a PostgreSQL database), but everything else was still the responsibility of the user. If you want a search engine, or another type of database, well you needed to get that from a third party, as an add-on. \n They tried to make it as painless as possible, with integrated billing, and some help in injecting the configuration to your application, so it would be a bit more seamless, but this of course makes it more expensive, and more importantly much more complex (with many more possible failure scenarios, each different provider becomes a single point of failure - SPOF - for the whole thing). Because first generation PaaS systems manage only a small part of the application, you are still left with many things you need to care of by yourself. \n Platform.sh manages everything it manages \n In Platform.sh all the services you use are fully managed by the platform itself. This means that when you back up your application, everything get backed up. Consistently. Simply speaking, Platform.sh is a more general form of the same idea. This is why we always talk about \u201cclusters\u201d. When we deploy your application we build the different services the application will need and tie them together into a cluster. A group of servers that are a \u201cwhole\u201d. Some of these services will be things like infrastructure elements, databases and such, but you can also deploy multiple applications in the same cluster. \n Platform.sh supports multiple apps per cluster \n If you have a website that runs on multiple APIs, each such service will be run as an independent server, but the whole thing will be tied together into a single cluster to form a coherent entity. This is really nice for people that like the \u201cmicro-service\u201d style of architecture. With Platform.sh, we make it easy to manage a host of apps that work together. \n Platform.sh has a persistent file system \n Most PaaS systems, if not all, impose a unique constraint on developers. Their file system is either fully Read-Only, or are ephemeral. So basically you can not write to disk, or simply can not be sure it is going to be there. The main file system in Platform.sh is read-only, but we allow you to declare as many Read/Write directories as you would like. And the storage is managed. So when you back up your system they also get backed-up. When you clone a cluster they also get cloned. This means you do not need to hack your application to use something like S3 in order to have file uploads. Applications like Drupal, Magento, Prestashop or Wordspress, for example, function unmodified. \n Platform.sh can clone a running cluster \n This is probably the most useful, and most innovative feature we have to propose. Because Platform.sh manages everything as a coherent entity, with some powerful black magic we can almost instantly take a snapshot of the application cluster, duplicate it and create a new one, and push it to production. Because everything is managed, the new cluster will get new URLs, and all the apps inside it will get configured to work with each other. This allows you to create development or staging environments as you need those. You can develop using \u201cfeature branches\u201d and for each feature have a fully isolated environment, so you can rapidly validate just that feature. This also means that you never have bugs that only appear on production, because you can test each branch with real content. \n What happens when you deploy an app \n Deploying an app means simply pushing the source code to our git server. The git server that runs on Platform.sh is at the same time \u201cjust a normal git repository\u201d and a very smart piece of software. When you have pushed to it, it will try to understand what it needs to do. But you can also explicitly tell it precisely what requirements your application has. \n The only modification you need to do to your application is to tell it to load its configuration from the environment (and we supply\u00a0 all the examples you need ). \n There are a couple of \u201cdot files\u201d in YAML format you can put at the root of your application that will describe its dependencies. You can say for example \u201cmy app needs mysql as a database\u201d, or \u201cmy app needs this or that other php extension\u201d, or you can say \u201cmy front web app depends on these three API apps\u201d. If for example you need to build your app a specific Node.js, Python or Ruby library (for example Less or Jekyll) you simply specify those in the YAML file. There are many other aspects of the application you can control through this simple declarative style. You don\u2019t write scripts, you just tell Platform.sh what you need. \n Platform.sh is build oriented \n This very smart git server on the other side is going to operate in five steps. \n Configuration validation \n First the git server is going to inspect what you have sent it and see that it understands what it is supposed to do. If for example you have a syntax error in a configuration file, it will simply refuse the push. The same with code where there is a huge security risk that Platform.sh knows how to detect. This is a good thing; Because it means you can\u2019t break your production system that easily. Once the git server has validated the configuration and sees it can satisfy the requirements, it will build the cluster. \n The git server is smart. It can diff not only the code but also the infrastructure; Say you had a single MySQL database in your cluster. And now you want two of those, maybe a PostrgreSQL and an Elastic Search instance. It will understand what it needs to do in the next phase to make sure the topology of your cluster is modified to your new needs. \n Build \n I already said the git server was smart\u2026 and it is a git server. So it will only build stuff that has changed. This is one of the things that make Platform.sh so fast in deployment. Using Linux Containers, Platform.sh will now, in parallel, build each server that had something that changed. If for example you pushed a Drupal Drush Makefile, or a PHP composer.json file, it will know it needs to go search for the dependencies, and shuffle things around to create the correct directory structure. If in your .platform.app.yaml file you also specified a \u201cbuild hook\u201d, you can now run whatever scripts you wish. \n It is important to note that at this point the cluster has not been created yet. So you should not try to connect to a database or imagine anything was daemonized; This is just a build phase. \n Prepare slug \n The result of the build phase will be a file system, of which we now create an archive. We put this in permanent storage. So the next time push code, if a server did not change.. well we can just use this one; It also means that if you want to revert a deploy, it is basically instantaneous. Deterministic deployments are repeatable and reversible, after all. \n Deploy slugs and cluster \n Now Platform.sh provisions of all the elements it needs to run your application cluster. It will mount each service in its own container, configure the network so they can see each other (and only each other!) Here you need to remember that the main file system is read-only. This is what guarantees the fact that we can do deterministic deployments. \n It will also mount all of the read/write directories you specified. Again unlike other PaaS systems, Platform.sh gives you persistent, normal, storage, it just needs to know which directories contain stuff that is mutable. \n Deploy hooks \n A last step allows you to run a post-deploy script (you can use this for example to run an anonymization script for deployment on development environments, clear caches, ping external CI tools, etc.) When this script runs you already have access to a fully running application. \n Configure routing \n If everything went fine, we are now ready to configure routing, so your web traffic will arrive at your newly created cluster. If something failed, well then nothing would have happened; the \u201cold cluster\u201d is still there, so from your users\u2019 perspective, nothing changed. Neither failed nor successful deployments result in application downtime. Because we also route SSH you can also simply SSH to your cluster where you have the same permissions to execute commands as the web server. \n Post-Scriptum \n This was not a detailed explanation. Platform.sh has many other bells and whistles, but I hope this gives you a general idea on what is happening behind the scenes. \n As a user, you don\u2019t really need to know all of this; Most of the time for a relatively simple app, you would just push the code, and it would run. You would click on \u201cbranch\u201d and it will create a new development cluster. It is our job to try to absorb all the tedious complexities. You do features, we run the infrastructure. \n But as you can understand, because Platform.sh uses standard tools (git), exposes a rich API and has a very cool CLI, you can integrate it in more complex workflows. You could for example use the Github integration, or webhooks, to make it work with an existing workflow or CI system like Jenkins or Travis. You could dynamically configure access rights and per-environment routing rules; but most of the time, you\u2019d just push code and not care about all of this. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platformsh Cli Developments 1 10", "title": "Platform.sh CLI developments ", "url": "https://platform.sh/platformsh-cli-developments-1-10/", "documentId": "c5c82af4f20d7dc519cdc22466718d3efe8b2386", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh CLI developments \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Patrick Dawkins \n                  \n                   Product Engineer \n                  \n                  \n                 \n            \n          \n         \n         16 Mar 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The command line has always been the most flexible and powerful way for us humans to communicate with their computers. For web developers, command-line tools have proliferated over recent years: many developers spend\u00a0 most of their time \u00a0typing commands in a shell. \n Our command-line interface, the\u00a0 Platform.sh CLI , is based on the Symfony Console component. It\u2019s convenient to use alongside other command-line tools: you need to use\u00a0  git  \u00a0to manage the project\u2019s code, so\u00a0  platform  \u00a0is a natural way to manage the project itself. The CLI also helps you build projects for local development, particularly if you use Drupal. \n \n To install or upgrade, you can use\u00a0 Composer : \n \n composer global require 'platformsh/cli:@stable'\n \n \n Recent new features (over the past two months) include: \n \n\t Activity commands, for viewing recent activities on an environment -  activity:list  \u00a0(  activities  ) and\u00a0  activity:log  . \n\t An\u00a0  environment:metadata  \u00a0command for reading additional environment properties - this also lets you update the environment\u2019s title, and its \u2018parent\u2019 and \u2018enable_smtp\u2019 properties. \n\t The\u00a0  ssh-key:add  \u00a0command can now generate an SSH public key for you, before uploading it to your Platform.sh account. \n\t \n\t Integration commands, for adding GitHub, HipChat, and other integrations -\u00a0  integration:list  \u00a0(  integrations  ),\u00a0  integration:add  ,\u00a0  integration:update  , and\u00a0  integration:delete  . \n <p>A GitHub integration allows you to create Platform.sh environments for every pull request (and/or every branch) in your GitHub repository:</p>\n\n<pre>\n \n platform integration:add \u2013type github \u2013repository example/example \u2013token ExampleToken\n \n \n <p>A HipChat integration will report Platform.sh activity to your private HipChat room.</p>\n\n<pre>\n \n platform integration:add \u2013type hipchat \u2013room 123456 \u2013token ExampleToken\n \n \n <p>There is also a generic \u2018webhook\u2019 integration: Platform.sh will post information about every activity to your own webhook URL.</p>\n\n<pre>\n \n platform integration:add \u2013type webhook \u2013url  https://example.com/webhook \n \n\n \n A new\u00a0  environment:restore  \u00a0command for restoring a backup. You can also now list recent backups using:\u00a0  platform environment:backup \u2013list  \n Commands which trigger remote operations on Platform.sh now wait for the operation to complete: branch, activate, deactivate, backup, restore, merge, and synchronize. Or if you are impatient, you can pass a\u00a0  \u2013no-wait  \u00a0option. You can use\u00a0  platform activity:list  \u00a0to check the state of previous operations. \n \n Other improvements: \n \n\t Improved usability (validation and feedback) for the\u00a0  httpaccess  \u00a0command. \n\t Install Drush automatically when required (provided that Composer is available globally). \n\t Check for \u2018vanilla-mode\u2019 Drupal without requiring\u00a0  COPYRIGHT.txt  . \n\t Changed Drupal \u2018profile-mode\u2019 builds so that Drush Make no longer builds inside the repository. \n\t Many other small bug fixes. \n \n For more information about the CLI (and to file issues) see the\u00a0 public GitHub repository . We accept pull requests! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "First Look at Platform.sh \u2013 a Development and Deployment SaaS ", "url": "https://platform.sh/2015/04/first-look-platform-sh/", "documentId": "fa78f1e1bf51b03c79ef86946ff758c3e0c5bc96", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           First Look at Platform.sh \u2013 a Development and Deployment SaaS \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Ward \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         21 Apr 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         We\u2019re pleased to re-post this article by\u00a0 Chris Ward . The article was originally published on\u00a0 SitePoint . You can find more from Chris Ward on\u00a0 http://www.guru99.com/ \n Platform.sh is a newer player on the market, built by the team at Commerce Guys, who are better known for their Drupal eCommerce solutions. Initially, the service only supported Drupal based hosting and deployment, but it has rapidly added support for Symfony, WordPress, Zend and \u2018pure\u2019 PHP, with Node.js, Python and Ruby coming soon. \n \n Not so long ago, many of us were satisfied handling deployment of our projects by uploading files via FTP to a web server. I was doing it myself until relatively recently and still do on occasion (don\u2019t tell anyone!). At some point in the past few years, demand for the services and features offered by web applications rose, team sizes grew and rapid iteration became the norm. The old methods for deploying became unstable, unreliable and (generally) untrusted. \n Platform.sh is a newer player on the market, built by the team at Commerce Guys, who are better known for their Drupal eCommerce solutions. Initially, the service only supported Drupal based hosting and deployment, but it has rapidly added support for Symfony, WordPress, Zend and \u2018pure\u2019 PHP, with Node.js, Python and Ruby coming soon. \n It follows the\u00a0 microservice architecture \u00a0concept and offers an increasing amount of server, performance and profiling options to add and remove from your application stack with ease. \n I tend to find these services make far more sense with a simple example. I will use a Drupal platform as it\u2019s what I\u2019m most familiar with. \n Platform.sh has a couple of requirements that vary for each platform. In Drupal\u2019s case they are: \n \n\t An id_rsa public/private key pair \n\t Git \n\t Composer \n\t The Platform.sh CLI \n\t Drush \n \n Continue reading on SitePoint . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Automatically deploy your GitHub branches and pull requests ", "url": "https://platform.sh/blog/automatically-deploy-your-github-branches-and-pull-requests/", "documentId": "adbbcad9bb8f736572ecf9d9bfa386dcf5398e62", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Automatically deploy your GitHub branches and pull requests \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         04 May 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Have you ever dreamt of automatically\u00a0 testing and reviewing every single feature from your GitHub repository on a production-like environment \u00a0with a dedicated URL? \n Today, the dream has come true! \n Using the new\u00a0 GitHub integration \u00a0provided by Platform.sh, you can automatically deploy, for every branch and/or pull request on GitHub, a complete isolated production-like environment with a specific URL that you can use and share. \n \n How does it works? \n Follow\u00a0 the documentation \u00a0to activate the GitHub integration. \n You can check and update what your integration is tracking using the\u00a0 Platform.sh CLI \n \n Let\u2019s say you are tracking pull requests. Starting now, every pull request that you open will trigger a deployment on Platform.sh. \n Here is an example with two pull requests: \n \n You also get the status of the deployment in the pull request page. The\u00a0  details  \u00a0link will automatically redirect you to the environment on Platform.sh: \n \n What happens is that the GitHub integration is pushing your changes on your branch directly to the Platform.sh Git remote: \n \n When you merge the pull request, the environment will also be merged in Platform.sh which correspond to a deployment of the parent environment. You can then use this simple workflow to deploy in production directly. \n How about a private repository? \n It works exactly the same way with private GitHub repositories. \n The only difference is that you need to grant access to the following scopes to the token: \n \n\t public repository:\u00a0  public_repo  ,\u00a0  repo:status  \n\t private repository which\u00a0 belongs to you :\u00a0  repo  ,\u00a0  repo:status  \n\t private repository which\u00a0 belongs to an organization :\u00a0  repo  ,\u00a0  repo:status  ,\u00a0  read:org  \n \n What about other integrations? \n You can already integrate with\u00a0 HipChat . \n We\u2019re currently improving the GitHub integration and implementing many others. \n Follow us on Twitter to stay up to date . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Groundbreaking Drupal 8 news portal goes live on Platform.sh ", "url": "https://platform.sh/2015/05/groundbreaking-drupal-8-news-portal-goes-live-platformsh/", "documentId": "7aab267e8f9fe6c596586b34e56ce187aa2ae46a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Groundbreaking Drupal 8 news portal goes live on Platform.sh \n         \n\n        \n         \n            \n              \n          \n         \n         13 May 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh, the Continuous Delivery Cloud, is up and running with one of the very first Enterprise production sites on Drupal 8, the newest, cutting-edge version of the wildly successful Open Source content management system (CMS). With the launch of a\u00a0 suedostschweiz.ch , Platform.sh proves its ability to fulfill the new system\u2019s complex requirements, providing an ideal toolset to develop and manage sites built on the Drupal 8 CMS. \n \n Platform.sh is a second-generation PaaS (Platform as a Service) that provides managed web application hosting along with the complete suite of services needed to ensure websites run without downtime and scale within minutes. Suitable for any PHP application, it simplifies and enhances development and production workflows for Drupal, Symfony and WordPress in particular. \n Part of the Somedia Group,\u00a0 suedostschweiz.ch \u00a0is the online presence of one of Switzerland\u2019s leading regional newspapers, serving south eastern Switzerland with print, radio, television and digital content. Somedia worked together with Platform.sh partner MD Systems to create NP8, a Drupal 8 distribution (or template) for media companies. Drupal distributions bundle a range of functionalities and settings that give organizations a head start when building sites.\u00a0 suedostschweiz.ch \u00a0is the first site to be launched on NP8. \n Lukas Joos, Head of Online at the publisher said: \u201cSO Media is excited to be at the forefront of technical evolution in both the CMS and hosting fields. We have chosen NP8 and Drupal 8 as a CMS for the long term. And with Platform.sh we have a hosting partner that provides predictability in terms of a 99.99% uptime SLA and Enterprise-level support, together with flexibility in terms of scalability and technology choices.\u201d \n Around 500,000 articles and 150,000 images have been migrated to the site, which was built by the SO Media team after training from MD Systems. The site also integrates with SO Media\u2019s Woodwing system, allowing new articles to be published on the web at the press of a button. \n A revolutionary new CMS needs revolutionary hosting \n Drupal 8 beta is the latest, greatest release of the world\u2019s most widely used enterprise web CMS. It\u2019s fast and flexible, tapping into the concentrated innovation of one of the largest open source communities in the world. But all that innovation and power needs the right conditions to flourish. The site\u2019s high performance, triple redundant Platform.sh Enterprise cluster in Frankfurt provides those conditions, with rock-solid availability and seamless scaling. It also leverages the Fastly CDN for blazing performance. Tools such as New Relic and Blackfire.io come as Standard with Platform.sh Enterprise - and are being used to further optimise both the NP8 distribution and Drupal 8 itself. \n Miro Dietiker, CEO of MD Systems said: \u201cDrupal 8 is still in beta, and we at MD Systems are putting great efforts into moving things forward to a full release. Platform.sh gives us the power, flexibility and toolset to test and prove projects like NP8 in the real-world, running working sites like\u00a0 suedostschweiz.ch . It\u2019s another way for us to accelerate the development of Drupal 8, and bring the goal of a stable release closer\u201d. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Bitbucket add-on released ", "url": "https://platform.sh/blog/bitbucket-addon-released/", "documentId": "32e7a3d06267a5c35a56354550609d7e4a149b56", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Bitbucket add-on released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Patrick Dawkins \n                  \n                   Product Engineer \n                  \n                  \n                 \n            \n          \n         \n         10 Jun 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, we are proud to announce the launch of the Platform.sh add-on for Bitbucket. \n This add-on allows you to deploy any branch or pull request on a fully isolated Platform.sh environment with a dedicated URL. \n For a complete overview of the add-on, please go to our\u00a0 Bitbucket add-on page . \n \n To help you get started easily, you should read the\u00a0 documentation page \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Why you should care about WeChat before it's too late! ", "url": "https://platform.sh/blog/why-you-should-care-about-wechat-before-its-too-late/?utm_source=blog&utm_medium=landing_page&utm_campaign=stacks&utm_content=wechat", "documentId": "30333fd0a9009e966dfbfdbc06438a3a2d274df9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Why you should care about WeChat before it's too late! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         31 Oct 2018 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Launched by Chinese tech giant, Tencent, in 2011, WeChat is the Chinese super-app you won\u2019t be able to avoid in the near future. But it\u2019s not too late to step in. \n In this post, I\u2019ll explain how Chinese users surf the Internet, and introduce the most important WeChat concepts that you need to understand before taking the leap. \n The future of the Internet is on mobile \n I\u2019m sure you\u2019re familiar with Black Friday, Cyber Monday, and Thanksgiving. But have you heard about Single\u2019s Day? Single\u2019s Day, which takes place on November 11 (11/11), is the unofficial Chinese holiday celebrating the pride of being single. (It\u2019s like the anti-Valentine\u2019s Day.) And it\u2019s famous for being the largest shopping day in the world. \n Last year, Alibaba\u2019s marketplaces, Tmall and Taobao, made more than US$25.4 billion in sales during Single\u2019s Day. This event is now nearly  four times the size of America\u2019s biggest shopping days, Black Friday and Cyber Monday . And nearly 90% of the sales happened on mobile! \n \n Today,  China\u2019s Internet population has reached 802 million people , representing about 57.7% of the entire Chinese population. More importantly, 788 million users are mobile users, accounting for 98% of the country\u2019s total user base. \n In comparison, there\u2019s an estimated of 300 million Internet users in the US. \n On an average day, WeChat receives approximately 30% of all the time spent in mobile apps in China ( based on the 2017 Internet Trends Report ). \n On top of that, WeChat accounts for  90% of all messaging app users in China , while Facebook Messenger  doesn\u2019t reach 30% in the US . \n So yes, WeChat is huge and dominant in China, and it\u2019s coming to your door. \n Quick tour of WeChat \n With more than  1 billion monthly active users  WeChat is the largest messaging app in China. \n WeChat embeds a complete ecosystem of tools and services, enabling users to buy train and plane tickets, read news, purchase and manage city services, pay for utilities, book a doctor\u2019s appointment, pay for traffic fines, hail a ride share, book a stay at a hotel, get a bike share, order takeout, donate to charity, pay taxes, and more. \n WeChat also includes a payment system, called  WeChat Pay , used by more than  800 million users worldwide , accepts  13 currencies  in more than  25 countries , and is available in more than  300,000 offline stores . WeChat Pay has already replaced cash for many Chinese citizens. \n Today, WeChat is mostly used in China, but it\u2019s expanding very quickly overseas. International brands that have already taken the leap are targeting Chinese consumers in mainland China, as well as Chinese tourists and expatriates consuming overseas ( travel retail ). Those brands build marketing campaigns or e-commerce applications on WeChat. In 2013, McDonalds paved the way as the first major overseas company to launch an e-commerce campaign on WeChat. Today, most luxury brands and retail stores have already launched WeChat campaigns, WeChat stores, and WeChat mini programs. Even Google launched its own  WeChat mini program in China . \n There are two WeChat networks: overseas (WeChat) and domestic (Weixin) \n The most important thing to understand before getting started on WeChat is that there are  two different WeChat networks . \n \n Weixin  for the domestic audience which regroups all users registered from mainland China, Macau, Hong Kong, Taiwan, South Korea, and Japan \n WeChat  for the overseas audience which regroups users from every other country. \n \n For  individual account  (users), the mobile phone used to register will define the network that you belong to, whereas for  official account  (businesses), the location of your\u00a0business entity will define which network you belong to. \n While it\u2019s true that contacts are shared between both networks (a user on the domestic network can communicate with users on the overseas network and vice versa), you should know that a user registered on the domestic network won\u2019t be able to follow or join an official account on the overseas network. \n This means that if you open a WeChat official account (overseas) for your brand or company, you won\u2019t have access to the audience of the domestic network. To access the domestic audience, you need a Weixin official account (domestic), which requires you to have a business entity in China. \n Also, some marketing features (like advertising, tracking, reporting) are currently  available only in the domestic network. However, those features are frequently deployed on the overseas network, eliminating the issue in most cases. \n As more countries are added to the domestic network, the boundaries between both networks are shrinking, and more features are being rolled out on both networks. \n So, opening a WeChat official account today is a very good first step into the giant WeChat ecosystem. \n There are two WeChat application types: H5 site and mini program \n In the past, brands were building WeChat-optimized websites (aka H5 site), which open in the WeChat browser, to run marketing campaigns, increase brand awareness, and sell products. Today, many brands are still building H5 sites as they\u2019re easy to develop and deploy using the same technologies developers use every day. \n In January 2017, Tencent launched their  WeChat mini programs . A WeChat mini program is a lightweight application (less than 10MB) that runs instantly on WeChat\u2019s interface. WeChat mini programs have seen an explosive growth, and there are more than  1 million WeChat mini programs  available today, with 280 million daily users. It\u2019s quite impressive knowing that it took Apple  10 years to reach 2.1 million mobile applications in its app store ! \n E-commerce and gaming are the most popular segments among mini programs. Many major consumer brands have already launched their own mini program, offering an incredible potential to attract customers and monetize on WeChat. \n According to the  Mini Program Ecosystem Evolution 2018  report from Jisu, mini programs have reached a \u201chyper-growth\u201d period and are beyond the early stages of \u201cexploration\u201d and \u201cmarket activation.\u201d Even though mini programs are on their way to \u2018maturity stage,\u2019, it\u2019s still not too late for brands to join this incredible consumption trend. \n Both H5 sites and mini programs have pros and cons; your choice will depend on what you want to achieve. In either case, feel free to contact us for more details about this topic. \n Deploy your WeChat application on Platform.sh \n Whether you plan to build a WeChat H5 site or a WeChat mini program on the overseas network, Platform.sh is definitely the right choice. \n Platform.sh has unique support for multi-applications, enabling you to develop your back end and your front end together in production-like environments. This capability makes building new features and testing backward compatibilities (APIs) extremely simple. Remember that both WeChat H5 sites and WeChat mini programs are always powered by both a back end and a front end. \n Platform.sh also supports most of the web programming languages (including PHP, Ruby, Node.js, Python, Go, Java), so you can build your WeChat applications using the frameworks and tools you\u2019re already familiar with. \n With instant cloning of entire development environments, Platform.sh enables you to implement fast development cycles and iterate quickly when developing and testing your applications. \n Read more about Platform.sh support for WeChat H5 sites and mini programs on our  WeChat landing page . \n Talk with you soon on WeChat! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "Continuous Deployment Using Bitbucket Connect and Platform.sh ", "url": "https://platform.sh/2015/06/10/platform-sh-bitbucket-add-on/", "documentId": "8163cc4c51092405dbc510378c0ef87f03b4d91f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Continuous Deployment Using Bitbucket Connect and Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         10 Jun 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, at AtlasCamp we are incredibly excited to announce the availability of the Platform.sh add-on for Bitbucket Connect. \n Starting from today Bitbucket users can in a single step deploy to production any PHP repository. They can start enjoying immediately the unique features of Platform.sh. With a staging/development environment automatically created for every pull request or branch they create on Bitbucket in around 30 seconds. \n The integration is totally seamless, and Bitbucket users can now even log-in to Platform.sh using their Bitbucket account. \n \n You can login to your bitbucket account and go to\u00a0 the Bitbucket Add-on Directory choose the\u00a0 \u201cdeployment\u201d category and directly add the integration. \n \n We like dog-fooding as much as the next guy, and Bitbucket is a perfect match for our company, we have a growing small team of developers (around 15) and our product is composed of many private projects (around 70 private repositories on last count). And we like our tools integrated. We like everything automated. \n So when we heard from Atlassian about the upcoming Atlassian Connect for Bitbucket, we were terribly excited.. and today at his AtlasCamp keynote Mike Cannon-Brookes, Co-Founder and Co-Ceo of Atlassian made us the honor of showing our integration : one of only few to be already available.. \n Platform.sh already had great support for Bitbucket through a webhook, but it got so much better. The new connect API allowed us to implement Single-Sign-On, automatic configuration of webhooks and deployment, feed-back right inside the Bitbucket UI allowing for even larger productivity gains. \n The whole thing got implemented really fast, and it was a pleasure working with the Bitbucket engineers to get this out of the door in a couple of weeks. In the coming months we will be adding even more features and a deeper integration. \n For Platform.sh users, these are some incredible news, as Bitbucket is already the preferred platform for hosting and managing private PHP projects (with globally more than 3 million developers using Bitbucket). They can continue to use their existing tools and integrations, and get, with zero friction, a robust and integrated hosting solution. \n When a developer creates a pull request, he immediately gets a url where he can test just that feature in total isolation. The project manager likes it? It passed CI ? Just push to master, and voil\u00e0, its in production. No sysadmin required, no dev-ops overhead. \n An elusive bug on production ? in the Bitbucket UI click on \u201ccreate branch\u201d you will get 30 seconds later a new development environment that is a byte-for-byte copy of production with all of the data in the precise same state. Instead of hacking on production, you can now resolve the bug in an isolated environment. Create a pull request. You can even create from that one a new environment you can run stress-tests on (to ensure the correction did not result in performance regression). Now you can know you can merge to master confidently. A click later its in production. \n The Atlassian tool-stack helps teams collaborate efficiently and apply truly agile methodologies. With the Platform.sh continuous deployment and managed workflow features, those teams can evolve from being \u201crelease based\u201d to applying continuous deployment methodologies with no added complexity. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Platform.sh", "title": "UI version 2.0 released ", "url": "https://platform.sh/2015/05/release-ui-2-0/", "documentId": "aa6b8adf047cfe674484bda5b453ae78df3b3b54", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           UI version 2.0 released \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Aaron Dudenhofer \n                  \n                   Product Engineer \n                  \n                  \n                 \n            \n          \n         \n         27 May 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, we are proud to announce the version 2.0 of the Platform.sh UI. \n This is a very important release which includes a lot of new features like: \n \n\t Ability to see the status and the children of an environment directly in the environment navigation \n\t Ability to control access per environment (with a login and password or with a set of IP addressess) \n\t Ability to send or not send emails per environment \n\t Ability to upload your SSH key directly during the initialization of your project \n\t Ability to upload an SSL certificate when adding or editing a domain \n\t Ability to configure routes caching (cookies, headers, TTL) \n\t Ability to disable or override variables inherited from parent environments. \n \n We hope that you are as excited as we are! \n \n The first thing you might notice when setting up a new platform is the ability to add your SSH key right in the setup interface, so there is no confusion when you try to push your initial commit. We\u2019ve also updated the environment navigation and completely redesigned the configuration pages for both the Environment and Platform configuration pages. \n New Environment Navigation \n \n One really noticeable change in the new UI is the updated environment navigation. We\u2019ve simplified the styling to make it more manageable for sites with a lot of environments. We\u2019ve also added indicators for environments that have child environments as well as environments that have been disabled. So now you can be aware of the states of each environment without having to click through each environment to check the status. \n Updated Platform Configurations \n All of the configuration pages have a refreshed design, with better icons and consistent action links. We\u2019ve given the user management area its own page and updated the default settings page. You will also notice that each configuration page has a help link that will take you to additional information in our documentation. But one of the really useful updates can be found in the domains area. \n Domain Management \n \n The domain management page has been updated to add a couple new features to make your life easier. The first is the ability to select your default domain. Once two or more domains are added, you have the option to select which one will be the default. The second new feature that you will find is the ability to add SSL certificates to your domains yourself. \n Updated Environment Configurations \n Most of the new features are found in the Environments\u2019 Configuration pages. These include new abilities to enable or delete an environment, block outgoing emails, and set up access control with either user login or IP restrictions for accessing your environment. \n Access Control \n \n Now in the UI, you can better control who can access each environment to ensure the privacy of your development environments. You can add a list of logins that you can then pass off to clients or developers. You can also maintain a list of IP addresses that can be allowed or denied access. \n Inherited Variables \n \n When a variable is added to a parent environment, that variable is inherited by default into the child environments. Now if you want to disable or override those variables, you can do that in the UI. \n Routes Caching \n \n Cache and SSI options have been exposed to the UI when editing an upstream route. Here you can maintain a whitelist of cookies or headers and set your dfault TTL. \n In addition of the Platform.sh UI, all of those features are also available via the\u00a0 Platform.sh CLI . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh launches Developer Community! ", "url": "https://platform.sh/blog/2019/platform.sh-developer-community-launches/", "documentId": "2f08a23c062a24f34145833ef4c1b38ba18d5437", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh launches Developer Community! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Robert Douglass \n                  \n                   Chief DevRel Officer \n                  \n                  \n                 \n            \n          \n         \n         17 Jul 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Today, thousands of developers use Platform.sh to solve web app development problems of all kinds. The new  Platform.sh Developer Community  provides a forum to share collected wisdom. Through the community, developers can access tutorials and how-to guides, ask and answer questions, and address challenges. \n Explore the basics, like how to set up your app. Take a deep dive into Platform.sh concepts. Or get into the nitty-gritty details of routes and mount points. The community is a valuable resource to help move your Platform.sh development projects forward. \n How can the Developer Community help? \n An interactive publishing site, the Developer Community currently offers two types of content to help support your development on Platform.sh: \n \n Q&A . Questions can cover any aspect of building sites, like  \" How can I connect an external tool to my database? ,\"  or  \" How can I access to an environment variable in Javascript? .\"   The answers come from smart people, like you, who\u2019ve worked through the problems being discussed. So, if you see someone in need of help, please share what you know. Of course, the Platform.sh team participates in the community and can jump in to address questions, as needed. Our goal: no question left behind! \n How-to Guides . These posts address a specific goal and provide the steps needed to achieve it, e.g.,  \" How to set up and deploy a Ruby on Rails application on Platform.sh ,\"  or  \" How to sync database backups to Amazon S3 .\"    How-to guides are purpose-oriented and step-based, focused on helping you do something practical and specific. \n \n How\u2019s the Developer Community built? \n The community site is built with  Discourse , with only minimal customization, and it runs on Platform.sh. We\u2019ll publish more about how we do this later, in case you\u2019re also interested in running Discourse. \n The site uses single sign on (SSO) from the main Platform.sh accounts site, so anyone with a Platform.sh account can start engaging with the Developer Community just by selecting the login button. \n With more than  100 interesting How-to Guides and answered questions , the Developer Community is already flourishing and helping developers do more with Platform.sh. We look forward to seeing you there! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Press", "title": "European cloud leadership is being born before our very own eyes in France ", "url": "https://platform.sh/press/2015/06/23/2015-06-european-cloud-leadership-born-in-france/", "documentId": "ca810cf16f7feaf5f6245d3527ef8b46c94a8bfa", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           European cloud leadership is being born before our very own eyes in France \n         \n\n        \n         \n            \n              \n          \n         \n         23 Jun 2015 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         European cloud leadership is being born before our very own eyes in France \n \u00a0 \n Note : This article is an English translation from the original article from Antoine Crochet Damais in JournalduNet.\u00a0 Read the original French version . \n Launched in 2014 by Commerce Guys, Platform.sh offers a container based Platform as a Service (PaaS). One year on, this French company has proved its success; 250 customers in Europe and the Americas. \n Cloud hosting built entirely around logical (LXC) based containers, Platform.sh was launched in May 2014 by the French open source software company, Commerce Guys. A year later, it seems the proof of concept has come of age; to date Commerce Guys claims at least 250 live customers on its PaaS. References include several renowned French brands; SeLoger.com, Drupal based websites and all its content sits on Platform.sh. Parc Asterix uses Platform.sh for all its web-sites, as well as Drupal Commerce (the Drupal distribution for e -commerce built by Commerce Guys and active across 60,000 sites world-wide), which the leisure park uses to fulfill online ticket sales and customer service. \n \n Several well-known international references already \n Platform.sh is being used internationally. Commerce Guys highlights eCommerce sites belonging to the British based global retailer Reiss, and the German coach operator, Flixbus. And that\u2019s not all, because Platform.sh is being selected as the preferred hosting choice by many of the largest web-sites on the American continent. This is already the case for customers in the United States and also Latin America, where the Platform.sh PaaS supports the largest Colombian newspaper\u2019s sites (La Patria), and the largest Ecuadorian newspaper, El Universo. Combined, these sites regularly experience in excess of 50 million unique visitors per month. \n The strength of Platform.sh : automated testing, automated deployment, and seamless scalability \n It must be said that most of the features being offered claimed by Platform.sh are extremely enticing. Hosted on Amazon Web Services (AWS), this cloud offering is underpinned by a container based infrastructure inspired directly by the well known Docker; an infrastructure that allows a much lighter architecture, more granularity if needed (micro- services), and especially more flexibility than conventional virtualization services. Commerce Guys also highlights another strength: Continuous Iintegration (CI) capabilities. Platform.sh incorporates a management capability (based on Git ) that allows cloning of sites, infrastructure and web applications, in order to run several parallel development streams if needed. \n Extending Platform.sh into Java, Python , Ruby, Node.JS \n \u201cWe have recently integrated the Blackfire.io code analysis tool from SensioLabs. It checks whether or not code being generated affects or slows down the application in any way,\u201d said Frederic Plais , CEO of Commerce Guys . More recently, Platform.sh also built a seamless integration with bitbucket, the GitHub competitor. \u201cIt is now possible to fully manage its code submissions, branches, and deployments through bitbucket \u201c continues Fr\u00e9d\u00e9ric Plais. \u201cAlthough it is less known than GitHub , this service is growing fast. It has 3 million users each day.\u201d But Platform.sh is also integrated with GitHub, leveraging GitHub Connect. \n On the Roadmap, the option of deploying on multiple infrastructure clouds \n \u201cThe size of the contracts that we are picking up each month is steadily rising, with monthly growth rates two or three percentage points,\u201d says the Commerce Guys\u2019 co-founder. \u201cWe are now looking to establish ourselves as a global cloud platform of European origin.\u201d In order to fulfill its ambitions, the Paris based company concluded a third round to the tune of 5.3 million euros in 2014, in order to redouble their R&D efforts. His stated goal: to expand its PaaS to new environments to attract more developers. Currently limited to PHP, with the key implementations of Symfony, Drupal and Magento, Platform.sh support will soon extend to Java, Python, Ruby, and Node.js. This is what Frederic Plais is promising. \n And finally, Commerce Guys also plans to build a Multi-Cloud PaaS Platform. This is a very rare capability in the field of platform clouds, and it will help enhance the agility and flexibility of the service. Platform.sh may well be known quite soon for manage parallel deployments on Amazon Web Service, as well as several other cloud infrastructures. French sovereign clouds are mentioned as well as Google\u2026 \n Read also :\u00a0 With Platform.sh, Commerce Guys unveils cloud 2.0! \n The claim is bold. But that\u2019s what Platform seems to be. Based on the Amazon cloud, it\u2019s a container based PaaS that is expected to transcend even the agility brought by virtualization itself. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Version will be required in <code>type:</code> what it means for your projects ", "url": "https://platform.sh/blog/2019/version-will-be-required-in-type-what-it-means-for-your-projects/", "documentId": "51c48bd28efc41e1f9c4b129071f295d38c03b0e", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Version will be required in  type:  what it means for your projects \n         \n\n        \n         \n            \n              \n          \n         \n         22 Jul 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh makes configuring applications simple with a collection of YAML files in your project repository. Any project can specify the application\u2019s language and the services it has access to using the  type  keys within  .platform.app.yaml  and  services.yaml , respectively, as well as their versions. \n Although the documentation recommends including a version in  type , it hasn\u2019t  been required, so  users could simply define a PHP application with  type: php  instead of the full  type: php:7.3 .  Beginning 1 August 2019, Platform.sh will no longer support  type  without a version specification, and pushes that don\u2019t include versions for each image will be rejected. \n What\u2019s changing? \n Projects on Platform.sh will no longer be able to configure runtime and service containers without including a supported version in  type  as recommended in the  applications  and  services  documentation. When the change has rolled out to every region, projects that don\u2019t specify a version will be refused when attempting to push that configuration to Platform.sh, returning an error. \n When will the change take place? \n Beginning 1 August 2019, the change will roll out until it\u2019s been made across all regions. \n Why the change? \n Today, if projects don\u2019t include a version for a container, a default version is added to the cluster in its place. \n The main problem with this approach? Inconsistency. The default version can vary by project region for a variety of reasons, making the same project with the same code fundamentally different between regions. \n To avoid surprise upgrades, we also don\u2019t update the default version. The default versions are generally quite old and often a version of a service that\u2019s no longer supported by the vendor with security updates. So, using them in production isn\u2019t a best practice. \n From the onset, our documentation has recommended including a version, in part because doing so makes your configuration clearer to everyone working on it. When a version is defined, you know exactly what\u2019s running in production, and it gives you a simple and intuitive place to test the application with new releases by simply editing that version on a new branch. \n How will this change affect you? \n If your projects already include versions for each of the services and languages your application uses, the change won\u2019t affect you at all. \n On the other hand, if any of your project configurations exclude a version (like this): \n rediscache : \n       type :   redis \n you\u2019ll receive an error when pushing to Platform.sh. \n services.redis.type: The version needs to be specified in  type  \u201credis\u201d\n In that case, you\u2019ll need to update your  services.yaml  file to include a supported version listed in the  documentation , \n rediscache : \n       type :   redis : 5.0 \n You can find a full list of supported versions for each service on their individual pages in the  services  documentation and for each language here: \n \n PHP supported versions \n Python supported versions \n Node.js supported versions \n Java supported versions \n Ruby supported versions \n Go supported versions \n \n To  ensure that there\u2019s no disruption in service in relation to this change, the Platform.sh team has identified the projects that will be affected and will be sending an email to each user to instruct them about  which projects require updates to their configurations. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Building high-performance organizations for cloud application development ", "url": "https://platform.sh/blog/2019/building-high-performance-teams-for-cloud-application-development/", "documentId": "300af6040cee4315c295ffedee79249297e98c33", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Building high-performance organizations for cloud application development \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         15 Jul 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         High performance is the ability to execute quickly and consistently  over time \u2013and having the systems in place to do it. \n Couldn\u2019t make it to Singapore for my APIDays talk on building high-performance organizations for the cloud? Check it out here. \n\n \n   \n \n\n Let\u2019s talk about how Platform.sh helps drive high-performance development. \n   Chat now \n   \n \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             The container is a lie! \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Learning to trust the machines and the process in DevOps \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A great Kubernetes alternative \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Why are people switching hosting platforms to run modern Drupal? ", "url": "https://platform.sh/blog/2019/switching-hosting-platforms-modern-drupal/", "documentId": "df5b09cc34bc028fd6d0e0cf876eb113a13bbcca", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Why are people switching hosting platforms to run modern Drupal? \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Yates \n                  \n                   VP Marketing \n                  \n                  \n                 \n            \n          \n         \n         17 Jul 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         If you\u2019re running a Drupal website\u2014or a fleet of Drupal websites\u2014you\u2019ve got a lot of choices for hosting them. Why pick option one over the other? Recently, there has been some back and forth between vendors calling out one another over why their solutions are better suited for Drupal than the others. \n In this post, we want to give you the info  you  need to make smart choices about hosting and managing your modern Drupal applications. \n \n The TL;DR: Because we do more than Drupal, we are the best choice for modern Drupal. \n \n Modern Drupal isn\u2019t monolithic, and neither are organizations that run it \n Drupal has never existed in a technology vacuum. That\u2019s more true now than ever before, with \u201cHeadless\u201d or \u201cDecoupled\u201d architectures\u2014combining a Drupal back end with a Javascript front end written in Angular, React, et al.\u2014becoming the norm rather than the exception. Even ten years ago, when I created a  Drupal app for NASA to search images and data from Mars , it involved multiple technologies. These included  Drupal ,  Java ,  Postgres/PostGIS ,  Python , and Javascript\u2014all to deliver a single digital experience. Now, with Platform.sh, I could run every component on a single platform. \n Across organizations, it\u2019s rare for a single CMS to be adopted universally. There are many reasons for this: developer expertise, budget, and even internal politics. Supporting many languages and frameworks is good for us,  and  good for our customers. Real freedom comes from having a platform that can grow and shift with you as your needs evolve. \n \n Platform.sh isn\u2019t exclusive to Drupal or WordPress  by design . Instead, we let you run Drupal alongside your  Node.js /Javascript app,  Java ,  Python , and more  at no extra cost . You can combine the front end and back end of your app in the same project, deployed automatically by us across our secure, containerized grid. \n And  you can add in services like Postgres,  Kafka ,  Elasticsearch , Solr, Redis, RabbitMQ, and more, also with no additional costs or effort. \n \n The  right  kind of Drupal expertise is key \n Platform.sh was incubated within Commerce Guys\u2014the software vendor behind Drupal Commerce\u2014and our team retains deep Drupal knowledge and expertise. We originally built Platform.sh to solve the challenges of building and running transactional ecommerce sites, where typical Drupal hosting scaling tricks like caching and CDNs aren\u2019t sufficient. Today, Platform.sh runs thousands of ecommerce sites (both Drupal and Magento), processing hundreds of millions of dollars in annual transactions. \n Selecting the right platform for scalability is important, but sometimes your team will run into challenges. For that, we have a global team of support engineers spanning North America, South America, Europe, Africa, Oceania, and Asia. \n \n Need hands-on support to keep your Drupal projects patched and secure? Platform.sh does that, too. Just ask us about Application Support. \n \n Drupal developers deserve tools for the way modern developers work\u2014with CI/CD built in \n Platform.sh has been based around Git from the very beginning. We think of it as our main API. Do you need a new environment to work on a feature or to fix a bug? It\u2019s as simple as: \n git checkout -b new-idea\n That\u2019s it. \n \n One Git command, and Platform.sh clones your entire production app\u2014data and all\u2014 in moments . \n \n What does that mean, practically speaking? \n \n \n Basically, you can have as many dev/stage/test environments as you need. No more waiting on the staging environment to be available, or calling an account manager to make changes to your project when you need more. Each environment has configurable access control and auto-generated (and free) SSL certificates. \n \n \n Because deploying to production is basically a  git merge , and your team is developing on a perfect clone\u2014including all the components and data of your [headless] Drupal site\u2014you can be assured that  what worked in dev is going to work in production . Our  Deploy Friday  motto isn\u2019t just a marketing slogan; our customers live it. \n \n \n Because Platform.sh has a robust API, it\u2019s integrated with third-party tools you\u2019re probably already using, like GitLab, Bitbucket, and GitHub. Branches and pull requests created in those tools automatically generate (and clean up) environments in Platform.sh! That same API, coupled with our system of hooks and native support for tools like  Headless Chrome , gives you a robust continuous integration solution for Drupal and other technologies\u2014again, with no extra cost. \n \n \n The Platform.sh API isn\u2019t limited to managing your  current  Drupal projects. With just a few commands, you can create new projects across regions around the world. This is how Platform.sh partners like  GoalGorilla  build their own successful SaaS businesses ( Open Social ) with Drupal and Platform.sh. \n \n \n But wait! There\u2019s more! \n Modern Drupal 8 is built around two technologies that make developers\u2019 lives easier.  Composer  simplifies dependency management for PHP applications, much like PIP for Python or NPM for Node.js. Instead of downloading and committing all of the dependencies for your Drupal site to your host, you describe them in a Composer file, and the Platform.sh CI/CD pipeline takes care of installing them and running any other build or deployment tasks. \n The other technology at the heart of Drupal 8 is Symfony. As the \u2018cloud\u2019 powering  Symfony Cloud  and  Magento Commerce , our Symfony expertise runs deep. \n Choice is good. That\u2019s why we\u2019re multicloud. \n Choosing which Infrastructure-as-a-Service (IaaS) provider to use can be a gamble, and once your die is cast, it\u2019s hard to switch. The same can be true of your hosting or PaaS provider. That\u2019s why most hosting providers work with a single IaaS partner. \n Platform.sh makes it easy to use the IaaS provider that works best for your business, whether your choice is based on  data locality for compliance , getting your application as close to your end users as possible, or simply preference. We can run your applications in the US, Canada, Australia, Ireland, Germany, and France. \n \n Platform.sh works with  four  IaaS partners\u2014Amazon Web Services, Google Cloud Platform, Microsoft Azure, and Orange\u2014to give you the most choices and global reach. And you can run the same code across all four of these platforms without making any changes. \n Need a custom location? Let\u2019s talk. \n \n We take security and compliance seriously. For some countries and companies, that means hosting locally, too. Not only are we  SOC 2 certified , we\u2019re compliant with the  German BDSG and strict data locality and access rules . \n Power. Simplicity. Freedom. \n The best tools are the ones that fade into the background and let you get on with your work. At Platform.sh, that\u2019s our goal. \n From the beginning, we built the end-to-end platform that  we\u2019d  want to use to build, run, and scale websites\u2014no matter how many, or how large, or how many people were involved. \n Platform.sh was created to give you choice, work the way your team does, and get out of your way. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Pick a MySQL, any MySQL ", "url": "https://platform.sh/blog/2019/pick-a-mysql-any-mysql/", "documentId": "6a333ecb845118d5366d5934bd39315c01824280", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Pick a MySQL, any MySQL \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         23 Jul 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh has always offered a database service called \u201cmysql.\u201d Afterall, it\u2019s the dominant Open Source database. However, as with most providers, it wasn\u2019t actually MySQL (the product published by Oracle), but MariaDB\u2014a MySQL close-fork fully compatible with MySQL, extra bug fixes included. \n Times change, of course. With the latest releases of MySQL and MariaDB, they have begun to diverge such that some functionality is available only in one or the other. Some database analysts have concluded that they really ought to be  viewed as separate database products . What\u2019s a cutting-edge Platform-as-a-Service to do?  Which one should we offer? \n Introducing Oracle MySQL on Platform.sh \n We\u2019re happy to report that you can now deploy (for-reals) Oracle MySQL, both versions 5.7 and the  new-and-shiny 8.0 , on Platform.sh Professional. \n including a MySQL service is as easy as adding any other service. Just insert the following into your  services.yaml  file: \n mydb : \n      type :   oracle-mysql : 8.0 \n      disk :   1024 \n And you\u2019re done. That\u2019s all the configuration you need, but all of the more detailed configuration options for  mariadb  (such as adding multiple databases on a single service) work exactly the same. See the  MySQL/MariaDB documentation  for more details. \n Application code and language-specific libraries may or may not vary between Oracle MySQL and MariaDB.  Consult the documentation for your connection libraries to be sure. \n But I want MariaDB\u2019s special features! \n They\u2019re really nifty, aren\u2019t they?  But don\u2019t worry, MariaDB isn\u2019t going anywhere.  The  mysql  service type will continue to exist and refer to MariaDB just as it always has. You can also now refer to it as  mariadb . So the following are both entirely valid and have the same effect: \n mydb : \n      type :   mysql : 10.2 \n      disk :   1024 \n mydb : \n      type :   mariadb : 10.2 \n      disk :   1024 \n You can safely switch from  mysql  to  mariadb  if you want to make your  services.yaml  file a bit more accurate. Please note, however, that a direct switch from  mysql  to  oracle-mysql  (or vice versa) is not supported and may not work properly. If you want to switch which database service you use, take an SQL dump file, change the service definition and give it a new name (to get an empty database), and import the SQL file into it. \n Whatever your SQL flavor preferences, you still get the flexibility, branching deployment, and peace-of-mind that Platform.sh brings. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Eclipse MicroProfiles: gain agility, release faster ", "url": "https://platform.sh/blog/2019/eclipse-microprofiles-gain-agility-release-faster/", "documentId": "11c56b1f394cf448a1a42ad54b34ac1bc2b1c8c4", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Eclipse MicroProfiles: gain agility, release faster \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         15 Jul 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Divide and conquer \u2014the most critical Roman strategy\u2014works efficiently in several areas. The context to take any giant issue and break it down into small pieces to make the job easier to understand, making it scalable and agile, and allowing more people to work on it to deliver faster. The microservice was born from this principle. The microservices architecture is a variant of the service-oriented architecture style that structures an application as a collection of loosely coupled services. In a microservices architecture, services are fine-grained, and protocols are lightweight. In Java, there are several frameworks (including Spring Boot, which we explored in a  previous post ). Today, let\u2019s walk through the Java/JakartaEE side and talk about the  Eclipse MicroProfile . \n The goal of the Eclipse MicroProfile initiative: to optimize Enterprise Java for the microservices architecture. It\u2019s based on a subset of JakartaEE APIs, so we can build MicroProfile applications the same way we build JakartaEE ones. \n MicroProfiles define standard APIs for building microservices and deliver portable applications across multiple MicroProfile runtimes. \n Show me the code \n Ok, let\u2019s start talking code. Not to digress (you\u2019ll see my rationale in the next paragraph!), but in August, I\u2019ll be starting a fantastic trip around Latin America to talk about Java, cloud computing, NoSQL, and I\u2019ll be joining the Oracle Groundbreakers Tour LATAM 2019: \n \n Argentina \u2013 August 6 \n Brazil/SP \u2013  August 9 \n Ecuador \u2013 August 13 \n Colombia \u2013 August 15-16 \n Panama \u2013 August 19 \n Costa Rica \u2013 August 21 \n Mexico \u2013 August 23 \n Guatemala \u2013 August 26 \n \n To celebrate, let\u2019s create a microservice with an Eclipse MicroProfile that manages countries for the Latin America trip. The first step in the  Maven project  is to set up the libraries needed for the project. \n <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n <project   xmlns= \"http://maven.apache.org/POM/4.0.0\"   xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n     \t xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\" > \n\t <modelVersion > 4.0.0 </modelVersion> \n\t <groupId > sh.platform.start </groupId> \n\t <artifactId > thorntail-jpa </artifactId> \n\t <version > 1.0.0-SNAPSHOT </version> \n\t <packaging > war </packaging> \n\n\t <properties > \n    \t <version.thorntail > 2.4.0.Final </version.thorntail> \n    \t <maven.compiler.source > 1.8 </maven.compiler.source> \n    \t <maven.compiler.target > 1.8 </maven.compiler.target> \n    \t <failOnMissingWebXml > false </failOnMissingWebXml> \n    \t <project.build.sourceEncoding > UTF-8 </project.build.sourceEncoding> \n\t </properties> \n\t <dependencyManagement > \n    \t <dependencies > \n        \t <dependency > \n            \t <groupId > io.thorntail </groupId> \n            \t <artifactId > bom-all </artifactId> \n            \t <version > ${version.thorntail} </version> \n            \t <scope > import </scope> \n            \t <type > pom </type> \n        \t </dependency> \n    \t </dependencies> \n\t </dependencyManagement> \n\n\t <dependencies > \n    \t <dependency > \n        \t <groupId > io.thorntail </groupId> \n        \t <artifactId > microprofile </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.hibernate </groupId> \n        \t <artifactId > hibernate-entitymanager </artifactId> \n        \t <version > 5.4.3.Final </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > sh.platform </groupId> \n        \t <artifactId > config </artifactId> \n        \t <version > 2.2.1 </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > postgresql </groupId> \n        \t <artifactId > postgresql </artifactId> \n        \t <version > 9.1-901-1.jdbc4 </version> \n    \t </dependency> \n\t </dependencies> \n\n\t <build > \n    \t <finalName > country </finalName> \n    \t <plugins > \n        \t <plugin > \n            \t <groupId > io.thorntail </groupId> \n            \t <artifactId > thorntail-maven-plugin </artifactId> \n            \t <version > ${version.thorntail} </version> \n        \t </plugin> \n    \t </plugins> \n\t </build> \n\n\t <repositories > \n    \t <repository > \n        \t <id > oss.sonatype.org-snapshot </id> \n        \t <url > http://oss.sonatype.org/content/repositories/snapshots </url> \n        \t <releases > \n            \t <enabled > false </enabled> \n        \t </releases> \n        \t <snapshots > \n            \t <enabled > true </enabled> \n        \t </snapshots> \n    \t </repository> \n\t </repositories> \n\n </project> \n There\u2019s no specification that covers the storage technology on the Eclipse MicroProfile, but once the MicroProfile has synergy with Jakarta EE, it will use a Java Persistence API ( JPA ). \n JPA entity classes are user-defined classes whose instances can be stored in an annotation-driven database. There are annotations such as @Entity, @Table, @Id, and @Column that make the object-to-database transition smoother than doing it manually, helping to speed development. \n import   javax.persistence.Column ; \n import   javax.persistence.Entity ; \n import   javax.persistence.GeneratedValue ; \n import   javax.persistence.Id ; \n import   javax.persistence.Table ; \n import   javax.validation.constraints.NotBlank ; \n import   java.util.Objects ; \n\n @Entity \n @Table ( name   =   \"country\" ) \n public   class   Country   { \n\n\t @Id \n\t @GeneratedValue \n\t private   Integer   id ; \n\n\t @Column \n\t @NotBlank \n\t private   String   name ; \n\n\t @Column \n\t private   String   city ; \n\n\t @Column \n\t private   String   twitter ; \n\n\t @Column \n\t private   String   link ; \n\n } \n After defining the model, let\u2019s enable the JPA and CDI technologies. In the root of the code, we\u2019ll create two files in the folder  src/main/resources/META-INF \n \n   \n     Bean.xml. The bean.xml file will enable the CDI (Contexts and Dependency Injection), which is a standard dependency injection framework on Jakarta EE. It enables us to manage the lifecycle of stateful components via domain-specific lifecycle contexts and inject components (services) into client objects in a type-safe way. \n   \n   \n   \n \n\n <?xml version=\"1.0\"?> \n <beans   xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" \n   \t xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n   \t xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/beans_2_0.xsd\" \n   \t bean-discovery-mode= \"all\" \n   \t version= \"2.0\" > \n </beans> \n \n   \n     Persistence.xml. The persistence.xml is the central piece of configuration. That makes it one of the most important files of your persistence layer. It defines the JPA provider, the driver, user, password, and so on. For this sample code, we\u2019ll use PostgreSQL, but don\u2019t worry about the blank configuration; it will be defined in real time using Platform Config Reader. \n   \n   \n   \n \n\n <persistence   xmlns= \"http://xmlns.jcp.org/xml/ns/persistence\"   xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n         \t xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\" \n         \t version= \"2.1\" > \n\t <persistence-unit   name= \"jpa-example\" > \n    \t <provider > org.hibernate.jpa.HibernatePersistenceProvider </provider> \n    \t <class > sh.platform.template.Country </class> \n    \t <properties > \n        \t <property   name= \"javax.persistence.jdbc.url\"   value= \"\"   /> \n        \t <property   name= \"javax.persistence.jdbc.driver\"   value= \"\"   /> \n        \t <property   name= \"javax.persistence.jdbc.user\"   value= \"\"   /> \n        \t <property   name= \"javax.persistence.jdbc.password\"   value= \"\"   /> \n        \t <property   name= \"hibernate.default_schema\"   value= \"public\"   /> \n        \t <property   name= \"hibernate.dialect\"   value= \"org.hibernate.dialect.PostgreSQL94Dialect\" /> \n        \t <property   name= \"hibernate.connection.autocommit\"   value= \"true\"   /> \n        \t <property   name= \"hibernate.hbm2ddl.auto\"   value= \"update\" /> \n        \t <property   name= \"show_sql\"   value= \"update\" /> \n    \t </properties> \n\t </persistence-unit> \n </persistence> \n Our next step is to combine the JPA and CDI. In brief, this combination will make the EntityManagerFactory eligible through all applications using the  Inject annotation . \n import   sh.platform.config.Config ; \n import   sh.platform.config.JPA ; \n\n import   javax.annotation.PostConstruct ; \n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.enterprise.inject.Disposes ; \n import   javax.enterprise.inject.Produces ; \n import   javax.persistence.EntityManager ; \n import   javax.persistence.EntityManagerFactory ; \n\n @ApplicationScoped \n class   EntityManagerConfiguration   { \n\n\t private   EntityManagerFactory   entityManagerFactory ; \n\n\t private   EntityManager   entityManager ; \n\n\t @PostConstruct \n\t void   setUp ( )   { \n    \t Config   config   =   new   Config ( ) ; \n    \t final   JPA   credential   =   config . getCredential ( \"postgresql\" ,   JPA : : new ) ; \n    \t entityManagerFactory   =   credential . getPostgreSQL ( \"jpa-example\" ) ; \n    \t entityManager   =   entityManagerFactory . createEntityManager ( ) ; \n\t } \n\n\t @Produces \n\t @ApplicationScoped \n\t EntityManagerFactory   getEntityManagerFactory ( )   { \n    \t return   entityManagerFactory ; \n\t } \n\n\t @Produces \n\t @ApplicationScoped \n\t EntityManager   getEntityManager ( )   { \n    \t return   entityManager ; \n\t } \n\n\t void   close ( @Disposes   EntityManagerFactory   entityManagerFactory )   { \n    \t entityManagerFactory . close ( ) ; \n\t } \n\n\t void   close ( @Disposes   EntityManager   entityManager )   { \n    \t entityManager . close ( ) ; \n\t } \n\n } \n The CDI has impressive features, including the  scope . Therefore, we can define an  EntityManager  to be used in the whole application, and when the application shuts down, it will close the containers  one by one . \n import   javax.interceptor.InterceptorBinding ; \n import   java.lang.annotation.Inherited ; \n import   java.lang.annotation.Retention ; \n import   java.lang.annotation.Target ; \n\n import static   java.lang.annotation.ElementType.METHOD ; \n import static   java.lang.annotation.ElementType.TYPE ; \n import static   java.lang.annotation.RetentionPolicy.RUNTIME ; \n\n @Inherited \n @InterceptorBinding \n @Retention ( RUNTIME ) \n @Target ( { METHOD ,   TYPE } ) \n public   @interface   Transactional   { \n } \n\n import   sh.platform.config.Config ; \n import   sh.platform.config.JPA ; \n\n import   javax.annotation.PostConstruct ; \n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.enterprise.inject.Disposes ; \n import   javax.enterprise.inject.Produces ; \n import   javax.persistence.EntityManager ; \n import   javax.persistence.EntityManagerFactory ; \n\n @ApplicationScoped \n class   EntityManagerConfiguration   { \n\n\t private   EntityManagerFactory   entityManagerFactory ; \n\n\t private   EntityManager   entityManager ; \n\n\t @PostConstruct \n\t void   setUp ( )   { \n    \t Config   config   =   new   Config ( ) ; \n    \t final   JPA   credential   =   config . getCredential ( \"postgresql\" ,   JPA : : new ) ; \n    \t entityManagerFactory   =   credential . getPostgreSQL ( \"jpa-example\" ) ; \n    \t entityManager   =   entityManagerFactory . createEntityManager ( ) ; \n\t } \n\n\t @Produces \n\t @ApplicationScoped \n\t EntityManagerFactory   getEntityManagerFactory ( )   { \n    \t return   entityManagerFactory ; \n\t } \n\n\t @Produces \n\t @ApplicationScoped \n\t EntityManager   getEntityManager ( )   { \n    \t return   entityManager ; \n\t } \n\n\t void   close ( @Disposes   EntityManagerFactory   entityManagerFactory )   { \n    \t entityManagerFactory . close ( ) ; \n\t } \n\n\t void   close ( @Disposes   EntityManager   entityManager )   { \n    \t entityManager . close ( ) ; \n\t } \n\n } \n The Country entity class and the database integration are now ready. The next step: the service layer with the CountryService class, which is the layer that integrates the database with the business. The CountryService class will do the essential CRUD operations on PostgreSQL to handle the transaction we need for the transactional annotation. It\u2019s easy! \n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.inject.Inject ; \n import   javax.persistence.EntityManager ; \n import   java.util.List ; \n import   java.util.Optional ; \n\n @ApplicationScoped \n public   class   CountryService   { \n\n\t @Inject \n\t private   EntityManager   entityManager ; \n\n\t @Transactional \n\t public   Country   insert ( Country   country )   { \n    \t entityManager . persist ( country ) ; \n    \t return   country ; \n\t } \n\n\t @Transactional \n\t public   void   update ( Country   country )   { \n    \t entityManager . persist ( country ) ; \n\t } \n\n\t @Transactional \n\t public   void   delete ( Integer   id )   { \n    \t find ( id ) . ifPresent ( c   - >   entityManager . remove ( c ) ) ; \n\t } \n\n\n\t public   Optional < Country >   find ( Integer   id )   { \n    \t return   Optional . ofNullable ( entityManager . find ( Country . class ,   id ) ) ; \n\t } \n\n\t public   List < Country >   findAll ( )   { \n    \t String   query   =   \"select c from Country c\" ; \n    \t return   entityManager . createQuery ( query ) . getResultList ( ) ; \n\t } \n } \n The last piece of Java code is the rest integration, where we\u2019re going to use a JAX-RS that belongs to both Eclipse MicroProfile and Jakarta EE. On JAX-RS, all HTTP methods and paths are annotation-driven, using intuitive annotations such as @GET, @PUT, or @DELETE. We can now do the integration in a more relaxed way, saying \u201cjuguet\u00f3n!\u201d (\u201cplayful\u201d in Spanish). \n import   javax.enterprise.context.RequestScoped ; \n import   javax.inject.Inject ; \n import   javax.ws.rs.Consumes ; \n import   javax.ws.rs.DELETE ; \n import   javax.ws.rs.GET ; \n import   javax.ws.rs.POST ; \n import   javax.ws.rs.PUT ; \n import   javax.ws.rs.Path ; \n import   javax.ws.rs.PathParam ; \n import   javax.ws.rs.Produces ; \n import   javax.ws.rs.WebApplicationException ; \n import   javax.ws.rs.core.MediaType ; \n import   javax.ws.rs.core.Response ; \n import   java.util.List ; \n import   java.util.Optional ; \n\n import static   javax.ws.rs.core.Response.Status.NO_CONTENT ; \n import static   javax.ws.rs.core.Response.status ; \n\n @Path ( \"countries\" ) \n @RequestScoped \n @Produces ( MediaType . APPLICATION_JSON ) \n @Consumes ( MediaType . APPLICATION_JSON ) \n public   class   CountryResource   { \n\n\t @Inject \n\t private   CountryService   countryService ; \n\n\t @GET \n\t public   List < Country >   doGet ( )   { \n    \t return   countryService . findAll ( ) ; \n\t } \n\n\t @GET \n\t @Path ( \"{id}\" ) \n\t public   Country   findById ( @PathParam ( \"id\" )   Integer   id )   { \n    \t final   Optional < Country >   conference   =   countryService . find ( id ) ; \n    \t return   conference . orElseThrow ( this : : notFound ) ; \n\t } \n\n\t @PUT \n\t @Path ( \"{id}\" ) \n\t public   Country   update ( @PathParam ( \"id\" )   Integer   id ,   Country   countryUpdated )   { \n    \t final   Optional < Country >   optional   =   countryService . find ( id ) ; \n    \t final   Country   country   =   optional . orElseThrow ( ( )   - >   notFound ( ) ) ; \n    \t country . update ( countryUpdated ) ; \n    \t countryService . update ( country ) ; \n    \t return   country ; \n\t } \n\n\t @DELETE \n\t @Path ( \"{id}\" ) \n\t public   Response   remove ( @PathParam ( \"id\" )   Integer   id )   { \n    \t countryService . delete ( id ) ; \n    \t return   status ( NO_CONTENT ) . build ( ) ; \n\t } \n\n\t @POST \n\t public   Country   insert ( Country   country )   { \n    \t return   countryService . insert ( country ) ; \n\t } \n\n\t private   WebApplicationException   notFound ( )   { \n    \t return   new   WebApplicationException ( Response . Status . NOT_FOUND ) ; \n\t } \n\n } \n The last class enables the JAX-RS and defines the root URL for the services. \n import   javax.ws.rs.ApplicationPath ; \n import   javax.ws.rs.core.Application ; \n\n\n @ApplicationPath ( \"\" ) \n public   class   ApplicationConfig   extends   Application   { \n } \n Platform.sh structure \n The Java application is now ready to go! The next step is to set up the Platform.sh files required to manage and deploy the application. In our first  Java post , we took a deep dive into these three files: \n \n One Router (.platform/routes.yaml). Platform.sh allows you to define the  routes . \n Zero or more service containers (.platform/services.yaml). Platform.sh allows you to completely define and configure the  topology and services  you want to use on your project. \n One or more application containers (.platform.app.yaml). You control your application and the way it will be built and deployed on Platform.sh via a single  configuration file . \n \n The file that will change in this post is the  service file , so you can define a database, search engine, cache, and so on. In this project, we\u2019ll set up  PostgreSQL  instead of  MySQL . \n postgresql : \n    type :   postgresql : 11 \n    disk :   512 \n    size :   S \n We\u2019ll keep the route file the same  as in the first post , but we\u2019ll change the platform.app.yaml to run thorntail uberjar. \n # This file describes an application. You can have multiple applications \n # in the same project. \n # \n # See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html \n \n # The name of this app. Must be unique within a project. \n name :   app \n \n # The runtime the application uses. \n type :   \"java:8\" \n \n disk :   1024 \n \n # The hooks executed at various points in the lifecycle of the application. \n hooks : \n    build :     mvn   -DskipTests   clean   package   thorntail : package \n \n # The relationships of the application with services or other applications. \n # \n # The left-hand side is the name of the relationship as it will be exposed \n # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand \n # side is in the form `<service name>:<endpoint name>`. \n relationships : \n    postgresql :   'postgresql:postgresql' \n \n # The configuration of the app when it is exposed to the web. \n web : \n    commands : \n      start :   java   -jar   -Xmx512m   -Dswarm.http.port=$PORT   -Djava.net.preferIPv4Stack= true   -Djava.net.preferIPv4Addresses= true   target/country-thorntail.jar \n \n The application is now ready, so it\u2019s time to move it to the cloud with Platform.sh using the following  sets : \n \n Create a  free trial account . \n Sign up with a new username and password, or login using a current GitHub, Bitbucket, or Google account. If you use a third-party login, you\u2019ll be able to set a password for your Platform.sh account later. \n Select the region of the world where you want your site to live. \n Select the blank template. \n \n After this wizard, Platform.sh will provision the whole infrastructure to you, as well as provide a Git remote repository. Before access, remember to set the SSH keys. The Platform.sh Git-driven infrastructure will automatically manage everything your application needs to push it to the master remote repository. You only need to write your code\u2014including a few YAML files that specify your desired infrastructure\u2014and then commit it to Git and push. \n git remote add platform <platform.sh@gitrepository>\ngit commit -m  \"Initial project\" \ngit push -u platform master\n The code pushed will create the Java application, a PostgreSQL instance, and, when it\u2019s done, will return an IP address to the service.\nLet\u2019s test the application. To test a REST application, any HTTP client is suitable. \n curl -X POST -H  \"Content-Type: application/json\"   -d  '{\"name\":\"JConfColombia\",\"city\":\"Medell\u00edn\",\"twitter\":\"@MedellinJug\",\"link\":\"http://www.jconfcolombia.org/2019/index.html\"}'  https://<service.ip>/countries\ncurl https://<service.ip>/countries\n #result output here \n And just like that, we\u2019ve created our first Eclipse MicroProfile application at Platform.sh! But is there any way to make this process easier? \n New Eclipse MicroProfile templates have arrived \n We\u2019re proud to announce that four new Java templates have arrived, and these new templates are all Eclipse MicroProfile providers: \n \n   \n   Thorntail offers an innovative approach to packaging and running Java EE applications by packaging them with just enough of the server runtime to \"java -jar\" your application. It\u2019s MicroProfile compatible, too. And it\u2019s all much, much cooler than that. \n   https://thorntail.io/ \n \n \n   \n   Payara Micro is the open-source, lightweight, middleware platform of choice for containerized Java EE (Jakarta EE) microservices deployments. Less than 70MB in size, Payara Micro requires no installation or configuration. And there\u2019s no need for code rewrites, so you can build and deploy a fully working app within minutes. \n   https://www.payara.fish/software/payara-server/payara-micro/ \n \n \n   \n   Develop microservices with Java EE/Jakarta EE technologies and extend them with Node.js, Go and other languages. Migrate existing Java EE applications to microservices and cloud-native architecture. \n   https://ee.kumuluz.com/ \n \n \n   \n   Apache TomEE is the Eclipse MicroProfile flavor that uses several Apache Project flavors, including Apache Tomcat and Apache OpenWebBeans. \n \n In this post, we took a dive into the fantastic world of Eclipse MicroProfiles. We defined the concept of microservices and how to integrate them with JPA. There are many more combinations coming to our  Java stack  to make Java developers\u2019 lives easier using the latest generation of PaaS. If you\u2019re in any of the cities I\u2019ll be visiting in my upcoming tour, please feel free to contact me on  Twitter ; it\u2019ll be amazing to get together and talk about Java while drinking something tropical from coconuts. Hasta la vista!!! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh documentation: new guides, new look ", "url": "https://platform.sh/blog/2019/platform.sh-documentation-new-guides-new-look/", "documentId": "50ef9c471a01fd9866972aeebca3c0aa7dcfc5eb", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh documentation: new guides, new look \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chad Carlson \n                  \n                   Technical Writer \n                  \n                  \n                 \n            \n          \n         \n         01 Aug 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh takes documentation seriously. \n Software is, after all, only as good as its resources and how well they help you use it. We strive to make great software, and we want our  public documentation  to live up to that same standard. \n When a new feature is developed, we want you to know how to use it as soon as it\u2019s released. Come across a problem the documentation isn\u2019t helping you solve? We\u2019ll find out why, and make updates that clarify the solution for you and for anyone else who might encounter it later on. \n Not sure how to start using Platform.sh? \n Well, we\u2019ve added some new resources to the docs to help you with just that. Along with a great updated look, new and seasoned users alike can access step-by-step  Getting Started  guides that will fast-track your projects into production applications. \n Get started on Platform.sh with our new step-by-step guides \n The documentation should make working with Platform.sh for the first time as simple as possible, whether you\u2019re migrating an application from another hoster or you\u2019re completely new to web development with a PaaS provider. \n That\u2019s why we created these  Getting Started  guides.\nEach guide will help you get accustomed to some of the most common actions you\u2019ll perform while developing on Platform.sh; in turn, we hope that they help build some intuition about what needs to be done when you move on to bigger projects. \n Because we want new and seasoned users to get the most out of Platform.sh, the guides have been designed to branch out from both of these starting points. \n New users: get started with a template project \n As soon as you create a  free trial account  on Platform.sh, you can deploy one of our maintained  template projects  from the development console. \n The  Start with a template  guide will take you through these steps until you have a live site that you can start developing immediately from your local repository using the Platform.sh CLI. \n Migrating users: import and configure your code to run on Platform.sh \n Hosting your application on Platform.sh requires proper configuration, and this is usually the stage users find the most difficult to get used to. \n In the  Import your own code  guide, we take you through the steps to configure your routes, services, and your application correctly; connect to your services, and deploy on Platform.sh in minutes. \n Developing on Platform.sh and next steps \n Now that you\u2019ve got a project on Platform.sh, you\u2019re ready to develop new features for it. The next section of tutorials will help you do just that, no matter your starting point. \n \n Local development . Now that your project is on Platform.sh, developing new features shouldn\u2019t involve pushing your code each time you want to test that feature, even when your application depends on connecting to a database. Platform.sh gives you the flexibility to choose from multiple local development options, including local service installations ( untethered ), container-based development tools like  Lando  and  Docksal , as well as opening an SSH tunnel to your services directly ( tethered ). In this guide, we take you through the steps of setting up this tethered environment: connect to your services remotely and build your application on a local web server, fast. \n Development environments . One of the main features that sets Platform.sh apart is our development environments. Each branch you create in your Git repository can be fully deployed, complete with an exact copy of your services and their data in production. This guide is meant to familiarize you with this feature, recommend best practices for using development environments, and provides an overview of creating and restoring backups so you always merge with confidence (even when you deploy on Fridays). \n Going live . With all your features in place, you can take your application live by setting up your plan for production and configuring domains through this tutorial. \n \n Screencasts and CLI recordings \n Each of the guides above are stuffed with video examples that support their content. We\u2019ve included terminal recordings to show off the commands you need and the output you can expect when developing with the Platform.sh CLI. There\u2019s also new screencasts that showcase how easily you can create and modify projects in the management console. \n So fresh and so clean: docs get a facelift \n Recently we updated the design of both our  main website  and our UI with the release of our shiny new  management console . \n We thought that the public documentation deserved some style love to match. \n Visit the docs, and check out the new look! \n What\u2019s next \n Getting started on Platform.sh should be simple, and with our new guides, you can get your applications production-ready in no time. But this is only the beginning; we\u2019ll continue to add additional guides and example recordings periodically to keep our public documentation the dependable resource you deserve. \n Stay tuned, get out there, and get started! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "We are happy, relieved and somewhat amused to announce the availability of Common Lisp on Platform.sh ", "url": "https://platform.sh/blog/2019/lisp/", "documentId": "380fd9b5981cbcb0e312a81885f053f9dd7ec244", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           We are happy, relieved and somewhat amused to announce the availability of Common Lisp on Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Ori Pekelman \n                  \n                   CPO \n                  \n                  \n                 \n            \n          \n         \n         08 Aug 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         I am going to suffer horrendously writing this blog post without doing  any  Lisp jokes; Because the thing about Lisp is that it is not only a great programming language, but the best one at supporting ridiculously superior punchlines. \n So, first, what\u2019s Lisp? \n Lisp is a programming language that has been around for a while. It has always been there in the background. It is basically the \u201cPath not taken\u201d, the \u201cother option\u201d for computing that was always around. It has always had a strong community of people that thought this option was discarded too early. \n We are talking about  1958 , people. \n Many of you would never have heard about it, so you might ask yourself, rightfully: \u201cWell, if this Mythical Beast has not succeeded by now, it is probably a poor idea and the path that was not taken should stay as such\u201d. \n To address this, first we need to be a bit more precise. First, Lisp is not a programming language, but a whole family of programming languages. It started as a way to have a mathematical notation for software. So it could be easier to reason about software and to write software that reasons about software. \n For many years we talked about Artificial Intelligence rather than Machine Learning. Lisp was a language for Artificial Intelligence. And somewhat naturally there was a natural selection of some really weird people being interested in it. Which probably turned off most others. The whole \u201cmathematical nature\u201d seemed contrary to an industry that is focused on \u201cgetting things done\u201d. \n John McCarthy, who created it, chose a syntax that was a bit weird (thinking that, well, he\u2019ll come around to fixing the weirdness in version 2.0): Instead of using fixed width instructions, white space or line terminators (such as a newline or a semicolon) he chose to imbricate the expressions in parenthesis. \n \n This is why the usual joke about Lisp, which I am not going to make, is about the language looking something similar to (((()(((((())(()))))))()()())). \n Version 2.0 didn\u2019t really materialize and the parenthesis are with us to this day. And maybe keeping those wasn\u2019t such a bad idea. It does look quite different from any other language. \n \n \u201cOne can even conjecture that Lisp owes its survival specifically to the fact that its programs are lists, which everyone, including me, has regarded as a disadvantage.\u201d \n John McCarthy, \u201cHistory of Lisp\u201d, 1979 \n \n And through the years Lisp has died, every year. It even had its own  hardware architecture   for a time. But these are now in Museums (and without doubt in basements of the department of defense). \n But every generation seems to rediscover it and its charms, and there are pockets of resistance that allow it, like a virus hidden in a ganglions, to survive generational gaps (Emacs!). There are also industrial players that have always used it (such as NASA and Boeing) which allowed for fresh generations to be exposed to it. But unlike Cobol and Algol or Fortran, Lisp stays fresh. People that discover it feel often that Lisp is an idea that could have happened now. \n So what\u2019s so special about it? Lisp treats code as data. We are used to separate those, but really, code is data, right? In all other languages (that are not a Lisp that is) you write code as text. For a computer the code itself is meaningless. It\u2019s text (you can think about Ruby here, a language that tries hard to be as visually pleasing as possible, as potentially the most contrary thing to Lisp, even if some have argued that it is, by itself, an acceptable Lisp.) \n So you have this \u201csource code\u201d, and then you have either an interpreter or a compiler that will transform your code into something else, an AST (an Abstract Syntax Tree) that it will either interpret directly .. or create yet another intermediary representation (as byte-code to be itself interpreted by a virtual machine, or as object code to be run against the processor). \n In Lisp, all program code is written as parenthesized lists (\u201cs-expressions\u201d) that contain other parenthesized lists. Its parentheses all the way down. Why is this important? Because it means a Lisp program can very easily read and write Lisp code. In Lisp the AST and the code are the same. Lisp is basically the simplest form of writing an AST such as that it would still be readable by a human. \n \n \u201cLisp has jokingly been called \u201cthe most intelligent way to misuse a computer.\u201d I think that description is a great compliment because it transmits the full flavor of liberation: it has assisted a number of our most gifted fellow humans in thinking previously impossible thoughts.\u201d \n \n Edsger Dijkstra, The Humble Programmer, 1972 \n \n \n In a way Lisp is the only language in which you actually code. In other languages you write text that is transformed to code. And Lisp is a dynamic language, making Lisp an incredibly powerful tool to create very concise programs to treat a specific issue. More often than not when you write Lisp code you are writing a whole language, one that could express your problem space with elegance (DSLs, or domain specific languages). Weirdly, with all of its parentheses and its prefixed expressions, that admittedly can put off the occasional onlooker,  (* 7 9)  being seven multiplied by nine, Lisp code is some of the most readable code you can find. \n Lisp in 2019 \n As I told you Lisp is not a language but a family of languages, we call them dialects. For example the very popular  HackerNews  forum, is itself written in arc, a dialect of Lisp (created by Paul Graham, seemingly just for the occasion). And some dialects have become quite popular over the last few years, Clojure which is a dialect targeting the JVM has become immensely popular in data science circles. Scheme (one of the older dialects at 44 years old) has seemed to have regained some youth, Racket has been gaining traction, and now many in the Python world have started toying with  Hy , a dialect of Lisp that\u2019s embedded in Python. \n But for many Lisp, is Common Lisp, an ANSI standard, and it too, like its brethren (or children) is, beyond an object of curiosity, gaining interest. \n \u2026 so we are happy, relieved and somewhat amused to announce the availability of Common Lisp on Platform.sh \n The thing is that we do really like to eat our own dog food, and we have a couple of services written in Common Lisp. So for our own internal use we have created a run-time (it really is not that much effort). And although, we can\u2019t really say people have been banging at our doors to get proper Lisp support\u2026 we truly hope some of you will enjoy this. \n How would you deploy a Lisp web application on Platform.sh? \n Step 1. Write your Lisp program: \n Here I created an  example.lisp  with the following: \n ( defpackage   #:example \n   ( :use   :hunchentoot   :cl-who   :cl ) \n   ( :export   main ) ) \n\n ( in-package   #:example ) \n\n ( define-easy-handler   ( greet   :uri   \"/hello\" )   ( name ) \n   ( with-html-output-to-string   ( s )   ( htm   ( :body   ( :h1   \"hello, \"   ( str   name ) ) ) ) ) ) \n\n ( export   'main ) \n ( defun   main   ( ) \n   ( let   ( ( acceptor   ( make-instance \n                    'easy-acceptor \n                    :port   ( parse-integer   ( uiop:getenv   \"PORT\" ) ) ) ) ) \n     ( start   acceptor ) \n     ( sleep   most-positive-fixnum ) ) ) \n \n (This code is quite surprisingly legible, \u201cuse\u201d means \u201cimport all the symbols so that I don\u2019t have to prefix them with the package name\u201d, \u2018hunchentoot\u2019 is a web server in Lisp (you can also notice how we get the  PORT  from the environment, cl-who allows us to create the actual HTML )) (and this is the only Lisp joke I am doing, it is subtle (right?)) \n \n Step 2. Add an  .asd  file \n ASDF is the \u201cmake\u201d of Common Lisp, it is a description of dependencies between files of source code in such a way that they can be compiled and loaded in the right order. \n So, create an  .asd  file. If Platform.sh finds one in the repository it will do the right thing, installing a quicklisp distribution and building what needs to be built. \n Here is an  example.asd  file: \n (defsystem example\n :name \"example\"\n :description \"Example of a simple web application on Platform.sh\"\n :author \"Lisp Coder <user@example.com>\"\n :components ((:file \"example\"))\n :build-operation \"asdf:program-op\"\n :build-pathname \"example\"\n :entry-point \"example:main\"\n :depends-on (:hunchentoot :cl-who))\n Step 3. Add the Platform.sh  .yaml  files \n Create a .platform.app.yaml with something such as: \n name :   app \n type :   lisp : 1.5 \n disk :   512 \n web : \n   commands : \n     start :   ./example \n Note: there are oh so many Lisps out-there, even Common Lisps.  lisp:1.5  here refers to the Steel Bank Common Lisp (SBCL) version. \n In  .platform/routes.yaml \n \"https://{default}/\" : \n    type :   upstream \n    upstream :   \"app:http\" \n And for good form create an empty  .platform/services.yaml . \n Commit and push, if you visit the environment URL with  /hello?name=Me!  you should see a nice greeting. \n \n \n This blog post is dedicated to the true believers, kisses @ralt @cms. \n \u03bb! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Microservices in the cloud, part one ", "url": "https://platform.sh/blog/2019/microservices-in-the-cloud-part-one/", "documentId": "72fe7ee1e2f0c91968bc970e6445ce760d71534c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Microservices in the cloud, part one \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         13 Aug 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Microservices are a software architecture, where the systems are a collection of several independent services. Each service has a specific business focus and communicates with the others with a language-agnostic protocol, such as REST. The Eclipse MicroProfile initiative optimizes Enterprise Java for the microservices architecture. It\u2019s based on a subset of Jakarta EE APIs. This post will give an overview of some best practices for working with Java microservices on Platform.sh. \n Show me the context \n To celebrate the  Oracle GroundBreakers Tour  through Latin America, we\u2019ll create a microservices architecture based on the context of the cities, sessions, and speakers where the Oracle GroundBreaker Tour is hosted. \n Oracle Groundbreakers Tour - Latin America \n \n Chile \u2013 August 2 \n Uruguay \u2013 August 5 \n Argentina \u2013 August 6 \n Paraguay \u2013 August 8 \n Brazil \u2013 August 10 \n Ecuador \u2013 August 13 \n Colombia \u2013 August 15-16 \n Panama \u2013 August 19 \n Costa Rica \u2013 August 21 \n Mexico \u2013 August 23 \n Guatemala \u2013 August 26 \n Peru \u2013 August 28 \n \n To manage the conferences into the Latin America trip, we\u2019ll have three microservices: \n \n Speaker. The speaker service that handles the name, bio, and social media links for each speaker. \n Conference. The conference service that works with lectures, which handles the name, city, and year of the conference trip. \n Session: The session service that handles the name, title, description, and both conference and speaker information. \n \n Databases \n Each database has its proposal, structure, and particular behavior, so we\u2019ll use different databases according to each service. Indeed, that\u2019s the advantage of microservices; each service can use any technology that conforms to its requirements without impacting the other services. Each microservice uses an appropriate database for its particular use case: \n \n   \n   PostgreSQL (also known as Postgres).  Free and open-source relational database management system that emphasizes extensibility and technical standards compliance. It\u2019s  designed to handle a range of workloads, from single machines to data warehouses or web services with many concurrent users. \n \n \n   \n   MongoDB.  Cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schema. \n \n \n   \n   Elasticsearch.  A search engine based on the Lucene library. Elasticsearch provides a distributed, multitenant-capable, full-text search engine, with an HTTP web interface and schema-free JSON documents. Elasticsearch is developed in Java. \n \n Eclipse MicroProfile implementations \n The relatively new MicroProfile community dedicates itself to optimizing the Enterprise Java mission for microservice-based architectures. Their goal?  A microservices application platform that\u2019s portable across multiple runtimes. Currently, IBM, Red Hat, Tomitribe, Payara, the London Java Community (LJC), and SouJava lead the pack in this group. \n \n   \n   Thorntail  offers an innovative approach to packaging and running Java EE applications by packaging them with just enough of the server runtime to \"java -jar\" your application. \n \n \n   \n   Payara Micro  Less than 70MB in size, open source, lightweight middleware platform of choice for containerized Java EE (Jakarta EE)\u2014microservices deployments requires no installation or configuration and no need for code rewrites. \n \n \n   \n   KumuluzEE  develops microservices with Java EE/Jakarta EE technologies and extends them with Node.js, Go and other languages. It migrates existing Java EE applications to microservices and cloud-native architecture. \n \n \n   \n   Apache TomEE  is the Eclipse MicroProfile flavor that uses several Apache Project flavors, including Apache Tomcat and Apache OpenWebBeans. \n \n\ufeff\n## Join technologies together\n \n Our  project has four components: \n \n KumuluzEE will handle the Session microservice. Users will want to search for session details, such as finding sessions that talk about either Eclipse Microprofile or Jakarta EE. To work with this requirement, the project will use a NoSQL that\u2019s also a powerful search engine (yes, we\u2019re talking about Elasticsearch). \n Thorntail will handle the Speaker microservice, the most uncomplicated service that will manage the speaker information. This service will work with PostgreSQL. \n Payara Micro will handle the Conference microservice. This service is strongly related to KumuluzEE and Thorntail. To create a conference, we need both sessions and speakers. MongoDB seems to fit easily with this service because we can use the concept of subdocuments to put a list of presentations and speakers into the Conference entity, instead of making the relationship as in a relational database. \n Apache TomEE is the client browser using HTML 5 as the front end. \n \n Eclipse MicroProfile and Jakarta to the rescue! \n The significant benefits of the Eclipse MicroProfile? Well, first, it uses standards on Jakarta EE, such as CDI, JAX-RS, and JSON-P. \n To connect to PostgreSQL or any relational database, there\u2019s a  JPA  specification that describes the management of relational data in applications using the Java platform. To communicate to the NoSQL databases, we\u2019ll use the  Jakarta NoSQL  specification (not a final version yet, but hopefully will come out soon). \n On the client-side, we\u2019ll use  Eclipse Krazo  with an  HTML 5  extension, using  Thymeleaf  as the template engine. At the moment, the client doesn\u2019t have a database; it will only communicate with the services to organize the values, then show them in the browser. Therefore, it will use  Eclipse MicroProfile Rest Client , which provides a type-safe approach to invoke RESTful services over HTTP. \n Layers, layers, and more layers \n The number of layers in an application is always a colossal discussion when we talk about microservices. Layers are essential to split responsibility and write clean code, while maintaining the several patterns built following this approach, like the  MVC . \n However, a vast number of layers is also hard to keep and to maintain; we need to pay attention to the delay layers. Otherwise, instead of an MVC, we\u2019re creating the onion pattern, where you cry each time you go through a layer. There is no magic formula to determine the number of layers you\u2019ll need. Rather, it will be based on the complexity of the business rules, and how the infrastructure code can give us the  cleanest architecture . \n In our sample, we have three layers: \n \n The  entity . The  first instance of the business and where the domain lives. These entities, for best practice, should follow a  rich model . We can make t hese entities agnostic to a database , but this time, let\u2019s keep it simple and use the entity highly coupled with the database. \n The data transfer object (DTO). Just a dump class to allow transfer values between the controller and the entity. Its most prominent goal is to prevent that entity from becoming an  anemic model , because some frameworks might require getter and setter methods to serialization, which usually means weak encapsulation. \n The controller. The bridge between the view and the model. It only manipulates the flow among them. With some exceptions, it must be kept as clean as possible\u2013you remember the  high cohesion rule , right?\n \n \n Is there a cloud? Or is there just someone\u2019s computer? \n Managing databases, code, and integrations is always hard, even on the cloud. Indeed, the server is still there, and someone needs to watch it, run installations and backups, and maintain health in general. And the  twelve-factor APP  requires a strict separation of config from code. \n Thankfully, Platform.sh provides a PaaS that manages services, such as databases and message queues, with support for several languages, including Java. Everything is built on the concept of Infrastructure as Code (IaC), managing and provisioning services through  YAML  files. \n In  previous posts , we mentioned how this is done on Platform.sh primarily with three files: \n One to define the services used by the applications ( services.yaml ). \n elasticsearch : \n    type :   elasticsearch : 6.5 \n    disk :   512 \n    size :   S \n mongodb : \n    type :   mongodb : 3.6 \n    disk :   512 \n    size :   S \n postgresql : \n    type :   postgresql : 11 \n    disk :   512 \n    size :   S \n One to define public routes ( routes.yaml ). \n \"https://{default}/conferences\" : \n    id :   conference \n    type :   upstream \n    upstream :   \"conference:http\" \n \n \"https://{default}/sessions\" : \n    id :   session \n    type :   upstream \n    upstream :   \"session:http\" \n \n \"https://{default}/speakers\" : \n    id :   speaker \n    type :   upstream \n    upstream :   \"speaker:http\" \n \n \"https://{default}/\" : \n    type :   upstream \n    upstream :   \"client:http\" \n \n \"https://www.{default}/\" : \n    type :   redirect \n    to :   \"https://{default}/\" \n It\u2019s important to stress that the routes are for applications that we want to share publicly. Therefore, if we want the client to only access these microservices, we can remove their access to the conferences, sessions, and speakers from the routes.yaml file. \n Platform.sh makes  configuring single applications  and microservices simple with the  .platform.app.yaml  file. Unlike single applications, each microservice application will have its own directory in the project root and its own  .platform.app.yaml  file associated with that single application. Each application will describe its language and the services it will connect to. Since the client application will coordinate each of the microservices of our application, it will specify those connections using the  relationships  block of its  .platform.app.yaml  file. \n name :   client \n type :   \"java:8\" \n \n disk :   800 \n \n # The hooks executed at various points in the lifecycle of the application. \n hooks : \n    build :   |\n       mvn -Dhttp.port=8888 -Dspeaker.service=http://speaker.internal/ -Dconference.service=http://conference.internal/ -Dsession.service=http://session.internal/ -DskipTests clean install tomee:exec \n \n relationships : \n     speaker :   speaker : http \n     conference :   conference : http \n     session :   session : http \n \n web : \n    commands : \n      start :   |\n         mv target/ROOT-exec.jar app/ROOT-exec.jar \n        java   -Xmx1024m   -jar    app/ROOT-exec.jar \n With the requirements set on the application YAML file, we can extract the information from the environment. Yes, we\u2019re following the twelve factors splitting the code from the config. \n \n echo   $PLATFORM_RELATIONSHIPS   |  base64 --decode  |  json_pp\n\n { \n    \"session\"  :  [ \n  \t { \n     \t \"service\"  :  \"session\" ,\n     \t \"rel\"  :  \"http\" ,\n     \t \"scheme\"  :  \"http\" ,\n     \t \"cluster\"  :  \"dvtam6qrvyjwi-master-7rqtwti\" ,\n     \t \"port\"  : 80,\n     \t \"ip\"  :  \"169.254.159.17\" ,\n     \t \"host\"  :  \"session.internal\" ,\n     \t \"hostname\"  :  \"owh4yp4z3tbt3x7fajdexvndpe.session.service._.eu-3.platformsh.site\" ,\n     \t \"type\"  :  \"java:8\" \n  \t } \n    ] ,\n    \"speaker\"  :  [ \n  \t { \n     \t \"scheme\"  :  \"http\" ,\n     \t \"rel\"  :  \"http\" ,\n     \t \"service\"  :  \"speaker\" ,\n     \t \"type\"  :  \"java:8\" ,\n     \t \"hostname\"  :  \"4edz7hoi7xx4bnb7vkeopzltc4.speaker.service._.eu-3.platformsh.site\" ,\n     \t \"host\"  :  \"speaker.internal\" ,\n     \t \"port\"  : 80,\n     \t \"cluster\"  :  \"dvtam6qrvyjwi-master-7rqtwti\" ,\n     \t \"ip\"  :  \"169.254.245.54\" \n  \t } \n    ] ,\n    \"conference\"  :  [ \n  \t { \n     \t \"service\"  :  \"conference\" ,\n     \t \"rel\"  :  \"http\" ,\n     \t \"scheme\"  :  \"http\" ,\n     \t \"port\"  : 80,\n     \t \"cluster\"  :  \"dvtam6qrvyjwi-master-7rqtwti\" ,\n     \t \"ip\"  :  \"169.254.81.85\" ,\n     \t \"host\"  :  \"conference.internal\" ,\n     \t \"hostname\"  :  \"3aora24tymelzobulrvgc5rscm.conference.service._.eu-3.platformsh.site\" ,\n     \t \"type\"  :  \"java:8\" \n  \t } \n    ] \n } \n The good news about this information is that we don\u2019t need to manipulate or extract the data manually, and that\u2019s why we have the configuration reader. \n name :   conference \n \n type :   \"java:8\" \n \n disk :   800 \n \n relationships : \n    mongodb :   'mongodb:mongodb' \n \n web : \n    commands : \n      start :   java   -jar   -Xmx1024m   target/conference-microbundle.jar   --port   $PORT \n Using the  Java configuration reader , we can read from the environment and return a client such as MongoDB, Datasource, or Elasticsearch. For example, on the conference application.yaml, we require access to MongoDB, from which we can extract and convert this information into a MongoClient instance and make it available for  CDI . \n import   com.mongodb.MongoClient ; \n import   jakarta.nosql.document.DocumentCollectionManager ; \n import   org.jnosql.diana.mongodb.document.MongoDBDocumentCollectionManagerFactory ; \n import   org.jnosql.diana.mongodb.document.MongoDBDocumentConfiguration ; \n import   sh.platform.config.Config ; \n import   sh.platform.config.MongoDB ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.enterprise.inject.Produces ; \n\n @ApplicationScoped \n public   class   MongoConfig   { \n\n\t @Produces \n\t public   DocumentCollectionManager   getManager ( )   { \n    \t Config   config   =   new   Config ( ) ; \n    \t final   MongoDB   mongo   =   config . getCredential ( \"mongodb\" ,   MongoDB : : new ) ; \n    \t final   MongoClient   mongoClient   =   mongo . get ( ) ; \n    \t MongoDBDocumentConfiguration   configuration   =   new   MongoDBDocumentConfiguration ( ) ; \n    \t MongoDBDocumentCollectionManagerFactory   factory   =   configuration . get ( mongoClient ) ; \n    \t return   factory . get ( mongo . getDatabase ( ) ) ; \n\t } \n } \n Wait?! Where is the code? \n To prevent this post from becoming a book, let\u2019s split it into a few parts. The first was an overview of the advantages of using microservices\u2014why you should use them and how  Eclipse MicroProfile  and Platform.sh can help you make it happen. We\u2019ve already talked about  Eclipse MicroProfile, JPA ,  Eclipse Krazo, and Eclipse JNoSQL . You can review those posts, and, if you don\u2019t care about spoilers, check out the code for this entire series on  GitHub . \n Otherwise, stay tuned for part two, where we\u2019ll go down to the design of the code and explain it step by step. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Jakarta EE: Generation IV - a new hope ", "url": "https://platform.sh/blog/2019/jakarta-ee-generation-iv-a-new-hope/", "documentId": "a9a67e479832d43b2eb7f7fa6042df67a933531a", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Jakarta EE: Generation IV - a new hope \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         30 Jul 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Java Enterprise Edition (Java EE) is an umbrella that holds specifications and APIs with enterprise features like distributed computing and web services. Widely used in Java, Java EE runs on reference runtimes that can be microservices or application servers that handle transactions, security, scalability, concurrency, and management for the components it\u2019s deploying. \n Now that Enterprise Java has been standardized under the Eclipse Foundation\u2014with the brand-new name Jakarta EE\u2014there\u2019s a new hope for Enterprise Java. This post will show a similar solution to Spring MVC with MongoDB on the Jakarta EE community side, with full support on Platform.sh. \n For this project, we\u2019ll need some assistance. To triumph over the imperial forces, these three projects can help us: \n \n Eclipse Krazo . An implementation of action-based MVC specified by MVC 1.0 ( JSR-371 ). Eclipse Krazo builds on top of JAX-RS and currently contains support for RESTEasy, Jersey, and CXF with a well-defined SPI for other implementations. \n Jakarta NoSQL . A framework to help developers create enterprise-grade applications using Java and NoSQL technologies. Jakarta NoSQL enables devs to create scalable applications while maintaining low coupling with the underlying NoSQL technology. \n Bean Validation ,  JSR 380 . A specification that creates its own annotations and validation, and ensures that the properties of a Class match specific criteria, using annotations such as  @NotNull ,  @Min , and  @Max . \n \n Show me the  force  code \n The first step, as usual, is to create a Maven project, where we define the dependencies in the pom.xml file. \n <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n <project   xmlns= \"http://maven.apache.org/POM/4.0.0\" \n     \t xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n     \t xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > \n\t <modelVersion > 4.0.0 </modelVersion> \n\n\t <groupId > org.superbiz </groupId> \n\t <artifactId > mvc-cxf </artifactId> \n\t <packaging > war </packaging> \n\n\t <name > OpenEJB :: Examples :: MVC (CXF-based) </name> \n\t <description > OpenEJB :: Web Examples :: MVC 1.0 - Jakarta NoSQL </description> \n\t <version > 0.0.1-SNAPSHOT </version> \n\t <url > http://tomee.apache.org </url> \n\n\t <properties > \n    \t <project.build.sourceEncoding > UTF-8 </project.build.sourceEncoding> \n    \t <tomee.version > 8.0.0-M3 </tomee.version> \n    \t <version.krazo > 1.0.0-SNAPSHOT </version.krazo> \n    \t <jnosql.version > 0.1.0-SNAPSHOT </jnosql.version> \n    \t <http.port > 8888 </http.port> \n\t </properties> \n\n\t <build > \n    \t <finalName > ROOT </finalName> \n    \t <plugins > \n        \t <plugin > \n            \t <groupId > org.apache.maven.plugins </groupId> \n            \t <artifactId > maven-compiler-plugin </artifactId> \n            \t <version > 3.5.1 </version> \n            \t <configuration > \n                \t <source > 1.8 </source> \n                \t <target > 1.8 </target> \n            \t </configuration> \n        \t </plugin> \n        \t <plugin > \n            \t <groupId > org.apache.maven.plugins </groupId> \n            \t <artifactId > maven-war-plugin </artifactId> \n            \t <version > 3.2.2 </version> \n            \t <configuration > \n                \t <failOnMissingWebXml > false </failOnMissingWebXml> \n                \t <packagingExcludes > pom.xml </packagingExcludes> \n            \t </configuration> \n        \t </plugin> \n        \t <plugin > \n            \t <groupId > org.apache.tomee.maven </groupId> \n            \t <artifactId > tomee-maven-plugin </artifactId> \n            \t <version > ${tomee.version} </version> \n            \t <configuration > \n                \t <tomeeHttpPort > ${http.port} </tomeeHttpPort> \n            \t </configuration> \n        \t </plugin> \n    \t </plugins> \n\t </build> \n\n\t <repositories > \n    \t <repository > \n        \t <id > oss.sonatype.org-snapshot </id> \n        \t <url > http://oss.sonatype.org/content/repositories/snapshots </url> \n        \t <releases > \n            \t <enabled > false </enabled> \n        \t </releases> \n        \t <snapshots > \n            \t <enabled > true </enabled> \n        \t </snapshots> \n    \t </repository> \n\t </repositories> \n\n\t <dependencies > \n    \t <dependency > \n        \t <groupId > jakarta.enterprise </groupId> \n        \t <artifactId > jakarta.enterprise.cdi-api </artifactId> \n        \t <version > 2.0.1 </version> \n        \t <scope > provided </scope> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > jakarta.ws.rs </groupId> \n        \t <artifactId > jakarta.ws.rs-api </artifactId> \n        \t <version > 2.1.5 </version> \n        \t <scope > provided </scope> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > jakarta.validation </groupId> \n        \t <artifactId > jakarta.validation-api </artifactId> \n        \t <version > 2.0.1 </version> \n        \t <scope > provided </scope> \n    \t </dependency> \n\n    \t <dependency > \n        \t <groupId > sh.platform </groupId> \n        \t <artifactId > config </artifactId> \n        \t <version > 2.2.2-SNAPSHOT </version> \n    \t </dependency> \n\n    \t <!-- Eclipse JNoSQL --> \n    \t <dependency > \n        \t <groupId > org.jnosql.artemis </groupId> \n        \t <artifactId > artemis-document </artifactId> \n        \t <version > ${jnosql.version} </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.jnosql.diana </groupId> \n        \t <artifactId > mongodb-driver </artifactId> \n        \t <version > ${jnosql.version} </version> \n    \t </dependency> \n\n    \t <!--  MVC 1.0(JSR 371)  --> \n    \t <dependency > \n        \t <groupId > org.eclipse.krazo </groupId> \n        \t <artifactId > krazo-core </artifactId> \n        \t <version > ${version.krazo} </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.eclipse.krazo </groupId> \n        \t <artifactId > krazo-cxf </artifactId> \n        \t <version > ${version.krazo} </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > javax.servlet </groupId> \n        \t <artifactId > jstl </artifactId> \n        \t <version > 1.2 </version> \n    \t </dependency> \n\n\t </dependencies> \n </project> \n One crucial point to remember is that with the Jakarta EE specification, we can use several vendors without impacting the application. In this tutorial, we\u2019ll use Apache TomEE. \n The next step is to define the user model. To make this all smoother, this user just has country, state, name, age, JUG, and description tags as information. So, two classes: \n \n The Person class: name, age, JUG, and any description \n The Address class: country and state \n \n As with any simple register page, the user information comes through in a page form, so the MVC frameworks come with the FormParam annotation. This way, the developer can connect the form with any input field once the annotation matches the input tag exactly. \n The MongoDB integration with the model is easy, too; JNoSQL has annotations that look like those of the JPA, so the developer defines the Entity, the Column, and the ID using the  Entity ,  Column , and  Id  annotations, respectively. \n One difference with MongoDB is that we can store the Address class information as a field instead of making it a relationship, as we usually do with SQL technology. So, we\u2019ll use the Address as a subdocument of the Person entity, which is faster because it reduces the number of joins and is more natural to query. \n @Entity \n public   class   Person   { \n\n\t @Id \n\t @FormParam ( \"id\" ) \n\t @Convert ( ObjectIdConverter . class ) \n\t private   String   id ; \n\n\t @FormParam ( \"name\" ) \n\t @NotEmpty ( message   =   \"can not be empty\" ) \n\t @Size ( min   =   1 ,   max   =   20 ) \n\t @MvcBinding \n\t @Column \n\t private   String   name ; \n\n\t @FormParam ( \"age\" ) \n\t @MvcBinding \n\t @Min ( 18 ) \n\t @Column \n\t private   int   age ; \n\n\t @BeanParam \n\t @Valid \n\t @Column \n\t private   Address   address ; \n\n\t @FormParam ( \"server\" ) \n\t @NotNull \n\t @MvcBinding \n\t @Column \n\t private   String   server ; \n\n\t @FormParam ( \"description\" ) \n\t @NotEmpty ( message   =   \"can not be empty\" ) \n\t @MvcBinding \n\t @Size ( min   =   10 ) \n\t @Column \n\t private   String   description ; \n } \n\n @Entity \n public   class   Address   { \n\n\t @FormParam ( \"country\" ) \n\t @NotEmpty ( message   =   \"can not be empty\" ) \n\t @MvcBinding \n\t @Column \n\t private   String   country ; \n\n\t @FormParam ( \"state\" ) \n\t @NotEmpty ( message   =   \"can not be empty\" ) \n\t @MvcBinding \n\t @Column \n\t private   String   state ; \n } \n The repository is a  DDD  pattern that acts as a mediator between the domain and data mapping layers using a collection-like interface for accessing domain objects. To create a Person repository, we need an interface that extends  Repository . That\u2019s all; JNoSQL will handle the implementation for you. \n Here\u2019s the method with a query whose whole point is to let the Java developer create any method using the JNoSQL convention. Then, the framework will implement it. \n public   interface   PersonRepository   extends   Repository < Person ,   String >   { \n\n\t Optional < Person >   findById ( Long   id ) ; \n\n\t List < Person >   findAll ( ) ; \n } \n The controller is the bridge to connect the view and the model.  Models  is a map of the name-to-model instances used by ViewEngine to process a view.  Viewable  is an abstraction that encapsulates information about a view. The other points are clear enough. Use the GET annotation to define access and POST to define the PATH that establishes a URL path. \n import static   java.util.stream.Collectors.toList ; \n import static   javax.ws.rs.core.Response.Status.NOT_FOUND ; \n\n import   java.util.Arrays ; \n import   java.util.List ; \n import   java.util.Locale ; \n import   java.util.Optional ; \n import   java.util.function.Supplier ; \n import   java.util.stream.Collectors ; \n\n import   javax.inject.Inject ; \n import   javax.mvc.Controller ; \n import   javax.mvc.Models ; \n import   javax.mvc.View ; \n import   javax.mvc.binding.BindingResult ; \n import   javax.validation.Valid ; \n import   javax.validation.executable.ExecutableType ; \n import   javax.validation.executable.ValidateOnExecution ; \n import   javax.ws.rs.BeanParam ; \n import   javax.ws.rs.GET ; \n import   javax.ws.rs.POST ; \n import   javax.ws.rs.Path ; \n import   javax.ws.rs.PathParam ; \n import   javax.ws.rs.WebApplicationException ; \n\n import   org.eclipse.krazo.engine.Viewable ; \n\n\n @Controller \n @Path ( \"mvc\" ) \n public   class   PersonController   { \n\n\t private   static   final   Supplier < WebApplicationException >   NOT_FOUND_EXCEPTION   =   ( )   - >   new   WebApplicationException ( NOT_FOUND ) ; \n\n\t @Inject \n\t private   Models   models ; \n\n\t @Inject \n\t private   Messages   message ; \n\n\t @Inject \n\t private   Errors   erros ; \n\n\t @Inject \n\t private   BindingResult   bindingResult ; \n\n\t @Inject \n\t private   PersonRepository   repository ; \n\n\t @GET \n\t @Path ( \"new\" ) \n\t public   Viewable   newElement ( )   { \n    \t this . models . put ( \"countries\" ,   getCountries ( ) ) ; \n    \t return   new   Viewable ( \"insert.jsp\" ) ; \n\t } \n\n\t @GET \n\t @Path ( \"show\" ) \n\t @View ( \"list.jsp\" ) \n\t public   void   list ( )   { \n    \t this . models . put ( \"list\" ,   repository . findAll ( ) ) ; \n\t } \n\n\t @POST \n\t @Path ( \"add\" ) \n\t @ValidateOnExecution ( type   =   ExecutableType . NONE ) \n\t public   String   add ( @Valid   @BeanParam   Person   person )   { \n    \t if   ( bindingResult . isFailed ( ) )   { \n\n        \t this . getErrors ( ) ; \n        \t this . models . put ( \"countries\" ,   getCountries ( ) ) ; \n        \t this . models . put ( \"person\" ,   person ) ; \n        \t return   \"insert.jsp\" ; \n\n    \t } \n    \t repository . save ( person ) ; \n    \t message . setMessageRedirect ( \"The \"   +   person . getName ( )   +   \" was successfully registered ! \" ) ; \n    \t return   \"redirect:mvc/show\" ; \n\t } \n\n\t @POST \n\t @Path ( \"update\" ) \n\t @ValidateOnExecution ( type   =   ExecutableType . NONE ) \n\t public   String   update ( @Valid   @BeanParam   Person   person )   { \n    \t if   ( bindingResult . isFailed ( ) )   { \n\n        \t this . getErros ( ) ; \n        \t this . models . put ( \"countries\" ,   getCountries ( ) ) ; \n        \t this . models . put ( \"person\" ,   person ) ; \n        \t return   \"change.jsp\" ; \n\n    \t } \n    \t repository . save ( person ) ; \n    \t message . setMessageRedirect ( \"The \"   +   person . getName ( )   +   \" was changed successfully ! \" ) ; \n    \t return   \"redirect:mvc/show\" ; \n\t } \n\n\t @GET \n\t @Path ( \"update/{id}\" ) \n\t public   Viewable   update ( @PathParam ( \"id\" )   String   id )   { \n\n    \t Optional < Person >   person   =   repository . findById ( id ) ; \n    \t this . models . put ( \"person\" ,   person . orElseThrow ( NOT_FOUND_EXCEPTION ) ) ; \n    \t this . models . put ( \"countries\" ,   getCountries ( ) ) ; \n    \t return   new   Viewable ( \"change.jsp\" ,   models ) ; \n\t } \n\n\t @GET \n\t @Path ( \"remove/{id}\" ) \n\t public   String   delete ( @PathParam ( \"id\" )   String   id )   { \n    \t Optional < Person >   person   =   repository . findById ( id ) ; \n    \t repository . deleteById ( person . map ( Person : : getId ) . orElseThrow ( NOT_FOUND_EXCEPTION ) ) ; \n    \t message . setMessageRedirect ( \"The register was successfully Excluded ! \" ) ; \n    \t return   \"redirect:mvc/show\" ; \n\t } \n\n\t private   String   getCountryName ( String   country )   { \n    \t return   new   Locale ( country ,   country ) . getDisplayCountry ( Locale . ENGLISH ) ; \n\t } \n\n\t private   List < String >   getCountries ( )   { \n    \t return   Arrays . stream ( Locale . getISOCountries ( ) ) \n                 \t . map ( country   - >   getCountryName ( country ) ) \n                 \t . sorted ( ( a ,   b )   - >   a . compareTo ( b ) ) \n                 \t . collect ( Collectors . toList ( ) ) ; \n\t } \n\n\t private   void   getErros ( )   { \n    \t erros . setErrors ( bindingResult . getAllErrors ( ) \n                                 \t . stream ( ) \n                                 \t . collect ( toList ( ) ) ) ; \n\t } \n } \n\n @Named ( \"message\" ) \n @RedirectScoped \n public   class   Messages   implements   Serializable   { \n\n\t private   static   final   long   serialVersionUID   =   1L ; \n\n\t private   String   messageRedirect ; \n\n\t public   String   getMessageRedirect ( )   { \n    \t return   messageRedirect ; \n\t } \n\n\t public   void   setMessageRedirect ( String   messageRedirect )   { \n    \t this . messageRedirect   =   messageRedirect ; \n\t } \n } \n\n import   java.util.ArrayList ; \n import   java.util.List ; \n import   java.util.stream.Collectors ; \n\n import   javax.enterprise.context.RequestScoped ; \n import   javax.inject.Named ; \n import   javax.mvc.binding.ParamError ; \n\n @Named ( \"error\" ) \n @RequestScoped \n public   class   Errors   { \n\n\t private   List < ParamError >   errors   =   new   ArrayList < > ( ) ; \n\n\t public   void   setErrors ( List < ParamError >   messages )   { \n    \t this . errors   =   messages ; \n\t } \n\n\t public   String   getErrors ( )   { \n    \t return   errors . stream ( ) \n                 \t . map ( ParamError : : getMessage ) \n                 \t . collect ( Collectors . joining ( \"<br>\" ) ) ; \n\t } \n\n\t public   String   getMessage ( String   param )   { \n    \t return   errors . stream ( ) \n                 \t . filter ( v   - >   v . getParamName ( ) . equals ( param ) ) \n                 \t . map ( ParamError : : getMessage ) \n                 \t . findFirst ( ) \n                 \t . orElse ( \"\" ) ; \n\t } \n } \n The view/visualization layer will work with the classic JSP pages, which are very popular in the Java world. Note: there are a few view engines that accommodate several files such as asciidoc, HTML 5, peb, html, vm,  and so on . \n <!--  home.jsp  --> \n < %@ page contentType=\"text/html;charset=UTF-8\" language=\"java\"%>\n <!DOCTYPE html> \n < html > \n < head > \n < meta   http-equiv = \"Content-Type\"   content = \"text/html; charset=UTF-8\" > \n < title > MVC 1.0 DEMO < / title > \n < / head > \n < body > \n\t < jsp:include   page = \"/templates/menu.jsp\" > < / jsp:include > \n\n\t < h1   align = \"center\" > Be welcome! < / h1 > \n\n\t < div   align = \"center\" > \n    \t < img   src = \"${pageContext.request.contextPath}/resources/images/tomee.png\"   class = \"img-responsive\"   / > \n\t < / div > \n\t < br / > \n\t < br / > \n\t < jsp:include   page = \"/templates/footer.jsp\" > < / jsp:include > \n < / body > \n < / html > \n <!--  insert.jsp  --> \n < %@ page contentType=\"text/html;charset=UTF-8\" language=\"java\"%>\n < %@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%>\n <!DOCTYPE html> \n < html   lang = \"en\" > \n < head > \n < meta   charset = \"utf-8\" > \n < meta   http-equiv = \"X-UA-Compatible\"   content = \"IE=edge\" > \n < meta   name = \"viewport\"   content = \"width=device-width, initial-scale=1\" > \n < title > MVC 1.0 DEMO < / title > \n < / head > \n < body > \n\n\t < div   class = \"container\" > \n    \t < c:if   test = \"${error.errors.length() != 0}\" > \n        \t < div   class = \"row\" > \n            \t < div   class = \"col-md-12\" > \n                \t < p   class = \"alert alert-danger\" > ${error.errors} < / p > \n            \t < / div > \n        \t < / div > \n    \t < / c:if > \n    \t < div   class = \"row\" > \n        \t < div   class = \"col-md-4 col-md-offset-4\" > \n            \t < form   action = \"add\"   method = \"post\" > \n                \t < h2 > New register < / h2 > \n                \t < div   class = \"form-group\" > \n                    \t < label   for = \"name\" > Name: < / label > \n                    \t < input   id = \"name\"   name = \"name\"   class = \"form-control\"   autofocus   value = \"${person.name}\" > \n                    \t < c:if   test = \"${mvc.encoders.html(error.getMessage('name').length() != 0)}\" > \n                        \t < div   class = \"row\" > \n                            \t < div   class = \"col-md-12\" > \n                                \t < p   class = \"alert alert-danger\" > ${mvc.encoders.html(error.getMessage(\"name\"))} < / p > \n                            \t < / div > \n                        \t < / div > \n                    \t < / c:if > \n                \t < / div > \n                \t < div   class = \"form-group\" > \n                    \t < label   for = \"age\" > Age: < / label > \n                    \t < input   type = \"number\"   id = \"age\"   name = \"age\"   class = \"form-control\"   value = \"${person.age}\" > \n                    \t < c:if   test = \"${mvc.encoders.html(error.getMessage('age').length() != 0)}\" > \n                        \t < div   class = \"row\" > \n                            \t < div   class = \"col-md-12\" > \n                                \t < p   class = \"alert alert-danger\" > ${mvc.encoders.html(error.getMessage(\"age\"))} < / p > \n                            \t < / div > \n                        \t < / div > \n                    \t < / c:if > \n                \t < / div > \n\n                \t < div   class = \"form-group\" > \n                    \t < label   for = \"state\" > State: < / label > \n                    \t < input   type = \"text\"   id = \"state\"   name = \"state\"   class = \"form-control\"   value = \"${person.address.state}\" > \n                    \t < c:if   test = \"${mvc.encoders.html(error.getMessage('state').length() != 0)}\" > \n                        \t < div   class = \"row\" > \n                            \t < div   class = \"col-md-12\" > \n                                \t < p   class = \"alert alert-danger\" > ${mvc.encoders.html(error.getMessage(\"state\"))} < / p > \n                            \t < / div > \n                        \t < / div > \n                    \t < / c:if > \n                \t < / div > \n                \t < div   class = \"form-group\" > \n                    \t < label   for = \"state\" > Application Server: < / label >   < br / > \n                    \t < label   class = \"radio-inline\" > \n                    \t < input   type = \"radio\"   name = \"server\"   value = \"TomEE\"   class = \"form-check-input\" / > TomEE < / label > \n                    \t < label   class = \"radio-inline\" > \n                    \t < input   type = \"radio\"   name = \"server\"   value = \"Wildfly\"   class = \"form-check-input\" / > Wildfly < / label > \n                    \t < label   class = \"radio-inline\" > \n                    \t < input   type = \"radio\"   name = \"server\"   value = \"Payara\"   class = \"form-check-input\" / > Payara < / label > \n\n                    \t < c:if   test = \"${mvc.encoders.html(error.getMessage('server').length() != 0)}\" > \n                        \t < div   class = \"row\" > \n                            \t < div   class = \"col-md-12\" > \n                                \t < p   class = \"alert alert-danger\" > ${mvc.encoders.html(error.getMessage(\"server\"))} < / p > \n                            \t < / div > \n                        \t < / div > \n                    \t < / c:if > \n                \t < / div > \n                \t < div   class = \"form-group\" > \n                    \t < label   for = \"country\" > Country: < / label > \n                    \t < select \n                        \t id = \"country\"   name = \"country\"   class = \"form-control\" > \n                        \t < option   value = \"${person.address.country}\" > ${person.address.country} < / option > \n                        \t < c:forEach   var = \"countries\"   items = \"${countries}\" > \n                            \t < option > ${countries} < / option > \n                        \t < / c:forEach > \n                    \t < / select > \n\n                    \t < c:if   test = \"${mvc.encoders.html(error.getMessage('country').length() != 0)}\" > \n                        \t < div   class = \"row\" > \n                            \t < div   class = \"col-md-12\" > \n                                \t < p   class = \"alert alert-danger\" > ${mvc.encoders.html(error.getMessage(\"country\"))} < / p > \n                            \t < / div > \n                        \t < / div > \n                    \t < / c:if > \n                \t < / div > \n                \t < div   class = \"form-group\" > \n                    \t < label   for = \"description\" > Description: < / label > \n                    \t < textarea   type = \"\"   id = \"description\"   name = \"description\"   class = \"form-control\" > ${person.description} < / textarea > \n                    \t < c:if   test = \"${mvc.encoders.html(error.getMessage('description').length() != 0)}\" > \n                        \t < div   class = \"row\" > \n                            \t < div   class = \"col-md-12\" > \n                                \t < p   class = \"alert alert-danger\" > ${mvc.encoders.html(error.getMessage(\"description\"))} < / p > \n                            \t < / div > \n                        \t < / div > \n                    \t < / c:if > \n                \t < / div > \n                \t < button   class = \"btn btn-primary btn-block\"   type = \"submit\" > Register < / button > \n            \t < / form > \n        \t < / div > \n    \t < / div > \n\t < / div > \n\t < br   / > \n\t < br   / > \n\t < jsp:include   page = \"/templates/footer.jsp\" > < / jsp:include > \n < / body > \n < / html > \n Platform.sh structure \n The Java application is ready to go! The next step is to set the Platform.sh files required to manage and deploy the application. In our  first Java post , we took a deep dive into how each of these files configure the necessary containers in the virtual cluster: \n \n One Router (.platform/routes.yaml). Platform.sh allows you to define the  routes . \n Zero or more service containers (.platform/services.yaml). Platform.sh allows you to completely define and configure the topology and services you want to use on your  project . \n One or more application containers (.platform.app.yaml). You control your application and the way it will be built and deployed on Platform.sh  via a single configuration file . \n \n The file that will change in this post is the  services file , which allows you to define a database, search engine, cache, and so on. In this project, we\u2019ll set  MongoDB  instead of  MySQL . \n database : \n    type :   mongodb : 3.6 \n    disk :   1024 \n Platform.sh and Java \n For the database, we need to define where the connection comes from. Platform.sh provides connection credentials to services using the  PLATFORM_RELATIONSHIPS  environmental variable. \n import   com.mongodb.MongoClient ; \n import   jakarta.nosql.document.DocumentCollectionManager ; \n import   org.jnosql.diana.mongodb.document.MongoDBDocumentCollectionManagerFactory ; \n import   org.jnosql.diana.mongodb.document.MongoDBDocumentConfiguration ; \n import   sh.platform.config.Config ; \n import   sh.platform.config.MongoDB ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.enterprise.inject.Disposes ; \n import   javax.enterprise.inject.Produces ; \n\n @ApplicationScoped \n public   class   PersonProducer   { \n\n\t @Produces \n\t @ApplicationScoped \n\t public   DocumentCollectionManager   getDocumentCollectionManager ( )   { \n    \t Config   config   =   new   Config ( ) ; \n    \t final   MongoDB   mongo   =   config . getCredential ( \"mongodb\" ,   MongoDB : : new ) ; \n    \t final   MongoClient   mongoClient   =   mongo . get ( ) ; \n    \t MongoDBDocumentConfiguration   configuration   =   new   MongoDBDocumentConfiguration ( ) ; \n    \t MongoDBDocumentCollectionManagerFactory   factory   =   configuration . get ( mongoClient ) ; \n    \t return   factory . get ( mongo . getDatabase ( ) ) ; \n\t } \n\n\t public   void   close ( @Disposes   DocumentCollectionManager   manager )   { \n    \t manager . close ( ) ; \n\t } \n } \n The  Java Config Reader  library offers classes that will read the information from the variable and return an object that represents the services, like a DataSource for MySQL, PostgreSQL, MongoClient, Redis, or any other services you\u2019ve defined in  .platform/services.yaml ! \n The application is now ready, so it\u2019s time to move it to Platform.sh using the  following  steps: \n \n Create a new  free trial account . \n Sign up with a new user and password, or login using a current GitHub, Bitbucket, or Google account. If you use a third-party login, you\u2019ll be able to set a password for your Platform.sh account later. \n Add a new project by selecting \u201cCreate a blank project\u201d from the template list after you have named it. \n \n After this wizard, Platform.sh will provision the whole infrastructure for you, providing your project a remote Git repository. The Platform.sh Git-driven infrastructure means it will automatically manage everything your application needs to push it to the master remote repository. After you set up your [SSH keys] ( https://docs.platform.sh/development/ssh.html#using-ssh-keys),  you only need to write your code\u2014including a few YAML files that  specify  your desired infrastructure\u2014then commit it to Git and push. \n git remote add platform <platform.sh@gitrepository>\ngit commit -m  \"Initial project\" \ngit push -u platform master\n Code pushed will create both the Java application and a MongoDB instance, and, when it\u2019s done, will return an IP address to the service. \n In this tutorial, we showed the new hope for Java Enterprise with Jakarta EE. We made an  application using APIs from Java EE/Jakarta EE  specification and put it on the cloud easily with Platform.sh. The Java community, including several organizations like the Eclipse Foundation, is tight-knit and represents a brave new technology throughout the galaxy. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Microservices in the cloud, part two ", "url": "https://platform.sh/blog/2019/microservices-in-the-cloud-part-two/", "documentId": "9c2a78b51031ffd46830afdfe7d80366ab8a41e1", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Microservices in the cloud, part two \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         23 Aug 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Microservices are a hot topic in software design, and for good reason. They have plenty of advantages when it comes to handling infrastructure complexity, many of which were addressed in part one of our related Java post. Now, it\u2019s time to talk about the code and design. In this post, we\u2019ll take a deep dive into each module. \n When creating an application, clean code means thinking about design and architecture. Architecture is the software process that handles flexibility, scalability, usability, security, and other points, so you have more time to focus on business rather than on technology. Some architecture examples include: \n \n Serverless architecture . Application designs that incorporate third-party, Backend-as-a-Service (BaaS) services, and include custom code run in managed, ephemeral containers on a Functions-as-a-Service (FaaS) platform. \n Event-driven architecture. A software architecture pattern promoting the production, detection, consumption of, and reaction to events. \n Microservices architecture. A variant of the service-oriented architecture (SOA) style that structures an application as a collection of loosely coupled services. In a microservices architecture, services are fine grained and the protocols lightweight. \n \n The design has a low-level duty that supervises the code, such as what each module is going to do, the class\u2019s scope, the functions proposal, and so on. \n \n SOLID. The five design principles that make software designs more understandable, flexible, and maintainable. \n Design patterns. The ideal solutions to common problems in software design. Each pattern is like a blueprint you can customize to solve a particular design problem in your code. \n \n Speaker service \n The first service that we\u2019ll cover is the Speaker service, which uses  Thorntail  and  PostgreSQL . The Eclipse MicroProfile doesn\u2019t have support for a relational database. However, we can use the specification from its older and more mature brother, Jakarta EE. As a first step, let\u2019s define the Speaker entity. \n import   javax.persistence.Column ; \n import   javax.persistence.Entity ; \n import   javax.persistence.GeneratedValue ; \n import   javax.persistence.Id ; \n import   javax.persistence.Table ; \n import   java.util.Objects ; \n\n @Entity \n @Table ( name   =   \"speaker\" ) \n public   class   Speaker   { \n\n\t @Id \n\t @GeneratedValue \n\t private   Integer   id ; \n\n\t @Column \n\t private   String   name ; \n\n\t @Column \n\t private   String   bio ; \n\n\t @Column \n\t private   String   twitter ; \n\n\t @Column \n\t private   String   github ; \n\n     //more code\n \n } \n Revisit our  previous article  that covers the JPA integration, using  Transactional annotation  and a  CDI Interceptor  to manage the transaction. \n \n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.inject.Inject ; \n import   javax.persistence.EntityManager ; \n import   javax.transaction.Transactional ; \n import   java.util.List ; \n import   java.util.Optional ; \n\n @ApplicationScoped \n public   class   SpeakerService   { \n\n\t @Inject \n\t private   EntityManager   entityManager ; \n\n\t @Transactional \n\t public   Speaker   insert ( Speaker   speaker )   { \n    \t entityManager . persist ( speaker ) ; \n    \t return   speaker ; \n\t } \n\n\t @Transactional \n\t public   void   update ( Speaker   speaker )   { \n    \t entityManager . persist ( speaker ) ; \n\t } \n\n\t @Transactional \n\t public   void   delete ( Integer   id )   { \n    \t find ( id ) . ifPresent ( c   - >   entityManager . remove ( c ) ) ; \n\t } \n\n\n\t public   Optional < Speaker >   find ( Integer   id )   { \n    \t return   Optional . ofNullable ( entityManager . find ( Speaker . class ,   id ) ) ; \n\t } \n\n\t public   List < Speaker >   findAll ( )   { \n    \t String   query   =   \"select e from Speaker e\" ; \n    \t return   entityManager . createQuery ( query ) . getResultList ( ) ; \n\t } \n } \n We have a resource to expose the services through an HTTP request. We\u2019ve created a layer on DTO to avoid losing the encapsulation. \n import   javax.enterprise.context.RequestScoped ; \n import   javax.inject.Inject ; \n import   javax.validation.Valid ; \n import   javax.ws.rs.Consumes ; \n import   javax.ws.rs.DELETE ; \n import   javax.ws.rs.GET ; \n import   javax.ws.rs.POST ; \n import   javax.ws.rs.PUT ; \n import   javax.ws.rs.Path ; \n import   javax.ws.rs.PathParam ; \n import   javax.ws.rs.Produces ; \n import   javax.ws.rs.WebApplicationException ; \n import   javax.ws.rs.core.MediaType ; \n import   javax.ws.rs.core.Response ; \n import   java.util.List ; \n import   java.util.Optional ; \n import   java.util.stream.Collectors ; \n\n import static   javax.ws.rs.core.Response.Status.NO_CONTENT ; \n import static   javax.ws.rs.core.Response.status ; \n\n @Path ( \"speakers\" ) \n @RequestScoped \n @Produces ( MediaType . APPLICATION_JSON   +   \"; charset=UTF-8\" ) \n @Consumes ( MediaType . APPLICATION_JSON +   \"; charset=UTF-8\" ) \n public   class   SpeakerResource   { \n\n\t @Inject \n\t private   SpeakerService   speakerService ; \n\n\t @GET \n\t public   List < SpeakerDTO >   findAll ( )   { \n    \t return   speakerService . findAll ( ) \n            \t . stream ( ) . map ( SpeakerDTO : : of ) \n            \t . collect ( Collectors . toList ( ) ) ; \n\t } \n\n\t @GET \n\t @Path ( \"{id}\" ) \n\t public   SpeakerDTO   findById ( @PathParam ( \"id\" )   Integer   id )   { \n    \t final   Optional < Speaker >   conference   =   speakerService . find ( id ) ; \n    \t return   conference . map ( SpeakerDTO : : of ) . orElseThrow ( this : : notFound ) ; \n\t } \n\n\t @PUT \n\t @Path ( \"{id}\" ) \n\t public   SpeakerDTO   update ( @PathParam ( \"id\" )   Integer   id ,   @Valid   SpeakerDTO   speakerUpdated )   { \n    \t final   Optional < Speaker >   optional   =   speakerService . find ( id ) ; \n    \t final   Speaker   speaker   =   optional . orElseThrow ( ( )   - >   notFound ( ) ) ; \n    \t speaker . update ( Speaker . of ( speakerUpdated ) ) ; \n    \t speakerService . update ( speaker ) ; \n    \t return   SpeakerDTO . of ( speaker ) ; \n\t } \n\n\t @DELETE \n\t @Path ( \"{id}\" ) \n\t public   Response   remove ( @PathParam ( \"id\" )   Integer   id )   { \n    \t speakerService . delete ( id ) ; \n    \t return   status ( NO_CONTENT ) . build ( ) ; \n\t } \n\n\t @POST \n\t public   SpeakerDTO   insert ( @Valid   SpeakerDTO   speaker )   { \n    \t return   SpeakerDTO . of ( speakerService . insert ( Speaker . of ( speaker ) ) ) ; \n\t } \n\n\t private   WebApplicationException   notFound ( )   { \n    \t return   new   WebApplicationException ( Response . Status . NOT_FOUND ) ; \n\t } \n } \n In the  .platform.app.yaml  file, we need to check that the speaker application has access to the PostgreSQL instance and anything else about the database that lets Platform.sh handle it. \n relationships : \n    postgresql :   'postgresql:postgresql' \n Session service \n The Session service will handle the contents of the conference, so that a user can find sessions related to topics like cloud and Java. This service uses  Elasticsearch  with  Jakarta NoSQL  and  KumuluzEE . \n import   jakarta.nosql.mapping.Column ; \n import   jakarta.nosql.mapping.Entity ; \n import   jakarta.nosql.mapping.Id ; \n\n import   java.util.Objects ; \n\n @Entity \n public   class   Session   { \n\n     @Id \n     private   String   id ; \n\n     @Column \n     private   String   name ; \n\n     @Column \n     private   String   title ; \n\n     @Column \n     private   String   description ; \n\n     @Column \n     private   String   conference ; \n\n     @Column \n     private   Integer   speaker ; \n\n } \n We\u2019re applying a distinct aspect of Elasticsearch to use it as a search engine. Jakarta NoSQL looks to the specialization that allows particular features for each NoSQL database. Therefore, we\u2019ll have a mix of repository and ElasticsearchTemplate, a specialty of DocumentTemplate. \n import   jakarta.nosql.mapping.Repository ; \n\n import   java.util.List ; \n\n public   interface   SessionRepository   extends   Repository < Session ,   String >   { \n\n\t List < Session >   findAll ( ) ; \n } \n\n\n import   org.elasticsearch.index.query.QueryBuilder ; \n import   org.jnosql.artemis.elasticsearch.document.ElasticsearchTemplate ; \n import   org.jnosql.artemis.util.StringUtils ; \n\n import   javax.enterprise.context.RequestScoped ; \n import   javax.inject.Inject ; \n import   javax.validation.Valid ; \n import   javax.ws.rs.Consumes ; \n import   javax.ws.rs.DELETE ; \n import   javax.ws.rs.GET ; \n import   javax.ws.rs.POST ; \n import   javax.ws.rs.PUT ; \n import   javax.ws.rs.Path ; \n import   javax.ws.rs.PathParam ; \n import   javax.ws.rs.Produces ; \n import   javax.ws.rs.QueryParam ; \n import   javax.ws.rs.WebApplicationException ; \n import   javax.ws.rs.core.MediaType ; \n import   javax.ws.rs.core.Response ; \n import   java.util.Collections ; \n import   java.util.List ; \n import   java.util.Optional ; \n import   java.util.UUID ; \n import   java.util.logging.Logger ; \n import   java.util.stream.Collectors ; \n\n import static   javax.ws.rs.core.Response.Status.NO_CONTENT ; \n import static   javax.ws.rs.core.Response.status ; \n import static   org.elasticsearch.index.query.QueryBuilders.boolQuery ; \n import static   org.elasticsearch.index.query.QueryBuilders.termQuery ; \n\n @Path ( \"sessions\" ) \n @RequestScoped \n @Produces ( MediaType . APPLICATION_JSON   +   \"; charset=UTF-8\" ) \n @Consumes ( MediaType . APPLICATION_JSON   +   \"; charset=UTF-8\" ) \n public   class   SessionResource   { \n\n\t private   static   Logger   LOGGER   =   Logger . getLogger ( SessionResource . class . getName ( ) ) ; \n\n\t @Inject \n\t private   SessionRepository   speakerRepository ; \n\n\t @Inject \n\t private   ElasticsearchTemplate   template ; \n\n\t @GET \n\t public   List < SessionDTO >   findAll ( @QueryParam ( \"search\" )   String   search )   { \n    \t LOGGER . info ( \"searching with the field: \"   +   search ) ; \n    \t if   ( StringUtils . isNotBlank ( search ) )   { \n        \t QueryBuilder   queryBuilder   =   boolQuery ( ) \n                \t . should ( termQuery ( \"name\" ,   search ) ) \n                \t . should ( termQuery ( \"title\" ,   search ) ) \n                \t . should ( termQuery ( \"description\" ,   search ) ) ; \n\n        \t LOGGER . info ( \"the query: \"   +   queryBuilder ) ; \n        \t List < Session >   sessions   =   template . search ( queryBuilder ,   \"Session\" ) ; \n        \t LOGGER . info ( \"the result: \"   +   sessions ) ; \n        \t return   sessions . stream ( ) \n                \t . map ( SessionDTO : : of ) \n                \t . collect ( Collectors . toList ( ) ) ; \n    \t } \n    \t return   speakerRepository . findAll ( ) . stream ( ) \n            \t . map ( SessionDTO : : of ) . collect ( Collectors . toList ( ) ) ; \n\t } \n\n\t @GET \n\t @Path ( \"{id}\" ) \n\t public   Session   findById ( @PathParam ( \"id\" )   String   id )   { \n    \t final   Optional < Session >   conference   =   speakerRepository . findById ( id ) ; \n    \t return   conference . orElseThrow ( this : : notFound ) ; \n\t } \n\n\t @PUT \n\t @Path ( \"{id}\" ) \n\t public   SessionDTO   update ( @PathParam ( \"id\" )   String   id ,   @Valid   SessionDTO   sessionUpdated )   { \n    \t final   Optional < Session >   optional   =   speakerRepository . findById ( id ) ; \n    \t final   Session   session   =   optional . orElseThrow ( ( )   - >   notFound ( ) ) ; \n    \t session . update ( Session . of ( sessionUpdated ) ) ; \n    \t speakerRepository . save ( session ) ; \n    \t return   SessionDTO . of ( session ) ; \n\t } \n\n\t @DELETE \n\t @Path ( \"{id}\" ) \n\t public   Response   remove ( @PathParam ( \"id\" )   String   id )   { \n    \t speakerRepository . deleteById ( id ) ; \n    \t return   status ( NO_CONTENT ) . build ( ) ; \n\t } \n\n\t @POST \n\t public   SessionDTO   insert ( @Valid   SessionDTO   session )   { \n    \t session . setId ( UUID . randomUUID ( ) . toString ( ) ) ; \n    \t return   SessionDTO . of ( speakerRepository . save ( Session . of ( session ) ) ) ; \n\t } \n\n\t private   WebApplicationException   notFound ( )   { \n    \t return   new   WebApplicationException ( Response . Status . NOT_FOUND ) ; \n\t } \n } \n Conference service \n The Conference service is the most connected of the services because it needs to keep information from both speaker and session services. It uses  Payara Micro  and  MongoDB  with Jakarta NoSQL. \n import   jakarta.nosql.mapping.Column ; \n import   jakarta.nosql.mapping.Convert ; \n import   jakarta.nosql.mapping.Entity ; \n import   jakarta.nosql.mapping.Id ; \n\n import   java.time.Year ; \n import   java.util.Collections ; \n import   java.util.List ; \n import   java.util.Objects ; \n import   java.util.Optional ; \n import   java.util.stream.Collectors ; \n\n @Entity \n public   class   Conference   { \n\n\t @Id \n\t @Convert ( ObjectIdConverter . class ) \n\t private   String   id ; \n\n\t @Column \n\t private   String   name ; \n\n\t @Column \n\t private   String   city ; \n\n\t @Column \n\t private   String   link ; \n\n\t @Column \n\t @Convert ( YearConverter . class ) \n\t private   Year   year ; \n\n\t @Column \n\t private   List < Speaker >   speakers ; \n\n\t @Column \n\t private   List < Session >   sessions ; \n\n } \n\n @Entity \n public   class   Session   { \n\n\t @Column \n\t private   String   id ; \n\n\t @Column \n\t private   String   name ; \n } \n\n @Entity \n public   class   Speaker   { \n\n\t @Column \n\t private   Integer   id ; \n\n\t @Column \n\t private   String   name ; \n\n } \n One of the benefits of MongoDB is that we can use the  subdocument  instead of creating a relationship. Therefore, we can embed Speaker and Session instead of doing joins. Note, the Speaker and Session entities have brief information such as name and ID. \n import   jakarta.nosql.mapping.Repository ; \n\n import   java.util.List ; \n\n public   interface   ConferenceRepository   extends   Repository < Conference ,   String >   { \n\n\t List < Conference >   findAll ( ) ; \n } \n\n\n import   javax.enterprise.context.RequestScoped ; \n import   javax.inject.Inject ; \n import   javax.validation.Valid ; \n import   javax.ws.rs.Consumes ; \n import   javax.ws.rs.DELETE ; \n import   javax.ws.rs.GET ; \n import   javax.ws.rs.POST ; \n import   javax.ws.rs.PUT ; \n import   javax.ws.rs.Path ; \n import   javax.ws.rs.PathParam ; \n import   javax.ws.rs.Produces ; \n import   javax.ws.rs.WebApplicationException ; \n import   javax.ws.rs.core.MediaType ; \n import   javax.ws.rs.core.Response ; \n import   java.util.List ; \n import   java.util.Optional ; \n import   java.util.stream.Collectors ; \n\n import static   javax.ws.rs.core.Response.Status.NO_CONTENT ; \n import static   javax.ws.rs.core.Response.status ; \n\n @Path ( \"conferences\" ) \n @RequestScoped \n @Produces ( MediaType . APPLICATION_JSON   +   \"; charset=UTF-8\" ) \n @Consumes ( MediaType . APPLICATION_JSON +   \"; charset=UTF-8\" ) \n public   class   ConferenceResource   { \n\n\t @Inject \n\t private   ConferenceRepository   conferenceRepository ; \n\n\t @GET \n\t public   List < ConferenceDTO >   findAll ( )   { \n    \t return   conferenceRepository . findAll ( ) . stream ( ) \n            \t . map ( ConferenceDTO : : of ) \n            \t . collect ( Collectors . toList ( ) ) ; \n\t } \n\n\t @GET \n\t @Path ( \"{id}\" ) \n\t public   ConferenceDTO   findById ( @PathParam ( \"id\" )   String   id )   { \n    \t final   Optional < Conference >   conference   =   conferenceRepository . findById ( id ) ; \n    \t return   conference . map ( ConferenceDTO : : of ) . orElseThrow ( this : : notFound ) ; \n\t } \n\n\t @PUT \n\t @Path ( \"{id}\" ) \n\t public   ConferenceDTO   update ( @PathParam ( \"id\" )   String   id ,   @Valid   ConferenceDTO   conferenceUpdated )   { \n    \t final   Optional < Conference >   optional   =   conferenceRepository . findById ( id ) ; \n    \t final   Conference   conference   =   optional . orElseThrow ( ( )   - >   notFound ( ) ) ; \n    \t conference . update ( Conference . of ( conferenceUpdated ) ) ; \n    \t conferenceRepository . save ( conference ) ; \n    \t return   ConferenceDTO . of ( conference ) ; \n\t } \n\n\t @DELETE \n\t @Path ( \"{id}\" ) \n\t public   Response   remove ( @PathParam ( \"id\" )   String   id )   { \n    \t conferenceRepository . deleteById ( id ) ; \n    \t return   status ( NO_CONTENT ) . build ( ) ; \n\t } \n\n\t @POST \n\t public   ConferenceDTO   insert ( @Valid   ConferenceDTO   conference )   { \n    \t return   ConferenceDTO . of ( conferenceRepository . save ( Conference . of ( conference ) ) ) ; \n\t } \n\n\t private   WebApplicationException   notFound ( )   { \n    \t return   new   WebApplicationException ( Response . Status . NOT_FOUND ) ; \n\t } \n } \n Client service \n The client will show the RESTful application using HTML 5 with  Eclipse Krazo . Yes, Eclipse Krazo has several engine extensions to use more than JSP, such as HTML 5. The extension we\u2019ll use is  Thymeleaf  with  Apache TomEE . \n \t <dependencies > \n    \t <dependency > \n        \t <groupId > org.eclipse.microprofile </groupId> \n        \t <artifactId > microprofile </artifactId> \n        \t <type > pom </type> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > sh.platform </groupId> \n        \t <artifactId > config </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.eclipse.krazo </groupId> \n        \t <artifactId > krazo-core </artifactId> \n        \t <version > ${version.krazo} </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.eclipse.krazo </groupId> \n        \t <artifactId > krazo-cxf </artifactId> \n        \t <version > ${version.krazo} </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > javax.servlet </groupId> \n        \t <artifactId > jstl </artifactId> \n        \t <version > ${jstl.version} </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.eclipse.krazo.ext </groupId> \n        \t <artifactId > krazo-thymeleaf </artifactId> \n        \t <version > ${version.krazo} </version> \n    \t </dependency> \n\t </dependencies> \n The first step in the client is to create the bridge to request information from the services. Thankfully, we have an  Eclipse MicroProfile Rest Client  to deal just with interfaces and nothing more. \n package   org.jespanol.client.speaker ; \n\n import   org.eclipse.microprofile.rest.client.inject.RegisterRestClient ; \n\n import   javax.ws.rs.Consumes ; \n import   javax.ws.rs.DELETE ; \n import   javax.ws.rs.GET ; \n import   javax.ws.rs.POST ; \n import   javax.ws.rs.PUT ; \n import   javax.ws.rs.Path ; \n import   javax.ws.rs.PathParam ; \n import   javax.ws.rs.Produces ; \n import   javax.ws.rs.core.MediaType ; \n import   javax.ws.rs.core.Response ; \n import   java.util.List ; \n\n @Path ( \"speakers\" ) \n @RegisterRestClient \n @Produces ( MediaType . APPLICATION_JSON   +   \"; charset=UTF-8\" ) \n @Consumes ( MediaType . APPLICATION_JSON +   \"; charset=UTF-8\" ) \n public   interface   SpeakerService   { \n\n\t @GET \n\t List < Speaker >   findAll ( ) ; \n\n\t @GET \n\t @Path ( \"{id}\" ) \n\t Speaker   findById ( @PathParam ( \"id\" )   Integer   id ) ; \n\n\t @PUT \n\t @Path ( \"{id}\" ) \n\t Speaker   update ( @PathParam ( \"id\" )   Integer   id ,   Speaker   speaker ) ; \n\n\t @DELETE \n\t @Path ( \"{id}\" ) \n\t Response   remove ( @PathParam ( \"id\" )   Integer   id ) ; \n\n\t @POST \n\t Speaker   insert ( Speaker   speaker ) ; \n\n } \n\n\n import   org.eclipse.microprofile.rest.client.inject.RegisterRestClient ; \n\n import   javax.ws.rs.Consumes ; \n import   javax.ws.rs.DELETE ; \n import   javax.ws.rs.GET ; \n import   javax.ws.rs.POST ; \n import   javax.ws.rs.PUT ; \n import   javax.ws.rs.Path ; \n import   javax.ws.rs.PathParam ; \n import   javax.ws.rs.Produces ; \n import   javax.ws.rs.QueryParam ; \n import   javax.ws.rs.core.MediaType ; \n import   javax.ws.rs.core.Response ; \n import   java.util.List ; \n\n @Path ( \"sessions\" ) \n @RegisterRestClient \n @Produces ( MediaType . APPLICATION_JSON   +   \"; charset=UTF-8\" ) \n @Consumes ( MediaType . APPLICATION_JSON +   \"; charset=UTF-8\" ) \n public   interface   SessionService   { \n\n\t @GET \n\t List < Session >   findAll ( @QueryParam ( \"search\" )   String   search ) ; \n\n\t @GET \n\t List < Session >   findAll ( ) ; \n\n\t @GET \n\t @Path ( \"{id}\" ) \n\t Session   findById ( @PathParam ( \"id\" )   String   id ) ; \n\n\t @PUT \n\t @Path ( \"{id}\" ) \n\t Session   update ( @PathParam ( \"id\" )   String   id ,   Session   session ) ; \n\n\t @DELETE \n\t @Path ( \"{id}\" ) \n\t Response   remove ( @PathParam ( \"id\" )   String   id ) ; \n\n\t @POST \n\t Session   insert ( Session   session ) ; \n\n } \n\n\n import   org.eclipse.microprofile.rest.client.inject.RegisterRestClient ; \n\n import   javax.ws.rs.Consumes ; \n import   javax.ws.rs.DELETE ; \n import   javax.ws.rs.GET ; \n import   javax.ws.rs.POST ; \n import   javax.ws.rs.PUT ; \n import   javax.ws.rs.Path ; \n import   javax.ws.rs.PathParam ; \n import   javax.ws.rs.Produces ; \n import   javax.ws.rs.core.MediaType ; \n import   javax.ws.rs.core.Response ; \n import   java.util.List ; \n\n @Path ( \"conferences\" ) \n @RegisterRestClient \n @Produces ( MediaType . APPLICATION_JSON   +   \"; charset=UTF-8\" ) \n @Consumes ( MediaType . APPLICATION_JSON +   \"; charset=UTF-8\" ) \n public   interface   ConferenceService   { \n\n\t @GET \n\t List < Conference >   findAll ( ) ; \n\n\t @GET \n\t @Path ( \"{id}\" ) \n\t Conference   findById ( @PathParam ( \"id\" )   String   id ) ; \n\n\t @PUT \n\t @Path ( \"{id}\" ) \n\t Conference   update ( @PathParam ( \"id\" )   String   id ,   Conference   conference ) ; \n\n\t @DELETE \n\t @Path ( \"{id}\" ) \n\t Response   remove ( @PathParam ( \"id\" )   String   id ) ; \n\n\t @POST \n\t Conference   insert ( Conference   conference ) ; \n } \n To make sure that the services are up, we conduct an  Eclipse Microprofile Health check , so we can evaluate the HTTP status and the response time in milliseconds. \n \n import   org.eclipse.microprofile.health.HealthCheck ; \n import   org.eclipse.microprofile.health.HealthCheckResponse ; \n\n import   javax.ws.rs.client.Client ; \n import   javax.ws.rs.core.MediaType ; \n import   javax.ws.rs.core.Response ; \n\n abstract   class   AbstractHealthCheck   implements   HealthCheck   { \n\n\n\t abstract   Client   getClient ( ) ; \n\n\t abstract   String   getUrl ( ) ; \n\n\t abstract   String   getServiceName ( ) ; \n\n\t @Override \n\t public   HealthCheckResponse   call ( )   { \n    \t try   { \n        \t long   start   =   System . currentTimeMillis ( ) ; \n        \t Response   response   =   getClient ( ) . target ( getUrl ( ) ) . request ( MediaType . TEXT_PLAIN_TYPE ) \n                \t . get ( ) ; \n        \t long   end   =   System . currentTimeMillis ( )   -   start ; \n        \t return   HealthCheckResponse . named ( getServiceName ( ) ) \n                \t . withData ( \"service\" ,   \"available\" ) \n                \t . withData ( \"time millis\" ,   end ) \n                \t . withData ( \"status\" ,   response . getStatus ( ) ) \n                \t . withData ( \"status\" ,   response . getStatusInfo ( ) . toEnum ( ) . toString ( ) ) \n                \t . up ( ) \n                \t . build ( ) ; \n    \t }   catch   ( Exception   exp )   { \n        \t return   HealthCheckResponse . named ( getServiceName ( ) ) \n                \t . withData ( \"services\" ,   \"not available\" ) \n                \t . down ( ) \n                \t . build ( ) ; \n    \t } \n\t } \n } \n\n @Health \n @ApplicationScoped \n public   class   ConferenceHealthCheck   extends   AbstractHealthCheck   { \n\n\t @Inject \n\t @ConfigProperty ( name   =   \"org.jespanol.client.conference.ConferenceService/mp-rest/url\" ) \n\t private   String   url ; \n\n\t private   Client   client ; \n\n\t @PostConstruct \n\t public   void   init ( )   { \n    \t this . client   =   ClientBuilder . newClient ( ) ; \n\t } \n\n\n\t @Override \n\t Client   getClient ( )   { \n    \t return   client ; \n\t } \n\n\t @Override \n\t String   getUrl ( )   { \n    \t return   url ; \n\t } \n\n\t @Override \n\t String   getServiceName ( )   { \n    \t return   \"Conference Service\" ; \n\t } \n } \n\n\n @Health \n @ApplicationScoped \n public   class   SessionHealthCheck   extends   AbstractHealthCheck   { \n\n\t @Inject \n\t @ConfigProperty ( name   =   \"org.jespanol.client.session.SessionService/mp-rest/url\" ) \n\t private   String   url ; \n\n\t private   Client   client ; \n\n\t @PostConstruct \n\t public   void   init ( )   { \n    \t this . client   =   ClientBuilder . newClient ( ) ; \n\t } \n\n\n\t @Override \n\t Client   getClient ( )   { \n    \t return   client ; \n\t } \n\n\t @Override \n\t String   getUrl ( )   { \n    \t return   url ; \n\t } \n\n\t @Override \n\t String   getServiceName ( )   { \n    \t return   \"Session Service\" ; \n\t } \n } \n\n\n @Health \n @ApplicationScoped \n public   class   SpeakerHealthCheck   extends   AbstractHealthCheck   { \n\n\t @Inject \n\t @ConfigProperty ( name   =   \"org.jespanol.client.speaker.SpeakerService/mp-rest/url\" ) \n\t private   String   url ; \n\n\t private   Client   client ; \n\n\t @PostConstruct \n\t public   void   init ( )   { \n    \t this . client   =   ClientBuilder . newClient ( ) ; \n\t } \n\n\t @Override \n\t Client   getClient ( )   { \n    \t return   client ; \n\t } \n\n\t @Override \n\t String   getUrl ( )   { \n    \t return   url ; \n\t } \n\n\t @Override \n\t String   getServiceName ( )   { \n    \t return   \"Speaker Service\" ; \n\t } \n } \n We can access the status at  https://server_ip/health . \n { \n    \"checks\" : [ \n  \t { \n     \t \"data\" : { \n        \t \"time millis\" : 11 , \n        \t \"service\" : \"available\" , \n        \t \"status\" : \"OK\" \n     \t } , \n     \t \"name\" : \"Speaker Service\" , \n     \t \"state\" : \"UP\" \n  \t } , \n  \t { \n     \t \"data\" : { \n        \t \"time millis\" : 11 , \n        \t \"service\" : \"available\" , \n        \t \"status\" : \"OK\" \n     \t } , \n     \t \"name\" : \"Conference Service\" , \n     \t \"state\" : \"UP\" \n  \t } , \n  \t { \n     \t \"data\" : { \n        \t \"time millis\" : 10 , \n        \t \"service\" : \"available\" , \n        \t \"status\" : \"OK\" \n     \t } , \n     \t \"name\" : \"Session Service\" , \n     \t \"state\" : \"UP\" \n  \t } \n    ] , \n    \"outcome\" : \"UP\" , \n    \"status\" : \"UP\" \n } \n Once Services and health check are ready, let\u2019s go to the controllers. Eclipse Krazo is an API built on JAX-RS. Therefore, any Jakarta EE developer will feel at home when creating a Controller class. \n import   org.eclipse.microprofile.rest.client.inject.RestClient ; \n import   org.jespanol.client.session.SessionService ; \n import   org.jespanol.client.speaker.SpeakerService ; \n\n import   javax.inject.Inject ; \n import   javax.mvc.Controller ; \n import   javax.mvc.Models ; \n import   javax.mvc.View ; \n import   javax.ws.rs.BeanParam ; \n import   javax.ws.rs.GET ; \n import   javax.ws.rs.POST ; \n import   javax.ws.rs.Path ; \n import   javax.ws.rs.PathParam ; \n import   java.util.Optional ; \n\n @Controller \n @Path ( \"conference\" ) \n public   class   ConferenceController   { \n\t @Inject \n\t private   Models   models ; \n\n\t @Inject \n\t @RestClient \n\t private   SessionService   sessionService ; \n\n\t @Inject \n\t @RestClient \n\t private   ConferenceService   conferenceService ; \n\n\t @Inject \n\t @RestClient \n\t private   SpeakerService   speakerService ; \n\n\t @GET \n\t @View ( \"conference.html\" ) \n\t public   void   home ( )   { \n    \t this . models . put ( \"conferences\" ,   conferenceService . findAll ( ) ) ; \n\t } \n\n\n\t @Path ( \"add\" ) \n\t @GET \n\t @View ( \"conference-add.html\" ) \n\t public   void   add ( )   { \n    \t this . models . put ( \"conference\" ,   new   Conference ( ) ) ; \n    \t this . models . put ( \"speakers\" ,   speakerService . findAll ( ) ) ; \n    \t this . models . put ( \"presentations\" ,   sessionService . findAll ( ) ) ; \n\t } \n\n\t @Path ( \"delete/{id}\" ) \n\t @GET \n\t @View ( \"conference.html\" ) \n\t public   void   delete ( @PathParam ( \"id\" )   String   id )   { \n    \t conferenceService . remove ( id ) ; \n    \t this . models . put ( \"conferences\" ,   conferenceService . findAll ( ) ) ; \n\t } \n\n\t @Path ( \"edit/{id}\" ) \n\t @GET \n\t @View ( \"conference-add.html\" ) \n\t public   void   edit ( @PathParam ( \"id\" )   String   id )   { \n    \t final   Conference   conference   =   Optional . ofNullable ( conferenceService . findById ( id ) ) \n            \t . orElse ( new   Conference ( ) ) ; \n    \t this . models . put ( \"conference\" ,   conference ) ; \n    \t this . models . put ( \"speakers\" ,   speakerService . findAll ( ) ) ; \n    \t this . models . put ( \"presentations\" ,   sessionService . findAll ( ) ) ; \n\t } \n\n\t @Path ( \"add\" ) \n\t @POST \n\t @View ( \"conference.html\" ) \n\t public   void   add ( @BeanParam   Conference   conference )   { \n    \t conference . update ( speakerService ,   sessionService ) ; \n    \t if   ( conference . isIdEmpty ( ) )   { \n        \t conferenceService . insert ( conference ) ; \n    \t }   else   { \n        \t conferenceService . update ( conference . getId ( ) ,   conference ) ; \n    \t } \n    \t this . models . put ( \"conferences\" ,   conferenceService . findAll ( ) ) ; \n\t } \n } \n The HTML5 resource and replacement are on Thymeleaf. We wrote about it in a previous post, Thymeleaf puts the Java instance information on the HTML5 template dynamically. \n <!DOCTYPE html> \n < html   xmlns:th = \"http://www.thymeleaf.org\" > \n < html > \n < head > \n\t < title > Latin America Conf (Session) < / title > \n\t < meta   name = \"viewport\"   content = \"width=device-width, initial-scale=1.0\" > \n\t < link   rel = \"stylesheet\"   href = \"/css/bootstrap.min.css\" > \n\t < meta   charset = \"UTF-8\" > \n < / head > \n < body > \n < div   class = \"container\" > \n\t < h1 > Conference < / h1 > \n\t < form   th:action = \"@{/conference/add}\"    method = \"post\"   accept-charset = \"UTF-8\" > \n    \t < input   id = \"id\"   name = \"id\"   type = \"hidden\"   th:value = \"${conference.id}\" > \n    \t < div   class = \"form-group\" > \n        \t < label   for = \"conferenceName\" > Name < / label > \n        \t < input   type = \"text\"   class = \"form-control\"   th:value = \"${conference.name}\"   name = \"name\"   id = \"conferenceName\"   placeholder = \"Enter Session Name\"   required > \n    \t < / div > \n    \t < div   class = \"form-group\" > \n        \t < label   for = \"conferenceCity\" > City < / label > \n        \t < input   type = \"text\"   class = \"form-control\"   th:value = \"${conference.city}\"   name = \"city\"   id = \"conferenceCity\"   placeholder = \"Enter Conference City\"   required > \n    \t < / div > \n    \t < div   class = \"form-group\" > \n        \t < label   for = \"conferenceLink\" > Link < / label > \n        \t < input   type = \"url\"   class = \"form-control\"   th:value = \"${conference.link}\"   name = \"link\"   id = \"conferenceLink\"   placeholder = \"Enter Conference Link\"   required > \n    \t < / div > \n    \t < div   class = \"form-group\" > \n        \t < label   for = \"conferenceYear\" > Year < / label > \n        \t < input   type = \"number\"   class = \"form-control\"   th:value = \"${conference.year}\"   name = \"year\"   id = \"conferenceYear\"   placeholder = \"Enter Conference Year\"   required > \n    \t < / div > \n    \t < div   class = \"form-group\" > \n        \t < label   for = \"conferenceSpeakers\" > Speakers < / label > \n        \t < select   class = \"form-control\"    id = \"conferenceSpeakers\"   th:value = \"${conference.speakersIds}\"   name = \"speakers\"   multiple > \n            \t < tr   th:each = \"speaker : ${speakers}\" > \n                \t < option   th:value = \"${speaker.id}\"   th:text = \"${speaker.name}\"   th:selected = \"${conference.speakersIds.contains(speaker.id)}\" > < / option > \n            \t < / tr > \n        \t < / select > \n    \t < / div > \n    \t < div   class = \"form-group\" > \n        \t < label   for = \"conferenceSpeakers\" > Sessions < / label > \n        \t < select   class = \"form-control\"   id = \"conferenceSessions\"   th:value = \"${conference.sessionsIds}\"   name = \"presentations\"   multiple > \n            \t < tr   th:each = \"presentation : ${presentations}\" > \n                \t < option   th:value = \"${presentation.id}\"   th:text = \"${presentation.name}\"   th:selected = \"${conference.sessionsIds.contains(presentation.id)}\" > < / option > \n            \t < / tr > \n        \t < / select > \n    \t < / div > \n    \t < button   type = \"submit\"   class = \"btn\" > Save < / button > \n\t < / form > \n < / div > \n < script   src = \"https://code.jquery.com/jquery.js\" > < / script > \n < script   src = \"/js/bootstrap.min.js\" > < / script > \n < / body > \n < / html > \n Finally, the code \n In this post, we finally saw some code and design, which is always exciting! Eclipse MicroProfile has a bright future integrated with Jakarta EE to allow Java developers to create several applications styles\u2014like microservices and monoliths\u2014that use either JPA or NoSQL. Besides that, these projects offer scalability and straightforward Java applications for your business. Platform.sh delivers on the promise of a NoOps pipeline for your Java microservices. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "PHP 7.4 is here: Try out the future of PHP on Platform.sh today! ", "url": "https://platform.sh/blog/2019/try-out-the-future-of-php-on-platform.sh-today/", "documentId": "69aa13d8018430454501ec028b2243a44dffb8ed", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           PHP 7.4 is here: Try out the future of PHP on Platform.sh today! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         27 Aug 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         PHP 7.4 is due out late this year and is easily the most anticipated release in four years.  With a host of new improvements to developer quality of life (and thus code quality), most PHP developers are champing at the bit to be able to deploy it. \n Which is why we\u2019re happy to announce that you can now deploy pre-release versions of PHP 7.4 on Platform.sh. \n Woah.  How? \n As with any other new version release, upgrading is painfully easy.  Just update your  .platform.app.yaml  file like so: \n type: php:7.4-rc\n The  -rc  in this case indicates that it\u2019s a Platform.sh release candidate;  PHP 7.4 is only up to Beta 4 so far, which is what we\u2019re shipping.  As new pre-release versions of PHP 7.4 become available, we\u2019ll periodically update the image to use the latest version. \n Give it a try, kick the tires, and see if your project will work in PHP 7.4.  If so, great!  You can upgrade as soon as it\u2019s released.  If not, then you can start fixing it up now so that upgrading will be a non-event in the future. \n There are two important caveats: \n \n \n This is a pre-release container of a pre-release language engine.  That means it  should not be used for production.   We\u2019re making this container image available for users to experiment with early, but it won\u2019t be supported. Please use it only in dev branches for testing. \n \n \n While the major first-party PHP extensions should work, some third-party extensions are not yet available and will give an error if you try to deploy with those enabled.  As PHP 7.4 gets closer to release, more extensions will be updated to be compatible, and we\u2019ll include them as they become available. \n \n \n What\u2019s cool in PHP 7.4? \n What isn\u2019t? \n The latest version of PHP continues the trend of improved developer ergonomics, improved typing, performance, and security.  Among its most anticipated features are: \n \n Typed object properties .  Object properties can now be typed just like function parameters can, and the language will enforce that type on assignment. \n Preloading  of code at server start time, which completely bypasses autoload and code-loading overhead at runtime. That works especially well in hosting environments that are reliably read-only in production.  (You may have heard of one\u2026) \n Arrow functions , aka short-lambdas, aka \u201ca compact way to write one-line inline functions, like many languages have.\u201d \n Argon2 password hashing  is now available, making passwords even more secure by default. \n \n And a whole host of other improvements we won\u2019t get into here. \n So give it a whirl, and help the PHP team find bugs!  If you do, please report them on the  PHP bug tracker . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "New: Go release 1.13 on Platform.sh ", "url": "https://platform.sh/blog/2019/go-release-1.13-on-platform.sh/", "documentId": "f7ea54e8797d1a7607e088958bfa233e03b82f2f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           New: Go release 1.13 on Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         04 Sep 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The team behind Go has released version 1.13 of the network-friendly language.  That means it\u2019s time for us to release it, too. \n If you\u2019re running Go on Platform.sh, you can now upgrade to the new 1.13 release with one character change.  Update your  .platform.app.yaml  file like so: \n type :   golang : 1.13 \n And your next  git push  will build with Go 1.13.  Easy peasy. \n Go tends to be extremely stable on version upgrades, so we recommend this upgrade to all Go-using customers.  And if you\u2019re not a Go-using customer, this is a good opportunity to  Go give it a try . \n What\u2019s new? \n Go releases tend to not have dramatic new features, but there are still some improvements worth noting. \n \n Go Modules have been improved with tools to help manage private packages. \n Go also now supports number literals, making it easier to write integers in non-base-10 formats.  For instance,  0b1101  is the binary number  1101  (aka 13 for human counters). \n Literal numbers may also now have a digit separator anywhere in their value, making long numbers easier to read.  For instance,  1_000_000  is a legal way to write the integer for 1 million. \n Shift operations now work on signed integers. \n \n See the  Go 1.13 release notes  for the full details. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Simplify your script build with Gradle ", "url": "https://platform.sh/blog/2019/simplify-your-script-build-with-gradle/", "documentId": "68717c290e13a04bd8809e8390f88a89074c7143", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Simplify your script build with Gradle \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         05 Sep 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Gradle  is an open-source build automation system that builds upon the concepts of  Apache Ant  and  Apache Maven , and introduces a Groovy-based, domain-specific language (DSL), instead of the XML form used by Apache Maven to declare the project configuration. This post will cover how easy it is to use this tool, and how to migrate your Maven project to Gradle to run it on Platform.sh. \n Gradle is an excellent build tool with which we can automate Java applications using a clean DSL. But it\u2019s essential to mention that Maven is still a valid and mature tool, and Gradle doesn\u2019t deprecate Maven. There are several tutorials where both devices are compared, and you can see several companies going back and forth between Maven and Gradle. The answer to which one is the better tool is still uncertain. What matters is that at Platform.sh,  you can choose both  to move your Java application to the cloud. \n In the Maven project, we have the  pom.xml  file, where we define the library dependencies, plug-ins, and so on. In a Gradle project, we have the  build.gradle  file. The build file for Gradle is based on DSL. In this file, you can use a combination of declarative and imperative statements. And you can write  Groovy  or  Kotlin  code, whenever you need to. Tasks can also be created and extended dynamically at runtime. \n The build settings for the code with Gradle are easy! To show you how, let\u2019s work on the  demo that uses Spring Boot  with Maven and migrate it to Gradle. \n We won\u2019t change the code structure, just the build settings. As a reminder and for comparison, the pom.xml is: \n <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n <project   xmlns= \"http://maven.apache.org/POM/4.0.0\"   xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n\t\t  xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > \n     <modelVersion > 4.0.0 </modelVersion> \n\n     <groupId > com.mycompany </groupId> \n     <artifactId > template-spring-boot-maven-mysql </artifactId> \n     <version > 0.0.1 </version> \n     <properties > \n   \t  <java.version > 1.8 </java.version> \n     </properties> \n     <parent > \n   \t  <groupId > org.springframework.boot </groupId> \n   \t  <artifactId > spring-boot-starter-parent </artifactId> \n   \t  <version > 2.1.5.RELEASE </version> \n     </parent> \n     <dependencies > \n   \t  <dependency > \n   \t\t  <groupId > org.springframework.boot </groupId> \n   \t\t  <artifactId > spring-boot-starter-web </artifactId> \n   \t  </dependency> \n   \t  <dependency > \n   \t\t  <groupId > org.springframework.boot </groupId> \n   \t\t  <artifactId > spring-boot-starter-data-jpa </artifactId> \n   \t  </dependency> \n   \t  <dependency > \n   \t\t  <groupId > mysql </groupId> \n   \t\t  <artifactId > mysql-connector-java </artifactId> \n   \t  </dependency> \n   \t  <dependency > \n   \t\t  <groupId > sh.platform </groupId> \n   \t\t  <artifactId > config </artifactId> \n   \t\t  <version > 2.2.2 </version> \n   \t  </dependency> \n     </dependencies> \n\n     <build > \n   \t  <finalName > spring-boot-maven-mysql </finalName> \n   \t  <plugins > \n   \t\t  <plugin > \n       \t\t  <groupId > org.springframework.boot </groupId> \n       \t\t  <artifactId > spring-boot-maven-plugin </artifactId> \n   \t\t  </plugin> \n   \t  </plugins> \n     </build> \n\n     <repositories > \n   \t  <repository > \n   \t\t  <id > oss.sonatype.org-snapshot </id> \n   \t\t  <url > http://oss.sonatype.org/content/repositories/snapshots </url> \n   \t  </repository> \n     </repositories> \n </project> \n The new settings file, as a Gradle within build.gradle, is more natural and less repetitive. \n apply plugin: 'java'\napply plugin: 'eclipse'\napply plugin: 'idea'\napply plugin: 'org.springframework.boot'\napply plugin: 'io.spring.dependency-management'\n\nbootJar {\n\tbaseName = 'spring-boot-gradle-mysql'\n}\n\nrepositories {\n\tmavenCentral()\n}\n\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\ndependencies {\n\tcompile(\"org.springframework.boot:spring-boot-starter-web\")\n\tcompile(\"org.springframework.boot:spring-boot-starter-data-jpa\")\n\tcompile(\"mysql:mysql-connector-java\")\n\tcompile(\"sh.platform:config:2.2.2\")\n\ttestCompile(\"junit:junit\")\n}\n\nbuildscript {\n\trepositories {\n    \tmavenCentral()\n\t}\n\tdependencies {\n    \tclasspath(\"org.springframework.boot:spring-boot-gradle-plugin:2.1.5.RELEASE\")\n\t}\n}\n Gradle also supports a file-to-list properties, such as the file name: the settings.gradle. On our sample, we\u2019re going to put the project\u2019s file name. \n rootProject.name = 'spring-boot-gradle-mysql'\n To test the build, execute the command: \n gradle clean build\nBUILD SUCCESSFUL in 1s\n4 actionable tasks: 4 executed\n You can download and install Gradle locally, or by using the Gradle Wrapper. The recommended way to execute any Gradle build is with the help of the Gradle Wrapper. The Wrapper is a script that invokes a declared version of Gradle, downloading it beforehand, if necessary. As a result, you can get up and running with a Gradle project quickly without having to follow manual installation processes, saving your company time and money. \n Only the developer who creates the Gradle Wrapper must have  Gradle installed locally .  Once the Gradle is ready, no one on the team, even the developer who creates the Wrapper, requires the native Gradle: \n gradle wrapper\n Once that\u2019s done, the next developer won\u2019t need to install Gradle again. The script has created the Gradle folder and two script files: one for Windows, gradlew.bat, and the other for Linux, gradlew. \n On Platform.sh, we need to update the .platform.app.yaml file, where we define how the application builds and executes the project, which differs from the  previous post . \n # This file describes an application. You can have multiple applications \n # in the same project. \n # \n # See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html \n \n # The name of this app must be unique within a project. \n name :   app \n \n # The runtime the application uses. \n type :   \"java:8\" \n \n disk :   1024 \n \n # The hooks executed at various points in the lifecycle of the application. \n hooks : \n    build :   ./gradlew   clean   build   --no-daemon \n \n \n # The relationships of the application with services or other applications. \n # \n # The left-hand side is the name of the relationship as it will be exposed \n # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand \n # side is in the form `<service name>:<endpoint name>`. \n relationships : \n    database :   \"database:mysql\" \n \n # The configuration of the app when it is exposed to the web. \n web : \n    commands : \n     \t start :     java   -jar   build/libs/spring-boot-gradle-mysql.jar   --server.port=$PORT \n Well done! Now we have a project migrated and ready to use in Gradle. As a matter of fact, Platform.sh has a  template  that runs both Gradle and Spring Boot to help you create and run a Gradle project faster. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Apache Kafka: streamline communication across your microservices ", "url": "https://platform.sh/blog/2019/apache-kafka-streamline-communication-across-your-microservices/", "documentId": "aed500f6afcab1b822d1e339d12935b18ea7f768", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Apache Kafka: streamline communication across your microservices \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         09 Oct 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Apache Kafka is a community-distributed streaming platform that has three key capabilities: publish and subscribe to streams of records, store streams of records in a fault-tolerant durable way, and process streams as they occur. Apache Kafka has several success cases in the Java world, including website activity tracking, metrics collection and monitoring, log aggregation, and real-time analytics. This post will cover how to benefit from this powerful tool in the  Jakarta EE/MicroProfile  universe. \n Apache Kafka core concepts \n Kafka is run as a cluster on one or more servers that can span multiple data centers. A Kafka cluster stores a stream of records in categories called topics, and each record consists of a key, a value, and a timestamp.\nAs seen in the  documentation , Kafka has four core APIs: \n \n The Producer API . Allows an application to publish a stream of records to one or more Kafka topics. \n The Consumer API . Allows an application to subscribe to one or more topics and to process the stream of records published to those topics. \n The Streams API . Allows an application to act as a stream processor, consuming an input stream from one or more input topics, and producing an output stream to one or more output topics to effectively transform the input streams to output streams. \n The Connector API . Allows building and running reusable producers or consumers that connect Kafka topics to existing applications or data systems. \n \n \n Show me the code \n To illustrate how Kafka works, we\u2019ll create a named counter, which will fire an event through Apache Kafka with an HTTP request and store it in a Redis database using  Sorted Sets . The first step is to set the Maven dependency and the configuration code. Let\u2019s define a  pom.xml  with their libraries. Beyond the  Eclipse MicroProfile  dependency, we\u2019ll add  Jakarta NoSQL  to handle  Redis  and a  CDI extension  to work with Apache Kafka. \n <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n <project   xmlns= \"http://maven.apache.org/POM/4.0.0\"   xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n     \t xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\" > \n\t <modelVersion > 4.0.0 </modelVersion> \n\t <groupId > sh.platform.template </groupId> \n\t <artifactId > microprofile-kumuluzee </artifactId> \n\t <version > 1.0.0-SNAPSHOT </version> \n\t <packaging > jar </packaging> \n\n\t <properties > \n    \t <version.microprofile > 2.2 </version.microprofile> \n    \t <maven.compiler.source > 1.8 </maven.compiler.source> \n    \t <maven.compiler.target > 1.8 </maven.compiler.target> \n    \t <failOnMissingWebXml > false </failOnMissingWebXml> \n    \t <kumuluzee.version > 3.5.0 </kumuluzee.version> \n    \t <platform.sh.version > 2.2.2 </platform.sh.version> \n    \t <project.build.sourceEncoding > UTF-8 </project.build.sourceEncoding> \n    \t <jakarta.nosql.version > 0.1.0-SNAPSHOT </jakarta.nosql.version> \n\t </properties> \n\n\t <dependencies > \n    \t <dependency > \n        \t <groupId > com.kumuluz.ee </groupId> \n        \t <artifactId > kumuluzee-microProfile-1.0 </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > sh.platform </groupId> \n        \t <artifactId > config </artifactId> \n        \t <version > ${platform.sh.version} </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.aerogear.kafka </groupId> \n        \t <artifactId > kafka-cdi-extension </artifactId> \n        \t <version > 0.1.0 </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.eclipse </groupId> \n        \t <artifactId > yasson </artifactId> \n        \t <version > 1.0.4 </version> \n    \t </dependency> \n    \t <!-- drivers --> \n    \t <dependency > \n        \t <groupId > org.eclipse.jnosql.diana </groupId> \n        \t <artifactId > redis-driver </artifactId> \n        \t <version > ${jakarta.nosql.version} </version> \n    \t </dependency> \n\t </dependencies> \n\n\t <build > \n    \t <finalName > microprofile </finalName> \n    \t <plugins > \n        \t <plugin > \n            \t <groupId > com.kumuluz.ee </groupId> \n            \t <artifactId > kumuluzee-maven-plugin </artifactId> \n            \t <version > ${kumuluzee.version} </version> \n        \t </plugin> \n    \t </plugins> \n\t </build> \n\n\t <dependencyManagement > \n    \t <dependencies > \n        \t <dependency > \n            \t <groupId > com.kumuluz.ee </groupId> \n            \t <artifactId > kumuluzee-bom </artifactId> \n            \t <version > ${kumuluzee.version} </version> \n            \t <type > pom </type> \n            \t <scope > import </scope> \n        \t </dependency> \n    \t </dependencies> \n\t </dependencyManagement> \n\n\t <repositories > \n    \t <repository > \n        \t <id > oss.sonatype.org-snapshot </id> \n        \t <url > http://oss.sonatype.org/content/repositories/snapshots </url> \n        \t <releases > \n            \t <enabled > false </enabled> \n        \t </releases> \n        \t <snapshots > \n            \t <enabled > true </enabled> \n        \t </snapshots> \n    \t </repository> \n\t </repositories> \n\n </project> \n A minimal configuration in the project is a class using the  @KafkaConfig  annotation. You can use either the hardcoded host and port, or the values of the parameters to be replaced from the properties. \n import   org.aerogear.kafka.cdi.annotation.KafkaConfig ; \n\n @KafkaConfig ( bootstrapServers   =   \"#{kafka_host}:#{kafka_port}\" ) \n public   class   Config   { \n\n\t static   final   String   TOPIC   =   \"topic\" ; \n\n\t static   final   String   GROUP_ID   =   \"group\" ; \n } \n Here, we\u2019ll also plug in the Redis client using the  Java Config reader  library, making the integration between the Java application and Platform.sh easier. \n import   org.eclipse.jnosql.diana.redis.keyvalue.RedisBucketManagerFactory ; \n import   org.eclipse.jnosql.diana.redis.keyvalue.RedisConfiguration ; \n import   org.eclipse.jnosql.diana.redis.keyvalue.SortedSet ; \n import   sh.platform.config.Config ; \n import   sh.platform.config.Redis ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.enterprise.inject.Produces ; \n\n @ApplicationScoped \n public   class   RedisConfig   { \n\n\t @Produces \n\t @ApplicationScoped \n\t public   SortedSet   redisConfig ( )   { \n    \t Config   config   =   new   Config ( ) ; \n    \t final   Redis   redis   =   config . getCredential ( \"redis\" ,   Redis : : new ) ; \n    \t RedisConfiguration   configuration   =   new   RedisConfiguration ( ) ; \n    \t final   RedisBucketManagerFactory   bucketFactory   =   configuration . get ( redis . get ( ) ) ; \n    \t return   bucketFactory . getSortedSet ( \"names\" ) ; \n\t } \n } \n On the Apache Kafka side, let\u2019s create a class that will publish the name counted in the stream. \n import   org.aerogear.kafka.SimpleKafkaProducer ; \n import   org.aerogear.kafka.cdi.annotation.Producer ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.json.JsonObject ; \n import   java.util.logging.Logger ; \n\n @ApplicationScoped \n public   class   NameCounterPublisher   { \n\n\t private   static   final   Logger   LOGGER   =   Logger . getLogger ( Logger . class . getName ( ) ) ; \n\t @Producer \n\t private   SimpleKafkaProducer < Integer ,   String >   producer ; \n\n\t public   < T >   void   sendMessage ( String   name )   { \n    \t LOGGER . info ( \"received the name \"   +   name ) ; \n    \t producer . send ( Config . TOPIC ,   name ) ; \n\t } \n\n } \n The last step is the listener, the instance where the listener events will be hosted. This class will receive the name and then count it using Redis  NameCounter  class. \n import   org.aerogear.kafka.cdi.annotation.Consumer ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.inject.Inject ; \n\n @ApplicationScoped \n public   class   NameCounterListener   { \n\n\t @Inject \n\t private   NameCounter   counter ; \n\n\t @Consumer ( topics   =   Config . TOPIC ,   groupId   =   Config . GROUP_ID ) \n\t public   void   receiver ( final   String   name )   { \n    \t counter . count ( name ) ; \n\t } \n\n } \n The  NameCounter  will increment the amount from the name and return the current status as a  Map  where the key is the name, and the value is the counter. \n import   org.eclipse.jnosql.diana.redis.keyvalue.SortedSet ; \n\n import   javax.enterprise.context.ApplicationScoped ; \n import   javax.inject.Inject ; \n import   java.util.Map ; \n import   java.util.stream.Collectors ; \n\n @ApplicationScoped \n public   class   NameCounter   { \n\n\t @Inject \n\t private   SortedSet   sortedSet ; \n\n\n\t public   void   count ( String   name )   { \n    \t sortedSet . increment ( name ,   1L ) ; \n\t } \n\n\t public   Map < String ,   Long >   getResult ( )   { \n    \t return   sortedSet . getRevRanking ( ) \n            \t . stream ( ) \n            \t . collect ( Collectors . toMap ( e   - >   e . getMember ( ) , \n                    \t e   - >   e . getPoints ( ) . longValue ( ) ) ) ; \n\t } \n } \n The last step is the HTTP client, a smooth request, where the GET method returns the result, and the POST method inserts a name to be counted. \n import   javax.enterprise.context.RequestScoped ; \n import   javax.inject.Inject ; \n import   javax.ws.rs.Consumes ; \n import   javax.ws.rs.GET ; \n import   javax.ws.rs.POST ; \n import   javax.ws.rs.Path ; \n import   javax.ws.rs.Produces ; \n import   javax.ws.rs.core.MediaType ; \n import   java.util.Map ; \n\n @Path ( \"names\" ) \n @RequestScoped \n @Consumes ( MediaType . APPLICATION_JSON ) \n @Produces ( MediaType . APPLICATION_JSON ) \n public   class   NameCounterResource   { \n\n\t @Inject \n\t private   NameCounter   counter ; \n\n\t @Inject \n\t private   NameCounterPublisher   publisher ; \n\n\t @GET \n\t public   Map < String ,   Long >   getResult ( )   { \n    \t return   counter . getResult ( ) ; \n\t } \n\n\t @POST \n\t public   void   count ( String   name )   { \n    \t publisher . sendMessage ( name ) ; \n\t } \n\n } \n Platform.sh structure \n The Platform.sh structure is still the same as in the  first Java post , and it won\u2019t impact your application in any way. Indeed, Platform.sh is a PaaS that facilitates integration where, through infrastructure by code, you can configure the services that your application needs. \n Since we\u2019re using both  Redis  and  Apache Kafka , we\u2019ll update the  services file  to define them. \n mykafka : \n    type :   kafka : 2.2 \n    disk :   512 \n \n redisdata : \n    type :   redis-persistent : 5.0 \n    disk :   256 \n In the .platform.app.yaml file, we\u2019ll list the services as relationships\u2014the names the application will use (paired with the necessary credentials) to connect to them: \n # This file describes an application. You can have multiple applications \n # in the same project. \n # \n # See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html \n \n # The name of this app. Must be unique within a project. \n name :   app \n \n # The runtime the application uses. \n type :   \"java:8\" \n \n disk :   1024 \n \n # The hooks executed at various points in the lifecycle of the application. \n hooks : \n    build :   mvn   -DskipTests   clean   package   kumuluzee : repackage \n \n mounts : \n    '/app' : \n      source :   local \n      source_path :   app_source \n \n # The relationships of the application with services or other applications. \n # \n # The left-hand side is the name of the relationship as it will be exposed \n # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand \n # side is in the form `<service name>:<endpoint name>`. \n relationships : \n    kafka :   \"mykafka:kafka\" \n    redis :   \"redisdata:redis\" \n \n # The configuration of app when it is exposed to the web. \n web : \n    commands : \n   \t start :   |\n         mv target/microprofile.jar app/microprofile.jar \n        java   -jar   -Xmx512m   -Dkumuluzee.server.http.port=$PORT   -Dkafka_host=kafka.internal   -Dkafka_port= 9092   app/microprofile.jar \n The application is now ready, so it\u2019s time to move it to the cloud with Platform.sh using the  following steps : \n \n Create a new  free trial account . \n Sign up as a new user and set a password, or login using a current GitHub, Bitbucket, or Google account. If you use a third-party login, you\u2019ll be able to set a password for your Platform.sh account later. \n Select the region of the world where your site should live. \n Select the blank template. \n \n After this wizard, Platform.sh will provision the whole infrastructure to you and will offer a Git remote repository. Before access, remember to set the SSH keys. The Platform.sh Git-driven infrastructure means it will automatically manage everything your application needs to push it to the master remote repository. \n With the project created, add the repository as a remote for your local code, commit the changes, and push to Platform.sh: \n git remote add platform <platform.sh@gitrepository>\ngit commit -m  \"Initial project\" \ngit push -u platform master\n The code pushed will provision the Java application and services, and when it\u2019s done, will return an IP address to the service. Let\u2019s test the application. To test a REST application, an HTTP client is OK. \n curl -X POST -k -H  'Content-Type: application/json'  -i  'https://<service.ip>/names'  --data  '\"otavio\"' \ncurl -X POST -k -H  'Content-Type: application/json'  -i  'https://<service.ip>/names'  --data  '\"poliana\"' \ncurl -X POST -k -H  'Content-Type: application/json'  -i  'https://<service.ip>/names'  --data  '\"otavio\"' \ncurl -X POST -k -H  'Content-Type: application/json'  -i  'https://<service.ip>/names'  --data  '\"ada\"' \ncurl https://<service.ip>/names\n #result output here \n In this post, we created an  integration with Redis and Apache Kafka , the most famous key-value NoSQL database. And we\u2019ve seen how natural it is to work with both Redis and Jakarta NoSQL. Redis is a NoSQL database in-memory, which means read/write operations are faster. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Perpetually polyglot: .NET on Platform.sh ", "url": "https://platform.sh/blog/2019/perpetually-polyglot-dotnet-on-platform.sh/", "documentId": "653b58686b31ffe3a62af08c50c320b3cb27bc60", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Perpetually polyglot: .NET on Platform.sh \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chad Carlson \n                  \n                   Technical Writer \n                  \n                  \n                 \n            \n          \n         \n         10 Oct 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         At Platform.sh, we understand that modern web development isn\u2019t restricted to just PHP or Node.js. It\u2019s not a one language game out there; it\u2019s a diverse ecosystem of languages and frameworks. We support eight different runtime languages out of the box, so that you have the tools you need to solve the problems those languages are best suited for. \n This week, we\u2019re excited to announce yet another runtime added to that lineup of supported languages: C#/.NET. \n How would you deploy a .NET application on Platform.sh? \n .NET applications need only slight modifications to run on Platform.sh. As a simple example, you can deploy a common  \u201cGetting Started\u201d tutorial  for the popular  ASP.NET  web framework. In this post, we\u2019ll push the default ASP.NET MVC application built with the command  dotnet new mvc -o PlatformAspNetCore  described in that tutorial using the  dotnet utility . You can find more detailed information about this process on the  Platform.sh Community  tutorial  here . \n Like any other application, .NET apps require at least three configuration files to run on Platform.sh. The first two files need to sit in a new  .platform  subdirectory of your project. You won\u2019t need any services for this example, so you can create an empty  services.yaml  file in that subdirectory (it can be empty, but it must exist in your repository in order to deploy). \n Then create a simple  routes.yaml  file there, too: \n # .platform/routes.yaml \n \n \"https://www.{default}/\" : \n      type :   upstream \n      upstream :   \"app:http\" \n \n \"https://{default}/\" : \n      type :   redirect \n      to :   \"https://www.{default}/\" \n The  routes.yaml  file defines how requests will be directed to our application, which will be named  app , including redirects. \n Next, you\u2019ll need a  .platform.app.yaml  file in the project root, which tells Platform.sh how to handle builds, deploys, and what  version  of  .NET Core  will be used on Platform.sh. \n # .platform.app.yaml \n \n name :   app \n \n type :   dotnet : 2.2 \n \n disk :   512 \n \n hooks : \n    build :   |\n       set -e \n      dotnet   publish   --output   \"$PLATFORM_OUTPUT_DIR\"   -p : UseRazorBuildServer= false   -p : UseSharedCompilation= false \n \n web : \n    commands : \n      start :   'dotnet PlatformshAspNetCore.dll' \n In this file, the application is named  app , which matches the name in the  routes.yaml  file. It specifies the .NET Core version (2.2) and the amount of persistent disk given to the application (512 MB). \n For simple applications like this, using the  dotnet publish  default  framework-dependent deployment  method in the build hook is sufficient to build in our .NET containers. Pass to that command the final output directory of the application ( PLATFORM_OUTPUT_DIR , the environment variable for the general output directory for compiled languages at build time). Make sure to also pass the two additional flags that disable compilers which would normally start a collection of build servers, but are  inadvisable  in the  Platform.sh build process. \n The final start command ( web.commands.start ) launches the application using the dotnet utility directly, calling the built application  PlatformshAspNetCore . \n So this app is ready push to Platform.sh? \n Almost. The entry point file  Program.cs  has to be modified slightly to receive a few  environment variables  defined in every Platform.sh project. Modify the  Main  method to pass the  PORT  and  SOCKET  environment variables as options to the  Kestrel web server : \n // Program.cs\n \n using   System ; \n using   System.Collections.Generic ; \n using   System.IO ; \n using   System.Linq ; \n using   System.Runtime.InteropServices ; \n using   System.Threading.Tasks ; \n using   Microsoft.AspNetCore ; \n using   Microsoft.AspNetCore.Hosting ; \n using   Microsoft.Extensions.Configuration ; \n using   Microsoft.Extensions.Logging ; \n\n namespace   PlatformshAspNetCore \n { \n     public   class   Program \n     { \n         public   static   void   Main ( string [ ]   args ) \n         { \n             var   builder   =   CreateWebHostBuilder ( args ) ; \n\n             builder . UseKestrel ( options   = > \n             { \n                 var   port   =   Environment . GetEnvironmentVariable ( \"PORT\" ) ; \n                 if   ( port   ! =   null   & &   Int16 . TryParse ( port ,   out   var   portNum ) ) \n                 { \n                   options . ListenLocalhost ( portNum ) ; \n                 } \n\n                 var   socket   =   Environment . GetEnvironmentVariable ( \"SOCKET\" ) ; \n                 if   ( socket   ! =   null ) \n                 { \n                   options . ListenUnixSocket ( socket ) ; \n                 } \n             } ) ; \n\n             builder . Build ( ) . Run ( ) ; \n         } \n\n         private   static   IWebHostBuilder   CreateWebHostBuilder ( string [ ]   args )   = > \n             WebHost . CreateDefaultBuilder ( args ) . UseStartup < Startup > ( ) ; \n     } \n } \n That\u2019s it! Now the application is complete. Commit, push, and deploy! \n There\u2019s no reason to stop here, though. Any of our managed services can be configured for .NET applications. Want to use a MariaDB database? Create a  DbContext , pass it credentials from the  PLATFORM_RELATIONSHIPS  environment variable, and add the database to your  services.yaml  file. There\u2019s a Platform.sh  template  ready to show you how. Using a different version of .NET? Check the documentation, and see our  supported versions . \n Another language, ready to go on your polyglot PaaS! \n Relevant links \n Platform.sh .NET documentation \n ASP.NET Core template \n ASP.NET MVC Tutorial on Platform.sh Community \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Security updates for PHP: rolling out now ", "url": "https://platform.sh/blog/2019/security-updates-for-php-rolling-out-now/", "documentId": "f5ee8964f0ccacf4b03e7925765cc3d675f098b1", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Security updates for PHP: rolling out now \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Platform.sh \n                  \n                   \n                  \n                  \n                 \n            \n          \n         \n         11 Sep 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Recently, the PHP team released a security update for PHP 7.3.9, 7.2.22, and 7.1.32.  This update fixes a  remote code execution vulnerability , and, as usual, all PHP users are encouraged to upgrade immediately. \n Platform.sh customers: don\u2019t worry, we got this. Automatic upgrades are rolling out tonight. \n New releases of the PHP engine come out every month, with bug fixes and the occasional security fix; most other languages also have periodic bug-fix releases.  At Platform.sh, that\u2019s largely abstracted away from you.  We package up each PHP release series (e.g., 7.1, 7.2, 7.3) and make it available as a container  type  that you can select for your application.  Every time you deploy an environment (be it production or a dev environment), we use whatever the most recent release available is for that PHP series. \n That means under normal circumstances customers can largely ignore patch releases entirely.  They\u2019ll get those upgrades automatically in the normal course of development as long as a site is redeployed every so often (which it should be to  renew Let\u2019s Encrypt TLS certificates .)  The same is true for every other language we support. \n Because this particular release includes a fix for a remote code execution (technical speak for \u201cpotentially really, really bad\u201d), we\u2019re taking the extra step this time and triggering a redeploy on all environments using the  php:7.1 ,  php:7.2 , or  php:7.3  container images to force them all to use the latest release.  Over the next day or two, rolling redeploys will take place outside of standard business hours in each region.  Sites may experience a very brief (under one minute, but often only a few seconds) interruption during the update as the container is swapped out. \n To be clear, as of this writing, we\u2019re not aware of any active exploits of this bug\u2014on Platform.sh or elsewhere.  Where remote code execution is concerned, though, better safe than sorry. \n So what do you need to do? \n Absolutely nothing.  This upgrade will happen automatically.  In general, though, we recommend setting up a cron job to renew Let\u2019s Encrypt certificates (as above), which will also ensure that all languages and services you\u2019re using are on the latest version we have available. \n Please note, however, that if you\u2019re on a version of PHP older than 7.1, your PHP version is unsupported and will not be getting any new security releases.  You should upgrade immediately to 7.2 or 7.3.  If you\u2019re still on 7.1, be aware that  security support ends 1 December  of this year, so you should be planning your upgrade to 7.3 now.  Fortunately, upgrading your PHP on Platform.sh is one-character trivial, and can be easily and safely tested in a dev branch. \n If you experience any issues, please  open a ticket with our support team . \n\n        \n\n\n\n  \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Spring Data Redis in the cloud ", "url": "https://platform.sh/blog/2019/spring-data-redis-in-the-cloud/", "documentId": "89d34c2fa341195a9b0d668dc561288bd8830c06", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Spring Data Redis in the cloud \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         20 Sep 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Redis is a software project that implements data structure servers. Open source and networked, Redis stores keys with optional durability. It\u2019s also the most popular key-value database, supporting data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, and much more. Redis works with an in-memory dataset. This post will introduce how to use Redis smoothly with  Spring Data Redis , which is part of the larger Spring Data family. It provides easy configuration and access to Redis from Spring applications and offers both low-level and high-level abstractions for interacting with the store, freeing the user from concerns about infrastructure. \n Redis is usually used for caching data stored in a relational database. In the current sample, it will be treated as a primary database\u2014just for simplification. \n Show me the code \n The application will run a smooth CRUD of students with Restful, Redis, Spring, and Java 8. The first step is to create the pom.xml where the Java dependencies are, such as Java Reader Config, Spring Boot, and Spring Data Redis. \n < ? xml   version = \"1.0\"   encoding = \"UTF-8\" ? > \n < project   xmlns = \"http://maven.apache.org/POM/4.0.0\"   xmlns : xsi = \"http://www.w3.org/2001/XMLSchema-instance\" \n     \t xsi : schemaLocation = \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > \n\t < modelVersion > 4 . 0 . 0 < / modelVersion > \n\n\t < groupId > sh . platform . start < / groupId > \n\t < artifactId > spring - boot - maven - redis < / artifactId > \n\t < version > 0 . 0 . 1 < / version > \n\n\t < properties > \n    \t < java . version > 1 . 8 < / java . version > \n\t < / properties > \n\n\t < parent > \n    \t < groupId > org . springframework . boot < / groupId > \n    \t < artifactId > spring - boot - starter - parent < / artifactId > \n    \t < version > 2 . 1 . 5 . RELEASE < / version > \n\t < / parent > \n\n\t < dependencies > \n    \t < dependency > \n        \t < groupId > org . springframework . boot < / groupId > \n        \t < artifactId > spring - boot - starter - web < / artifactId > \n    \t < / dependency > \n    \t < dependency > \n        \t < groupId > org . springframework . data < / groupId > \n        \t < artifactId > spring - data - redis < / artifactId > \n    \t < / dependency > \n\n    \t < dependency > \n        \t < groupId > redis . clients < / groupId > \n        \t < artifactId > jedis < / artifactId > \n        \t < version > 2 . 9 . 0 < / version > \n    \t < / dependency > \n    \t < dependency > \n        \t < groupId > sh . platform < / groupId > \n        \t < artifactId > config < / artifactId > \n        \t < version > 2 . 2 . 2 < / version > \n    \t < / dependency > \n\t < / dependencies > \n\n\t < build > \n    \t < finalName > spring - boot - maven - redis < / finalName > \n    \t < plugins > \n        \t < plugin > \n            \t < groupId > org . springframework . boot < / groupId > \n            \t < artifactId > spring - boot - maven - plugin < / artifactId > \n        \t < / plugin > \n    \t < / plugins > \n\t < / build > \n\n\t < repositories > \n    \t < repository > \n        \t < id > oss . sonatype . org - snapshot < / id > \n        \t < url > http : //oss.sonatype.org/content/repositories/snapshots</url>\n     \t < / repository > \n\t < / repositories > \n < / project > \n Let\u2019s start by easily configuring the bean definitions by using the  Java Config Reader : \n import   org.springframework.context.annotation.Bean ; \n import   org.springframework.context.annotation.Configuration ; \n import   org.springframework.data.redis.connection.jedis.JedisConnectionFactory ; \n import   org.springframework.data.redis.core.RedisTemplate ; \n import   redis.clients.jedis.Jedis ; \n import   redis.clients.jedis.JedisPool ; \n import   sh.platform.config.Config ; \n import   sh.platform.config.MySQL ; \n import   sh.platform.config.Redis ; \n import   sh.platform.config.RedisSpring ; \n\n import   javax.sql.DataSource ; \n\n @Configuration \n public   class   JedisConfig   { \n\n\t @Bean \n\t public   JedisConnectionFactory   getDataSource ( )   { \n    \t Config   config   =   new   Config ( ) ; \n    \t RedisSpring   redis   =   config . getCredential ( \"redis\" ,   RedisSpring : : new ) ; \n    \t return   redis . get ( ) ; \n\t } \n } \n The entity here isn\u2019t complicated; the Student entity only has three attributes:  id ,  name , and  year . To allow validation, we\u2019re using bean validation. To be clear, we\u2019re talking about the key-value database. Therefore, we can find the entity from the id attribute. \n import   org.springframework.data.annotation.Id ; \n import   org.springframework.data.redis.core.RedisHash ; \n\n import   javax.validation.constraints.Min ; \n import   javax.validation.constraints.NotBlank ; \n import   java.io.Serializable ; \n\n @RedisHash ( \"Student\" ) \n public   class   Student   implements   Serializable   { \n\n\t @Id \n\t @NotBlank \n\t private   String   id ; \n\n\t @NotBlank \n\t private   String   name ; \n\n\t @Min ( 2018 ) \n\t private   int   year ; \n\n //getter and setter\n } \n The Spring Repository feature is still valid in a key-value database; it allows easy integration between Java and the database. \n import   org.springframework.data.repository.PagingAndSortingRepository ; \n import   org.springframework.stereotype.Repository ; \n\n @Repository \n public   interface   StudentRepository   extends   PagingAndSortingRepository < Student ,   String >   { \n } \n After creating the model and the repository, the last step in the Java application is the controller with REST. The  @RequestMapping  annotation provides \u201crouting\u201d information. It tells Spring that any HTTP request with the / path should be mapped to the home method. The  @RestController  annotation tells Spring to render the resulting string directly back to the caller. \n import   org.springframework.beans.factory.annotation.Autowired ; \n import   org.springframework.http.HttpStatus ; \n import   org.springframework.web.bind.annotation.DeleteMapping ; \n import   org.springframework.web.bind.annotation.GetMapping ; \n import   org.springframework.web.bind.annotation.PathVariable ; \n import   org.springframework.web.bind.annotation.PostMapping ; \n import   org.springframework.web.bind.annotation.PutMapping ; \n import   org.springframework.web.bind.annotation.RequestBody ; \n import   org.springframework.web.bind.annotation.RequestMapping ; \n import   org.springframework.web.bind.annotation.ResponseStatus ; \n import   org.springframework.web.bind.annotation.RestController ; \n\n import   javax.validation.Valid ; \n\n\n @RestController \n @RequestMapping ( \"students\" ) \n public   class   StudentController   { \n\n\t @Autowired \n\t private   StudentRepository   repository ; \n\n\t @PostMapping \n\t @ResponseStatus ( code   =   HttpStatus . CREATED ) \n\t public   String   save ( @RequestBody   @Valid   Student   student )   { \n    \t repository . save ( student ) ; \n    \t return   \"Saved- \"   +   student . getName ( ) ; \n\t } \n\n\t @GetMapping ( value   =   \"/{id}\" ,   produces   =   \"application/json\" ) \n\t public   Student   get ( @PathVariable ( \"id\" )   String   id )   { \n    \t return   repository . findById ( id ) . orElseThrow ( ( )   - >   new   RuntimeException ( \"Not found\" ) ) ; \n\t } \n\n\t @GetMapping ( produces   =   \"application/json\" ) \n\t public   Iterable < Student >   get ( )   { \n    \t return   repository . findAll ( ) ; \n\t } \n\n\n\t @PutMapping ( value   =   \"/{id}\" ,   produces   =   \"application/json\" ) \n\t public   Student   update ( @PathVariable ( \"id\" )   String   id ,   @RequestBody   @Valid   Student   student )   { \n    \t repository . save ( student ) ; \n    \t return   student ; \n\t } \n\n\t @DeleteMapping ( value   =   \"/{id}\" ,   produces   =   \"application/json\" ) \n\t public   Student   delete ( @PathVariable ( \"id\" )   String   id )   { \n    \t Student   student   =   repository . findById ( id ) . orElseThrow ( ( )   - >   new   RuntimeException ( \"Not found\" ) ) ; \n    \t repository . deleteById ( id ) ; \n    \t return   student ; \n\t } \n } \n\n The final part of our application is a startup. It\u2019s a standard method that follows the Java convention for an application entry point. SpringApplication bootstraps the app, starting Spring on a Tomcat web server. \n import   org.springframework.boot.SpringApplication ; \n import   org.springframework.boot.autoconfigure.SpringBootApplication ; \n\n @SpringBootApplication \n public   class   App   { \n\t public   static   void   main ( String [ ]   args )   { \n    \t SpringApplication . run ( App . class ,   args ) ; \n\t } \n\n } \n Platform.sh structure \n The Platform.sh structure is still the same as in the  first Java post , and it won\u2019t impact your application in any way. Indeed, Platform.sh is a PaaS that facilitates integration where, through infrastructure by code, you, as a user, can demand services that your application/business needs. \n Once we\u2019re using Redis, we\u2019ll update the  services file  to require  Redis services  and the  application file  to receive a credential to connect to the most popular key-value NoSQL database. \n The .services.yaml file: \n # The services of the project. \n # \n # Each service listed will be deployed \n # to power your Platform.sh project. \n \n redis : \n    type :   redis : 5.0 \n    size :   S \n The .platform.app.yaml file: \n # This file describes an application. You can have multiple applications \n # in the same project. \n # \n # See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html \n \n # The name of this app. Must be unique within a project. \n name :   app \n \n # The runtime the application uses. \n type :   \"java:8\" \n \n disk :   1024 \n \n # The hooks executed at various points in the lifecycle of the application. \n hooks : \n    build :   mvn   clean   install \n \n \n # The relationships of the application with services or other applications. \n # \n # The left-hand side is the name of the relationship as it will be exposed \n # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand \n # side is in the form `<service name>:<endpoint name>`. \n relationships : \n    redis :   'redis:redis' \n \n # The configuration of app when it is exposed to the web. \n web : \n    commands : \n     \t start :     java   -jar   target/spring-boot-maven-redis.jar   --server.port=$PORT \n The application is now ready, so it\u2019s time to move it to the cloud with Platform.sh using the  following steps : \n \n Create a new  free trial  account. \n Sign up as a new user and set a password, or login using a current GitHub, Bitbucket, or Google account. If you use a third-party login, you\u2019ll be able to set a password for your Platform.sh account later. \n Select the region of the world where your site should live. \n Select the blank template. \n \n After this wizard, Platform.sh will provision the whole infrastructure to you, and will offer a Git remote repository. Before access, remember to set the SSH keys. The Platform.sh Git-driven infrastructure means it will automatically manage everything your application needs to push it to the master remote repository. You only need to write your code\u2014including a few YAML files that specify your desired infrastructure\u2014then commit it to Git, and push. \n git remote add platform <platform.sh@gitrepository>\ngit commit -m  \"Initial project\" \ngit push -u platform master\n The code pushed will create the Java application, a Redis instance, and, when it\u2019s done, will return an IP address to the service. Let\u2019s test the application. To test a REST application, an HTTP client is OK. \n curl -X POST -k -i  'https://<service.ip>/students'  --data  '{\"id\": \"poliana\",\"name\": \"Poliana Santana\",\"year\": 2019}' \ncurl -X POST -k -i  'https://<service.ip>/students'  --data  '{\"id\": \"otavio\",\"name\": \"Otavio Santana\",\"year\": 2020}' \ncurl -X POST -k -i  'https://<service.ip>/students'  --data  '{\"id\": \"ada\",\"name\": \"Ada Santana\",\"year\": 2021}' \ncurl https://<service.ip>/students\n #result output here \n In this post, we created an integration with Redis, the most famous key-value NoSQL database. And we\u2019ve seen how natural it is to work with both Redid and Spring Data. Redis is a NoSQL database in-memory, which means writer/reader operations are faster. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Strong Customer Authentication will be required for European credit and bank card payments ", "url": "https://platform.sh/blog/2019/strong-customer-authentication/", "documentId": "1a64b54cdf53240576b4b22aa92006cb11aa665c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Strong Customer Authentication will be required for European credit and bank card payments \n         \n\n        \n         \n            \n              \n          \n         \n         26 Sep 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     How do I know if I need to take action? \n     What happens if I don\u2019t authenticate? \n     What will I need to do? \n     What is Strong Customer Authentication? \n     Why is Platform.sh doing this? \n     What do I do if I experience any issues? \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         This September,  new regulations  come into force in Europe to improve credit card payment security. As a result, you may need to take a few steps to enable  Strong Customer Authentication(SCA)  for your Platform.sh account. \n As part of the implementation of SCA, if you\u2019re a Platform.sh customer using a European credit card, you will need to authenticate to authorize your subscription payment[s]. \n How do I know if I need to take action? \n If you\u2019re a customer paying with an EU credit card, you\u2019ll receive an automatic email notification from Platform.sh that your account requires authentication with instructions about how to log in to your Platform.sh account to do so. If you\u2019re reading this now, it\u2019s a great time to make sure that your Platform.sh billing contact is up to date! You can  log in to your account here  and edit your billing information under the  Account Settings  tab. \n If your Platform.sh projects are paid via invoice, you won\u2019t be affected by this change for those projects. \n What happens if I don\u2019t authenticate? \n If you don\u2019t authenticate your account with SCA, your Platform.sh account may be suspended as we\u2019ll be unable to process your recurring payment. \n What will I need to do? \n The exact process for strong customer authentication will vary depending on your bank or credit card provider\u2019s processes and technology. We recommend that you have your mobile phone number registered with your bank or credit card provider, and have it on hand to authenticate via SMS or your banking app. \n What  is  Strong Customer Authentication? \n Strong Customer Authentication, or SCA, is a new European regulatory requirement designed to improve the security of online credit card transactions between EU businesses and EU credit card holders. It requires the use of  multifactor authentication  to authorize an online transaction. In short, that means you\u2019ll need a combination of something you  know  (like a PIN), something you  have  (like a phone), and something you  are  (like a fingerprint). \n Why is Platform.sh doing this? \n In accordance with Article 14(1) of the Commission Delegated Regulation (EU) 2018/389, we\u2019re implementing strong customer authentication (SCA) when a payer creates, amends, or initiates a series of recurring transactions with the same amount and with the same payer for the first time. We\u2019re doing this in an effort to comply with applicable laws and to reduce fraud by making online payments more secure. \n What do I do if I experience any issues? \n You can always  create a ticket  with the Platform.sh support team if you have questions or problems managing your Platform.sh account. You should also inquire with your bank or credit card provider about their specific plans and technology to support SCA. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Website fleet management: challenges and opportunities ", "url": "https://platform.sh/blog/2019/website-fleet/", "documentId": "2d9974a56726220acc92b3b958367b72c9e58065", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Website fleet management: challenges and opportunities \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Yates \n                  \n                   VP Marketing \n                  \n                  \n                 \n            \n          \n         \n         11 Oct 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     What are the challenges in managing website fleets? \n     The Platform.sh vision for website fleets \n       \n         First - we\u2019re announcing a new key feature for teams managing website fleets at scale: Source Operations. \n         We\u2019re rolling out more fleet-focused features over the coming months \n         We\u2019re building on the Platform.sh core capability \n       \n     \n     How to get started with a fleet strategy \n     More content on website fleet management to read and share \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         How many websites and applications do you think the average medium to large organization runs? Dozens? Hundreds? Thousands? \n Waaaay back in 2015, Forrester Research interviewed digital leaders at enterprise organizations and found that, on average, they were maintaining 268 customer-facing sites. That seemed like a lot at the time! \n Fast forward to 2019, and the challenge looks far worse. \n \n \n Public-facing sites and applications have proliferated across organizations, from global CPG and life-sciences companies to colleges and universities, agencies, and software companies. \n \n These applications range from critical anchor properties\u2014like corporate or brand .coms and .edus\u2014to campaign microsites with limited lifespans, and department or project sites that proliferate at universities. \n No matter how big or small, every website or app is a point of risk\u2014and a potential source of waste from duplicated efforts to host, maintain, and secure\u2014if you don\u2019t have a platform strategy. \n What are the challenges in managing website fleets? \n \n How does IT respond to this patchwork of websites, using different CMSs and tooling (from Drupal to Java to Node.js), often built by different teams or by digital agencies? \n How does the organization control costs and drive predictability? \n How do websites built and maintained by different teams remain secure? \n How do organizations maintain the right governance of all of the organization\u2019s digital property and processes? \n How do organizations out-innovate their competitors\u2013large and small? \n How do teams and organizations know that they\u2019re constantly improving? \n \n Running tens or hundreds or thousands of websites and applications across an organization is a huge challenge. But it\u2019s also a massive opportunity\u2013if done right. \n With the right platform strategy and tools, organizations can create a win/win solution for both digital teams focused on building great customer experiences  and  IT organizations charged with keeping all those sites and apps secure and performant (not to mention cost efficient!). \n Platform.sh solves many of these technology problems with a set of tools to manage websites and web apps at scale. At the same time, we can facilitate a win/win scenario between groups that have often been at odds. \n The Platform.sh vision for website fleets \n Platform.sh powers website fleets today for well-known brands and organizations\u2014Orange, the University of Missouri, Unity, EBSCO,  and The British Council, to name a few. But we\u2019ve got big news. \n First - we\u2019re announcing a new key feature for teams managing website fleets at scale:  Source Operations . \n Wish your site\u2014or 1,000 of your sites\u2014could update  themselves  when they need security patches? Source Operations can do that. Want to take the innovation happening in one business unit and deliver those features across your fleet? Source Operations can do that, too. \n Today, we\u2019re delivering a public beta of the Source Operations feature that enables Platform.sh customers to automate code updates to their sites. We\u2019ve created a series of posts to explain how it works in detail: \n \n Source Operations: automate maintenance, from single sites to fleets \n Three ways to manage website fleets  (scheduled automation, scripting, and GUIs) \n Admiral: how to keep your fleet afloat  (an example framework for fleet automation with Platform.sh) \n \n Yeah, we couldn\u2019t resist the puns with that third one, sorry. \n \n The TL;DR summary: Source Operations enables mass updating of site code for your fleet of web apps and almost anything other action you can script. \n Like the  idea  of WordPress or Drupal multisite, but wish you could update sites selectively? Now you can. \n \n Source Operations is available as a public beta  today , and you can check out our  documentation here  for more detail. \n We\u2019re rolling out more fleet-focused features over the coming months \n Source Operations is just the first of many additions to the Platform.sh fleet management toolset. In the next several months look for: \n \n Enhancements to user and organization management in the Platform.sh console and API \n Integration with external user authentication systems to manage your development teams \n Robust logs and metrics at the site and organization level \n Sweet dashboard capability to keep apprised of the state of your apps\u2013and your site fleet \n \n We\u2019re building on the Platform.sh core capability \n That means you\u2019ll get polyglot support for dozens of languages and frameworks, declarative infrastructure, where a few lines of config transform into containerized services in an instant, and a GitOps-driven workflow that adapts to the way your team works. Oh, and of course, you can deploy across multiple cloud providers in 25 regions around the world, with 24x7 support. \n How to get started with a fleet strategy \n Platform.sh can provide the tools you need to deliver improved time to value and align digital and IT organizations. We want to go a step further and help you with your website fleet management strategy, too. \n Ready to start? [I\u2019d love to hear from you directly](insert drift link). \n More content on website fleet management to read and share \n \n Check out our  webinar with GigaOm on Delivering on the Digital Dream - Harnessing the Power of the Platform . Analyst Jon Collins covers key technology and cultural changes necessary to maximize efficiency  and  innovation. \n Read our whole series introducing Source Operations, with an in-depth look at how you can power your own website fleet:\n \n Source Operations: automate maintenance, from single sites to fleets \n Three ways to manage website fleets  (scheduled automation, scripting, and GUIs) \n Admiral: how to keep your fleet afloat  (an example framework for fleet automation with Platform.sh) \n \n \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             The monolith myth: Why all-in-one tech suites aren't the solution \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Multisite on Platform.sh: the how and why \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Admiral: How to keep your fleet afloat \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Planting the seeds of social good ", "url": "https://platform.sh/blog/2019/planting-the-seeds-of-social-good/", "documentId": "75e9029f88422a34c001d49aac0e02dc57ab61f0", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Planting the seeds of social good \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Aaron Porter \n                  \n                   VP, Platform.sh Partner Program \n                  \n                  \n                 \n            \n          \n         \n         03 Oct 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         At Platform.sh, we like keeping one eye directed toward social good. One of the first initiatives we undertook upon entering the US market was to create a generous nonprofit program, offering discounts and various additional benefits to qualifying nonprofits and charities. We also have a history of replacing traditional conference give-aways with donations made to charitable organizations on behalf of attendees who participated in our booth activities; you\u2019ll be seeing more of this very soon. \n In fact, at the  2019 Nonprofit Technology Conference , we even used a Cash Booth, where participants could designate and donate the cash they collected to a variety of charitable organizations. It seemed like everyone had a great time! \n \n Today, we\u2019re pleased to announce that we\u2019re taking our giving-back approach a step further. As a global provider of cloud services, we\u2019re keenly aware of the environmental implications surrounding data center facilities, and we\u2019re committed to reducing our own carbon footprint. To that end, we\u2019re partnering with  One Tree Planted  to help further our efforts. One Tree Planted is a 501 (c)(3) that supports reforestation projects globally; we encourage you to take a moment and learn more about them. \n We\u2019re kicking off our partnership with One Tree Planted during the relaunch of our Partner Program, and have created an initiative that gives our current partners the opportunity to be active participants in our social good agenda. We tossed around a few different ideas and finally landed on making levels of donations on behalf of the first 30 Partner Program participants, depending on how quickly they complete the onboarding process. \n This is the first of many planned engagements with One Tree Planted, and we\u2019re looking forward to the next\u2026 and the next\u2026. \n The Platform.sh Partner Program is specifically for digital agencies whose primary business is building and supporting web applications.  Find out more  about the benefits of becoming a Platform.sh Partner. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Source Operations: automate maintenance, from single sites to fleets ", "url": "https://platform.sh/blog/2019/website-fleet/automating-updates-source-operations/", "documentId": "578c083dd22d0ea47d5bb0309a68bd62dc4e8804", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Source Operations: automate maintenance, from single sites to fleets \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         11 Oct 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     Source Operations\u2013enabling your code to update itself \n     Using Source Operations to update an app\u2019s dependencies \n     Updating a site from an upstream repository with Source Operations \n     Automating Source Operations across tens or hundreds of sites \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         Source Operations: automate maintenance, from single sites to fleets \n As part of our continual effort to make managing sites your way even easier and more powerful, we\u2019re pleased to announce our newest user-facing building block:  Source Operations . This latest tool is part of our long-term plan to redefine site maintenance\u2014like updating packages and upgrading versions. Simplifying site maintenance is important for single sites, of course. But it\u2019s critical if you\u2019re running thousands of sites, as some of our clients do. \n Source Operations\u2013enabling your code to update itself \n Source Operations are scripts that you can run on your own code in an isolated, build-like environment.  The main use case is for the source code to update itself.  That\u2019s best demonstrated with an example. \n Consider the following block added to your  .platform.app.yaml  file: \n source : \n      operations : \n          download : \n              command :   |\n                   curl -O https://example.com/myfile.dat \n                  git   commit   -am   \"Update myfile.dat\" \n This example defines a source operation named  download .  It has a  command  that\u2019s an arbitrary shell script, which in this case is just a single  curl  command. \n On its own, the source operation doesn\u2019t do anything unless triggered.  The easiest way to trigger it is with the Platform.sh CLI: \n platform source-operation:run download\n That command will run the  download  source operation on the current branch (use the  -e  switch to specify a different branch/environment, if desired), causing the system to checkout a copy of the current branch into a build-like environment (meaning no database or other services), then run the  command  for that operation. \n The environment the source operation runs in is a complete Git checkout of that branch, but with no remote.  As a result, you can commit values locally, but can\u2019t push them to an arbitrary branch.  (That\u2019s a guard rail to avoid accidentally trashing your repository, which would be, er, bad.)  However, after the command has run, if there are any new local Git commits, we push those new commits back to your repository. \n If the branch is activated, then the presence of new commits will automatically trigger a new build and deploy just as if you\u2019d committed those changes yourself.  And now that environment is live with the updated  myfile.dat . \n Using Source Operations to update an app\u2019s dependencies \n While downloading a file is nice and all, it\u2019s not the most useful task.  What would be more useful?  How about updating dependencies?  Consider this example: \n source : \n      operations : \n          update : \n              command :   |\n                   npm update \n                  git   commit   -am   \"Update npm dependencies\" \n In this case, there\u2019s an operation called  update  that will run  npm update  to fetch any npm packages the project depends on, then commit the result (which would be an updated  package.json  and  package-lock.json ).  Those changes will then be pushed and deployed automatically, causing that environment to be rebuilt with the new, updated dependencies. \n Meaning you now have a one-command way to update all dependencies on your project on any environment, and get it redeployed immediately. \nOf course, that works for any package manager: Composer, NPM, Yarn, Bundler, Pip, Go Modules, Maven, your own custom script . . . whatever.  If your application has multiple package managers (Composer and NPM, for instance, which is quite common), you can put them in the same operation or make two separate operations you trigger separately: your choice. \n Updating a site from an upstream repository with Source Operations \n So far we\u2019ve just talked about updating dependencies.  But what about updating the whole project? \n A common use case for many organizations is to have a single code base that\u2019s deployed many dozens or hundreds of times to different instances.  The code itself needs to be centrally managed, but each instance is \u201cowned\u201d by some specific branch or department.  Frequently, that\u2019s  a Drupal distribution like  OpenY ,  Opigno , or  Open Social  (or even distributions that don\u2019t begin with O), but it could be anything.  How, then, can that central organization manage dozens or hundreds of code bases? \n Recall that the operations environment doesn\u2019t include a Git remote to the repository, but that doesn\u2019t mean you can\u2019t add your own Git remote in the source operation command itself. \n First, add a  project-level variable  named  env:UPSTREAM_REMOTE  with the Git URI of the central repository.  That will make that repository available as a Unix environment variable in all environments, including in the Source Operations environment. \n Now, add a Source Operation to that central repository like so, which will then also be included in every other site built from that template: \n source : \n      operations : \n          upstream-update : \n              command :   |\n                   set -e \n                  git   remote   add   upstream   $UPSTREAM_REMOTE \n                  git   fetch   --all \n                  git   merge   upstream/master \n Every time the  upstream-update  source operation is triggered on a branch, that branch will get checked out, then add a Git remote for the central template repository, then merge the latest changes from its master branch.  Because there are now local changes committed in the local repository, those changes will then get pushed, built, and deployed.  If there\u2019s a merge conflict, the script will fail without committing anything.  (A more robust script would handle more merge conflict cases, but this is good enough for now.) \n The upshot is that, with a single command, any satellite project can be brought up to date with an upstream master repository.  Presumably you\u2019d want to do that in a branch rather than directly on the  master  environment, but that\u2019s up to you. \n Automating Source Operations across tens or hundreds of sites \n But what if you have a huge number of projects?  You don\u2019t want to run a shell command for each one manually, or have to merge each one manually. \n Remember that the Platform.sh CLI is simply a front end to our  REST API .  Anything you can do from the CLI or web console can be done from the API.  That means you can build whatever automation tools you want to issue API calls against one or 1,000 sites, including triggering source operations, merges, or whatever else.  That could be a command line tool, a web application, a desktop application, or all of the above. \n We have some examples of that in our next post:  three different approaches to managing your website fleet . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             The monolith myth: Why all-in-one tech suites aren't the solution \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Multisite on Platform.sh: the how and why \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Admiral: How to keep your fleet afloat \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Admiral: How to keep your fleet afloat ", "url": "https://platform.sh/blog/2019/website-fleet/admiral-an-example-of-website-fleet-automation/", "documentId": "3a0a2e9ede9bc38c5fbf63f372fa8a00784097b8", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Admiral: How to keep your fleet afloat \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         11 Oct 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     A brief tour of Admiral, our fleet management tooling example project \n     Website fleet management actions that Admiral supports (and you\u2019ll want, too) \n       \n         Backup \n         Delete \n         Update \n         Merge update \n       \n     \n     What you\u2019ll want to remember when building a website fleet management tool like Admiral \n       \n         Creation \n         Synchronization \n       \n     \n     Managing your own website fleet at scale \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         So far in our mini-series we\u2019ve talked about the new  Source Operations  feature, and how it makes keeping Platform.sh projects up to date.  In part two, we talked about managing  fleets of sites  through the Platform.sh API.  As hinted at the end of the last post, it\u2019s also entirely feasible with current tools to build a custom dashboard to make managing hundreds or thousands of sites even easier.  Today, we\u2019d like to dig into that approach a bit more. \n We\u2019re happy to share our latest project,  Admiral .  Admiral is a reference implementation and proof of concept for commanding fleets of sites on Platform.sh.  To be clear, it\u2019s  not  a complete application; it\u2019s  not  a supported product. Admiral is a toolkit and demonstration to help you build your own fleet management tools, released under a permissive Free Software license (MIT). \n Admiral\u2019s goals are to demonstrate how to build a custom fleet management tool for your organization and to give you a point to start from.  In its current form, Admiral lacks some important details that you probably want to include, like user authentication.  But it does demonstrate the full lifecycle of creating and updating Platform.sh projects en masse.  As configured, Admiral will run almost out of the box on Platform.sh, but it could also run anywhere else you want.  All it needs is PHP 7.3 and MySQL/MariaDB. \n The project\u2019s README file covers installation and requirements, so we won\u2019t go into that here.  Instead, I want to go over the architecture and call out the key points to bear in mind while building atop it, or in replicating it in your own preferred language/framework/toolchain. \n Admiral is written in Symfony 4 with the  EasyAdminBundle .  That combination was chosen mainly due to our own familiarity with it and the ready availability of RAD tools in the ecosystem. But the same functionality could be implemented in any other toolchain.  We also offer a  PHP client library  that abstracts over the Platform.sh API.  A  JavaScript version  (for either client-side or Node.js) is also available.  It\u2019s not yet available in other languages, but certainly could be written. \n A brief tour of Admiral, our fleet management tooling example project \n Admiral is built on the model of one Platform.sh user that manages some large number of individual sites, and those sites are all built off of a small number of common templates.  Admiral calls those templates \u201cArchetypes,\u201d and you can create those through the UI: \n \n The most important part of the Archetype is the Git repository from which we spawn new projects.  The  Update branch  is the branch in each project to use for updating, while the  Update operation  is the source operation to call; it can be anything, but it\u2019s only useful if it\u2019s the name of the defined source operation in the Archetype (and thus, in every project) that runs a code update task.  What that task looks like is largely up to you, but there are some common patterns. \n Admiral can support any number of Archetypes: \n \n The UI is stock EasyAdminBundle and is fairly easy to configure. \n The other object that Admiral tracks is Projects, which are simply stubs that correspond to a project on Platform.sh: \n \n Admiral allows a project to be created in any Platform.sh region, although your own implementation could easily hard-code a specific region, if desired.  Projects also specify their Archetype.  After creation, only the title is editable. \n When a Project record is created, Admiral fires off API calls to Platform.sh to create a project, then associates the resulting project ID with the Project record in Admiral.  After that, the Project is really just a stub.  Upon creation, Admiral also populates the new project with code from the Archetype and sets some  project-level variables  from the Archetype.  More on that in a moment. \n Once it\u2019s been created, the Project page now shows information pulled from the Project API on Platform.sh.  We\u2019re showing just a few fields to demonstrate that you can do so, but anything available through the API can be listed here quite easily: \n \n More importantly, all projects can be listed and acted upon: \n \n The Project list allows the user to trigger various actions on Projects, either individually: \n \n Or in bulk: \n \n Although we\u2019re not using it, EasyAdminBundle also has support for more advanced filtering and sorting to help manage larger numbers of sites. \n Admiral includes what we consider the basics for fleet management, but the whole point of having a flexible API is that you can build whatever actions you want.  For instance, Admiral doesn\u2019t have functionality to change the plan size for a project from Development to a production-level plan (since that can be done from the individual project page on Platform.sh already), but there\u2019s no reason it couldn\u2019t do that. \n Website fleet management actions that Admiral supports (and you\u2019ll want, too) \n At the moment, the following actions are implemented.  If you\u2019re building your own fleet management tool, these are (approximately) the primitives you\u2019d want to support. \n Backup \n This is the most basic action, which triggers a \u201cBackup\u201d command on Platform.sh for the  master  branch.  Generally speaking,  using scheduled backups  is a better solution, but if you want to trigger a backup of many projects manually, this is a way to do so. \n Delete \n When a Project object is deleted in Admiral, we hook into the delete action to fire the same delete command at the project on Platform.sh.  This is a destructive operation.  Please use with care. \n Update \n Update is the fun one.  The Update command first checks if a project has a branch named for the \u201cUpdate branch\u201d on its Archetype. If so, it runs a Sync command to ensure it has the latest code and data from the  master  environment.  If not, it creates one (and then the Sync is implied). \n In either case, once the named update branch is confirmed created and has the latest code and data from the production environment, Admiral makes the API call to run the source operation specified by the Archetype. \n That source operation can do any number of things.  The most common options would be to either: \n \n Run a local package update command ( composer update ,  npm update ,  bundle update , etc.) and commit the results. \n Add a Git remote based on the Archetype\u2019s Git repository and merge its master branch into the local code, which also results in a commit. \n \n Both options have their use cases, as well as their fussy edge cases.  Admiral itself doesn\u2019t care; it just triggers a source operation and calls it a day. \n Once any resulting changes are done deploying, you can visit that branch and test it out, just like any other dev branch on Platform.sh. \n Merge update \n Another simple action, Merge first triggers a \u201cbackup\u201d command on production, then triggers a \u201cmerge\u201d API call at the update environment, causing it to get merged to its parent (presumably  master /production).  That, in turn, triggers a rebuild/redeploy of  master  on Platform.sh, and the updates are now live. \n All of these commands may be triggered for one or a hundred Projects at a time, making it easy to say \u201cwell, there was a security release, I guess it\u2019s time to update everything.\u201d  Just \u201cSelect All,\u201d \u201cUpdate,\u201d wait for them to finish, review, \u201cSelect All,\", Merge, get  $beverage . \n What you\u2019ll want to remember when building a website fleet management tool like Admiral \n There are a few important notes for anyone trying to build or extend a system like this. \n Creation \n First is the question of how to initially populate the project repository on creation.  There are broadly two options, and which option you want to use depends on your use case.  Admiral includes both, but as it ships it hard codes to use the second.  (Switching is a matter of swapping a commented line.) \n \n \n Use the  initialize  API call.  This approach works with any public Git repository and is a simple one-line command.  It\u2019s the same API call our Management Console uses when you select a project template.  With this approach, the project is populated with just a single commit of whatever code is at the HEAD of the  master  branch in the Archetype repository.  This approach is simple and straightforward, but results in a separate Git history for every project.  If you\u2019re updating projects locally that\u2019s fine, but if you then want to merge code from the Archetype repository later that becomes problematic and you\u2019ll need to use the  -X theirs  flag for the  git merge  command to avoid merge conflicts. \n \n \n Manually  git push  a copy of the Archetype\u2019s repository to the project.  This approach results in a common Git history for all projects, which makes merges easier.  On the flip side, it\u2019s also considerably more involved and requires setting up a public/private  SSH keypair  for Git to use in order to write to the Platform.sh repository.  If you\u2019re planning to merge from the Archetype repository, then this is the recommended approach.  If not, it\u2019s most likely more complexity than you need. \n \n \n Synchronization \n The second key question is around synchronization.  Most API calls on Platform.sh are asynchronous.  That is, they return immediately to the caller and then continue in the background, and you can issue more API calls that will queue up behind it and run when they\u2019re able.  There are two important caveats, however: \n \n \n On project creation, Admiral needs to wait for the project to be created so that it can get the new project ID and record that in its own database.  That process may take anywhere from 20 seconds to 2 minutes.  Currently, Admiral simply blocks until that task is complete and then finishes validating and writing the Project record.  If creating projects one at a time that should be entirely adequate.  If you need to mass-create a series of projects, however, a more robust and queued approach is recommended. \n \n \n Some API commands are only available if a project is in a given state at the time the API call is issued; it can\u2019t tell that the project  will  be in that state once other queued tasks are run.  For example, attempting to branch from an environment that isn\u2019t fully initialized yet will fail, even if the environment is in the process of initializing at the time.  The solution here is, again, to block until the operation becomes available\u2014if you\u2019re certain that operation  will  become available.  (Remember to have a timeout!) \n \n \n That need to block at times, combined with the simple fact that even asynchronous API calls require some network time, introduces a scaling problem.  When running an update against two or three projects, it may be acceptable to wait 10 or 20 seconds for a page to respond.  When running an update against 200 projects, not so much. \n For that reason, we recommend moving everything but project creation off of the main request thread to a background process.  The way to do so will vary depending on your platform. \n Admiral is written in PHP, so it uses Symfony\u2019s MessageBus for all actions other than project creation (which must be synchronous, as above), as it can be shifted to a background queue worker very easily.  In fact, as configured out of the box, it uses a database-backed queue and a  worker  instance to do exactly that, which frees up the main process to respond to the user quickly.  If executing an action across 200 projects, Admiral triggers 200 command messages, which all go into the queue and will be processed in the order they are received. \n Languages with more built-in asynchronous functions can use other approaches.  A Go implementation, for instance, could invoke a distinct goroutine for each action and project. \n Processing actions in the background also introduces a question around error handling.  If the UI doesn\u2019t block on each action, how is the user notified if it did or did not work?  There\u2019s no one right answer here.  For Admiral, we took the approach of just logging the failure in Symfony\u2019s standard logging toolchain and silently failing.  Because the activity log is shown on each Project page most failures would be reported there, just as they would be on the project itself on Platform.sh.  A more robust approach would use a webhook to subscribe to the activity stream for each managed project and surface any errors to the user. \n Managing your own website fleet at scale \n This application is, as noted, only an example.  There\u2019s no single right way to manage fleets on Platform.sh; the right way depends on what workflow you want to have. \n \n If you\u2019re managing a large number of similar sites, then taking Admiral and adding some user management on it would probably suit you fine (and you\u2019re welcome to do so) \n If you want to build a complete and transparent SaaS on top of Platform.sh you could use Admiral as a basis or build your own workflow into your existing ecommerce system. \n You can also structure your Source Operations in any number of ways.  Technically, you don\u2019t even have to use them, although they are, in practice, the best way to handle code updates across a large number of projects. \n \n Sounds exciting, right? But you may not be sure what the right approach is for you. No worries.   Contact our team  and we\u2019ll be happy to help you design the workflow that best suits your organization and keeps your fleet afloat. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             The monolith myth: Why all-in-one tech suites aren't the solution \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Multisite on Platform.sh: the how and why \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Source Operations: automate maintenance, from single sites to fleets \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "PHP devs: Platform.sh protects you from CVE-2019-11043 ", "url": "https://platform.sh/blog/2019/php-devs-platform.sh-protects-you-from-cve-2019-11043/", "documentId": "b6e1bf8ef240ef6a552d7780063b0d4d429e8f7b", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           PHP devs: Platform.sh protects you from CVE-2019-11043 \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         30 Oct 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Last week, the PHP development team released PHP 7.1.33, 7.2.24, and  7.3.11 , all of which fix a security vulnerability in the PHP-FPM process manager tool used by most PHP hosting environments, including Platform.sh.  The bug in question, dubbed  CVE-2019-11043 , would have allowed for, potentially, remote code execution exploits (i.e., really bad news). \n If you\u2019re on Platform.sh, though, don\u2019t worry; you\u2019re already safe. \n The bug involves sending specially crafted URLs to the server, triggering a string parsing error, which causes the server to expose memory it shouldn\u2019t.  That means the bug is dependent on the web server configuration allowing such specially crafted URLs through.  The Hacker News has a  more detailed write-up  for those interested in the details. \n Unfortunately, many of the most common Nginx configurations allow such sneaky URLs. \n Fortunately, Platform.sh\u2019s Nginx configuration does not. Rather, hostile URLs are blocked before they reach PHP-FPM in the first place.  That makes the bug unexploitable on Platform.sh. \n We\u2019re still upgrading our PHP application images to the new releases.   Updates are rolling out today. \n \n If you\u2019re on Platform.sh Dedicated, the update is fully transparent. \n If you\u2019re on Platform.sh Professional, the new PHP versions will automatically be used the next time you deploy. \n If you want to make sure you\u2019re running the latest version, but have no new code to push, run  platform redeploy  from the Platform.sh command line, and you\u2019re good to go. \n \n If you\u2019re not running on Platform.sh, please stop what you\u2019re doing and go upgrade your PHP version, adjust your Nginx configuration, or both. \n If you\u2019re on PHP versions older than 7.1, you\u2019re running an unsupported version of PHP; that means no fix to PHP itself will be released.  Because the Nginx configuration is the same on all of our PHP versions,  you\u2019re still protected from this exploit  on Platform.sh.  However, we encourage you to take this opportunity to upgrade your application to a supported PHP version, 7.2 or above.  PHP 7.1 will go out of security support  in one month , with the release of PHP 7.4. \n Although Platform.sh has no immediate plans to remove old PHP versions from our offering, we do strongly urge all users to use a fully supported PHP version: 7.2 or higher, or ideally 7.3 (which will become the legacy version later this year).  Fortunately, and as usual, upgrades are dead-simple; you need only change one character in your  .platform.app.yaml  file: \n type: php:7.3\n And then push.  (Try it in a branch first, of course.  That\u2019s what easy branch environments are for!) \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Scale your application with Spring and RabbitMQ ", "url": "https://platform.sh/blog/2019/scale-your-application-with-spring-and-rabbitm/", "documentId": "3f704367368b6be589c7517dffe2e3260d6f1c7f", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Scale your application with Spring and RabbitMQ \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         15 Oct 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         There are some projects that require a massive amount of time to run specific features: an e-commerce scenario or a system that needs to send an email when a payment process is confirmed by the payment provider. As a developer, we know that keeping users waiting isn\u2019t an option. In the case of the payment, the application needs to send an email when the payment is complete. Creating a queue of tasks to be executed asynchronously is an excellent way to process a large quantity of data without impacting users, keeping them happy. The goal of this post is to talk about how to create these asynchronous calls with Java using  Spring  and  RabbitMQ . \n RabbitMQ  is an open-source, message-broker software that translates a message from the formal messaging protocol of the sender to the official messaging protocol of the receiver. In other words, RabbitMQ is a  producer-consumer  implementation, where the producer processes the message, and the consumer is the client who runs the process.\nTo show how RabbitMQ works, we\u2019ll create a smooth sample to manage a car that has three statuses: when the vehicle is new, when that car has been sold, and when the car has been identified as  junk. We\u2019d like to store it in a relational database and have two tables: one to put the current car status and the second one to put the historical information about the car. So, for each new event, we\u2019ll fire an event to RabbitMQ to be executed to a new client asynchronously. \n Show me the code \n The project demo will be a Maven project. So, the first step is to define project dependencies, e.g. Spring Boot, Spring Data, MySQL driver, and RabbitMQ client into the pom.xml file. \n <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n <project   xmlns= \"http://maven.apache.org/POM/4.0.0\"   xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n     \t xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > \n\t <modelVersion > 4.0.0 </modelVersion> \n\n\t <groupId > sh.platform.start </groupId> \n\t <artifactId > spring-boot-jms </artifactId> \n\t <version > 0.0.1 </version> \n\n\t <properties > \n    \t <java.version > 1.8 </java.version> \n\t </properties> \n\n\t <parent > \n    \t <groupId > org.springframework.boot </groupId> \n    \t <artifactId > spring-boot-starter-parent </artifactId> \n    \t <version > 2.2.0.RELEASE </version> \n\t </parent> \n\n\t <dependencies > \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-web </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-data-jpa </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > mysql </groupId> \n        \t <artifactId > mysql-connector-java </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework </groupId> \n        \t <artifactId > spring-jms </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-amqp </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.messaginghub </groupId> \n        \t <artifactId > pooled-jms </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > com.rabbitmq.jms </groupId> \n        \t <artifactId > rabbitmq-jms </artifactId> \n        \t <version > 1.11.2 </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > sh.platform </groupId> \n        \t <artifactId > config </artifactId> \n        \t <version > 2.2.2 </version> \n    \t </dependency> \n\t </dependencies> \n\n\t <build > \n    \t <finalName > spring-boot-jms </finalName> \n    \t <plugins > \n        \t <plugin > \n            \t <groupId > org.springframework.boot </groupId> \n            \t <artifactId > spring-boot-maven-plugin </artifactId> \n        \t </plugin> \n    \t </plugins> \n\t </build> \n\t <repositories > \n    \t <repository > \n        \t <id > oss.sonatype.org-snapshot </id> \n        \t <url > http://oss.sonatype.org/content/repositories/snapshots </url> \n    \t </repository> \n\t </repositories> \n </project> \n The next step is the configuration classes; these classes have the responsibility to provide both the data source to connect to the database and the  connection factory  for the client to use to create a connection with a JMS provider. \n import   org.springframework.context.annotation.Bean ; \n import   org.springframework.context.annotation.Configuration ; \n import   sh.platform.config.Config ; \n import   sh.platform.config.MySQL ; \n\n import   javax.sql.DataSource ; \n\n @Configuration \n public   class   DataSourceConfig   { \n\n\t @Bean ( name   =   \"dataSource\" ) \n\t public   DataSource   getDataSource ( )   { \n    \t Config   config   =   new   Config ( ) ; \n    \t MySQL   database   =   config . getCredential ( \"database\" ,   MySQL : : new ) ; \n    \t return   database . get ( ) ; \n\t } \n } \n\n import   org.springframework.context.annotation.Bean ; \n import   org.springframework.context.annotation.Configuration ; \n import   org.springframework.jms.annotation.EnableJms ; \n import   org.springframework.jms.connection.CachingConnectionFactory ; \n import   org.springframework.jms.support.converter.MappingJackson2MessageConverter ; \n import   org.springframework.jms.support.converter.MessageConverter ; \n import   org.springframework.jms.support.converter.MessageType ; \n import   sh.platform.config.Config ; \n import   sh.platform.config.RabbitMQ ; \n\n import   javax.jms.ConnectionFactory ; \n\n @Configuration \n @EnableJms \n public   class   JMSConfig   { \n\n\t private   ConnectionFactory   getConnectionFactory ( )   { \n    \t Config   config   =   new   Config ( ) ; \n    \t final   RabbitMQ   rabbitMQ   =   config . getCredential ( \"rabbitmq\" ,   RabbitMQ : : new ) ; \n    \t return   rabbitMQ . get ( ) ; \n\t } \n\n\t @Bean \n\t public   MessageConverter   jacksonJmsMessageConverter ( )   { \n    \t MappingJackson2MessageConverter   converter   =   new   MappingJackson2MessageConverter ( ) ; \n    \t converter . setTargetType ( MessageType . TEXT ) ; \n    \t converter . setTypeIdPropertyName ( \"_type\" ) ; \n    \t return   converter ; \n\t } \n\n\t @Bean \n\t public   CachingConnectionFactory   cachingConnectionFactory ( )   { \n    \t ConnectionFactory   connectionFactory   =   getConnectionFactory ( ) ; \n    \t return   new   CachingConnectionFactory ( connectionFactory ) ; \n\t } \n\n } \n After the configurations are created, the next step is to define the entities. These entities are the core of the business and will represent the instances that we\u2019ll create/write from the database and integrate into the queue. In this sample, there are two entities: the  Car  entity, where we have the current status of the car, and the entity that holds the status of the operation, the  CarLog . \n import   javax.persistence.Column ; \n import   javax.persistence.Entity ; \n import   javax.persistence.GeneratedValue ; \n import   javax.persistence.GenerationType ; \n import   javax.persistence.Id ; \n import   java.util.Objects ; \n\n @Entity \n public   class   Car   { \n\n\t @Id \n\t @GeneratedValue ( strategy   =   GenerationType . IDENTITY ) \n\t private   Long   id ; \n\n\t @Column \n\t private   String   plate ; \n\n\t @Column \n\t private   String   model ; \n\n\t @Column \n\t private   Integer   age ; \n\n\t @Column \n\t private   String   color ; \n\n\t public   Long   getId ( )   { \n    \t return   id ; \n\t } \n\n\t public   String   getModel ( )   { \n    \t return   model ; \n\t } \n\n\t public   Integer   getAge ( )   { \n    \t return   age ; \n\t } \n\n\t public   String   getColor ( )   { \n    \t return   color ; \n\t } \n\n\t public   String   getPlate ( )   { \n    \t return   plate ; \n\t } \n\n\t @Override \n\t public   boolean   equals ( Object   o )   { \n    \t if   ( this   = =   o )   { \n        \t return   true ; \n    \t } \n    \t if   ( o   = =   null   | |   getClass ( )   ! =   o . getClass ( ) )   { \n        \t return   false ; \n    \t } \n    \t Car   car   =   ( Car )   o ; \n    \t return   Objects . equals ( id ,   car . id ) ; \n\t } \n\n\t @Override \n\t public   int   hashCode ( )   { \n    \t return   Objects . hashCode ( id ) ; \n\t } \n\n\t @Override \n\t public   String   toString ( )   { \n    \t return   \"Car{\"   + \n            \t \"id=\"   +   id   + \n            \t \", plate='\"   +   plate   +   '\\''   + \n            \t \", model='\"   +   model   +   '\\''   + \n            \t \", age=\"   +   age   + \n            \t \", color='\"   +   color   +   '\\''   + \n            \t '}' ; \n\t } \n } \n\n public   enum   CarStatus   { \n\t NEW ,   JUNK ,   SOLD ; \n } \n\n import   javax.persistence.* ; \n import   java.time.LocalDateTime ; \n import   java.time.ZoneId ; \n import   java.util.Objects ; \n\n @Entity \n public   class   CarLog   { \n\n\t private   static   final   ZoneId   UTC   =   ZoneId . of ( \"UTC\" ) ; \n\n\t @Id \n\t @GeneratedValue ( strategy   =   GenerationType . IDENTITY ) \n\t private   Long   id ; \n\n\t @Column \n\t private   String   plate ; \n\n\t @Column \n\t private   String   model ; \n\n\t @Column \n\t private   LocalDateTime   date   =   LocalDateTime . now ( UTC ) ; \n\n\t @Column \n\t @Enumerated ( value   =   EnumType . STRING ) \n\t private   CarStatus   status ; \n\n\t public   Long   getId ( )   { \n    \t return   id ; \n\t } \n\n\t public   String   getPlate ( )   { \n    \t return   plate ; \n\t } \n\n\t public   String   getModel ( )   { \n    \t return   model ; \n\t } \n\n\t public   CarStatus   getStatus ( )   { \n    \t return   status ; \n\t } \n\n\t public   LocalDateTime   getDate ( )   { \n    \t return   date ; \n\t } \n\n\t public   static   CarLog   newCar ( Car   car )   { \n    \t return   of ( car ,   CarStatus . NEW ) ; \n\t } \n\n\t public   static   CarLog   junk ( Car   car )   { \n    \t return   of ( car ,   CarStatus . JUNK ) ; \n\t } \n\n\t public   static   CarLog   sold ( Car   car )   { \n    \t return   of ( car ,   CarStatus . SOLD ) ; \n\t } \n\n\t private   static   CarLog   of ( Car   car ,   CarStatus   status )   { \n    \t Objects . requireNonNull ( car ,   \"car is required\" ) ; \n    \t CarLog   log   =   new   CarLog ( ) ; \n    \t log . plate   =   car . getPlate ( ) ; \n    \t log . model   =   car . getModel ( ) ; \n    \t log . status   =   status ; \n    \t return   log ; \n\t } \n } \n\n\n After that, once the Spring Data entities are defined, the next step is to create the repository\u2019s interfaces. The goal of the Spring Data repository abstraction is to significantly reduce the amount of boilerplate code required to implement data access layers for various persistence stores. \n import   org.springframework.data.repository.PagingAndSortingRepository ; \n\n public   interface   CarRepository   extends   PagingAndSortingRepository < Car ,   Long >   { \n } \n\n\n import   org.springframework.data.repository.PagingAndSortingRepository ; \n\n import   java.util.List ; \n\n public   interface   CarLogRepository   extends   PagingAndSortingRepository < CarLog ,   Long >   { \n\n\t List < CarLog >   findByPlate ( String   plate ) ; \n\n\t List < CarLog >   findByModel ( String   model ) ; \n\n\t List < CarLog >   findByStatus ( CarStatus   status ) ; \n } \n In the MVC pattern, the controller is the layer between the model and the view, and that\u2019s what we\u2019ll create next, the controller classes. In the  CarController  layer there\u2019s the  JmsTemplate  that makes it very simple to send messages to a JMS destination. \n \n import   org.springframework.beans.factory.annotation.Autowired ; \n import   org.springframework.http.HttpStatus ; \n import   org.springframework.jms.core.JmsTemplate ; \n import   org.springframework.web.bind.annotation.* ; \n\n @RestController \n @RequestMapping ( \"cars\" ) \n public   class   CarController   { \n\n\t @Autowired \n\t private   CarRepository   repository ; \n\n\t @Autowired \n\t private   JmsTemplate   template ; \n\n\t @PostMapping \n\t @ResponseStatus ( code   =   HttpStatus . CREATED ) \n\t public   String   save ( @RequestBody   Car   car )   { \n    \t repository . save ( car ) ; \n    \t template . convertAndSend ( \"new\" ,   car ) ; \n    \t return   \"Saved- \"   +   car . getModel ( ) ; \n\t } \n\n\t @GetMapping ( value   =   \"/{id}\" ,   produces   =   \"application/json\" ) \n\t public   Car   get ( @PathVariable ( \"id\" )   long   id )   { \n    \t return   repository . findById ( id ) . orElseThrow ( ( )   - >   new   RuntimeException ( \"Not found\" ) ) ; \n\t } \n\n\t @GetMapping ( produces   =   \"application/json\" ) \n\t public   Iterable < Car >   get ( )   { \n    \t return   repository . findAll ( ) ; \n\t } \n\n\n\t @PutMapping ( value   =   \"/{id}\" ,   produces   =   \"application/json\" ) \n\t public   Car   update ( @PathVariable ( \"id\" )   long   id ,   @RequestBody   Car   car )   { \n    \t repository . save ( car ) ; \n    \t return   car ; \n\t } \n\n\t @DeleteMapping ( value   =   \"junk/{id}\" ,   produces   =   \"application/json\" ) \n\t public   Car   junk ( @PathVariable ( \"id\" )   long   id )   { \n    \t Car   car   =   repository . findById ( id ) . orElseThrow ( ( )   - >   new   RuntimeException ( \"Not found\" ) ) ; \n    \t repository . deleteById ( id ) ; \n    \t template . convertAndSend ( \"junk\" ,   car ) ; \n    \t return   car ; \n\t } \n\n\t @DeleteMapping ( value   =   \"sold/{id}\" ,   produces   =   \"application/json\" ) \n\t public   Car   sold ( @PathVariable ( \"id\" )   long   id )   { \n    \t Car   car   =   repository . findById ( id ) . orElseThrow ( ( )   - >   new   RuntimeException ( \"Not found\" ) ) ; \n    \t repository . deleteById ( id ) ; \n    \t template . convertAndSend ( \"sold\" ,   car ) ; \n    \t return   car ; \n\t } \n } \n\n\n import   org.springframework.beans.factory.annotation.Autowired ; \n import   org.springframework.http.HttpStatus ; \n import   org.springframework.jms.core.JmsTemplate ; \n import   org.springframework.web.bind.annotation.* ; \n\n @RestController \n @RequestMapping ( \"logs\" ) \n public   class   CarLogController   { \n\n\t @Autowired \n\t private   CarLogRepository   repository ; \n\n\t @GetMapping ( produces   =   \"application/json\" ) \n\t public   Iterable < CarLog >   get ( )   { \n    \t return   repository . findAll ( ) ; \n\t } \n\n\t @GetMapping ( value   =   \"{plate}\" ,   produces   =   \"application/json\" ) \n\t public   Iterable < CarLog >   getHistoric ( @PathVariable ( \"plate\" )   String   plate )   { \n    \t return   repository . findByPlate ( plate ) ; \n\t } \n\n\t @GetMapping ( value   =   \"models/{model}\" ,   produces   =   \"application/json\" ) \n\t public   Iterable < CarLog >   get ( @PathVariable ( \"model\" )   String   model )   { \n    \t return   repository . findByModel ( model ) ; \n\t } \n\n\t @GetMapping ( value   =   \"status/{status}\" ,   produces   =   \"application/json\" ) \n\t public   Iterable < CarLog >   get ( @PathVariable ( \"status\" )   CarStatus   status )   { \n    \t return   repository . findByStatus ( status ) ; \n\t } \n } \n\n\n In the  CarLogController  layer, we only see a GET verb, which means it is a read-only controller. But how will the information get into the database? In the  CarController  layer, the client sends messages to the RabbitMQ queue. \n Next, it\u2019s time to talk about the class that will read this queue. The class CarEventReceiver has several methods for the JmsListener annotations, with the attribute that represents the queue for that method; it will listen and wait for a message to read and process. If you take a second look at how the  JmsTemplate  has been used at the class  CarController  layer, the first parameter is a  String  that provides the queue name for where the information should be sent as the second parameter. Spring JMS connects the consumer and producer easily, with a template that allows for production and annotation, making the information more consumable. \n import   org.springframework.beans.factory.annotation.Autowired ; \n import   org.springframework.jms.annotation.JmsListener ; \n import   org.springframework.stereotype.Component ; \n\n @Component \n public   class   CarEventReceiver   { \n\n\n\t @Autowired \n\t private   CarLogRepository   repository ; \n\n\t @JmsListener ( destination   =   \"new\" ) \n\t public   void   newCar ( Car   car )   { \n    \t CarLog   log   =   CarLog . newCar ( car ) ; \n    \t repository . save ( log ) ; \n\t } \n\n\t @JmsListener ( destination   =   \"junk\" ) \n\t public   void   junk ( Car   car )   { \n    \t CarLog   log   =   CarLog . junk ( car ) ; \n    \t repository . save ( log ) ; \n\t } \n\n\t @JmsListener ( destination   =   \"sold\" ) \n\t public   void   sold ( Car   car )   { \n    \t CarLog   log   =   CarLog . sold ( car ) ; \n    \t repository . save ( log ) ; \n\t } \n } \n Platform.sh structure \n The Java application is ready to go! The next step is to set the Platform.sh files required to manage and deploy the application. In our  first Java post , we took a deep dive into each detail of these three files: \n \n One router (.platform/routes.yaml). Platform.sh allows you to define the  routes . \n Zero or more service containers (.platform/services.yaml). Platform.sh allows you to completely define and configure the topology and  services  you want to use on your project. \n One or more application containers (.platform.app.yaml). You control your application and the way it will be built and deployed on Platform.sh  via a single configuration file . \n \n The file that will change in this post is the  service file , allowing you to define a database, search engine, cache, and so on. In this project, we\u2019ll set MariaDB and RabbitMQ. \n db : \n    type :   mariadb : 10.4 \n    disk :   512 \n queuerabbit : \n    type :   rabbitmq : 3.7 \n    disk :   512 \n In the application file, we\u2019ll change the relationship to allow our application to access the services. To point out, this access is an essential feature from a security perspective. So in a microservices scenario, we can make sure that the finance applications access the financial services and so on. \n # This file describes an application. You can have multiple applications \n # in the same project. \n # \n # See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html \n \n # The name of this app. Must be unique within a project. \n name :   app \n \n # The runtime the application uses. \n type :   \"java:8\" \n \n disk :   1024 \n \n # The hooks executed at various points in the lifecycle of the application. \n hooks : \n    build :   mvn   clean   install \n \n # The relationships of the application with services or other applications. \n # \n # The left-hand side is the name of the relationship as it will be exposed \n # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand \n # side is in the form `<service name>:<endpoint name>`. \n relationships : \n    database :   \"db:mysql\" \n    rabbitmq :   \"queuerabbit:rabbitmq\" \n \n # The configuration of app when it is exposed to the web. \n web : \n    commands : \n     \t start :     java   -jar   -Xmx512m   target/spring-boot-jms.jar   --server.port=$PORT \n \n The application is now ready, so it\u2019s time to move it to the cloud with Platform.sh using the following  steps : \n \n Create a new  free trial account . \n Sign up with a new username and password, or login using a current GitHub, Bitbucket, or Google account. If you use a third-party login, you\u2019ll be able to set a password for your Platform.sh account later. \n Select the region of the world where your site should live. \n Select the blank template. \n \n After this wizard, Platform.sh will provision the whole infrastructure to yo and provide your project a remote Git repository. The Platform.sh Git-driven infrastructure means it will automatically manage everything your application needs to push it to the master remote repository. After you set up your  SSH keys , you\u2019ll only need to write your code\u2014including a few YAML files that specify your desired infrastructure\u2014then commit it to Git and push. \n git remote add platform <platform.sh@gitrepository>\ngit commit -m \"Initial project\"\ngit push -u platform master\n Code pushed will create both the Java application, the services instances, and, when it\u2019s done, will return an IP address to the service. Let\u2019s test the application. \n curl -X POST -k -H 'Content-Type: application/json' -i 'https://<host_addresss>/cars' --data '{\"id\":1,\"plate\":\"AB-0001-AB\",\"model\":\"Vogel\",\"age\":2012,\"color\":\"green\"}'\ncurl -X POST -k -H 'Content-Type: application/json' -i 'https://<host_addresss>/cars' --data '{\"id\":2,\"plate\":\"AB-0003-AB\",\"model\":\"Renault\",\"age\":2018,\"color\":\"red\"}'\ncurl -X POST -k -H 'Content-Type: application/json' -i 'https://<host_addresss>/cars' --data '{\"id\":3,\"plate\":\"AB-0006-AB\",\"model\":\"Peugeot\",\"age\":2019\"color\":\"black\"}'\ncurl -X GET -i 'https://<host_address>/logs'\n In this post, we learned about how to optimize asynchronous  communication across the system with RabbitMQ and Spring . This strategy will allow your application to be more scalable and will prevent the user from waiting too long for an answer for a Queue/Topic consumer. An architecture that has any asynchronous communication allows, for example, a second application to read and process the information from the broker or to have more than one consumer, if the system requires it. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Three ways to manage a website fleet ", "url": "https://platform.sh/blog/2019/website-fleet/three-ways-to-manage-a-fleet/", "documentId": "4b1d6db5cacca180a877dff9d1e14254c01d42ee", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Three ways to manage a website fleet \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         11 Oct 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     Fully automatic scheduled updates with cron \n     Triggering Source Operations updates on demand with scripting \n     Creating a GUI to manage your website fleet with Source Operations \n     Platform.sh is designed to give you flexibility for your fleet workflow \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         As hinted in the  previous post , one of the potential use cases for  Source Operations   is managing and updating a fleet of sites\u2014a common situation, especially for organizations that have large numbers of sites running identical or nearly identical code, but in their own projects.  Traditional approaches to fleet management involve  pushing  updates to an array of sites.  What Source Operations enables is the ability to have sites  \u201cpull\u201d  updates \u2014 en masse, individually, or as a subset \u2014 and own the process of managing the site from the receiving end rather than the sending end. \n With a pull-based approach, of course, it\u2019s still useful to have a way to automate updating a large set of sites at once, building a preview environment, and subsequently merging them.  (Just because you  can  deploy updates directly to production without review doesn\u2019t mean you  should. )  Because we provide a robust set of primitives, there are a number of ways you could build on top of them to create a customized, personalized workflow for managing multiple sites. \n In this post, we\u2019ll look at three ways to build a fleet management workflow on Platform.sh. \n In each case, we\u2019ll assume that every project has the following source operation defined: \n source : \n      operations : \n          upstream-update : \n              command :   |\n                   set -e \n                  git   remote   add   upstream   $UPSTREAM_REMOTE \n                  git   fetch   --all \n                  git   merge   upstream/master \n When triggered, it will merge in any changes from an upstream Git repository defined in an environment variable and redeploy that code on that branch.  Note that this is just an example script that lacks good error handling, but is easier to explain for now.  There are also, of course, ample other ways to handle a site updating itself, such as pulling new packages from a private language repository on demand. \n Fully automatic scheduled updates with cron \n Because a source operation can be triggered from the CLI tool, it can also be triggered from cron. \n First,  install the CLI and add an API key configured  to make it available from the application container.  Then, add the following cron job in the  .platform.app.yaml  of the upstream repository (which will, therefore, be included in all of its clones): \n crons : \n      update : \n          spec :   '0 0 * * *' \n          cmd :   |\n               if [ \"$PLATFORM_BRANCH\" = upstream-update ]; then \n                  platform   environment : sync   code   data   --no-wait   --yes \n                  platform   source-operation : run   upstream-update   --no-wait   --yes \n         \t fi \n Now, at about midnight UTC, a cron job will run on each branch, but will be a no-op on most.  However, on the branch named  upstream-update  it will first sync both code and data from the parent branch (presumably  master ) to get the latest updates, then run a code update on itself. \n As a result, the  upstream-update  environment will always have the latest production code and data (as of midnight)  plus  the latest upstream dependency updates.   You now have an environment that self-updates and previews the resulting changes.   Whoever manages each individual site can then do a visual review of that branch and, when happy with it, just click \u201cMerge\u201d from the Management Console in their browser. \n Keep your site up to date with just a few mouse clicks. \n Triggering Source Operations updates on demand with scripting \n If you\u2019d rather only trigger updates when you actively decide to, rather than nightly, the Platform.sh CLI is highly scriptable.  At the most basic end, one could whip up a small bash script like so: \n platform environment:sync code data -p abc123 -e upstream-update --no-wait --yes\nplatform source-operation:run upstream-update  -p abc123 -e upstream-update --no-wait --yes\nplatform environment:sync code data -p def456 -e upstream-update --no-wait --yes\nplatform source-operation:run upstream-update  -p def456 -e upstream-update --no-wait --yes\n That code would certainly work to trigger a source operation update across a number of sites, but it\u2019s a bit clunky. \n Fortunately, the CLI has a helpful  multi  command that can internalize that task for you.  Instead of the above, you can do: \n platform multi --projects = abc123,def456  --continue  'environment:sync code data -e upstream-update --no-wait --yes' \nplatform multi --projects = abc123,def456  --continue  'source-operation:run upstream-update -e upstream-update --no-wait --yes' \n And with just those two lines, the CLI will trigger a Sync of both projects\u2019  upstream-update  branches, then queue up the source operation behind them.  For more projects, just list more project IDs in the list. \n As with the cron approach, site owners can then click Merge in the UI at their leisure.  Alternatively, the CLI can trigger the merge, too: \n platform multi --projects = abc123,def456 --continue  'merge -e upstream-update --no-wait --yes' \n And every project will merge  upstream-update  to master, which triggers a new build-and-deploy for production. \n The list of project IDs can be comma or whitespace delimited, which means you could also read them from a file, like so: \n platform multi --projects = \" $( < projects.txt ) \"  --continue  'merge -e upstream-update --no-wait --yes' \n Because the CLI is scriptable, you could also wrap more complex behavior into a bash script, Python script, PHP script, or whatever else to build the commands dynamically.  Such a script is left as an exercise for the reader. \n Creating a GUI to manage your website fleet with Source Operations \n Both of the above methods will scale to a few dozen sites in a fleet.  When you\u2019re talking about hundreds or even thousands of sites, though, you may want a more robust solution.  Past a certain scale, you want a nice GUI that lets you mass-manage sites. \n Everything the Platform.sh CLI or Management Console do is just a combination of Git commands and API calls.  Those  APIs are documented , and of course Git is, well, Git.  That means one could build a custom application to issue calls against that API however and whenever desired.  Like, say, from your own web application (which can itself be hosted on Platform.sh). \n We have built a proof of concept of such an application.  The application itself is very rudimentary and still lacks important features like user management (BYO authentication), but it\u2019s enough to demonstrate the basic operations you can do.  It\u2019s built with Symfony and the EasyAdminBundle, which provides the CRUD UI. \n \n The dashboard lists multiple projects owned by the same Platform.sh user.  It\u2019s largely an automated list of Doctrine objects.  (Doctrine is the standard ORM for Symfony.) Projects can be added through this application as well: \n \n Projects are created from an \u201cArchetype,\u201d which is just a simple record of an upstream Git repository and some configuration data, like the name of the environment to use for updates.  It can also be placed in any Platform.sh region.  More settings could easily be added. \n On  Save , the application issues an API call to Platform.sh to create a new project with the specified criteria.  The project is then initialized with a clone of the Archetype Git repository. \n Once a project is created and tracked by the application, it can issue API calls against one or more projects in a batched set. \n \n \n \u201cBackup\u201d is just an API call to trigger a backup on the master environment. \n \u201cUpdate\u201d triggers a sync on the update branch and then runs the source operation. \n \u201cMerge update\u201d triggers a simple merge of the update branch to master. \n \u201cDelete\u201d deletes the projects from the dashboard,  and  from Platform.sh. \n \n This demo application is not production usable in its current state, of course, but demonstrates the sort of custom mass-management dashboard one could build.  In fact, some of our customers have already built White Label SaaS tools to do such management themselves, including managing billing and accounts for their own customers.  They didn\u2019t even tell us they were doing it!  (That\u2019s a good sign that our APIs are where we want them.) \n Naturally, there are ample other ways to wrap a user interface around the Platform.sh API, depending on your specific use case. \n Platform.sh is designed to give you flexibility for your fleet workflow \n Regardless of how many sites you have and how you want to manage them, there are options available.  Our goal is to let you build the perfect SaaS, fleet deployment, or other management toolchain for your organization.  Between the Platform.sh REST API and our new  Source Operations feature , the components are there to let you build what you want, how you want, as you want. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             The monolith myth: Why all-in-one tech suites aren't the solution \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Multisite on Platform.sh: the how and why \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Admiral: How to keep your fleet afloat \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "New Services Page: more shininess, as promised ", "url": "https://platform.sh/blog/2019/new-services-page/", "documentId": "1d4c7e2b3359fbf6a5aabb1b8b71a977c59604a1", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           New Services Page: more shininess, as promised \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chad Carlson \n                  \n                   Technical Writer \n                  \n                  \n                 \n            \n          \n         \n         15 Oct 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     The Services Page \n       \n         Routes \n         Applications \n         Services \n       \n     \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         In April, we introduced our  shiny new management console , a long-time effort meant to provide you with a clean and intuitive interface to interact with and manage your projects. \n We\u2019re proud of what we\u2019ve done so far, but it\u2019s a software project like any other after all\u2014always evolving behind the scenes. In that same announcement, we told you more would be coming to the console. So today, we\u2019re happy to announce the brand new Services Page, giving you access to more information about your services, for every environment, right from your management console. \n The Services Page \n The new management console exposed new information about every one of your environments. You could view every push, whether you were using the project as your primary remote repository or mirroring an existing remote using an integration. Each backup was available for restore, and you could access fine-grained control over how an environment inherits its variables and user access permissions from its parent. \n One of the newer features packaged with the new console was our Service Graph. The Graph was always meant to provide a high-level picture of your cluster, so that you could see how each of your containers related to and communicated with each other at a glance. We want to provide more information about your applications, about your codebase and its configuration on Platform.sh, directly visible in the console, and this was a first step toward doing that. \n \n The Services Page provides even more information about each of your containers. But first, let\u2019s clarify what we mean by services. At Platform.sh, despite the fact that we provide managed services like MariaDB and Elasticsearch that can be easily added to a project and configured as part of your cluster, there\u2019s  little difference, in principle, between a runtime, a service, or a route container. Because of this, we\u2019ll often refer to any container in a cluster\u2014including each application container you create\u2014as a service container. That\u2019s why we called it a Service Graph, and now, the Services Page. \n At the top of the page within each Platform.sh environment, you\u2019ll see a new tab labeled \u201cServices.\u201d Selecting that tab will introduce you to a whole new area of information about how your routes, services, and applications are currently configured for the environment. Each of your application, service, and route containers are visible both in the same Service Graph on the Overview page and as a list. Selecting an individual container will provide more information about that container. \n Routes \n The  router  container is the first listed in both the tree and list view of your environment. \n \n From here, you\u2019ll be able to view information about each route configured in your  routes.yaml  file. Each redirect and upstream route is listed, along with its  caching behavior , and its  Server Side Includes  settings. \n Applications \n Each  application  container in the environment is also available from the Services Tab. \n \n The first \u201cOverview\u201d section gives you some metadata information regarding each application. This section will tell you the size of the app container, the amount of persistent disk you have allocated for it, the number of active workers and cron jobs, as well as the command to ssh into that container. \n You can then select the \u201cCrons\u201d tab to see more information about the application\u2019s cron jobs. \n \n You\u2019ll be able to view its status, the last time it was run, and the command itself. Finally, the \u201cConfiguration\u201d tab provides a summary of that application\u2019s configuration, pulled from your  .platform.app.yaml  file. \n \n Services \n Each  service  container in the environment is listed after your applications. The \u201cOverview\u201d tab lets you view how much disk, if any, has been allocated for the service, and the size of the container. \n \n The \u201cConfiguration\u201d tab lets you view some of the configuration information for the service container, pulled straight from your  services.yaml  file. \n \n At Platform.sh, we want to make the management console a key resource in your development workflow by adding features that enable you to easily observe and test your configurations as they develop. \n For teams of developers, having more information front and center can help to keep everyone on the same page. Solo operations aren\u2019t lost on that benefit, either, because the console can become just as much of a reference for how your application works as the codebase itself. Change your configuration when you need to and observe its effects straight away. Otherwise, view it at a glance, and get on with innovating your applications. \n Every feature we release for the console has this in mind, so stay tuned for what\u2019s to come. This is, as they say, only the beginning. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Some Platform.sh customer sites may be redeployed due to issues with Let\u2019s Encrypt certificates ", "url": "https://platform.sh/blog/2020/lets-encrypt-certificate-bug/", "documentId": "ce3f352b5b811ab6846d5f3432f291766d2d0bd9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Some Platform.sh customer sites may be redeployed due to issues with Let\u2019s Encrypt certificates \n         \n\n        \n         \n            \n              \n          \n         \n         03 Mar 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Early on March 3, 2020, Let\u2019s Encrypt  announced the discovery  of a bug in their certificate authority code. As a result, they will be revoking a number of certificates on March 4th, starting at 00:00 UTC.  Since Platform.sh provides customers with automated TLS certificates via the Let\u2019s Encrypt service, that action has a potential downstream effect on some of our customers.  As a result, Platform.sh will be regenerating certificates for those environments that will be affected by the Let\u2019s Encrypt bug. \n We will be identifying affected projects hosted on Platform.sh and triggering a rolling redeploy on them over the next 24 hours.  If your project is affected and you are using one of our auto-issued certificates, you will see a brief, momentary outage typical of a redeploy when that happens.  If you are not affected, there will be no impact on you.  In either case, you do not need to do anything yourself. \n If you provided your own certificate for your production site that was issued by Let\u2019s Encrypt, you may need to regenerate it and provide a new certificate yourself.  Let\u2019s Encrypt has provided a  tool  to help determine if your certificate is affected. \n For updates on this or any other Platform.sh maintenance issue, please follow our  Status Page . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Voil\u00e0! You\u2019re now a distributed workforce ", "url": "https://platform.sh/blog/2020/survival-guide-for-efficient-remote-work/", "documentId": "2047c102131ff929f8e188caec3c9fb773c02b25", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Voil\u00e0! You\u2019re now a distributed workforce \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Fred Plais \n                  \n                   CEO \n                  \n                  \n                 \n            \n          \n         \n         13 Mar 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     A Survival Guide for managers who need to drive a company that became remote overnight \n     Don\u2019t try to replicate your in-office culture as a remote company \n     Trust your people \n     Give your team the tools to get their work done \n     Start writing everything down \n     Be proactive about checking in with your team \n     Communicate the right way (or, \u201cHow to do Slack well\u201d) \n       \n         Here\u2019s what we\u2019ve learned: \n       \n     \n     Using stress to make your organization stronger \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         A Survival Guide for managers who need to drive a company that became remote overnight \n We\u2019ve built Platform.sh from the ground up as a distributed company and now have 180 employees\u2014almost all of them working from home. Over the last five years, we\u2019ve spent countless hours refining our processes and methodologies, our communication methods, and our tools. \n Now, with the spread of the COVID-19 virus, many companies will have to shift to a remote-first culture overnight. And there are going to be challenges. So here, in the most modest way, I\u2019d like to try and offer a few insights and advice on tricks, tools, and methods that worked for us to communicate with a team of people working from home offices around the world. Hopefully, what we\u2019ve learned can apply to your businesses  and help you save time and keep your business moving forward. \n Before I give my own advice I\u2019d like to direct you to  GitLab\u2019s handbook . A distributed company works, first, by writing things down. Overtime, that shared experience can become your own handbook or playbook. In the interim, GitLab has done a splendid job, and it is a great source of inspiration, especially right now. \n Don\u2019t try to replicate your in-office culture as a remote company \n It\u2019s not enough to switch from days packed with in-person meetings to video conferencing on Zoom or Meet. Reevaluate the need for meetings, and reserve synchronous communication for when it\u2019s truly necessary. \n Start thinking asynchronously, and in layers. For example: \n \n Slack or other chat for quick conversations close to real time, or \u201cnow-ish\u201d (read more about effective Slack etiquette below) \n Wikis and docs (we call our wiki Async) for discussions that can extend over days (or even weeks) to get feedback, seek consensus, explore ideas \n Playbooks and handbooks (we run ours on Git) to solidify practices and ideas over months or quarters \n \n Trust your people \n With schools, daycare, and eldercare facilities closing or under stress, many colleagues will have the added burden of managing kids, pets, or extended family commitments in addition to their normal work. \u201cNormal\u201d hours won\u2019t apply. \n Be flexible. Limit the need for synchronous meetings, and encourage your team to find schedules that work for them. If you have a culture that values \u201cbutts in seats\u201d and keeping eyes on employees, you\u2019re going to drive yourself (and them) crazy. \n Give your team the tools to get their work done \n If you\u2019re not already, start paying for a reasonable home office setup to ensure your team is as effective as possible. Offer to pay for Internet connectivity, and ensure that critical staff have backup options should their primary connections become overwhelmed by the legion of new remote workers and online students. \n Start writing everything down \n There\u2019s no more \u201cwater cooler\u201d or conference room whiteboard for spontaneous conversation. Start writing things down, and sharing aggressively. A remote company relies on making information available, well organized, and easily accessible. It also relies on transparency. \n Be proactive about checking in with your team \n You won\u2019t be able to \u201cmanage by walking around.\u201d Check-ins for remote teams have to be far more proactive and questions more direct as you won\u2019t be able to understand sentiment from facial expressions alone. This applies to any remote team, but is especially important in times of stress. \n Communicate the right way (or, \u201cHow to do Slack well\u201d) \n The question I most often get about running a remote company relates to communications tools and their use. There\u2019s no one software solution that does everything, which is why, as I note above, we have layers of communication, each with their own tools. But you might have noted that I haven\u2019t talked about email at all. That\u2019s by design. Except for communication with the world outside our company, we rely extensively on more flexible, timely, and transparent tools like chat. \n Here\u2019s what we\u2019ve learned: \n \n \n Open a private chat for your company (e.g.,Slack, Microsoft Teams, Mattermost, Matrix), right away.  You simply can\u2019t operate a remote company without a chat\u2014plain and simple. And have everyone on it. Email alone simply DOES NOT work for remote. Because overcommunication in a distributed company is key. And overcommunication over email is the worst thing that anyone can experience (other than a lethal virus). Because the chat system is both the coffee machine and the informal communication medium. And because no good work can happen without a coffee machine. \n \n \n Provide an \u201chow to\u201d with simple rules for your team.  Remember, the chat is there to be asynchronous; it\u2019s written, and it\u2019s permanent. Set some ground rules immediately: \n \n \n \n \n No \u201cHi.\u201d  If you want to say something, say it. Don\u2019t expect answers immediately. Don\u2019t say \u201cHi,\u201d wait for the person to acknowledge, and then ask the question. That is rule 0. \n \n \n Be explicit.  Acknowledge reception. Sometimes you need to be sure someone got a message. Be explicit. We use this for incident management, where someone would say, \u201cHey, David. We have an issue with Let\u2019s Encrypt revoking a few million certificates\u201d and David, as a response, actually types out stuff like \u201c@channel I am the Incident Commander for OP-17701 / Deploy Git 3.3.84 / Let\u2019s Encrypt cert issue.\u201d A lot of implicit signals get lost over chat. Make sure, when needed, to be very explicit. \n \n \n Channels creation.  Add to the usual teams channels (e.g.,#marketing, #finance, #hr) an #onboarding channel to help new employees; a #questions channels is great, too; a #random to keep the weekend debriefing chat only in one place;, a #the-outside-world for market insights. Because the normal socialization contexts of your employees have changed, a high number of channels is ok. Have some large ones. And some topic-specific ones. Coordination happens on big channels; detailed work on small ones. You\u2019ll figure it out. But too many channels is probably the correct baseline, a bit like power outlets. If your chat system supports threads, use threads. \n \n \n Use @Channel appropriately.  This command alerts the entire team, use it with purpose. Not that many things require the full channel\u2019s attention. \n \n \n Make most channels public. Train people to reduce the amount of direct messages they use. The usefulness of chat is to give people context.  Over-communication is key. \n \n \n \n \n Use video chat for synchronous meetings.  Apply the same rules to video chat as you do to meetings. Bring a written agenda to the table (we find a shared Google doc to be very effective). Make sure notes are taken. Reserve meetings for decision making, management sync-up points, and crisis management. Minimize those. Keep them short. Video calls are less effective than in-person meetings. Remember, in this context, people will probably be home, with kids jumping up and down. The rules of decorum change. Over-communicating on chat is excellent. Over-communicating on video will kill your productivity. \n \n \n Never assume everybody will read every word you wrote in every channel.  Make sure that stuff ends up in formats people can actually grok. We like to produce short slide decks to capture decisions. Longer document formats to capture longer conversations. Caution: don\u2019t think your chat can become your ticketing system. There\u2019s no accountability there. If you\u2019re used to assigning tasks to people verbally, don\u2019t bet on chat to replace that. For ticketing, try systems like Jira (most of our teams use that), Trello (some of our teams), Basecamp, or whatever works best for your organization. \n \n \n Using stress to make your organization stronger \n The COVID-19 situation won\u2019t last forever, and eventually things will return to normal. You have the opportunity to see this as a learning experience, and one that can make your team stronger and more resilient. Maybe you\u2019ll find it creates new opportunities to hire people where you didn\u2019t think you could before. And even grow into a distributed organization, as we did at Platform.sh. \n This challenging health crisis may well be an opportunity for positive change in your organization. Remote is more resilient. Remote is more eco-friendly. Remote enables more diversity. Stay safe! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Ready to have fun? Try Kotlin and Spring! ", "url": "https://platform.sh/blog/2019/ready-to-have-fun-try-kotlin-and-spring/", "documentId": "9d5a6f24935ef27365bb79bdd6096616782b5223", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Ready to have fun? Try Kotlin and Spring! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Otavio Santana \n                  \n                   Developer Relations \n                  \n                  \n                 \n            \n          \n         \n         15 Nov 2019 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Since our first  Java in the cloud with Platform.sh  series  post , we talked about various  frameworks  and support within the Java world. Like integration with  services  and tools such as  Spring  and  Jakarta EE/Eclipse MicroProfile . One important thing about Java? Its specifications. It\u2019s worth remembering that the JVM by its specification  does not read Java code , but bytecode. So within the JVM, it\u2019s possible to  run several languages . The purpose of this post is to present how the JVM can be multilingual using a very fashionable language\u2014 Kotlin . \n Kotlin is a cross-platform, statically typed, general-purpose programming language with type inference.  From the documentation : Kotlin is more concise. Rough estimates indicate approximately a 40 percent reduction in the number of lines of code. It\u2019s also more type-safe, e.g., support for non-nullable types makes applications less prone to NPEs. Other features including smart casting, higher-order functions, extension functions, and lambdas with receivers provide the ability to write expressive code as well as facilitating the creation of DSL. Designed to interoperate fully with Java, the JVM version of Kotlin\u2019s standard library depends on the Java Class Library, but type inference allows its syntax to be more concise. \n Show me the code \n To illustrate how Kotlin works, we\u2019ll create a smooth CRUD application to store cities into a MySQL database. We\u2019ll create a city CRUD with Spring Boot, where the City entity has three fields: name, country, and ID. \n To create your first project with Kotlin, we\u2019ll set Maven as build automation tools, and, as usual, we\u2019ll set the dependencies. We\u2019ll also need to set the plugin to enable  Kotlin code  in our project. As you can see below, inside the build tag, the  Kotlin plugin  compiles the Kotlin code. \n <?xml version=\"1.0\" encoding=\"UTF-8\"?> \n <project   xmlns= \"http://maven.apache.org/POM/4.0.0\" \n\t xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" \n\t xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > \n\t <modelVersion > 4.0.0 </modelVersion> \n\t <groupId > sh.platform.template </groupId> \n\t <artifactId > template-spring-kotlin </artifactId> \n\t <version > 0.0.1 </version> \n\n\t <parent > \n    \t <groupId > org.springframework.boot </groupId> \n    \t <artifactId > spring-boot-starter-parent </artifactId> \n     \t <version > 2.2.0.RELEASE </version> \n\t </parent> \n\n\t <properties > \n    \t <jayway-rest-assured.version > 2.9.0 </jayway-rest-assured.version> \n    \t <kotlin.version > 1.3.50 </kotlin.version> \n    \t <httpclient.version > 4.5.8 </httpclient.version> \n    \t <platform.sh.version > 2.2.2 </platform.sh.version> \n\t </properties> \n\n\t <dependencies > \n    \t <dependency > \n        \t <groupId > sh.platform </groupId> \n        \t <artifactId > config </artifactId> \n        \t <version > ${platform.sh.version} </version> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-data-jpa </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-web </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > com.fasterxml.jackson.module </groupId> \n        \t <artifactId > jackson-module-kotlin </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.jetbrains.kotlin </groupId> \n        \t <artifactId > kotlin-reflect </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.jetbrains.kotlin </groupId> \n        \t <artifactId > kotlin-stdlib-jdk8 </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > mysql </groupId> \n        \t <artifactId > mysql-connector-java </artifactId> \n    \t </dependency> \n    \t <dependency > \n        \t <groupId > org.springframework.boot </groupId> \n        \t <artifactId > spring-boot-starter-test </artifactId> \n        \t <scope > test </scope> \n    \t </dependency> \n\t </dependencies> \n\n\t <build > \n    \t <finalName > spring-kotlin </finalName> \n    \t <sourceDirectory > ${project.basedir}/src/main/kotlin </sourceDirectory> \n    \t <testSourceDirectory > ${project.basedir}/src/test/kotlin </testSourceDirectory> \n    \t <plugins > \n        \t <plugin > \n            \t <groupId > org.springframework.boot </groupId> \n            \t <artifactId > spring-boot-maven-plugin </artifactId> \n        \t </plugin> \n        \t <plugin > \n            \t <artifactId > kotlin-maven-plugin </artifactId> \n            \t <groupId > org.jetbrains.kotlin </groupId> \n            \t <configuration > \n                \t <args > \n                    \t <arg > -Xjsr305=strict </arg> \n                \t </args> \n                \t <compilerPlugins > \n                    \t <plugin > spring </plugin> \n                    \t <plugin > jpa </plugin> \n                    \t <plugin > all-open </plugin> \n                \t </compilerPlugins> \n                \t <pluginOptions > \n                    \t <option > all-open:annotation=javax.persistence.Entity </option> \n                    \t <option > all-open:annotation=javax.persistence.Embeddable </option> \n                    \t <option > all-open:annotation=javax.persistence.MappedSuperclass </option> \n                \t </pluginOptions> \n            \t </configuration> \n            \t <dependencies > \n                \t <dependency > \n                    \t <groupId > org.jetbrains.kotlin </groupId> \n                    \t <artifactId > kotlin-maven-allopen </artifactId> \n                    \t <version > ${kotlin.version} </version> \n                \t </dependency> \n                \t <dependency > \n                    \t <groupId > org.jetbrains.kotlin </groupId> \n                    \t <artifactId > kotlin-maven-noarg </artifactId> \n                    \t <version > ${kotlin.version} </version> \n                \t </dependency> \n            \t </dependencies> \n            \t <executions > \n                \t <execution > \n                    \t <id > kapt </id> \n                    \t <goals > \n                        \t <goal > kapt </goal> \n                    \t </goals> \n                    \t <configuration > \n                        \t <sourceDirs > \n                            \t <sourceDir > src/main/kotlin </sourceDir> \n                        \t </sourceDirs> \n                        \t <annotationProcessorPaths > \n                            \t <annotationProcessorPath > \n                                \t <groupId > org.springframework.boot </groupId> \n                                \t <artifactId > spring-boot-configuration-processor </artifactId> \n                                \t <version > ${project.parent.version} </version> \n                            \t </annotationProcessorPath> \n                        \t </annotationProcessorPaths> \n                    \t </configuration> \n                \t </execution> \n            \t </executions> \n        \t </plugin> \n    \t </plugins> \n\t </build> \n </project> \n The configuration is ready. The first step in the code will be the Entity class: City. Kotlin has the  data class , whose primary purpose is to hold data, such a class\u2019s standard functionality; utility functions are often mechanically derivable from the data. \n The scope of this data class is to compile and generate several methods, such as equals, hashCode, and ToString automatically to you. \n import   javax.persistence.Entity \n import   javax.persistence.GeneratedValue \n import   javax.persistence.Id \n\n @Entity \n data   class   City ( \n    \t var   name :   String   =   \"\" , \n    \t var   country :   String   =   \"\" , \n    \t @Id   @GeneratedValue   var   id :   Long ?   =   null ) \n To make the integration between the data class entity and the database go smoothly, we\u2019ll use the Spring Data repository interface. \n import   org.springframework.data.repository.CrudRepository \n\n interface   CityRepository   :   CrudRepository < City ,   Long >   { \n } \n The last frontier between the code and the HTTP request is the controller class. As you can see, the  CityController  is pretty similar to the Java class. At the constructor of the  CityController , we set the repository as a read-only variable you can see with the `val\u00b4 keyword. Each function has the \u00b4fun\u00b4 keyword, and there are  several ways  to create it; you can choose any function that you want\u2014as long as you have fun with it! \n import   org.springframework.web.bind.annotation.* \n\n @RestController \n class   CityController ( private   val   repository :   CityRepository )   { \n\n\t @GetMapping ( \"cities\" ) \n\t fun   findAll ( ) :   Iterable < City >   { \n    \t return   repository . findAll ( ) \n\t } \n\n\t @GetMapping ( \"cities/{id}\" ) \n\t fun   getDeveloper ( @PathVariable   id :   Long ) :   City   = \n        \t repository . findById ( id ) . orElseThrow   {   IllegalArgumentException ( \"City does not exist\" )   } \n\n\t @DeleteMapping ( \"cities/{id}\" ) \n\t fun   delete ( @PathVariable   id :   Long )   { \n    \t repository . deleteById ( id ) \n\t } \n\n\t @PostMapping ( \"cities\" ) \n\t fun   add ( @RequestBody   city :   City )   { \n    \t repository . save ( city ) \n\t } \n } \n Kotlin and Platform.sh \n The DataSourceConfig class does a tight integration between Platform.sh and Spring. This class reads information from Platform.sh and returns DataSource to be available for use in the Spring container. To make the integration between Java code and Platform.sh more accessible, we have the  Java Config reader , with the possibility of mixing Java and Kotlin code in the same project. \n import   org.springframework.context.annotation.Bean \n import   org.springframework.context.annotation.Configuration \n import   sh.platform.config.Config \n import   sh.platform.config.MySQL \n import   javax.sql.DataSource \n\n @Configuration \n class   DataSourceConfig   { \n\n\t @Bean ( name   =   [ \"dataSource\" ] ) \n\t fun   getDataSource ( ) :   DataSource   { \n    \t val   config   =   Config ( ) \n    \t val   database   =   config . getCredential ( \"database\" )   {   MySQL ( it )   } \n    \t return   database . get ( ) \n\t } \n } \n Platform.sh structure \n The Java application is ready to go! The next step is to set the Platform.sh files required to manage and deploy the demo. Every application you deploy on Platform.sh is built as a virtual cluster, containing a set of containers. There are three types of containers within your cluster: \n \n One Router (.platform/routes.yaml). Platform.sh allows you to define the  routes . \n Zero or more service containers (.platform/services.yaml). Platform.sh allows you to completely define and configure the topology and services you want to use on your  project . \n One or more application containers (.platform.app.yaml). You control your application and the way it will be built and deployed on Platform.sh  via a single configuration file . \n \n The  services  file allows you to define the services, such as database, search engine, cache, and so on; in this project demo, it will be a  MySQL instance . The configuration files are the same as in t he first post . \n The application is now ready, so it\u2019s time to move it to the cloud with Platform.sh using the following  steps : \n \n Create a new  free trial account . \n Sign up with a new user and password, or login using a current  GitHub, Bitbucket, or Google account. If you use a third-party login, you\u2019ll be able to set a password for your Platform.sh account later. \n Select the region of the world where your site should live. \n Select the blank template. \n \n After this wizard, Platform.sh will provision the whole infrastructure to you and will offer a Git remote repository. Before access, remember to set the SSH keys. The Platform.sh Git-driven infrastructure means it will automatically manage everything your application needs to push it to the master remote repository. You only need to write your code\u2014including a few YAML files that specify your desired infrastructure\u2014then commit it to Git, and push. \n git remote add platform <platform.sh@gitrepository>\ngit commit -m  \"Initial project\" \ngit push -u platform master\n Code pushed will create both the Java application and a MySQL instance, and, when it\u2019s done, will return an IP address to the service. \n In this post demonstrating  Kotlin running in the cloud  with Platform.sh, we compared Kotlin code with Java code\u2014and you can now see how Kotlin is more simple in some aspects, using Java as the data-class type. Looking forward to more language clarity within the cloud JVM? Stay tuned for more news soon! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Scale your application with Spring and RabbitMQ \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "A note to Platform.sh customers about COVID-19 preparedness ", "url": "https://platform.sh/blog/2020/platformsh-covid-19-response/", "documentId": "2dbc4f6b5c3911bdb0e6240d14b6baab1cde3cad", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           A note to Platform.sh customers about COVID-19 preparedness \n         \n\n        \n         \n            \n              \n          \n         \n         17 Mar 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     We\u2019re remote-first, and resilient \n     Platform.sh has audited plans to ensure continuity \n     We\u2019ll have more for you in the coming days \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         In the wake of COVID-19, Platform.sh is fully operational and functioning at 100% reliability. We continue to closely monitor the impact of COVID-19 on our business and our customers. Our priority remains the health and safety of our team and our communities. \n To this end, we have gradually taken early specific actions to deal with the current situation since the beginning of March. We have: \n \n Canceled all domestic and international travel \n Closed our Paris office and mandated Paris-based employees to work from home \n Mandated employees in our Austin office to work from home \n Shared vital health instructions with all employees, including relaying specific recommendations from public health agencies \n \n We\u2019re remote-first, and resilient \n Platform.sh is resistant to workforce disruptions because we are geographically distributed and a 100% remote company, and we have been from the very beginning. Our employees that usually work from offices are frequently working remotely and can also  operate efficiently wherever they are. \n Our staffing model ensures that job functions are distributed geographically, so that even if large population areas are affected by COVID-19, adequate coverage of key business capabilities is ensured. Team members are cross-trained in standardized roles within their department, making each department tolerant of disruptions. \n Additionally, many personnel are trained in roles outside of their department, enabling them to shift to areas experiencing higher workload levels. Specifically, we are capable of re-assigning people between support and operations roles to ensure smooth operations for our customers. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n Platform.sh has audited plans to ensure continuity \n Platform maintains a SOC-2 and PCI audited Business Continuity Plan (BCP) and Disaster Recovery (DR) plan. This document establishes the plan used to recover Platform.sh services quickly and effectively following a service disruption that falls beyond the scope of our Incident Management process. \n Aside from employee laptops, we have no physical computing assets. Instead, we use cloud hosting Infrastructure as a Service (IaaS) providers such as Amazon Web Services (AWS), Google Cloud Platform (GCP), and others. These providers, like Platform.sh, have rigorous business continuity and disaster recovery plans. \n We are capable of deploying to all major cloud providers and we can, in short order, shift workloads to alternative platforms. Our employees do not rely on a single network provider and as such we do not anticipate overloaded networks would impede our capability to ensure smooth operations. \n Platform also has implemented a crisis management team that communicates using slack, pagerduty, and dedicated video conferences. A dedicated call tree of key personnels\u2019 contact details is maintained. We have also assembled contact information for all of our vendors as well as our business insurance providers. We perform a business impact analysis annually to ensure minimal disruption. \n We\u2019ll have more for you in the coming days \n In the coming days, and as the situation evolves, we will be communicating plans to further assist our customers and partners during this time of crisis. In the meantime, if you have any questions you can reach our support team through our  ticketing system , contact your account manager directly, or email us at  sayhello@platform.sh . You can also view our  Status page  for updates on Platform.sh services, including routine scheduled maintenance. \n \u2013 The Platform.sh team \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "The container is a lie! ", "url": "https://platform.sh/blog/2020/the-container-is-a-lie/", "documentId": "5cb4d105ab8ff68af1a7fb36d16ddd4e72548d82", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The container is a lie! \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         24 Mar 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     What is a process? \n     What is virtual memory? \n     Process management \n     Introducing Linux namespaces \n       \n         The UTS namespace \n         The mount namespace \n         IPC namespace \n         Process namespace \n         Network namespace \n         User namespace \n       \n     \n     Control Groups \n     Overlapping namespaces \n     Container abstractions \n     Orchestration \n     Read-only containers \n     Container portability \n     Containers at Platform.sh \n     Contrast with Docker \n     Conclusion \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         (This article was originally published in  php[architect]  magazine, in two installments.) \n As a general rule, lying to people is a bad idea.  People don\u2019t like dishonesty.  It\u2019s insulting to lie to a person and tends to destroy relationships both personal and professional. \n But computer software isn\u2019t people (thank goodness).  Virtually all software today is based on lies, very well-organized and effective lies.  Lies make modern computer systems possible. \n The latest generation of software deception is \u201ccontainers.\u201d Containers are all the rage these days: They make hosting more flexible and reliable;  they make development environments easier to set up;  they\u2019re \u201clike lightweight VMs\u201d;  and based on the marketing they also taste great and are less filling.  But\u2026 what are they, really? \n Here\u2019s the dirty little secret: They don\u2019t exist.  In Linux, there is no such thing as a \u201ccontainer.\u201d  It\u2019s all a lie.  The technology that underpins Platform.sh\u2019s hosting is simply a careful combination of lies, all the way down to the microchip.  That\u2019s the whole point! \n To get to the truth of containers, we need to start unwrapping those lies and see how a modern Linux-based operating system actually works.  Before we can talk about containers, we have to first talk about the very first lie of modern computing: multi-tasking. \n What is a process? \n At the most fundamental level, any modern computer is a rock (the CPU) that has been convinced to move electrons around in a specific way based on a long series of instructions.  Those instructions are all very low-level operations, but a long string of such instructions form a  program .  And the current instruction being executed is tracked in a special slot called the \u201cprogram counter\u201d (PC). \n Very often a program will need to wait if it\u2019s trying to communicate with another part of the computer, like a network port or disk drive.  In that time it\u2019s helpful for the CPU to be able to work on some other instructions while waiting.  That lets the computer pretend (lie!) that it\u2019s running two programs \u201cat the same time.\u201d \n The hardware of the CPU has a special relationship with one particular program, called an  operating system .  That special program is always the first to start, and among other things is responsible for \u201ccontext switching.\u201d  At regular intervals, the CPU will \u201ctick\u201d and register what\u2019s known as a  timer interrupt .  That causes the CPU to stop what it\u2019s doing and load a specific set of instructions out of the operating system into its active memory, then continue.  That specific set of instructions is known as the \u201ctimer interrupt handler.\u201d  There are other types of interrupts and handlers as well that aren\u2019t relevant to us at the moment.  The timer interrupt handler then picks a different program to load into the CPU\u2019s memory and lets it continue.  That whole process can happen thousands of times a second, giving the illusion (lie!) that the computer is running multiple programs at once. \n The part of the operating system responsible for that swapping in and out of different running programs is called the  scheduler .  And technically, each one of the running programs is called a  process .  In a system with multiple CPUs or multiple cores the same basic routine happens, but the scheduler has to keep track of multiple active instruction lists each with its own program counter. \n As an aside, a multithreaded program is a single process that can be thought of as having more than one program counter pointing at different instructions in the same program/process.  When the operating system context switches, it may activate one program counter or another within a given process. \n What is virtual memory? \n Of course, the programs don\u2019t know that they\u2019re all time-sharing the same CPU.  And they definitely don\u2019t know that they\u2019re all sharing the same system memory.  The program says to write to the memory at address 12345; but it doesn\u2019t really have address 12345.  The operating system is there! \n Instead, CPUs and operating systems conspire against processes and lie to them, letting them all think that they have a long list of contiguous memory addresses starting at 0.  Every program thinks it has that, but it really has a series of small, mostly contiguous chunks of memory all over the physical memory space of the computer.  The CPU translates the process-local memory address into the physical memory address and back again, with the program none the wiser.  This concept is known as \u201cvirtual memory.\u201d \n There are two key advantages to this memory lie-map: simplicity and security.  From the program\u2019s point of view, having to keep track of which memory belongs to it and which memory belongs to some other program is way too complex and hard.  The memory used by other programs could change at any moment, and no mortal programmer is going to be able to account for that manually.  By abstracting that problem away, it frees up the programmer from trying to avoid inevitable memory management mistakes. \n That mapping also provides a layer of security.  Most of the time, one program reading another program\u2019s memory is a security hole, and being able to write into another program\u2019s memory certainly is.  By not giving programs a way to even address each other\u2019s memory, it makes it much harder for one running program to corrupt another.  (Harder, but not impossible.  In languages with manual memory management, it\u2019s still possible to do with sloppy coding, which is one of the main sources of security problems in those languages.) \n Process management \n On a Unix-family operating system, processes are tracked in a hierarchy by what other process started them.  Any process can ask the operating system to start another process or to \u201cfork\u201d the running process into two processes that can then proceed \u201cin parallel.\u201d  The operating system itself doesn\u2019t have a process per se, but can be thought of as process ID 0 (or PID 0).  In Linux, PID 1 is a special process called  init , which is responsible for managing all other processes below it.  Various init programs have come and gone over the years, from the venerable  sysvinit  to  runit ,  upstart , and  systemd . \n Conceptually, then, the memory space of a modern Linux system looks something like Figure 1. \n \n    \n \n\n       \n         Figure 1 \n     \n   \n Each process has its own contained memory space and cannot directly touch any other process\u2019s memory space.  It can, however, ask the operating system to pass a message to another process for it, which allows processes to communicate with each other.  There are various mechanisms for that, but the most common is pipe files; that is, a fake file (lie!) that the operating system exposes that one process can write to in a stream and another process can read from in a stream.  That abstraction allows a program to remain ignorant of whether the process it\u2019s talking to is on the same computer or on a different computer over the network. \n What\u2019s important to note here is that every process can know about every other process.  They all can ask the operating system for information about the computer they\u2019re running on, such as what file systems are available, what users are on the system and what permissions they have, what the host name of the computer is, what local or network devices are available, and so on.  And the operating system will give the same answer to each process that asks. \n Introducing Linux namespaces \n Everything we\u2019ve said up until now applies more or less the same to any reasonably modern operating system, give or take a few implementation details.  The rest of this article is very specific to Linux (meaning the Linux kernel specifically, not the full GNU/Linux platform), as from here on much varies widely between different systems. \n Starting in the mid to late 2000s, the Linux kernel started getting new and fun ways to lie to the processes it\u2019s managing.  The last bits and pieces didn\u2019t fully work until as late as 2014 or even 2015, but by now they\u2019re fairly robust.  Also, Linux is somewhat unique in that it implemented these features piecemeal, which allows programs to leverage them individually if necessary. \n Most of these features fall under the umbrella term \u201cnamespaces.\u201d  Similar to namespaces in mainstream programming languages, Linux namespaces provide a way to segment groups of processes from each other.  More specifically, Linux namespaces allow the operating system to lie to different sets of processes in different ways about different things.  And because processes are in a hierarchy, lying to one process also means lying to all of its child processes in the same way automatically (unless those have been moved to a different namespace explicitly). \n Overall, there are six types of namespaces that the Linux kernel supports. \n The UTS namespace \n The simplest type of namespace is the one that controls the hostname of the computer.  There are three system calls that a process can make to the operating system to get and set its name:  sethostname() ,  setdomainname() , and  uname() .  Normally this just sets a global string, but by placing one or more processes into a UTS namespace those processes have their very own \u201clocal global string\u201d to set and read. \n In practice, your  /etc/hostname  file may say the computer\u2019s name is \u201chomesystem,\u201d but by placing your MySQL process into a namespace you can make the MySQL process think the hostname is \u201cdatabase,\u201d while the rest of the computer still thinks it\u2019s \u201chomesystem.\u201d  That\u2019s right, it\u2019s easy to lie to a program about its very identity! \n (Fun fact: The name UTS comes from the name of the struct in the source code that  uname()  uses,  utsname , which in turn is an acronym for \u201cUnix Time-sharing System.\") \n \n    \n \n\n       \n         Figure 2 \n     \n   \n The mount namespace \n The oldest namespace by far is the mount namespace, dating all the way back to 2002.  The mount namespace lets the operating system present a different file system to a different set of processes. \n The  chroot()  command, which has been with Linux since basically forever, allows a selected process (and its children) to view a specific subset of the file system as though it were the whole file system.  These \u201cchroot jails\u201d were often used to try and segment a system so that certain processes were ignorant of what else was on the same computer.  There is still one large file system tree, however.  With a mount namespace, it\u2019s possible for there to be completely different file system trees that do not overlap at all running at the same time; each mount namespace sees, and can possibly modify, only one of those trees. \n It gets weirder, too!  Not only does that mean that for two given processes the root of the file system could be two completely different disk partitions, it means they could be two completely different disk partitions but also then both mount a third partition in different places in the two trees.  Something kinda like Figure 3. \n \n    \n \n\n       \n         Figure 3 \n     \n   \n Also, bear in mind that any block device or pseudo-block device can be mounted into a file system.  It could be a partition on a hard drive, but it could just as easily be a network drive on another computer, or a local removable device like a DVD or USB stick, or a file system image file that\u2019s sitting on\u2026 another file system. \n The potential for lies and deception here is mind boggling\u2026 \n IPC namespace \n This one is a little obscure; recall earlier that we said processes could talk to each other through the operating system in various ways.  Collectively that is known as Inter-Process Communication (IPC), and there are standard ways to do that.  Most of them are really just message passing through queues, and in fact there are standard APIs in POSIX (the official standard that makes up any low-level *nix system) for them.  IPC namespaces let the kernel separate those out, too, and deny access to some of those IPC channels to certain processes, depending on their namespace. \n Process namespace \n Now we get to the really interesting one.  We said before that the process with PID 1 is always init, and all other processes are children of init, or children of children of init, etc.  Every process gets a unique numeric PID to keep track of it. \n You can have a look at the processes running on your system with the  ps  command.  It has many possible switches and toggles, but we\u2019ll discuss just a few here. \n Run  ps -A  to get a list of all processes running on the system.  It should be a fairly long output, but if you scroll to the top of the list you will see a pid 1, with a CMD column that indicates what init program your system is using.  For example, the beginning of the  ps  output for my Ubuntu system reads: \n $ ps -A\n PID TTY          TIME CMD\n    1  ?        00:00:14 systemd\n    2  ?        00:00:00 kthreadd\n    4  ?        00:00:00 kworker/0:0H\n    6  ?        00:00:03 ksoftirqd/0\n    7  ?        00:05:36 rcu_sched\n    8  ?        00:00:00 rcu_bh\n    9  ?        00:00:00 migration/0\n   10  ?        00:00:00 lru-add-drain\n   11  ?        00:00:00 watchdog/0\n   12  ?        00:00:00 cpuhp/0\n   13  ?        00:00:00 cpuhp/1\n   14  ?        00:00:00 watchdog/1\n   15  ?        00:00:00 migration/1\n Although there\u2019s over 300 processes total.  Running  ps xf  will show all processes for your own user and show the hierarchy of what process is a child of another process.  Similarly,  ps axf  will show all processes for all users on the system, including their hierarchy. \n That\u2019s very useful information, but there\u2019s a potential issue here: You can see exactly what processes any other user on the system is running!  Is that a security issue?  On your laptop probably not, but on any truly multi-user system it could be.  Any malicious user (or a program by a malicious user) can trivially see what\u2019s running and its ID, which makes it easier to attack if the attacker knows another vulnerability to use. \n Enter PID namespaces.  PID namespaces are essentially what the name implies: They\u2019re a separate namespace for processes IDs.  When you create a new PID namespace, you specify one process that will be PID 1 in that namespace.  That could be another instance of your init program (systemd in the example above), or it could be any arbitrary process.  That process may be known as PID 345 to the \u201cglobal\u201d namespace, but it\u2019s also known as PID 1 within its scoped namespace.  If it then forks off another process, that process will also get two PIDs: 346 according to the parent namespace and 2 within its scoped namespace. \n However, and here\u2019s the really important part, that process won\u2019t know about both PIDs.  It\u2019s running in a namespace that has only 2 processes, and it will know itself as PID 2.  That is the only PID it will know about, and if it asks the operating system for a list of all processes on the system it will see only those 2 in its own namespace (lie!).  It cannot initiate communication with any process outside of its namespace.  It doesn\u2019t even know they exist.  A process from the parent namespace, however, can see and initiate communication with a process in the child namespace. \n If that\u2019s hard to wrap your brain around, see Figure 4 for a visual version. \n \n    \n \n\n       \n         Figure 4 \n     \n   \n Of course, because so much of process management is managed through the /proc pseudo-file system, things can get weird if the process namespace isn\u2019t aligned with the mount namespace.  Whether that\u2019s good-weird or bad-weird depends on how you set it up. \n Network namespace \n A network namespace is similar to the mount namespace, in that it allows for the creation of an entirely separate collection of resources.  In this case the resources are network devices rather than a file tree.  Unlike the mount namespaces, however, they cannot share these resources; a network device can be in one and only one namespace at a time.  Moreover, physical network devices (those that correspond to a physical ethernet card or WiFi adapter) can only remain in the root namespace, and thus a new network namespace begins life with no devices at all, and thus no connection to anything.  (Technically it has a loopback device, but even that is disabled by default.) \n However, Linux can create any number of virtual network devices (lies!), which can be placed in a network namespace.  Virtual network devices can also be created in pairs that essentially pipe from one to the other, even across a namespace boundary. \n That allows for this clever bit of deception: \n \n Create a new network namespace, A. \n Create a pair of virtual network devices peered together.  We\u2019ll call these  veth0  and  veth1 . \n Keep  veth0  in the root namespace, and move  veth1  in the new network namespace. \n Assign  veth0  the IP address 10.0.0.1 and  veth1  address 10.0.0.2.  These two network devices can now connect to each other, because they\u2019re peered together by the kernel. \n Assign one or more processes to this new network namespace, say, an nginx process. \n \n That nginx process now starts listening to port 80 on veth1, address 10.0.0.2.  Back in the global namespace we set up routing and firewall rules (e.g., NAT) to forward requests to port 8888 to 10.0.0.2:80.  That will cause incoming requests on port 8888 to get forwarded through veth0 to veth1 on port 80, right to where nginx is listening for it. \n See Figure 5 for the graphical version. \n \n    \n \n\n       \n         Figure 5 \n     \n   \n User namespace \n Finally, the namespace that puts the icing and cherry on top.  All processes, in addition to their PID, have an associated user and group.  Those user and group markers, in turn, have an impact on access control; a process cannot force-kill another user\u2019s process, for instance, unless it\u2019s owned by root. \n With user namespaces, any process can now create a new user namespace, inside of which that process is owned by any user desired, including root.  That means just as a process can have an in-namespace PID and an out-of-namespace PID, a process can have an in-namespace user that is distinct from its out-of-namespace user.  And its in-namespace user can be root, which gives it root access to all other processes in the namespace, even if it\u2019s just an ordinary user process in the parent namespace.  What\u2019s more, if a process is owned by root in the parent namespace then it can define a mapping of  any  users in the parent namespace to users in the child namespace. \n If that paragraph made your brain flip over, you\u2019re not alone.  Figure 6 may make it easier to follow. \n \n    \n \n\n       \n         Figure 6 \n     \n   \n The important take-away here is that it\u2019s now possible for one process to have supreme root power over a select group of other processes, rather than all-or-nothing across the whole system.  There are plenty of other conspiracies you can hatch to give processes both internal and external users, but selective-root is the really fun one. \n Control Groups \n The other piece of the puzzle is not so much about deception but about tweaking the scheduler.  As we said before, the kernel, via the scheduler, switches different processes in and out of the CPU from time to time to simulate multi-tasking.  How does it decide which processes are allowed to spend more time or less time on their CPU timeshare?  There are many automated ways of allocating time more or less fairly, but they all assume that no particular process is going to be especially greedy.  After all, a program can trivially break itself into multiple processes and therefore get extra pieces of the CPU pie. \n The same applies to memory usage.  The computer has a fixed amount of physical memory, and when programs fill it up with code and data the operating system will begin swapping seemingly less-used portions of it out to a scratch space on disk (called the \u201cswap device\u201d or \u201cswap file,\u201d depending on the implementation).  But that still means one greedy or inefficient program can elbow-out other processes simply by asking for lots of memory at once. \n Control groups are the Linux answer to that problem.  Control groups work by creating a parallel hierarchy of processes, independent of the creation hierarchy used by namespaces.  Processes can then be associated with one and only one leaf in that hierarchy. \n Any node in that hierarchy can have one or more \u201ccontrollers\u201d associated with it.  There are a dozen or so controllers currently implemented, some of which just track resource usage, some of which limit it, and some of which do both.  The two most important controllers for our purposes are CPU and memory, which can cap the total CPU usage or memory usage of a tree of processes. \n So, for example, we can create a control group of processes, assign all of the nginx processes to it, and put a controller on it that limits its CPU usage to 25% and restricts them to two of the four CPU cores in the computer.  Then we can make another control group, assign the MariaDB process to it, and restrict it to 100% of one of the remaining CPUs.  Now, while it is still possible for a bad query to cause MariaDB to eat up all of its available CPU time, it won\u2019t impact the running nginx processes.  They\u2019re segregated to different CPUs and limits on usage, so while MariaDB may slow to a crawl nginx will keep running, as well any other processes in the top-level control group.  (See Figure 7.) \n \n    \n \n\n       \n         Figure 7 \n     \n   \n A process in a control group will still know that it\u2019s in a control group and that it\u2019s getting only a portion of the total system resources.  Unless the process is owned by root, however, it won\u2019t be able to change that configuration. \n Overlapping namespaces \n An important point to note is that in Linux, unlike most older Unixes, each of these namespaces and control groups are distinct.  It\u2019s entirely possible for processes 2, 3, and 4 to share a mount namespace, while process 3 is also in a user namespace and process 4 is in a UTS namespace.  And then you can place processes 2 and 4 in a very CPU-limited cgroup together, while process 3 gets as much CPU time as it wants. \n Such a configuration, while possible, is also quite complex.  While some thoroughly fascinating functionality could result, it could also result in a completely unusable mess.  More typically only a few namespace features are used to obtain very specific segmentation goals. \n The most practical and applicable combination, though, is \u201call of the above!\", as seen in Figure 8.  Consider, we can now create a group of processes that: \n \n    \n \n\n       \n         Figure 8 \n     \n   \n \n Only know about each other, not any other processes on the system. \n Have one that thinks it has root access, and the other processes think is root, but doesn\u2019t have root on the whole system. \n Have their own file tree, from / on down, and no way to access any other file systems. \n Have their own host name. \n Have their own IP address they think they\u2019re running on, with their own set of ports, even their own IP routing rules for network access. \n Have no way of accessing processes outside of that group or even knowing that there are processes outside of that group. \n Will, collectively, use no more than 25% of CPU time and no more than 256 MB of RAM. \n \n As far as a process in that group is concerned, what\u2019s the difference between that and running on its own complete computer?  In practice, very little.  It gives almost all of the isolation power of using virtual machines but with only a tiny fraction of the overhead; really, the only overhead is lookup tables for the kernel to keep track of what lies it\u2019s telling which process.  The only limitation is that there\u2019s still only a single kernel instance running and controlling it all. \n In fact, this \u201call of the above\u201d combination of lies is so commonly desired that it even has a common name: Containers. \n In the end, that\u2019s all a \u201ccontainer\u201d is: It\u2019s a short-hand name for \u201cuse all the namespaces lies at the same time to trick processes into thinking they\u2019re running on their own computer when they\u2019re really not.\u201d  And that ends up being extremely powerful. \n Container abstractions \n While the kernel offers all sorts of APIs to manipulate namespaces and processes at a fine-grained level, that is often not especially helpful when trying to build a system at a more coarse-grained level, such as a macro \u201ccontainer.\u201d  As is common practice in programming, therefore, various other tools have sprung up to abstract those low-level APIs into easier to use higher-level APIs.  There are many such systems written in a variety of different languages.  Really, any language that is capable of issuing libc commands can work. \n There are many such abstraction tools, all of which do more or less the same thing.  A few you  might have heard of are listed below. \n \n LXC (for LinuX Containers, written in C):  https://linuxcontainers.org/ \n Docker (written in Go):  https://www.docker.com/ \n lmctfy (short for Let Me Contain That For You):  https://github.com/google/lmctfy/ \n Rocket / CoreOS:  https://github.com/coreos/rocket \n Vagga (written in Rust):  https://github.com/tailhook/vagga \n Bocker (written in Bash):  https://github.com/p8952/bocker \n \n An even larger list can be found on  http://doger.io/,  and at least Bocker is worth reviewing just to see how basic such a system can be. \n Docker is by far the most popular such container management tool, although it is neither the first nor most recent.  It just happened to be the new-and-cool option when the market decided it was \u201cready\u201d for containers.  Originally it was built as an additional layer on top of LXC, although it has since replaced its LXC dependency with its own library, called runC. \n Although a bit more low-level than most end users and system administrators would like, LXC is one of the most powerful options.  It also has bindings to further automate its capabilities using a variety of languages, including C, Python, Go, and Haskell. \n Regardless of the tool, all are simply abstractions around saying \u201cstart a process, create a bunch of namespaces on that process, and mount this filesystem into it.\u201d  That routine is generally called \u201cstarting\u201d a container. \n Orchestration \n Another layer of abstraction that is often used is \u201corchestration.\u201d  Orchestration is another abstraction layer on top of the container software.  In a general sense, it\u2019s simply code that coordinates copying file system images between multiple computers, calling the container software on each computer and telling it to start a container, and then instructing the container software how to configure that container (namely, what details to set up for the various namespaces and cgroups). \n In practice it\u2019s common to want to use multiple containers in tandem, communicating as if they were over a network when they\u2019re really just different processes on the same computer.  Setting that up manually is mostly straightforward but very tedious.  Orchestration systems automate the task of creating multiple containers and connecting them together with a nicer syntax.  Kubernetes is the big name in this space right now but many other examples exist, including Platform.sh itself. \n Read-only containers \n It\u2019s very common for container implementations to encourage or require the use of read-only file systems.  There are a variety of reasons for that.  For one, it\u2019s simply very efficient.  Linux is quite capable of taking a snapshot of a file system and producing a single file representation of it, which can then live on another file system.  (Think of \u201cISO\u201d filesystem images for CDs and DVDs.  Plenty of other similar formats are available.)  When creating a container, therefore, it\u2019s super easy to place its processes into a mount namespace, and then mount that file system image file as root within the mount namespace.  Now, any process in the container, by which we mean in that mount namespace, will see that file system as the entire universe. \n What\u2019s useful, though, is to make multiple copies of that container.  Two different containers (that is, mount namespaces) can use the same file system image as their root mount point.  If it\u2019s writeable, though, that raises all sorts of questions about how to synchronize writes between them.  What happens if a process in one container makes a change that is important to a process in the other container?  The answer is \u201cit\u2019s messy.\u201d \n If, however, that filesystem is read only, not only does it avoid any such synchronization issues, but it means the operating system needs only a single copy of it.  Two, three, or 30 mount namespaces (containers) can mount the same 10 GB file system image on their root directory, yet the operating system need only read data off it once.  And since it obviously doesn\u2019t need to load the entire filesystem into memory, that means the memory overhead for starting 30 containers with that same 10 GB file system is\u2026 a few KB of bookkeeping data inside the OS to keep its lies straight. \n Take that, virtual machines! \n Container portability \n The marketing around containers often likes to make references to shipping containers, which revolutionized the cargo industry by creating standard-sized boxes that clumsier objects could be put into, which could then be neatly stacked on ships, trucks, and airplanes.  The sales pitch often claims that a container is a standard format that can then run \u201canywhere,\u201d just like shipping containers. \n That marketing, is, unfortunately, not only wrong but entirely backwards.  It\u2019s yet another lie. \n Generally speaking, the file system snapshots, or \u201cimages,\u201d that we discussed before are configured to only work correctly when loaded by one specific container abstraction library.  They will often include not just a file system, but metadata that the abstraction library uses to decide what namespaces and cgroups to configure.  Should this container have a network namespace that allows outbound access?  On which ports?  What additional file systems should be mounted?  All of that metadata is in a library-specific format.  A Docker-built image will not work on Vagga or LXC, and vice versa. \n So if they\u2019re not really portable, what\u2019s the advantage? \n The advantage is from the inside.  Almost any meaningful program relies on hundreds of other programs and libraries.  These are generally installed by the Linux distribution at known fixed versions\u2026 or at least mostly known and mostly fixed versions.  They\u2019re patched all the time as bugs and security holes are fixed (or introduced).  When people talk about \u201cmaking production match staging,\u201d the long combination of possible versions of various libraries is what they\u2019re talking about.  Even a simple hello-world PHP script relies on Apache or Nginx, PHP-FPM, the PHP engine itself, PHP extensions, C libraries used by those extensions, and likely a dozen other things.  While in an ideal world the various different combinations of libraries would work fine, we all know reality is rarely ideal, and it can be maddeningly time consuming to find bugs introduced when the combination is different. \n What containers give you is the ability to bundle all of those libraries up together into a filesystem snapshot.  Almost invariably, one program (process) will start another by asking the operating system \u201cstart a new process using this file on disk.\u201d  If the \u201cdisk\u201d it knows about is a mount inside a mount namespace, and that mount is a filesystem image file, well, now you can tightly control the exact version of every dependency you put into that filesystem image.  The one notable exception is the kernel itself.  Everything else can be shipped along with your program. \n It\u2019s like static linking your entire computer!  Which means, yes, you\u2019re back to compiling things, even if writing in a scripting language like PHP or Node. \n What containers really buy you is the ability to ship not your application, but your application and all of its dependencies, pinned at a precise version.  When you then load that container on another computer, it will start a PID namespace, mount namespace, user namespace, etc., around the entire collection of dependencies you provide and (potentially) use cgroups to contain all of those processes to just a fragment of the resources on the actual hardware.  That filesystem image can also be reasonably small, since you know what tools you\u2019re going to need and can include just those select few.  The lie to your application is maintained; it doesn\u2019t know if it\u2019s running in a container or not, nor should it care. \n That\u2019s also why languages that compile to a single executable like Go (or Rust, depending on your settings) are well-suited to container setups.  They already bundle all of their dependencies into a single program, so the \u201cfilesystem full of dependencies\u201d you need is trivially small: often it\u2019s just the program executable itself. \n Because the overhead of each container is so small, running 50 copies of a container is no more expensive than running 50 copies of the same program without a container.  With cgroups it\u2019s possibly cheaper and certainly easier to keep them from bumping into each other.  That\u2019s in contrast to VMs where every instance adds not just a few running processes and some bookkeeping but completely duplicated copies of the Linux kernel, all user-space tools, and whatever program you are trying to run. \n Containers at Platform.sh \n There are numerous possible ways to set up all of this newfound flexibility, many of which are applicable in only certain situations.  As a practical example, let\u2019s look at how our container implementation here at Platform.sh manages containers for customers and how it differs from Docker, which is widely used for local development. \n Platform.sh treats container images as a build artifact.  That is, what\u2019s in your project\u2019s Git repository is not what is deployed to production.  Rather, we check out what\u2019s in Git, then run your \u201cbuild hook\u201d from the  .platform.app.yaml  file in your repository. That could include downloading dependencies with Composer, npm, Go modules, etc., as well as compiling Sass or Less files, minimizing JS scripts, or any other build commands you wish.  The end result is just \u201ca bunch of files on disk\u201d on a build server. \n That \u201cbunch of files on disk\u201d is then compressed into a squashfs file.  Squashfs is a compressed, read-only file system that is itself a single file on disk, much like an ISO image.  That \u201capplication image\u201d is then uploaded, along with the metadata derived from your configuration files, to one of the many VMs we have running. \n On the VM, then, we assemble a container.  Platform.sh uses LXC, rather than Docker, as it offers more low-level flexibility, on top of which we have our own coordination and orchestration software.  The first step is to create a new LXC container, which tells LXC to create a new init process (we use runit) with it its own mount, pid, UTS, network, and user namespaces. \n In that mount namespace we then mount a base image, as defined by the aforementioned metadata.  The base image is a squashfs file containing a minimal Debian installation with a user-selected language runtime and version: PHP 7.4, Python 3.8, or Go 1.14, for instance.  That\u2019s now the file system that any process in the container (that is, in all of those namespaces) will see.  And because it\u2019s a standard, common image, dozens of containers can be running on the same VM with almost no overhead. \n Next, the user-provided application image is mounted at a standard location, specifically  /app .  That contains all user code, which obviously will vary between different projects but is generally far smaller than the entire rest of the shared OS image.  Finally, the configuration metadata also defines various writeable mount points; those are part of a writeable network file system exposed for each container and mounted into the container\u2019s file tree wherever the configuration says to mount them.  The result is a file system that consists of one widely shared squashfs image, one application-specific squashfs image, and zero or more network file mounts. \n WIth the file system all assembled, the next step is setting up processes.  If an application runtime requires extra configuration, those configuration files are generated out onto a small, writable ramdisk (again, limited to that mount namespace).  For example, on PHP the  php.ini  file and PHP-FPM configuration will be generated into that directory.  On a Ruby container it would be different files.  All containers also include Nginx, so the  nginx.conf  file is written there as well.  The base image includes symbolic links to where those configuration files will be, allowing the runtime to find them.  (See Figure 9.) \n \n    \n \n\n       \n         Figure 9 \n     \n   \n LXC allows processes from the parent namespace to call into a container and execute an arbitrary command within the container (within all of the corresponding namespaces), which is how all of the control logic is built.  The final step is to tell the init process inside the container to start the few processes it needs: SSH, nginx, and PHP-FPM if on a PHP container.  A  ps axf  run from within one of these containers shows only the few processes that are part of the PID namespace of the container: \n $ ps axf\n PID TTY      STAT   TIME COMMAND\n    1  ?        Ss     0:06 init  [ 2 ]    \n   72  ?        Ss     0:06 runsvdir -P /etc/service log: .................................................................\n   78  ?        Ss     0:00   \\_  runsv ssh\n  105  ?        S      0:00   |     \\_  /usr/sbin/sshd -D\n 20516  ?        Ss     0:00   |         \\_  sshd: web  [ priv ]      \n 20518  ?        S      0:00   |             \\_  sshd: web@pts/0      \n 20519  pts/0    Ss     0:00   |                 \\_  -bash\n 20605  pts/0    R+     0:00   |                     \\_  ps axf\n   79  ?        Ss     0:00   \\_  runsv nginx\n   99  ?        S      0:00   |     \\_  nginx: master process /usr/sbin/nginx -g daemon off ;  error_log /var/log/error.log ;  -c /\n  104  ?        S      0:00   |         \\_  nginx: worker process                                                               \n   80  ?        Ss     0:00   \\_  runsv newrelic\n   81  ?        Ss     0:00   \\_  runsv app\n   89  ?        Ss     0:22       \\_  php-fpm: master process  ( /etc/php/7.3/fpm/php-fpm.conf ) \n That\u2019s it.  The VM the container is running on will have thousands of processes running, but inside this PID namespace there\u2019s only ssh, nginx, and PHP-FPM for PHP 7.3, plus some small coordination processes that runit uses.  The kernel will know those processes by both the pids listed above and some other system-wide PID, but from inside the container there\u2019s no way for us to find out what those are or even know that there are other processes, for that matter. \n Finally, the coordination software instructs the OS to place all of these processes into a cgroup to restrict their collective CPU and memory usage.  The level of restriction is based on the project\u2019s plan size. \n That takes care of the application itself.  A modern web application is more than just stand-alone scripts, though.  Depending on the application it could include a MySQL or MariaDB database, MongoDB, a Redis database, Memcache, possibly a queuing server, and various other things.  That\u2019s controlled by the  services.yaml  file in the repository.  If the  services.yaml  files say \u201cthis project needs a MariaDB server, an Elasticsearch server, and a Redis cache server,\u201d then the coordination software will create three more containers, one for each of those services.  The process is essentially the same as for the application container except there is no application image to mount.  There\u2019s just a base image for the service (MariaDB, Elasticsearch, and Redis) and a writeable mount for the service\u2019s data files.  Otherwise the process is identical. \n Additionally, because each of those containers implies a new network namespace, none of them are able to talk to the outside world by default.  Instead, virtual network interfaces are created that allow only whitelisted connections between the containers on specific ports, meaning the application container can talk to the virtual port 3306 on the MariaDB container, but no other port.  And the MariaDB container has no way of talking to the Redis container or any container that doesn\u2019t connect to it first.  And so on. \n All told, the overhead of creating those four containers (meaning four UTS namespaces, four PID namespaces, four user namespaces, and four network namespaces) is minimal, maybe a second or two.  Compared to the time of the processes themselves actually starting, copying the application image to the VM, and the coordination software\u2019s bookkeeping, it\u2019s basically a rounding error. \n Because containers are so fast, being just a lookup table of lies, and because most of the filesystem is read-only, it becomes practical to handle new deployments the same way: Simply kill all of the processes involved and restart them.  But we can be smarter about it, too.  If, for instance, only the application code has changed, none of the backend services containers need to be completely terminated and restarted.  Just the file mounts on the application container are updated to point to a new version of the application image.  If a newer version of the base image is available (a new bug fix release of Node.js, for instance) or if the configuration changed and is now asking for a new version (to upgrade from PHP 7.3 to 7.4), then the application container is stopped completely and restarted with the new base image.  In either case, the service containers don\u2019t need to do anything until their configuration changes as well. \n Another advantage of the lookup table of lies is that creating multiple copies of a container takes only minimal extra time.  Creating a new testing copy of the entire code base, services and all, is simply a matter of creating more namespaces for the kernel to lie about and mounting the exact same file system images again in the new mount namespace. \n The way Platform.sh handles it is that every branch in Git corresponds to an \u201cenvironment,\u201d that is, a set of containers for the application and related services.  Any branch can produce an application image, which can then be mounted into a new container (namespace) with little additional resource usage. \n The tricky part is the writeable filesystem for each container.  That\u2019s handled by a volume-level copy-on-write process, conceptually very similar to PHP\u2019s copy-on-write way of handling variables in memory.  That allows the data to be replicated to a new container (mount namespace) in essentially constant time, forking the data as it gets modified over time.  That process is handled independently of Linux namespaces, though, so we won\u2019t delve into it here. \n Also bear in mind that the Linux kernel is really really good at avoiding loading data into memory it doesn\u2019t need to.  If there\u2019s 100 containers in 100 sets of namespaces, running 100 copies of nginx off of the same read-only file system image\u2026 Linux won\u2019t load 100 copies of the nginx binary into memory.  It will load the parts of the binary it actually needs into memory once, and then when it lies to each process about its virtual memory space it will also lie to it about having its own copy of the application code.  That means 100 copies of nginx don\u2019t take 100 times as much memory; they take maybe 25% more memory for each instance\u2019s own data.  (The actual amount will vary widely depending on how much actual runtime data the application stores in variables.) \n The net result is that a single beefy VM, running a single Linux kernel, can run dozens of user-defined application containers, dozens of MariaDB instances, a dozen Apache Solr instances, a smattering of RabbitMQ instances, and a Redis index or two, all at the same time; all of those applications will think, if they query the operating system, that they\u2019re the sole application running on their own computer; and all of them will be able to access only a select, whitelisted set of other \u201csystems\u201d (containers), in whitelisted ways. \n All because Linux got really good at lying. \n Contrast with Docker \n Docker, by contrast, is set up to run a single process in each container (set of namespaces).  That single process could be something like PHP-FPM, Nginx, or MariaDB, or a short-lived process like a running Composer command.  Docker does not use an init process, so while it\u2019s possible to manually force multiple processes into a single container, it\u2019s not really the intended use case, and those processes will not start up and shut down gracefully if there\u2019s a problem. \n Docker also eschews the multiple-nested-mounts file system configuration in favor of a layered approach.  Another Linux kernel trick is the ability to have multiple file system images \u201cmask\u201d each other.  Essentially, multiple file systems can be mounted at  / , and files in later file systems will get used instead of those in earlier file systems.  That allows the common base tools of, say, a functional Debian or Red Hat system to live on disk only once and then get \u201cmasked\u201d by an installed MariaDB or installed PHP-FPM overlay when the container boots.  See Figure 10 for the visual. \n \n    \n \n\n       \n         Figure 10 \n     \n   \n For Docker\u2019s main use case, running local applications in a container, that\u2019s perfectly fine.  It\u2019s actually better suited to one-off tasks, such as wrapping a command line tool like Composer or NPM into a container, than Platform.sh\u2019s model.  Platform.sh\u2019s design, in contrast, gives a more \u201cVM-like\u201d feel and allows multiple related processes (such as Nginx and PHP-FPM) to run together in the same container for simplicity, something Docker doesn\u2019t do.  Neither model is inherently \u201cbetter\u201d or \u201cworse,\u201d just tailored to different use cases. \n The biggest difference is that Docker is inherently a single-container system; managing multiple containers in concert is left to separate tools such as Kubernetes, Docker Compose, Docker Swarm, and so on.  In Platform.sh\u2019s case, the assumption is that containers will always be deployed as a group, even if a group of 1.  (Recall Garfield\u2019s Law, \u201cOne is a special case of many.\") \n There are other container systems in the wild, too.  RedHat\u2019s FlatPak or Ubuntu\u2019s Snaps are both container-based systems optimized for shipping desktop applications packaged up in containers.  We won\u2019t go into detail about how those work as this article is long enough already, but be aware that those also exist and serve their own use cases better than either Platform.sh\u2019s hosting platform or Docker would. \n The great thing about containers, as Linux implements them, is that they can be used in a wide variety of different ways depending on the use case.  As with most things in technology, they\u2019re not good or bad, just a better or worse fit for a given situation. \n Conclusion \n While cool, and while they enable a host (no pun intended) of new functionality, containers are not magic.  They\u2019re nothing like shipping containers at all, despite the marketing hype.  Nor is Docker the first, last, or only container system on the market.  There are a variety of container coordination applications around, all with their own pros and cons just like any other software market.  Ultimately, all are simply organized and systematic ways to lie to your programs in new and creative ways. \n Welcome to the future.  Please keep your lies straight. \n Special thanks to my colleagues Florian Margaine, Simon Ruggier, and Damien Tournoud for their help with this article.  Graphics by Allison Simmons. \n Further resources: \n \n Namespaces in Operation:  https://lwn.net/Articles/531114/ \n Many container resources:  http://doger.io/ \n CGroups documentation:  https://lwn.net/Articles/671722/ \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building high-performance organizations for cloud application development \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Learning to trust the machines and the process in DevOps \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A great Kubernetes alternative \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "The suddenly online conference: an Indy Cloud Conf case study ", "url": "https://platform.sh/blog/2020/the-suddenly-online-conference/", "documentId": "baa2c8b722e2a9a1c34c44240c04a4796b63f7b1", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The suddenly online conference: an Indy Cloud Conf case study \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         02 Apr 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         With the global COVID19 pandemic threatening the globe, dozens of conferences have had to either cancel or switch from in-person to online events on short notice.  That\u2019s no easy task under the best of circumstances and is, not surprisingly, posing challenges for many. \n Last week I keynoted  Indy Cloud Conf  a small regional conference on cloud, IoT, and machine learning stuff ostensibly in Indianapolis, Indiana.  Of course, it wasn\u2019t in Indianapolis anymore but \u201con the Interwebs,\u201d and I\u2019m pleased to report that the organizers did a great job of shifting gears so quickly.  I wanted to share a few of my observations in the hopes they prove useful to other conference organizers who are in a similar situation. \n Thank you conference organizers! \n First, an aside: Community conference organizers are an over-worked, under-paid, under-appreciated group of people in the best of circumstances.  Coordinating a conference of anywhere from 100\u20131000 people on mostly volunteer time; handling the logistics of the venue, catering, AV, and so on; selecting speakers, dealing with cranky speakers, and handling speaker travel (for those good conferences that do so); finding sponsors, chasing down sponsors for money, and getting sponsor booths put together; marketing to attendees, ensuring hotels are available, ensuring badges and programs get printed (and correcting issues when they inevitably are printed wrong), and sorting out social events: it\u2019s all an enormous amount of work, and usually a labor of love. \n These are tireless people working to make it possible for us all to learn and have fun at the same time.  I don\u2019t envy them the job even when the world isn\u2019t in a state of panic, and I have to applaud them for keeping the ship afloat in these new circumstances.  If you see a conference organizer online (because you\u2019re social distancing responsibly and so won\u2019t be seeing them in person), please be sure to say thank you for all they do for the rest of us. \n Back to Indy \n Indy Cloud Conf had the good fortune of being a smaller conference, which made going online a bit easier.  The first thing they did was create a Slack group for the conference, with a separate channel for each of their three tracks. There were also channels for each of the sponsors, with high-level sponsors on the \u201cauto-join\u201d list for new signups.  (I guess that\u2019s the equivalent of a larger table.)  There was also a general  #hallway-ama  channel for random chatter and a private  #green-room  for speakers. \n The week before the conference, the organizers ran a quick tech rehearsal with all of the speakers to make sure their home gear was set up to use Zoom properly.  At least in my case it worked fine.  (Famous last words\u2026) \n For the conference itself, all of the presentations were given on Zoom.  Each track had two channels: one for the speaker to present and one for the speaker of the previous session to have an open Q&A discussion.  I thought that worked out very well, in fact.  As a speaker, I like it when people want to talk afterward; it means they were paying attention.  Doing it via a video chat means that I can sit down, though, which is always preferred, especially after presenting for an hour.  (Even when presenting remotely I tend to stand up and walk around my home office.  It helps me to \u201cget in the zone.\") \n No video chat is complete without technical issues, of course.  In our case, we discovered just as my opening keynote (\u201cSoftware Management Lessons from the 1960s\u201d) was beginning that, hey, I needed a separate invite as a speaker in order to be made the presenter.  That took almost 15 minutes to sort out.  Oops.  Fortunately we did, only for us to discover that when sharing a single window, Zoom insists that window be the active window.  If it\u2019s not (I originally had my speaker notes window as active), it simply doesn\u2019t update.  Oops.  Thankfully another of the attendees was able to ping me via Twitter DM, which showed up on my smart watch, which got my attention to fix it. \n So, two lessons learned: Zoom may need a dedicated invite for speakers, and be careful what your active window is. \n Like many conferences, Indy Cloud Conf had after-party activities planned.  Those also needed to move online.  I sadly wasn\u2019t able to hang around for those, but from what I heard from other attendees they went reasonably well.  That included a \u201cboard game via video chat\u201d room as well as a \u201cgrab a beer and hang out on a video chat\u201d room.  I suspect those won\u2019t scale to larger conferences, but it was good of them to make the attempt. \n Slack was chatty throughout the event.  They had bots setup to announce what session was about to start and the Zoom link for it (good), and people could ask questions in Slack for the organizers to ask of the presenter.  (Much better than trying to mess around with unmuting people.)  There didn\u2019t seem to be a ton of post-session chatter, as the next session was starting quickly, and I suppose most of that ended up in the breakout Q&A zooms. \n In all, I really liked the \u201cdedicated Q&A breakout chat\u201d concept.  About four or five people joined after my keynote, and two after my regular track session the next day (\u201cBuilding a cloud-friendly application\u201d).  The only recommendation I\u2019d have would be to increase the \u201cpassing period\u201d between sessions.  While 15 minutes may seem like a lot, when you\u2019re chatting post-session it\u2019s really easy to lose track of time and miss the next session.  That\u2019s true in person but even more so digitally when there\u2019s no natural signal of \u201ceveryone\u2019s walking into a room around me, I should, too.\u201d  If conferences are going straight to remote, I\u2019d suggest having a full half hour between sessions so that everyone can join in a Q&A room for a while.  It\u2019s a reasonably good replacement for the \u201challway track,\u201d so leverage that as much as possible. \n Overall, my hats off to the Indy Cloud Conf team for turning an offline conference into an online conference so quickly.  Videos of all sessions should be available for attendees soon and publicly available in about six months. \n Up next \n Now, on to  Midwest PHP  this coming Friday and Saturday\u2014where I have two more sessions\u2014which has also had a rapid turnaround to go online.  They have a lot to live up to, but knowing the organizers I have no doubt they\u2019ll be able to pull it off.  It\u2019s also either free or cheap depending on which tracks you want to watch, and you can still get tickets. \n Thank you again, conference organizers, for all you do to help the rest of us get smarter! \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Health notifications for all ", "url": "https://platform.sh/blog/2020/health-notifications-for-all/", "documentId": "cb82f5669ec734fba49c25b2fccd7cdace1dfa05", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Health notifications for all \n         \n\n        \n         \n            \n              \n          \n         \n         08 Apr 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Disk space is a finicky thing in many applications.  It\u2019s easy for an application to use an unexpected amount of data, either on disk or in the database, especially if it\u2019s using disk space for caching.  And if the disk fills up, well, few applications handle that gracefully. \n That\u2019s why Platform.sh has offered  low-disk health notifications  as an option on all projects for years.  Users can set up email, Slack, or PagerDuty notifications, which will notify users when any service\u2019s available disk space drops below 20% and then again when it drops below 10%.  We recommend it for all customers. \n This week, we\u2019re taking it a step further.  All new projects now have email notifications configured by default for all  admin users  on a project.  No extra steps necessary; create a project and you\u2019ll get health notifications.  You\u2019re still free to add more notification channels if you wish. \n Moreover, we\u2019ve automatically enabled email notifications to admin users for all projects that didn\u2019t have any notifications set up already.  As of today, every project on Platform.sh has health notifications turned on. \n What should I do if I get a low-disk warning? \n If you\u2019ve recently gotten an email from us saying you\u2019re low on disk space, it means your application, database, or some other service is below a warning threshold and you should probably look into it. \n The first thing to look for is if you\u2019re able to clean up any unused files.  If your application writes a lot of files to disk, especially generated files, it\u2019s quite possible that there are many just taking up space that you don\u2019t need.  If so, you can safely delete those.  Old logs in either the database or on disk, if you\u2019re doing your own logging, are another common source of surprise disk usage. \n The next step to check is your caching.  Many applications default to using an SQL database for cache data, which is inefficient and frequently a big waste of disk space.  It\u2019s not unusual for cache-heavy applications to be using half their entire database just for cache data.  We strongly recommend using a  Redis  service for your application\u2019s cache data, or if your application doesn\u2019t support Redis we also offer  Memcached .  Both of those are memory-resident cache services, which means they\u2019re both faster than the database and won\u2019t use up disk space. \n For a disk-based cache, another option is to use the  /tmp  directory on your application.  The  /tmp  directory is a ramdisk, which makes it faster and avoids using up disk space.  Be aware, however, that because it\u2019s volatile storage it may get wiped during a new deploy.  Don\u2019t store files there long-term, but it works well for regeneratable cache data. \n If you simply need more disk space, that\u2019s fine too.  Go to your project billing page and increase the amount of disk space on your plan; disk space can be reserved in increments of 5 GB and is per-environment. \n Once you\u2019ve saved the plan with the higher disk budget, edit your  .platform.app.yaml  or  services.yaml  files as appropriate to increase the  disk  value.  For example, to add 2 GB of storage to an existing MariaDB server, locate this section in  services.yaml : \n db : \n      type :   \"mariadb:10.4\" \n      disk :   2048 \n And change the  disk  value to  4096 .  (The number is in megabytes.)  Commit your changes and push to activate more space. \n But I don\u2019t want to get emails! \n Totally understandable.  (We get enough email as is, too.)  If you\u2019d rather get Slack or PagerDuty notifications, you can enable those using the Platform.sh CLI.  See the  notifications documentation  for details.  You can also add or remove email notifications if you\u2019d rather send email notifications to someone other than \u201call admins.\u201d \n However, we strongly, strongly recommend having at least one health notification enabled on every project at all times.  Not doing so is how out-of-disk errors sneak up on you and take a site down at the least convenient moment (because errors never happen when it\u2019s convenient), and no one wants that. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "The monolith myth: Why all-in-one tech suites aren't the solution ", "url": "https://platform.sh/blog/2020/the-monolith-myth-why-tech-suites-are-not-solution/", "documentId": "bd531e0f68b28465ed57d6b85a4c07ae0440e0d6", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The monolith myth: Why all-in-one tech suites aren't the solution \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Chris Yates \n                  \n                   VP Marketing \n                  \n                  \n                 \n            \n          \n         \n         13 Apr 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         There\u2019s a persistent myth in a relatively common word in tech - \u201csuite.\u201d The suggestion is that it\u2019s a group that can operate as one cohesive entity - vendors have been slinging marketing \u201csuites\u201d for years, decades even, and customers have assumed that the supposed one-size-fits-all content and marketing monolith can help them. \n You know the players without me needing to name them. Even by their colors - reds and blues mostly. As the saying goes \u201cNobody ever got fired for buying [suite vendor].\u201d \n They sell a vision of a suite of user-level tools that can solve the problems of a marketing and content professionals in a seamless way - from web content management to e-commerce to analytics. It makes sense in theory - you\u2019ve got one big name that you can trust, and because everything falls under the same brand and works on the same infrastructure. The digital experience should work seamlessly. You and I know it doesn\u2019t. \n The truth is - these suites are built from years (and even decades) of acquisitions, and despite the billions invested, they are the direct opposite of every suite\u2019s favorite seam-free buzzword. What\u2019s even worse is that they\u2019re in no way a universal solution to the diverse needs of businesses - they fail you in cost, in complexity, and in features. \n How does this manifest on the customer side? Well, say you\u2019re a large consumer products with many brands. A single stack suite including a web-based CMS, personalization, marketing automation, and so on isn\u2019t going to be able to deliver the corporate website, run your fleet of microsites, run your e-commerce storefronts, and all of your other requirements in a scalable way, from a cost or governance standpoint. \n Software licenses, SaaS subscriptions, or development models that are a fit for one use case or team won\u2019t be when multiplied by 100 or 1000. Further, organizational structures (including politics, preferred partnerships, and regional requirements) rarely facilitate a one-size-fits-all technology consensus. \n Real organizations have complex needs, and those needs are solved by solutions that scale to fit: WordPress blogs, Adobe Experience Manager for the .com, and Drupal for the community sites. Multiply that times 10s or 1000s of sites, and what you end up with is chaos, as each solution is usually deployed in a vertically oriented stack, separate from the others. That\u2019s where Shadow IT has festered - software installed and used to run an organization without the organization necessarily knowing. \n We need to change course \n It\u2019s time for anyone building a company to give up on multi-service software vendors. It\u2019s time to admit that you cannot expect companies to actually offer a one-size-fits-all suite. Instead, IT and digital business leaders can forge a win-win partnership, by looking further down the stack for their platform for success. \n Technology leaders can win by providing access to a range of solutions for digital engagement - including open source and licensed software - delivered on a common platform. At this platform level, they can standardize best practices in DevOps, security, compliance, and access control, and provide developers in business teams with the \u201cprimitives,\u201d or building blocks, for delivering the applications their markets need. \n Providing standardized ways of consuming databases, configuring applications, and accessing cloud services like storage and routing can not only save costs, but gives business teams a win, with greater agility and innovation as they no longer have to either manage these stacks on their own, or invest in outside vendors to do so. They can also choose the frameworks and languages that work best for their use case, budget, and team skills and structure. \n The biggest reward comes from the next level of platform building: self-service. When consuming primitives becomes simple, and development teams can access them without intervention of central IT, Shadow IT fades away. \n Business teams can iterate and innovate faster because they\u2019re focusing on shipping great product (be it campaigns, content, features, etc.) to their users rather than running their own operations or trying shoehorn a single vendor\u2019s suite into each and every use case. All the while, the organization benefits from a reduced surface area for security and compliance risk. \n This post was originally published on  TheNextWeb . \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Multisite on Platform.sh: the how and why \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Admiral: How to keep your fleet afloat \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Source Operations: automate maintenance, from single sites to fleets \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Supporting the Drupal Association and community through the COVID-19 crisis ", "url": "https://platform.sh/blog/2020/supporting-drupal-covid-19/", "documentId": "8964acaecd1f8fcd532314109b7efb2fd2a03fb2", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Supporting the Drupal Association and community through the COVID-19 crisis \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Fred Plais \n                  \n                   CEO \n                  \n                  \n                 \n            \n          \n         \n         17 Apr 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         DrupalCon North America and DrupalCon Europe are special events for Platform.sh. It is where we reconnected with our longtime friends in the Drupal community and met new Drupalers from around the world. \n We were looking forward to seeing our friends\u2013old and new\u2013less than a month from today in Minneapolis. But the COVID-19 crisis and ensuing requirements for social distancing mean we\u2019ll be limited to connecting with the Drupal community from afar for now. \n The Drupal Association and the DrupalCon team have been put in a tough financial position with the mandatory postponement of the conference. To show our support of the D.A. and the Drupal community during this time of economic turmoil, Platform.sh remains committed to our financial sponsorship of DrupalCon North America and DrupalCon Europe. We will also continue as Drupal Association sponsors. \n \n   \n    If you have a COVID-19 related site or application, we can help run it for free.\n   \n   \n  Find out how\n   \n   \n   \n   \n   \n \n\n \n\n \n In addition to our direct support of the Drupal Association and DrupalCon, Platform.sh wants to help those helping others. To that end, we\u2019ve established a support program for organizations developing websites or apps to aid communities, first responders, public health initiatives, or educational institutions dealing with the changes wrought by COVID-19. Platform.sh is giving organizations working on COVID-19-related projects a free project for at least 90 days. For more details or to contact us about the program, check out our  COVID-19  response page. \n While there is still much uncertainty ahead of us, by working together and supporting each other we can get through almost anything. That spirit of cooperation has been the ethos of the Drupal community from the very beginning. We\u2019re proud to have been a part of and to continue to support the Drupal Association, the Drupal community, and the DrupalCon team. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Multisite on Platform.sh: the how and why \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Improving access and security for your projects ", "url": "https://platform.sh/blog/2020/improving-access-and-security-for-your-projects/", "documentId": "2ba8138b74462eafd49cb893268f8e5ceaecceee", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Improving access and security for your projects \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Augustin Delaporte \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         20 Apr 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Gain greater control over authentication and mitigation with single sign-on \n We trust that you are creating great applications. And we want to help you keep those applications secured. So we are introducing multiple changes to our infrastructure to improve the performance and security of our user management. \n We plan to release those changes by April 29th, 2020. You can follow the maintenance window on  Platform.sh StatusPage . \n To get started, we have designed a more secure and user-friendly log-in application. Existing URLs will automatically redirect you to the new one, so there is no change to make on your existing login workflow. \n We are also instituting strong customer authentication. Starting April 29th, Platform.sh will enforce the following password policy for new users and for existing users who choose to change their password: \n \n Passwords must be at least 10 characters in length and include one lower case letter, one upper case letter, one number, and one special character. \n Users can\u2019t reuse one of their eight previous passwords. \n \n In addition, we are dropping support for the CLI password login. This has been deprecated for a while in favor of the browser login with  platform login  or API token login with  platform auth:api-token-login . \n We are also dropping support for logging in using a username. You will now be required to login with your email address if you are not using an external federated account (like Google, GitHub or Bitbucket). \n Finally, we are enabling Single Sign-On (SSO), which allows an organization to use its own identity provider to authenticate their Platform.sh users. It will provide for greater mitigation controls, empowering you to deactivate users and deny project access to those without the proper user credentials. \n SSO will be available to our  Elite and Enterprise customers .  Contact our sales team  if you are interested in learning more about this topic. \n So keep on creating great applications, and we\u2019ll keep on keeping them safe. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Health notifications for all \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "One source, many apps ", "url": "https://platform.sh/blog/2020/one-source-many-apps/", "documentId": "55d7b053266f469ca2f43329194419414b99faa9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           One source, many apps \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Larry Garfield \n                  \n                   Director of Developer Experience \n                  \n                  \n                 \n            \n          \n         \n         23 Apr 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The flexibility of Platform.sh has always been one of its strong points.  We want you to be able to build your application the way you want, focused on the details that do matter to you and not the details that don\u2019t. \n Today, we\u2019re happy to announce a new articulation point:  unified application definitions . \n Unified what now? \n Previously, you could put multiple discrete codebases in a single project if they together formed a coherent application.  That could be a front-end and separate backend application, a main application and an API gateway, a main application and a dedicated queue worker, or many other configurations that our customers have come up with, all in different languages. \n The requirement was that each application be defined by its own  .platform.app.yaml  file, and be in its own directory, along with the code that went with it.  That precluded using the same codebase twice for different web-facing apps within the same project.  We\u2019ve long supported \u201cworker\u201d containers, which allow for the exact same build with a different  start  command, but not multiple web frontends or alternate builds. \n So we fixed that. \n .platform.app.yaml  files can now specify a  source.root  parameter.  It defaults to the directory the  .platform.app.yaml  file is in, but the parameter can be any directory in the project. \n source : \n      root :   /path/to/code \n That has two main benefits. \n Submodules are easier \n We\u2019ve always supported Git submodules in projects, but the  .platform.app.yaml  file had to be in the main repository.  That sometimes led to awkward file path configurations when using submodules. \n Now, the  .platform.app.yaml  file still has to live in the main repository, but it can simply specify a  source.root  value of the path to the submodule.  All other paths will be evaluated relative to that, making it much easier to configure. \n Applications can reuse code \n It also means multiple applications can use the same codebase.  This becomes easier when paired with the new ability to put multiple application definitions into a single  .platform/applications.yaml  file.  The  applications.yaml  file\u2019s contents are a YAML array of application definitions, exactly the same as  .platform.app.yaml .  They can be as similar or different as you like, but can have the same  source.root  value. \n For example, here\u2019s an  applications.yaml  that creates two different application containers off of the same codebase stored in  /mainapp .  Each one has a different  passthru  value and name; the  admin  container will be forced to a \u201csmall\u201d container as it will have less traffic.  It also builds a Go application off an entirely separate codebase in  /apiapp . \n -    name :   api \n     type :   golang : 1.14 \n     source : \n         root :   apiapp \n     hooks : \n         build :   |\n              go build -o bin/app \n     web : \n         upstream : \n             socket_family :   tcp \n             protocol :   http \n         commands : \n             start :   ./bin/app \n         locations : \n             / : \n                 allow :   false \n                 passthru :   true \n \n -    name :   main \n     type :   \"php:7.4\" \n     source : \n         root :   mainapp \n     web : \n         locations : \n             \"/\" : \n                 root :   \"web\" \n                 passthru :   \"/index.php\" \n \n -    name :   admin \n     type :   \"php:7.4\" \n     size :   S \n     source : \n         root :   mainapp \n     web : \n         locations : \n             \"/\" : \n                 root :   \"web\" \n                 passthru :   \"/admin.php\" \n You\u2019re welcome to vary the configuration even more if you prefer, even the build hook. \n The result in this case will be three separate applications with unique names that you can route to from  routes.yaml , all coming from the same source files on disk. The applications don\u2019t have to be of the same type or version, as each will be built and deployed separately. \n Go forth and be flexible \n If any of that sounds exciting, you can start using it right away.   applications.yaml  is now available on all projects, so experiment and find new ways to build your dream application. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Out of the lab: Node.js 12 features graduate from experimental status ", "url": "https://platform.sh/blog/2020/out-of-the-lab-node.js-12-features-graduate-from-experimental-status/", "documentId": "1e680ca49a4dc92062faf40875250665896121a3", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Out of the lab: Node.js 12 features graduate from experimental status \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Nick Anderegg \n                  \n                   Developer Relations Engineer \n                  \n                  \n                 \n            \n          \n         \n         14 Jan 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The latest version of Node.js is now available on Platform.sh, and this LTS release delivers many performance optimizations and additional features. Beyond updating the V8 engine to version 7.4, the experimental flag on ECMAScript Modules has been dropped, and Worker Threads have major improvements. \n To get your current applications up and running with Node 12 right now, just swap out \u201cnodejs:10\u201d with \u201cnodejs:12\u201d in your  .platform.app.yaml  file: \n      type :   \"nodejs:12\" \n Commit this change to a new branch in your repository, push it to your project on Platform.sh, and within a few moments, you\u2019ll be able to test out how your application runs on Node.js 12 in an isolated development environment. Once you\u2019re sure your application is ready for the upgrade, merge your development branch into  master , and your updated application will be ready for the world to see. \n What\u2019s new in Node.js 12? \n This  Node.js long-term support (LTS) release  primarily brings performance improvements and optimizations, as well as some features designed to make it easier for you to build and debug your applications. \n Native ECMAScript Modules \n With this LTS release,  ECMAScript Modules enter Phase 3 of their development  and the  --experimental-modules  flag is no longer needed to use them. The improvements made to this feature now mean that Node.js applications can support default, named, and namespace exports in  import  statements referencing ES module files\u2014without needing to be bundled with a tool like webpack. \n // Default exports\n import   module   from   'module' ; \n\n // Named exports\n import   {   foo   }   from   'module' ; \n import   {   foo ,   bar }   from   'module' ; \n\n // Namespace exports\n import   *   as   module   from   'module' ; \n import   {   foobar   as   alias   }   from   'module' ; \n This ECMAScript Modules feature also means that modules can be dynamically imported with an  import()  expression: \n // Dynamics import return a Promise\n var   module_promise   =   import ( 'module' ) ; \n These improved features were  included behind the  --experimental-modules  flag  in the initial release of Node.js 12, and this flag is being dropped as Node.js 12 reaches LTS status. \n Improvements to Worker Threads \n Another feature losing its experimental flag and graduating to the next level of stability is  Worker Threads . With this feature, CPU-intensive JavaScript operations can be offloaded from the main event loop thread to a pool of memory-sharing workers to implement a form of lightweight parallelism. This approach has a benefit over the  child_process  and  cluster  modules by supporting process parallelization without requiring each thread to have its own isolated memory. \n Lower maintenance burden for native modules \n Node.js modules written in C/C++ code\u2014modules that allow your application to interact with the underlying system at a low level\u2014have always had a higher maintenance burden than pure-JavaScript modules. In previous versions of Node.js, native modules only worked with the version for which they were written, and module maintainers had to produce builds for each version of Node.js they wished to support. Application developers using native modules had to take special care to ensure that native modules were loaded and unloaded safely and that imported modules were used in a thread-safe manner. \n The introduction of  N-API  allows module maintainers to produce native builds that work with all subsequent versions of Node.js in addition to the versions of Node.js with which they were built. The abstraction of the N-API provides module maintainers an interface that\u2019s independent from the underlying JavaScript engine implementation and eliminates the burden that traditionally came with maintaining a native module between versions of Node.js. \n Modules implementing the  content-aware addons  feature can be loaded multiple times in multiple contexts, safely unloaded, and safely used in a multithreaded execution environment. \n Overall, these new features mean that native add-ons now have a maintenance burden  more on par with regular JavaScript modules . \n Optimizations, optimizations, optimizations \n Node.js 12 doesn\u2019t just come with new features; this LTS release abounds with optimizations. Among other performance improvements, Node.js 12 now caches code for built-in libraries at build time to improve startup time. And the JavaScript heap size is now set based on available resources, rather than defaulting to browser-optimized defaults set by V8. If you\u2019re ready to get started with this update, check out the  Node.js blog  for all of the Node.js 12 changelogs. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh\u2013deploying the future of content with one click \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Off with its head! Headless Chrome as a service. \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Even more batteries included: Platform.sh configuration libraries \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to run Anaconda on Platform.sh", "url": "https://platform.sh/product/demos/anaconda/", "documentId": "33f13d26c93a601632e1372649949963e63e88f4", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to run Anaconda on Platform.sh \n       \n     \n     \n       \n         \n          \n             python \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Anaconda is the World\u2019s Most Popular Python Data Science Distribution.       \n    \n    \n       This demo shows how to install the full Anaconda data science stack on Platform.sh.       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Conda is an open source package and environment management system.\n\n  \n\n\n  \n    \n\n      It was created for Python programs, but it can package and distribute software for any language.\n\n  \n\n\n  \n    \n\n      Conda is included in all versions of Anaconda, as well as Miniconda, which is essentially Anaconda\n\n  \n\n\n  \n    \n\n      without the packages included.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      The build hook in your  .platform.app.yaml  file lets you specify scripts to run when your code builds.\n\n  \n\n\n  \n    \n\n      This script uses curl to get Miniconda. It then runs the Conda installer, adds Conda to the path,\n\n  \n\n\n  \n    \n\n      and installs the full Anaconda environment.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      In the web section of your  .platform.app.yaml  you then specify a start command which runs this script.\n\n  \n\n\n  \n    \n\n      The example shown activates the Conda environment and starts the Jupyter notebook, a popular interactive\n\n  \n\n\n  \n    \n\n      tool for creating rich documents and running code.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      When Platform.sh builds your code and manages dependencies, all of the required packages are written on a\n\n  \n\n\n  \n    \n\n      read-only disk image that is available to your application container.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      R, PyPy, and Stackless Python are examples of other runtimes or tools that can be installed on Platform.sh by\n\n  \n\n\n  \n    \n\n      first installing Miniconda and then using it to install further packages.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh\u2013deploying the future of content with one click ", "url": "https://platform.sh/blog/2020/deploy-strapi-on-platformsh/", "documentId": "6d169a65ab833405cd4d9ba3a605e01e276d8643", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh\u2013deploying the future of content with one click \n         \n\n        \n         \n            \n              \n          \n         \n         03 Mar 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     Platform.sh enables developers to launch Strapi, the leading open-source headless CMS \n     Why open-source headless CMS is the future of digital experience \n     Running software instead of managing infrastructure and DevOps \n     Deploying software in moments with the click of a button \n     About Platform.sh \n     Contacts \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh enables developers to launch Strapi, the leading open-source headless CMS \n [Paris, France 3 March 2020]  Developers and content editors are faced with a choice: either invest time in configuring, running, and securing the tools they use to power digital experiences, or spend time actually building those experiences that engage users and drive revenue. Now, with the combination of  Platform.sh  and  Strapi , they no longer have to choose between building infrastructure and creating value. \n Strapi gives developers a robust API to power anything from websites to apps to set-top boxes with an extensible, editor-friendly content management system (CMS) interface. Platform.sh now enables Strapi to deploy new, headless CMS instances on demand, with zero infrastructure investment. \n Why open-source headless CMS is the future of digital experience \n Digital experience is no longer monolithic. To reach users where they are, developers need a CMS that can deliver to a wide range of channels and devices. Legacy CMS platforms force developers to use a single stack that locks the end-user and administrator interfaces together rigidly. \n \n \u201cStrapi decouples CMS from the presentation layer,\u201d said Chris Yates, VP of marketing, Platform.sh. \u201cThis provides a \u2018headless\u2019 content distribution platform (driven by APIs and technologies like GraphQL) that developers can easily integrate with a variety of front-end tools. Strapi is also open source, meaning developers can augment and extend its capabilities on their own and benefit from the contributions of an active community.\u201d \n \n Running software instead of managing infrastructure and DevOps \n Platform.sh and Strapi share a critical belief: that developers should be able to focus on creating value, rather than on tedious tasks like patching software, running infrastructure, and maintaining DevOps processes. Platform.sh provides an end-to-end Platform-as-a-Service that enables developers to drop in their applications and run them at scale with governance and security. \n Platform.sh supports a range of programming languages\u2014eight in all\u2014from  Node.js  to  PHP  to  Java . It also offers a \u201cbatteries included\u201d approach to infrastructure, including databases, networking, and storage, where services are defined as code and are deployed in moments in secure containers. Platform.sh provides all this without the expense and complexity of tools like Kubernetes or the investment of DIY solutions on public cloud providers. \n Deploying software in moments with the click of a button \n \n \u201cThe ability of Platform.sh to deploy and manage polyglot applications at scale gives companies like Strapi the ability to focus on their core business rather than investing in complex infrastructure to build a SaaS,\u201d said Victor Coisne, VP of marketing, Strapi. \u201cNow, with a click of a  Deploy on Platform.sh button , a Strapi prospect or customer can get a new instance of Strapi in a few moments in whatever region (US, Canada, Australia, Ireland, Germany, UK, or France) and cloud (AWS, Google Cloud, Microsoft Azure) they choose. Almost instantly, they can be working within Strapi\u2019s administrative tools to build their own content API.\u201d \n \n Try Strapi now on Platform.sh: \n \n About Platform.sh \n Platform.sh is the end-to-end web platform for agile teams. It enables organizations to build, evolve, and scale their website fleet\u2014with zero infrastructure management investment. Platform.sh includes application hosting, CI/CD, automated updates, global 24x7 support. And much more. Organizations like Hachette, the University of Missouri, Unity, and the world\u2019s largest consumer products companies rely on Platform.sh to operate their website fleets. \n Contacts \n For Platform.sh: \n Worldwide: Ed Zitron\n ed@ezpr.com \n France:\nPierre Gatey\n pierre@agenceraoul.com \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Demos", "title": "How Platform.sh provides white-label tools to power your SaaS application", "url": "https://platform.sh/product/demos/saas/", "documentId": "5cd7b1e36c27ed87fd141de54a4403d0755b2508", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How Platform.sh provides white-label tools to power your SaaS application \n       \n     \n     \n       \n         \n          \n             saas \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Software as a Service, or SaaS, is a software delivery model where that software is centrally hosted and then licensed to users through some kind of subscription.\n       \n    \n    \n       But how can you offer your web application as a SaaS product?\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      There's plenty of incentive for you and for your customers to figure out how to do deliver a SaaS product.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      By alleviating all software and hardware considerations from your users, the SaaS model provides faster time to market\n\n  \n\n\n  \n    \n\n      and replaces capital costs with on-demand operating costs, all in a clear 1-stop shop solution.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      There are two major ways to implement your SaaS product: single and multi-tenancy.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Single-tenant software exists as a single instance per single customer. Data and resources are isolated for their needs, which makes\n\n  \n\n\n  \n    \n\n      instances easier to customize and scale for each customer. But there are also disadvantages. A one-to-one relationship between customer\n\n  \n\n\n  \n    \n\n      and SaaS instance can make it more difficult to update all instances in the fleet, and resource isolation can result in a greater cost\n\n  \n\n\n  \n    \n\n      per customer to operate.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      On the other hand, in multi-tenant SaaS products sharing data is possible across all customers from a central instance. This makes it\n\n  \n\n\n  \n    \n\n      easier add new customers and can result in lower operating costs. However, multi-tenancy can be more difficult to scale, and customization\n\n  \n\n\n  \n    \n\n      for individual customers becomes much more difficult. Effort will always have to be made to keep customer data segregated at the application layer.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      But I want it all. I want the advantages of multi-tenancy for my single-tenant application.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Well, we can take a look at a case study from Open Social to get an idea of what that might look like. With Platform.sh, Open Social provides\n\n  \n\n\n  \n    \n\n      a Drupal distribution for community groups, where each of their customers has their own instances. Open Social retains control of that instance,\n\n  \n\n\n  \n    \n\n      and no customers are given access to their server.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Open Social built their own management tool, which uses the Platform.sh API internally.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      A customer's community is a unique SaaS instance powered by its own project on Platform.sh, not that they would ever need to know that that's\n\n  \n\n\n  \n    \n\n      how it's done.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Then, all of the community instances can be accessed by the vendor to manage updates and apply customizations.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Open Social manages all the code in the PaaS fleet. Since it's all just Git in the background, they can automate it - no matter the number of\n\n  \n\n\n  \n    \n\n      communities - very easily.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      As a result, the vendor can receive all of the benefits of multi-tenancy, while keeping the advantages of a single-tenant application architecture for their customers.  \n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      With Platform.sh, they get the ease of single-tenant isolation, but the kind of complete control over scaling that comes\n\n  \n\n\n  \n    \n\n      with multi-tenancy in the background.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "Controlling costs with Platform.sh as your virtual DevOps team", "url": "https://platform.sh/product/demos/control-costs/", "documentId": "b83e98eb7d64f028e9f669fb530a7ecce81243d8", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         Controlling costs with Platform.sh as your virtual DevOps team \n       \n     \n     \n       \n         \n          \n             scaling \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Platform.sh comes with no upfront costs, and scaling to meet demand is very simple.       \n    \n    \n       Say you're just starting out and you want a more \"Pay as you go\" option.       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      You can spin up one or multiple projects right from the command line or from your management\n\n  \n\n\n  \n    \n\n      console, with no upfront costs. You'll get a clear estimate for the monthly price of the\n\n  \n\n\n  \n    \n\n      plan straight away, and receive a ready-to-go remote environment without any definition on your end.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      You can then change the size of your plan with a single command when you expect demand will be high,\n\n  \n\n\n  \n    \n\n      and after your big sale return to a smaller plan the same way.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      All costs are on-demand operating costs, completely under your control.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      With your plan in place, no time is spent setting up testing environments. Platform.sh\n\n  \n\n\n  \n    \n\n      takes care of that for every branch you want to test, and you'll have them up and running\n\n  \n\n\n  \n    \n\n      in minutes. Just commit your changes to the new branch, and push to the project. By default,\n\n  \n\n\n  \n    \n\n      newly pushed environments do not fully deploy, but all you need to do is activate that branch's environment\n\n  \n\n\n  \n    \n\n      with a single command:  platform environment: activate .\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      There are no separate charges to add one of our many managed services to your application,\n\n  \n\n\n  \n    \n\n      just add its corresponding configuration. Here, we're adding Redis for\n\n  \n\n\n  \n    \n\n      our application level caching by first defining it in our  services.yaml  file.\n\n  \n\n\n  \n    \n\n      Then, we add a relationship between our application and the Redis service in our\n\n  \n\n\n  \n    \n\n       .platform.app.yaml  file. With those changes applied, all that's needed is to\n\n  \n\n\n  \n    \n\n      commit and push to Platform.sh, and then our environment will contain the new service\n\n  \n\n\n  \n    \n\n      ready for testing.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Platform.sh provides clear configuration, and handles all security updates and infrastructure,\n\n  \n\n\n  \n    \n\n      so that you and your team can focus on what matters: your application.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      And if you get stuck anywhere along the way, we've got infrastructure support to respond to your support tickets 24/7.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      With Platform.sh, you don't just get hosting. You get an on demand DevOps team that relieves you from\n\n  \n\n\n  \n    \n\n      handling hardware and orchestrating your infrastructure, so you can get back to developing new features\n\n  \n\n\n  \n    \n\n      for your application.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to upgrade runtime versions with one line of code", "url": "https://platform.sh/product/demos/upgrades/", "documentId": "2595f52efd33e31bc9a9b3b5757a6425258ab7b2", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to upgrade runtime versions with one line of code \n       \n     \n     \n       \n         \n          \n             updates \n          \n             configuration \n          \n             environments \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       As you're developing with one version of a service, you may want to upgrade that service for a number of reasons.\n       \n    \n    \n       You may want to check compatibility with your application, with as little work as possible.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Luckily, on Platform.sh, finding out if another service version works for you is quick to test.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Branch your production environment, and create a completely identical environment to try out the upgrade.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Then clone the whole project locally, either through Git or through the Platform.sh CLI.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      When changing runtime version, open up your  .platform.app.yaml  file and edit a single character to the next\n\n  \n\n\n  \n    \n\n      major version. That's it. Commit and push the change, and Platform.sh will rebuild the entire application, now on that\n\n  \n\n\n  \n    \n\n      newest version.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Production hasn't been touched at all. You can visit the environment's unique URL and do whatever testing you need to, automated\n\n  \n\n\n  \n    \n\n      or manual.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Run it through every one until you know it works like production should. When you're satisfied, merge the upgrade, and deploy the\n\n  \n\n\n  \n    \n\n      identical configuration to production in seconds.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Services can be upgraded in the same way. Branch, update the configuration on that branch, push, test, and merge.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      This process works exactly the same for any change to your code, and any upgrade to your language and dependencies, so you can feel free\n\n  \n\n\n  \n    \n\n      to try out any change you'd like.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to update Drupal with Composer", "url": "https://platform.sh/product/demos/drupal-update/", "documentId": "b7773de44e244659764e7be0117f1567aa812400", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to update Drupal with Composer \n       \n     \n     \n       \n         \n          \n             drupal \n          \n             php \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       The recommended way to deploy Drupal 8 on Platform.sh is to use Composer.\n       \n    \n    \n       Composer is a PHP package manager that controls which versions of your dependencies are pulled into your project on every build.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      With a Composer-installed Drupal project, it is possible to update your entire application with a single command and commit.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Checkout a new branch on your local project and run  composer update  to update your dependencies.\n\n  \n\n\n  \n    \n\n      Push to Platform.sh and then activate the environment to deploy the updated application.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Once the updates have passed all of your tests, you can merge and deploy the exact same updated application to production\n\n  \n\n\n  \n    \n\n      in seconds.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to scale your Platform.sh projects to meet demand", "url": "https://platform.sh/product/demos/fast-scale/", "documentId": "4804cbcaebd0ad3f8055b7077117e4acdad8353f", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to scale your Platform.sh projects to meet demand \n       \n     \n     \n       \n         \n          \n             scaling \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Projects on Platform.sh are very easy to upsize and downsize to meet upcoming demands on your applications.\n       \n    \n    \n       When Black Friday draws close, you might expect increased traffic that Platform.sh can help you prepare for.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Just visit the \"Accounts\" page in your management console.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Find the project for your site and click the three dots to edit the project.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        In the plan settings for that project, simply pick a new plan size from the dropdown. Each new selection will update\n\n  \n\n\n  \n    \n\n        the list of resources that come with the new plan, so you know exactly how much resources will cover the traffic you\n\n  \n\n\n  \n    \n\n        expect.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Save the changes, and your site will redeploy in seconds, complete with all of that plan's resources.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        When the sale is over, go right back to the same settings page from before and scale the plan back down to its previous size.\n\n  \n\n\n  \n    \n\n        Since plans are prorated, you only pay for the time you have used each plan.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        You can even scale your projects up or down from the command line using the Platform.sh CLI, making the whole\n\n  \n\n\n  \n    \n\n        process as scriptable as you'd like it to be.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to add new services to your Platform.sh application", "url": "https://platform.sh/product/demos/newtech/", "documentId": "a62f6283b45ba27cf55646f32a440b097839732a", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to add new services to your Platform.sh application \n       \n     \n     \n       \n         \n          \n             configuration \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       As your application grows, new features may require adding new technologies and architectures.\n       \n    \n    \n       Changing how search is handled on your site could require adding an Elasticsearch service to your cluster.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      On Platform.sh, you can start by creating a new environment to test out the new feature.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      On that environment's branch, add Elasticsearch to your project's  services.yaml  file.\n\n  \n\n\n  \n    \n\n      Here in that file we define the Elasticsearch service container under the name  mysearch .\n\n  \n\n\n  \n    \n\n      We specify the  elasticsearch  type, a supported version, and finally the amount of persistent\n\n  \n\n\n  \n    \n\n      disk allocated to it.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Then update your  .platform.app.yaml  with a new relationship to access it. This new relationship, simply called\n\n  \n\n\n  \n    \n\n       elasticsearch , repeats the name we gave the service in the  services.yaml  file and includes that\n\n  \n\n\n  \n    \n\n      service's endpoint.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Commit those changes, and then push to deploy them on Platform.sh.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      After the push, you can access the service locally via an SSH tunnel using the CLI command  platform tunnel:open .\n\n  \n\n\n  \n    \n\n      We can run  platform tunnel:info  to discover the Elasticsearch service's connection credentials to use in your app.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Once the tunnel is open, you can send a request to the Elasticsearch server using that tunnel and the  PORT \n\n  \n\n\n  \n    \n\n      parameter we found in the previous step.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      All of your connection credentials for Elasticsearch reside in the  PLATFORM_RELATIONSHIPS  environment variable,\n\n  \n\n\n  \n    \n\n      which will then be used to connect to Elasticsearch.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      When you're satisfied with the new Elasticsearch-dependent feature, you can share the development environment URL with others\n\n  \n\n\n  \n    \n\n      for review.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Then when you're ready to take the new feature live, merge the environment into  master . Now production, as\n\n  \n\n\n  \n    \n\n        each new subsequent environment, will deploy with the the new Elasticsearch service.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Every bit of this configuration is explicitly detailed in your Platform.sh configuration files, which means going back to\n\n  \n\n\n  \n    \n\n      before the service is just a  git revert  away. That's what Infrastructure as code is all about.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How do I onboard new developers to my team?", "url": "https://platform.sh/product/demos/team-scale/", "documentId": "c49548e99c08db896bdf849729c22e5167c72cfe", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How do I onboard new developers to my team? \n       \n     \n     \n       \n         \n          \n             scaling \n          \n             environments \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Every Platform.sh user has a role which controls access and improves security on your project. Different roles are authorized\nto do different things with your applications, environments and users.\n       \n    \n    \n       As your team grows, it's easy to on-board new team members, complete with designated roles and environment access.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      We can start with a fairly common branch structure for our project. We have our production site on the  master \n\n  \n\n\n  \n    \n\n      branch, as well as a primary  staging  environment where changes sit for final pre-merge review. Off of the staging\n\n  \n\n\n  \n    \n\n      environment, there are also three additional development environments, each with some new feature currently being worked on.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Adding team member Rachel as a project administrator gives her full ability to grant access to other developers\n\n  \n\n\n  \n    \n\n      across the whole project. Here the current project owner Robert goes to his project settings under the Access tab\n\n  \n\n\n  \n    \n\n      in his management console. After entering the e-mail Rachel has associated with her Platform.sh account, instead of\n\n  \n\n\n  \n    \n\n      limiting her access to a single environment, he checks the project admin option. \n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      She can make developer Jorge an administrator on the  web-agency-team  branch.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Which then gives Jorge the ability to add the rest of his team to that branch, as well as any child branch made from it.\n\n  \n\n\n  \n    \n\n      Here we can see Jorge creating two environments for each of the developers on the Web Agency team he wants them to work on.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Those changes result in this new project branch structure, where Jorge's team is isolated to the very bottom branches.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      You have control over which developers can collaborate on which environments, and on-boarding a new developer only requires\n\n  \n\n\n  \n    \n\n      that they add their SSH keys to the Platform.sh management console.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "Connecting your local development environment to Platform.sh", "url": "https://platform.sh/product/demos/local-dev/", "documentId": "249cefbe92f8394ef51829e5f0b9f1a0b18ee4c9", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         Connecting your local development environment to Platform.sh \n       \n     \n     \n       \n         \n          \n             local \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Platform.sh makes deploying applications simple, and we also provide a number of local development options that you can use when you're\nbuilding new features for your projects.\n       \n    \n    \n       Developing locally can allow you to test your ideas quickly before pushing remotely for team review.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Because your application may depend on a number of our managed services, your local development environment will need the same access\n\n  \n\n\n  \n    \n\n        to those services that a deployed environment would have.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        You can use the Platform.sh CLI command  platform tunnel:open  to open an SSH tunnel to your services. This will allow\n\n  \n\n\n  \n    \n\n        your application that is running on a local web server to access them.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Once you export the  PLATFORM_RELATIONSHIPS  environment variable from your project, the local application will have the\n\n  \n\n\n  \n    \n\n        credentials it expects to interact with your services. Export a  PORT  variable, if your application requires one, and\n\n  \n\n\n  \n    \n\n        you'll be all set up to run locally using your remote services.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        These hosted services are identical to those you would use in your Platform.sh environments, for as long you need them locally.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        When you're all done and ready to push your new feature for review, close your tunnels with the CLI command  platform tunnel:close .\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "Using Laravel with the Platform.sh CLI", "url": "https://platform.sh/product/demos/laravel-cli/", "documentId": "1b85bdcb6ea4c52aba03cd82b553e7f7d549fd44", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         Using Laravel with the Platform.sh CLI \n       \n     \n     \n       \n         \n          \n             php \n          \n             cli \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Laravel is an integrated, rapid-application-development framework written in PHP.\n       \n    \n    \n       Platform.sh makes it easy to start up a new Laravel project with a few commands from the CLI.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        First, use the command  platform create  to quickly create a new Platform.sh project. The command\n\n  \n\n\n  \n    \n\n        will prompt you to configure the project for one of our regions with as much resources as you think you\n\n  \n\n\n  \n    \n\n        might need. The project will be created in just a few seconds, and the CLI will provide a project ID you can\n\n  \n\n\n  \n    \n\n        now use to interact with it.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        You can then use the command  platform environment:init  to initialize that project within any public GitHub\n\n  \n\n\n  \n    \n\n        repository. Here, we are using our Laravel template, that already includes Platform.sh's three configuration files to deploy.\n\n  \n\n\n  \n    \n\n        So long as the repository contains Platform.sh configuration files, it will then build and deploy the site. First, Platform.sh\n\n  \n\n\n  \n    \n\n        will run through the build hook of the application's  .platform.app.yaml  file, which defines its build process.\n\n  \n\n\n  \n    \n\n        Once completed, Platform.sh will validate domains for the environment, and issue new Let's Encrypt certificates for them if not\n\n  \n\n\n  \n    \n\n        present or if they will soon expire. Then the environment is created and deployed.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Once the project has finished initializing, use the command  platform url  to view the new site, which will\n\n  \n\n\n  \n    \n\n        open in a browser window.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Laravel has built and deployed on Platform.sh, and you're now ready to customize the site as you see fit.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "Splitting your monolithic application into microservices", "url": "https://platform.sh/product/demos/microservices/", "documentId": "a0a061eccb3ed80536fc1b4b4cb7d17c058043f2", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         Splitting your monolithic application into microservices \n       \n     \n     \n       \n         \n          \n             configuration \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Splitting an application into a collection of coupled services can help simplify your projects and clarify contributor responsibilities.\n       \n    \n    \n       After awhile, you may come to realize that your monolith codebase is getting too big to handle.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        This a common problem software projects come up against, even the most successful microservice systems, breaking up as they grow.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        If your app has become a giant, Platform.sh's configuration makes breaking it up into separate application containers very straightforward.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        You can move your existing application to a subdirectory, including its  .platform.app.yaml  file.\n\n  \n\n\n  \n    \n\n    \n\n  \n\n\n  \n    \n\n    \n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        You can then move a new application, such as your API backend to its own subdirectory, one that will contain its own\n\n  \n\n\n  \n    \n\n         .platform.app.yaml  file inside of it. Here, we\u2019re defining the backend application to use the Node.js 10\n\n  \n\n\n  \n    \n\n        runtime. It installs its dependencies during the build hook with  npm install  and contains a single relationship\n\n  \n\n\n  \n    \n\n        to a RabbitMQ service. The app\u2019s start command uses PM2 to run  index.js , and inside that file we can define a\n\n  \n\n\n  \n    \n\n        simple web server that listens on the Platform.sh-defined port to serve some HTML.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Since your services will be shared between each application container, everything in the  .platform  hidden configuration\n\n  \n\n\n  \n    \n\n        subdirectory will remain in the project root. You can optionally add additional services to your  services.yaml  file to\n\n  \n\n\n  \n    \n\n        help coordinate how your applications talk to each other - such as adding RabbitMQ to allow them to communicate asynchronously.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        In your new microservice's  .platform.app.yaml  file, you can also configure the application to spawn worker containers\n\n  \n\n\n  \n    \n\n        with their own run configuration.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Push the changes, and Platform.sh will orchestrate the newly configured cluster automatically.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        In your management console you will be able to see that your Service Graph has been updated, now with two application containers.\n\n  \n\n\n  \n    \n\n        When you're satisfied with your new infrastructure, merge to master and see the changes in production from that point on.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      There is no requirement that application containers use the same runtime, so feel free to mix and match our supported languages to fit your needs.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to keep your development environments in sync with prod", "url": "https://platform.sh/product/demos/dev-prod/", "documentId": "08076d43c4ab195a215b724fa5e35faf094eb4d2", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to keep your development environments in sync with prod \n       \n     \n     \n       \n         \n          \n             environments \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Development environments work the way they should on Platform.sh: identical to production where it matters.\n       \n    \n    \n       Testing and Staging environments reflect new features, but also match production so you know there won't be any unexpected changes post-merge.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      All of your development environments should match Production as closely as possible.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      While maintaining unique settings, copies of services and data that don't affect production, and domains for showcasing new features to clients.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      These development environments can do so all while being built on small containers that reflect their small resource demand.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Their code should be the same as production.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Their services should also be identical.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      And data should always reflect up-to-date production data.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      But payment gateways, email, and environment URLs should remain unique for every environment you're working on.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      You can set environment variables, such as API keys, that differ between Production and non-Production environments.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      So that each new development environment inherits a Sandbox variable, and never has access to a Production variable.\n\n  \n\n\n  \n    \n\n      In the demo shown here, we set a variable called  Payment-API  for the  master  environment with\n\n  \n\n\n  \n    \n\n      a value of  my-secret-key . The variable will initially be inherited by all of its child branches. Once we\n\n  \n\n\n  \n    \n\n      add the variable, we can see that it was indeed inherited by the staging environment. We don't want development environments\n\n  \n\n\n  \n    \n\n      to use the production API key, so we'll update the variable's value for all non-production branches to instead be\n\n  \n\n\n  \n    \n\n       my-development-key . This new value is then inherited, as can be seen here on the  feature-1  branch. \n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      As a result, developers don't need to worry about using the correct settings, as they inherit all of the non-Production variables\n\n  \n\n\n  \n    \n\n      they need as soon as those environments are created.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      If your application requires Production-level resources in development, you can easily upsize those environment's resources to match.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to integrate Platform.sh with GitHub, Bitbucket, or GitLab", "url": "https://platform.sh/product/demos/github/", "documentId": "a0b149b58051395ed39b5573f8fa6019fe69b214", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to integrate Platform.sh with GitHub, Bitbucket, or GitLab \n       \n     \n     \n       \n         \n          \n             integrations \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       While you can use Platform.sh as your application's primary remote repository, it's very easy to integrate with GitHub, Bitbucket,\nor GitLab where your code already lives.\n       \n    \n    \n       Integrations with these services not only makes migration simpler, but also enables you to trigger the deployments of new environments\neach time a pull request is opened.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        While your repository can be either public or private, nothing gets merged until your build and deploy processes are fully tested.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Set up the integration with a single command from the Platform.sh CLI:  platform integration:add .\n\n  \n\n\n  \n    \n\n        Supply that command with a few pieces of information about the repository and then follow the steps to configure when environments are deployed.\n\n  \n\n\n  \n    \n\n        After that, your Platform.sh project now acts as a mirror for that repository.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        Now every pull request becomes a live development environment on Platform.sh that you can run all of your tests on.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n        When you have merged the pull request and deleted its source branch, Platform.sh mirrors that action and deactivates the environment.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How do I manage a complex development workflow for my team?", "url": "https://platform.sh/product/demos/scrum/", "documentId": "d8908bc816cf3e4c65b6ebbd0d48d8b488cc9aac", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How do I manage a complex development workflow for my team? \n       \n     \n     \n       \n         \n          \n             scaling \n          \n             environments \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Platform.sh's workflow-agnostic development environments make it the ideal tool for scrum.\n       \n    \n    \n       Typically, a team of developers might have to share time to test their new features on a single testing server.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      From the beginning, Platform.sh branches are fully isolated and live environments, which in affect makes every branch into its own\n\n  \n\n\n  \n    \n\n      test server.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Each branch inherits settings and data from its parent, and you can resync data at any time while you're developing.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      When you push to that branch, no other environments are affected.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Then when you want to submit those features, each environment gets its own domain for review.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Try out your changes and send that URL to your client. Each environment is completely isolated from the very beginning.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      When it's passed all inspection, merge the new feature into its parent from either the command line or in your management console.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Then when you're ready to take the feature live, merge into master.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      On these fast-forward merges, the exact same image is deployed to production whose deployment you've just tested.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      That way, you'll always know it's safe to deploy, even on Friday.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Covid 19", "title": "Platform.sh COVID-19 response ", "url": "https://platform.sh/covid-19/", "documentId": "c952006df3cc4c23d19a17b73fb7fa21b62ec42b", "text": "\n     \n       \n         \n  \n\n   \n     \n       \n         \n           Platform.sh COVID-19 response \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     We\u2019re here to help if you need it \n     Documentation \n     Resources \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         In the wake of COVID-19, Platform.sh is fully operational and functioning at 100% reliability. We continue to closely monitor the impact of COVID-19 on our business and our customers. Our priority remains the health and safety of our team and our communities. \n Platform.sh maintains a SOC-2 and PCI audited Business Continuity Plan (BCP) and Disaster Recovery (DR) plan. This document establishes the plan used to recover Platform.sh services quickly and effectively following a service disruption that falls beyond the scope of our Incident Management process. You can find links below to our  documentation  on how we approach resilience. \n We\u2019re here to help if you need it \n Platform.sh is ready to help if you\u2019re facing increased traffic to your websites as a result of the COVID-19 pandemic, or if you\u2019re coping with business changes. \n Current Platform.sh customers can connect with us through our  ticket system  to let us know if you need additional capacity, technical support, or if you\u2019re experiencing issues with your business that may affect your Platform.sh subscription. We want to do our best to help you make it through this crisis. \n \n   \n     Have a COVID-19 response site or app?   Let us run it for you for free \n Do you need to deploy a website to serve your community? Or to share news? Or to find new ways of communicating with an organization that is  suddenly remote ? During this crisis, we want to help. If you are running a website or app to serve government, educational, public health, or community initiatives, we will provide a Standard project at no cost to you for at least 90 days. If you need more capacity, let\u2019s talk. \n You don\u2019t have to be an expert \n You can launch over 50 different tools today on Platform.sh with a click\u2013from Content Management Systems like  Drupal  and  WordPress  to collaboration and community tools like Mattermost and Nextcloud. You can also build or migrate your existing application. We support eight different programming languages. \n Get started by creating a  free trial site  then contact us (below) to upgrade your project to production. You will not need a credit card. \n \n   Contact us \n   \n \n\n   \n   \n   \n \n \n \n Documentation \n \n Platform.sh security and compliance \n High-availability 99.99% uptime hosting options with built-in CDN and disaster recovery \n The Platform.sh team is remote-first, and resilient \n Platform.sh global system status \n \n \n \n Resources \n \n A Survival Guide for remote work \n How to deploy Mattermost (Slack alternative) on Platform.sh \n Deploy Nextcloud on Platform.sh for secure, private file sharing \n Tune in to our Deploy Friday series of talks with industry leaders \n Check out our developer and platform leader-focused web series \n \n \n \n Updated 2020-03-27 00:00:00 +0000 UTC \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "Platform.sh Demos", "url": "https://platform.sh/product/demos/all/", "documentId": "32e5da565006e9b3e27c77d67b37a5796ac9a4cd", "text": "\n   \n     \n       Platform.sh Demos \n     \n     \n       \n         \n       \n     \n   \n \n   \n     \n       \n         \n           Featured \n           All demos \n         \n         \n          \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n                  \n                \n                  \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n                  \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n                  \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n                  \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n          \n            \n          \n            \n              \n                \n                  \n                \n                  \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n                \n                  \n                \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n            \n              \n            \n          \n\n           \n             \n               \n                 \n                  Categories\n                 \n                 \n                   \n                     \n                       \n                      All\n                     \n                   \n\n                  \n                     \n                       \n                         \n                        cli\n                       \n                     \n                  \n                     \n                       \n                         \n                        configuration\n                       \n                     \n                  \n                     \n                       \n                         \n                        drupal\n                       \n                     \n                  \n                     \n                       \n                         \n                        environments\n                       \n                     \n                  \n                     \n                       \n                         \n                        integrations\n                       \n                     \n                  \n                     \n                       \n                         \n                        local\n                       \n                     \n                  \n                     \n                       \n                         \n                        php\n                       \n                     \n                  \n                     \n                       \n                         \n                        python\n                       \n                     \n                  \n                     \n                       \n                         \n                        saas\n                       \n                     \n                  \n                     \n                       \n                         \n                        scaling\n                       \n                     \n                  \n                     \n                       \n                         \n                        security\n                       \n                     \n                  \n                     \n                       \n                         \n                        updates\n                       \n                     \n                  \n\n                 \n               \n             \n           \n         \n       \n     \n   \n \n     \n       \n         \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n              \n                \n                \n              \n            \n          \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Connecting your local development environment to Platform.sh \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Controlling costs with Platform.sh as your virtual DevOps team \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n              \n                \n                \n              \n            \n          \n            \n              \n                \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How do I manage a complex development workflow for my team? \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How do I onboard new developers to my team? \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How Platform.sh provides white-label tools to power your SaaS application \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to add new services to your Platform.sh application \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to install Drupal with the Platform.sh CLI \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to integrate Platform.sh with GitHub, Bitbucket, or GitLab \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to keep your development environments in sync with prod \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to launch a Django 2 project with the Platform.sh CLI \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to manage Drupal 8 Multi-site \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to run Anaconda on Platform.sh \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to scale your Platform.sh projects to meet demand \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to update a fleet of websites with the Platform.sh API or command line \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to update Drupal with Composer \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to upgrade runtime versions with one line of code \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to use Elasticsearch with Drupal \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n              \n                \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Platform.sh overview \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Splitting your monolithic application into microservices \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n          \n            \n          \n            \n          \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Using Laravel with the Platform.sh CLI \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         What is the Platform.sh approach to security? \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n            \n              \n                \n                \n                 \n                  \n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         What service types does Platform.sh support? \n       \n     \n   \n \n\n                 \n                \n              \n            \n          \n         \n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to use Elasticsearch with Drupal", "url": "https://platform.sh/product/demos/drupal-elasticsearch/", "documentId": "089ddacd1ade3b58545e707d720ba322722c2c39", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to use Elasticsearch with Drupal \n       \n     \n     \n       \n         \n          \n             php \n          \n             drupal \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Elasticsearch is a distributed RESTful search engine built for the cloud.       \n    \n    \n       This demo shows how to configure Elasticsearch to work with Drupal on Platform.sh.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Platform.sh fully supports Elasticsearch and Solr for search.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Then you can install the Drupal modules to your application, and push.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Configure the Elasticsearch cluster in Drupal, noting the machine name that you give it.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Finally, add some glue code to your  settings.php  using the relationship\n\n  \n\n\n  \n    \n\n      name and the name of the cluster to add Elasticsearch to your Drupal config.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Now that it's enabled, you can configure your Elasticsearch instance in the Search API, and you're ready to go.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to manage Drupal 8 Multi-site", "url": "https://platform.sh/product/demos/drupal-multisite/", "documentId": "b81efc9fa1332ded491a5c529d50c62c3c75c935", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to manage Drupal 8 Multi-site \n       \n     \n     \n       \n         \n          \n             drupal \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Drupal can be configured to allow multiple sites to be served from a single codebase.\n       \n    \n    \n       This demo shows how to implement a Drupal multi-site project on Platform.sh.\n       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      You can set up each site with a separate subdomain on Platform.sh quickly with only a\n\n  \n\n\n  \n    \n\n      few modifications to our Drupal 8 template.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      First, you can modify your  routes.yaml  file to assign a unique subdomain for each site.\n\n  \n\n\n  \n    \n\n      We're going to use the subdomains  first  and  second  for the two sites, and reuse those\n\n  \n\n\n  \n    \n\n      names throughout all of the following configuration steps. Notice how each subdomain is pointing at the same application,\n\n  \n\n\n  \n    \n\n      called  app , as its upstream route.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Next, you can give each site its own  config/sync  subdirectory, as well as settings in the\n\n  \n\n\n  \n    \n\n       sites  subdirectory. To start off, each site's settings can be identical to those in\n\n  \n\n\n  \n    \n\n       default , but you can always customize them when you need to.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Each subsite,  first  and  second  has its own database and endpoint, so we will\n\n  \n\n\n  \n    \n\n      give each of them a corresponding relationship in our  .platform.app.yaml  file.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Each of those databases is defined for the same MariaDB instance in the project's  services.yaml  file.\n\n  \n\n\n  \n    \n\n      Notice that each database's relationship uses the service name  db  but then includes the unique\n\n  \n\n\n  \n    \n\n      endpoint defined for each of the two sites.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Once we deploy the application, we can see that each subdomain contains its own separate Drupal 8 installation.  \n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      We kept the subsite and endpoint names identical so that we could include some glue code that gets each installation\n\n  \n\n\n  \n    \n\n      to talk to the right database. While we did not cover that code in this demo, it's relatively simple, so be sure to\n\n  \n\n\n  \n    \n\n      check out our Drupal 8 Multisite template on GitHub for all of the details.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to launch a Django 2 project with the Platform.sh CLI", "url": "https://platform.sh/product/demos/django-cli/", "documentId": "1314bc323d0ad472cd0763344e25e020e3b35196", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to launch a Django 2 project with the Platform.sh CLI \n       \n     \n     \n       \n         \n          \n             python \n          \n             cli \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Django is a web-application framework written in Python.       \n    \n    \n       Django applications can be initialized to run on Platform.sh quickly using the Platform.sh CLI.       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      First, you can use the CLI command  platform create  to create a new project,\n\n  \n\n\n  \n    \n\n      specifying the region, plan size, number of development environments, and storage you want\n\n  \n\n\n  \n    \n\n      for the project. The project will be created in just a few seconds, and the CLI will provide\n\n  \n\n\n  \n    \n\n      a project ID you can now use to interact with it.  \n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Next, you can use the CLI command  platform environment:init  along with the\n\n  \n\n\n  \n    \n\n      project ID to initialize the project with an existing Django repository, such as one of our\n\n  \n\n\n  \n    \n\n      Django templates. So long as the repository contains Platform.sh configuration files, it will\n\n  \n\n\n  \n    \n\n      then build and deploy the site. First, Platform.sh will run through the build hook of the application's\n\n  \n\n\n  \n    \n\n       .platform.app.yaml  file, which defines its build process, by first downloading all of its\n\n  \n\n\n  \n    \n\n      dependencies defined in the  Pipfile.lock . Once completed, Platform.sh will validate domains\n\n  \n\n\n  \n    \n\n      for the environment, and issue new Let's Encrypt certificates for them if not present or if they will\n\n  \n\n\n  \n    \n\n      soon expire. Then the environment is created and deployed.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Finally, you can verify that the Django application deployed successfully by visiting the site using\n\n  \n\n\n  \n    \n\n      the CLI command  platform url .\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      The command will open a new browser window, and you will see that your Django site is now ready.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "How to install Drupal with the Platform.sh CLI", "url": "https://platform.sh/product/demos/drupal-install-cli/", "documentId": "cb742cdcd99ffbf69520b1f741f0fa2fa62a8a47", "text": "\n     \n       \n         \n           All demos \n         \n       \n     \n     \n       \n         How to install Drupal with the Platform.sh CLI \n       \n     \n     \n       \n         \n          \n             drupal \n          \n             cli \n          \n         \n       \n     \n   \n     \n       \n\n         \n           \n             \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n             Slideshow \n           \n           \n             View full screen \n             \n \n \n \n \n \n\n\n           \n         \n\n\n\n         \n           \n         \n\n         \n           \n             \n \n \n \n\n \n             Video \n           \n         \n\n         \n           \n         \n\n\n         \n           \n             \n \n \n \n \n \n \n \n\n \n             Notes \n           \n         \n        \n\n\n\n\n\n  \n    \n       Drupal is a flexible and extensible CMS framework written in PHP.       \n    \n    \n       This demo shows how to install Drupal on Platform.sh using the CLI.       \n    \n  \n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      First, you can use the CLI command  platform create  to create a new project,\n\n  \n\n\n  \n    \n\n      specifying the region, plan size, number of development environments, and storage you want\n\n  \n\n\n  \n    \n\n      for the project. The project will be created in just a few seconds, and the CLI will provide\n\n  \n\n\n  \n    \n\n      a project ID you can now use to interact with it.  \n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Next, you can use the CLI command  platform environment:init  along with the\n\n  \n\n\n  \n    \n\n      project ID to initialize the project with an existing Drupal repository, such as our\n\n  \n\n\n  \n    \n\n      Drupal 8 template. So long as the repository contains Platform.sh configuration files, it will\n\n  \n\n\n  \n    \n\n      then build and deploy the site. First, Platform.sh will run through the build hook of the\n\n  \n\n\n  \n    \n\n      application's  .platform.app.yaml  file which defines its build process. Once completed,\n\n  \n\n\n  \n    \n\n      Platform.sh will validate domains for the environment, and issue new  Let's Encrypt certificates for them\n\n  \n\n\n  \n    \n\n      if they not present or if they will soon expire. Then the environment is created and deployed.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      Finally, you can verify that Drupal deployed successfully by visiting the site using\n\n  \n\n\n  \n    \n\n      the CLI command  platform url .\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n    \n     \n  \n\n\n  \n    \n\n      The command will open the environment in a new browser window, and you will see that\n\n  \n\n\n  \n    \n\n      your Drupal site is now ready to install.\n\n  \n\n\n  \n    \n         \n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Deploy", "title": "Deploy your open-source software as SaaS with Platform.sh ", "url": "https://platform.sh/deploy/", "documentId": "fda9bfe09581f6cc89a9d108b37ae0cde896e61e", "text": "\n   \n     \n       \n     \n         Deploy on Platform.sh \n\n        \n\n        \n         With just one click you can now deploy your project on Platform.sh. \n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n        \n      \n     \n   \n \n   \n     \n     \n     \n       \n        Building a software business or an open-source community is hard enough. That's why we've built the Deploy on Platform.sh button\u2014to enable users to launch software with a click from their web browser, with zero infrastructure configuration, no command lines, and all the services your application needs to run in production.\n       \n       \n        Your customers and prospects can skip long installation instructions and debugging of dependencies, and instead immediately onboard into your software without friction.\n       \n       \n        You can use the Deploy on Platform.sh button to grow your open-source project's user base, enable quick demos of your SaaS, or onboard new customers. Need help? We're on  Slack , or you can email us  here  about partnerships.\n       \n     \n   \n \n   \n     \n       How it works \n     \n     \n       The Deploy on Platform.sh button is a simple new way to deploy your software. You can add your button to any web page (including your GitHub pages) to enable your users to quickly launch a new project on our platform. With next to no configuration required, this button creates a link to an existing codebase template to deploy your project. \n     \n   \n \n   \n     \n       \n     \n     \n       Step 1. Set up your Platform.sh configuration files \n       \n        Platform.sh provides  declarative infrastructure . Simply describe the services your application needs with simple  YAML  files, add those files to your public Git repository, and we take care of deploying your software and all its dependencies.\n       \n       \n        To make your application deployable on Platform.sh, you'll need three key files in your public Git repository: the  .platform.app.yaml ,  services.yaml , and  routes.yaml . These define the services your app needs (like MySQL, Redis, MongoDB, etc.), the layout of your application, any build or deploy steps required, and the routing between application containers.\n       \n       \n        You can find extensive documentation on how to set up your configuration files in our  documentation site , and you can chat with our Developer Relations team on our  public Slack channel .\n       \n     \n   \n \n   \n     \n       \n     \n     \n       Step 2. Create your Platform.sh template file \n       \n        Once you've created your configuration files, your application is deployable on Platform.sh. We'll take care of parsing those files and turning the configuration into running code in containers on our multicloud grid.\n       \n       \n        Now, to make your software  discoverable , you'll want to add one more  YAML  file: the  template-definition.yaml . This file provides Platform.sh with some extra metadata about your software, including a logo, description, keywords, and the public Git repository. Your template file will make it possible for users to deploy your software, and for Platform.sh to display metadata within the project creation process, and our  3rd Party Template Library .\n       \n     \n   \n \n   \n     \n       \n     \n     \n       Step 3. Generate your Deploy on Platform.sh button \n       \n        To make it as straightforward as possible for users to discover and deploy your software, we've created a link builder, below. Simply paste in the full public URL of the  template-definition.yaml  you created in Step 2, and we'll generate a button link for you.\n       \n     \n   \n \n   \n     \n       \n         \n           \n             Build your deploy button \n             To get an embeddable snippet for your webpage, simply provide your project information below and click submit to generate your button. \n           \n         \n\n         \n \n   \n     \n       First Name \n       \n     \n     \n       Last Name \n       \n     \n     \n       Email \n       \n     \n   \n   \n     \n       Project name \n       \n     \n     \n       Template Public URL \n       \n     \n   \n   \n     \n       \n   Get my link \n   \n \n\n     \n   \n \n \n   Let's do this! Grab the link below and add it to your repo to get started. \n \n\n\n         \n           \n             \n               url goes here \n               \n     Copy \n     \n \n\n             \n           \n         \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "The Platform.sh build-and-deploy pipeline ", "url": "https://platform.sh/blog/the-platformsh-build-and-deploy-pipeline/", "documentId": "a271c556e95f5a3ba78ef7e7963084beeab144de", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           The Platform.sh build-and-deploy pipeline \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Christopher Skene \n                  \n                   Regional Business Development Manager Asia Pacific \n                  \n                  \n                 \n            \n          \n         \n         03 Oct 2017 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         A repeatable and consistent build-and-deploy pipeline is an essential part of any modern web application. Platform.sh has this philosophy at the heart of it\u2019s design, tying configuration, code and build artifacts together using Git semantics. \n Build? What Build? This is not C++?! \n Part of what explains the huge success of web technologies is the simplicity and low barrier to entry presented by the model of dynamic script languages. With Ruby, Python and PHP you could just upload files to a server (and in PHP\u2019s case you didn\u2019t even need to start a daemon) and\u00a0it would just work.\u00a0But that model introduced a number of problems... \n \n \u201cI know PHP! How hard could running an exchange be?\u201d never goes anywhere good. \n \n As David Gerard notes about the  Mt. Gox bitcoins exchange heist , without structure and method bad stuff happens. No serious developer would develop an application these days without having some tooling. First and foremost dependency management: you want a consistent process to pull updated versions of 3rd party libraries that your project uses, with as little friction and effort as possible, so you can quickly apply any and all security fixes. If you can\u2019t apply security hotfixes as soon as they are out, you are going to get hacked. It\u2019s not an \u201cif\u201d question, it is a \u201cwhen\u201d question. \u201dWhen\u201d usually being sooner than you\u2019d like. Without that... well you get an Equifax (and you don\u2019t want to be an Equifax). \n But often it doesn\u2019t end there. More and more technologies, even dynamic scripty ones, rely on a compile/build phase. This is true not only for front-end applications but also for things like NodeJS backends, where TypeScript, CoffeeScript and a billion other things transpile into other things. \n Javascript is a compile target not a programming language \u2014 Nick Main ? (@_nickmain)  September 3, 2017 \n \n We also see how much compiled languages are gaining traction; languages like Golang (which you can run on Platform.sh now too), Crystal, or Elixir. \n In the modern world go Build Or Go Bust! \n Build artifacts are components of your web application that are generated when you compile it. While some applications have compilation at the heart of their design, many popular web languages eschewed this approach in favour of dynamic runtimes\u00a0and generally only use this approach with external shared components or libraries. \n With Platform.sh, you don\u2019t just get a few build artifacts in your project directory,  your entire application is an artifact of development  . This artifact is stored and reused wherever the same git commit is deployed to a new environment, so simply by using Platform.sh\u2019s standard build tools, you get a consistent and repeatable build on every git branch. \n Understanding this pipeline and how it works will help you build better web applications on Platform.sh, and is also the key to knowing how to integrate with other services that you use (as well as when you no longer need them). \n How it works \n When you push a new change to Platform.sh, we take your code in Git and move it through a number of steps to turn it into a running, \u201cbuilt\u201d application. These steps can be broadly broken down into two phases, the build phase, and the deploy phase. \n The build process will run the \u201cbuild flavor\u201d (if present), install dependencies, then run the user-provided build hook. \n The deploy process will run the deploy hook. \n All these properties are defined in the `.platform.app.yaml` file, and documented in our  online documentation , and there\u2019s also a  screencast of this build process in action . \n The Build phase \n The Build phase is where we do all the heavy lifting to prepare your application for deployment. It\u2019s where we load external resources, pack assets, add dependencies and do any tasks which require the filesystem to be writable. During the build phase, your application can access the network, for example for doing a ` composer install ` but is not remotely accessible or available on the internet, and does not have any of its running Services (databases, search indexes) attached. \n In the build phase we do three things: \n \n\t \n\t Install any  listed system-level dependencies . \n\t \n\t \n\t For PHP and NodeJS projects, run  tasks defined for\u00a0the build flavor , for example ` composer install `. All other project types currently ignore this step. \n\t \n\t \n\t Run a build hook, defined in your  build hook \u00a0in your .platform.app.yaml file. \n\t \n \n The build hook is where you perform steps that require dynamic code generation or file system access, for example: \n \n\t \n\t Installing dependencies, e.g using npm, yarn, composer, bower, or pip \n\t \n\t \n\t Compiling static assets that won\u2019t change, e.g. sass, through gulp or grunt \n\t \n\t \n\t Running static code tests, e.g. phpunit \n\t \n \n Here's the  build hook from our example Symfony repository ... \n \nhooks:\n\u00a0   build: |\n\u00a0       rm web/app_dev.php\n\u00a0       bin/console --env=prod assets:install --no-debug \n At the end of the build phase, your application should be completely built and ready to deploy. At this point, it will be made read-only. \n The Deploy phase \n The deploy phase is run after the application container has been started. You can access other services at this stage (database, search service, etc.). The disk where the application lives is read-only at this point. Incoming requests are paused while the deployment runs. \n During the Deploy phase we run only one user-definable step: \n \n\t \n\t Run a deploy hook, if provided in your .platform.app.yaml file. \n\t \n \n Deploy hooks are where you run commands that prepare your applications services and dynamic assets. For example: \n \n\t \n\t Clear your caches \n\t \n\t \n\t Run database migrations and updates \n\t \n\t \n\t Build dynamically generated assets that are stored on file mounts \n\t \n\t \n\t Hook into third-party testing tools \n\t \n \n Here's the deploy hook from our example Symfony repository... \n \nhooks:\n\u00a0   deploy: |\n\u00a0       bin/console --env=prod cache:clear \n If everything goes well and your hooks execute correctly, your environment is now moved into place and replaces the running environment, and you can see the results of the deploy hook in the  /var/log/deploy.log \u00a0file when logged in to the environment via SSH. \u00a0(If everything doesn\u2019t go well, be glad that it was so simple for you to test out this deploy process in a development branch before merging into production) \n Summary \n With Platform.sh, you get powerful, easy-to-use continuous deployment tools that allow you to manage complex pipelines easily from git commit through to a running environment. \u00a0The Build and Deploy phases are the key to understanding how you can get the maximum value from this pipeline, and where to add your own integrations and code. \n In future guides we\u2019ll look at how to integrate with third-party testing tools, how to run tests in the build pipeline, and other integrations. \n Further reading \n \n\t \n\t Platform.sh Documentation on Build and Deploy Tasks \n\t \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Terms of Service", "title": "Terms of Service ", "url": "https://platform.sh/tos/", "documentId": "eb38eb5c15c689eca29e1ba45eac21d36fcf6c59", "text": "\n     \n       \n         \n   \n     \n       Terms of Service \n       Looking for our GDPR & CCPA DPA?  Sign it here . \n     \n   \n \n \n   \n     SECTION 1 - OVERVIEW \n     SECTION 2 - ONLINE SERVICE TERMS \n     SECTION 3 - GENERAL CONDITIONS \n     SECTION 4 - ACCURACY AND COMPLETENESS OF INFORMATION \n     SECTION 5 - SERVICES \n     SECTION 6 - FEES AND TERM \n     SECTION 7 - CENSORSHIP \n     SECTION 8 - INTERACTION WITH THIRD PARTIES \n     SECTION 9 - PERSONAL INFORMATION \n     SECTION 10 - DISCLOSURES AND NOTICES \n     SECTION 11 - INTELLECTUAL PROPERTY, DMCA TAKE DOWN POLICY AND OTHER LIMITATIONS \n     SECTION 12 - SECURITY RESPONSIBILITIES; DISCLAIMER OF WARRANTIES; LIMITATION OF LIABILITY; LIMITED UPTIME GUARANTEE \n     SECTION 13 - INDEMNIFICATION \n     SECTION 14 - SEVERABILITY \n     SECTION 15 - TERMINATION \n     SECTION 16 - ENTIRE AGREEMENT \n     SECTION 17 - GOVERNING LAW AND DISPUTE RESOLUTION \n     SECTION 18 - CHANGES TO TERMS \n     SECTION 19 - CONTACT US AND THANK YOU \n     SECTION 20 - CHANGELOG \n   \n \n\n SECTION 1 - OVERVIEW \n (Please, please read the whole thing, this is a contract after all.) \n Platform.sh is your hosting solution. Our PaaS (Platform as a Service) will let you host your products and services on a dedicated real-time basis, configured and optimized by us, Platform.sh. Our end to end complete infrastructure allows you to simply deploy your applications to the cloud without any headaches. \n We automatically configure and run not only your application server but all the services on which it depends (databases, search engines, cache backends, etc.). On top of an easy to navigate web interface, we offer you APIs to control all your third-party integrations and tools. \n \u201cPlatform.sh\u201d is operated by Platform.sh SAS, a French company located at 131, Boulevard de S\u00e9bastopol, Paris, 75002 France, and Platform.sh, Inc. a Delaware registered corporation, addressed at PO Box 536 Brooklyn, MI 49230 and may include its affiliates, subsidiaries, directors, officers, employees, agents, partners, contractors, and/or licensors (together, referred to throughout these Terms of Service as \u201cPlatform.sh\u201d or \u201cus\u201d or \u201cwe\u201d). \n By visiting our site and/ or purchasing something from us, you agree to be bound by the following terms and conditions (\u201cTerms of Service\u201d, \u201cTerms\u201d), including those additional terms and conditions and policies referenced herein and/or available by hyperlink, including our  Privacy Policy . These Terms of Service apply to all users of the site, including without limitation users who are browsers, vendors, customers, merchants, and/or contributors of content. We offer many services, tools, products, software, and offerings on related Platform.sh websites (the \u201cServices\u201d), including but not limited to, all information, tools and Services available from this website (or \u201csite\u201d) to you (the \u201cuser\u201d, \u201ccustomer,\u201d \u201ccompany\u201d conditioned upon your acceptance of such terms, conditions, policies and notices in or referenced in the Terms of Service. \n Please read these Terms carefully before accessing or using our website. By accessing or using any part of the site, you agree to be bound by these Terms. If you do not agree to all the terms and conditions of this agreement, then you may not access the website or use any services. If these Terms of Service are considered an offer, acceptance is expressly limited to these Terms of Service. \n METERED AND USAGE BASED: Our Services are bundled in monthly plans, but the actual billing is based on the actual usage you make of our services. To learn more about our self-service plans, please visit our  pricing page . \n UPTIME: We try to keep our Services up all the time, but the self-service plans only come with a very limited uptime guarantee of 99.5% (our track record is much higher, but we will not commit to it because not all services run with redundancy). Most other providers won\u2019t even commit to this. If you need guaranteed uptime because you depend on your website for your company\u2019s income you should check out our  ENTERPRISE  offering. \n SUPPORT: The self-service Professional plans do not include personalized support. We do give support, on a best effort basis, through an online service desk, and on public forums. We are sorry but our engineers will simply not take phone calls (if you are using this service you are probably a developer, and do not like taking phone calls either). If your organization needs people they can contact 24/7, again you will need to purchase an optional  ENTERPRISE  offering (which redefines white gloving, our support staff will be more than happy to talk to you!). Please contact your salesperson for our terms. \n ENTERPRISE SUPPORT: Selected self-service Professional plans do offer an optional enterprise SLA, which provides the following ticket response times through an online service desk: Priority 1 \u2013 Less than 1 hour, Priority 2 & 3 \u2013 Less than 1 working day. This SLA is offered on an annual term basis, paid for in advance, and is non-refundable. Further details can be found in the specific terms referenced in the Order/Quote form you will need to sign to buy this. \n SECTION 2 - ONLINE SERVICE TERMS \n You may not use our Services for any illegal or unauthorized purpose nor may you, in the use of the Services, violate any applicable laws in your jurisdiction (including but not limited to copyright laws). \n You must not transmit any worms or viruses or any code of a destructive nature. \n A breach or violation of the Terms will result in an immediate termination of your Services. \n SECTION 3 - GENERAL CONDITIONS \n You understand that some content (excluding credit card information) may be transferred unencrypted and involve (a) transmissions over various networks; and (b) changes to conform and adapt to technical requirements of connecting networks or devices. Your credit card information is always encrypted through our payment processor (e.g. Stripe), during transfers over networks. \n Your access to our Services are granted and provided to you as a licensee, on a limited fully paid, and non-exclusive basis. You agree not to reproduce, duplicate, copy, sell, resell or exploit any portion of the Services, use of the Services, or access to the Services or any contact on the websites through which the Services are provided, without express written permission by us. \n The headings used in these Terms of Service are included for convenience only and will not limit or otherwise affect these Terms. \n SECTION 4 - ACCURACY AND COMPLETENESS OF INFORMATION \n We are not responsible for information made available by you that is not accurate, complete or current. Your personal contact information we collect may be deleted, updated and/or completed in your account settings at any time. Most changes will be reflected in your account immediately. You may also contact us for assistance in making sure your contact information is accurate and up-to-date. Your request for account change or deleted information may be verified or retained if we have legal basis for doing so in accordance with our  Privacy Policy . \n SECTION 5 - SERVICES \n We reserve the right to limit the sales of our Services to any person, geographic region or jurisdiction. We may exercise this right on a case-by-case basis, in accordance with applicable law. We reserve the right to limit the quantities of any Services that we offer. All descriptions of our Services, such as product pricing, are subject to change at any time without notice, at our sole discretion. We reserve the right to discontinue any Services at any time. Any offers for your products or services made on our site is void where prohibited (for example, on our public forums). \n You commit yourself to choosing one of our Service offerings that meet your needs, or those of your organization or users. We may, in the future, offer new or Platform.sh services and/or features through this website (including, the release of new tools and resources). Such new features or third party tools and/or services shall also be subject to these Terms of Service. You commit to abide by and to assure adherence to the technical specifications and limitations of such Services, to assure that the use of our Services is done within the limits of the law and in accordance with these Terms. \n Specifically, we call your attention to the fact that, in accordance with applicable law, specifically French law, you must clearly be identifiable to third parties in your function as a web host, if you use our services to host public communication services online (notably websites or blogs), regardless of whether you are only an editor to such services. \n Platform.sh Services provides you with a fully autonomous management interface including: \n \n \n to subscribe, modify, and/or to cancel Platform.sh Services and options to a more or less powerful plan, throughout the duration of the contract; \n \n \n to manage your hosting in real time (and notably publish online, delete, or modify all or some of the content on a real time dedicated basis); \n \n \n to modify and update your contact information associated with Platform.sh hosting service. \n \n \n Some changes may incur additional fees, for which you will be informed and will be subject to your express prior consent. \n You understand that some changes cannot be performed, most notably you may not reduce the amount of storage dedicated to any specific environment or project. In order to reduce storage, you may need to subscribe to a new Platform.sh Service offering and transition the content from the larger one to the smaller one. \n As a reminder, in accordance with these Terms, your access codes, which are private, are under your full and complete responsibility. Platform.sh will not be accountable for misuse by third parties of your account, it is your responsibility to keep such credentials private and safe. \n For the purpose of ensuring the proper operation of its Services, and the safety and stability of the system, Platform.sh may intervene under certain circumstances, including: \n \n \n to stop a technical malfunction inherent to our system; \n \n \n to carry out a maintenance operation; \n \n \n in case of trouble affecting the safety and/or the stability of the system: abusive use and/or illegal use, or continued misuse following a warning from our service (e.g.: spamming, fraud, hacking, unauthorized access attempts\u2026); obvious damage to, or attempt to damage our infrastructure caused by your instance of your software (e.g. DDoS, botnet, spamming). \n \n \n In any event, Platform.sh reserves the right to interrupt some or all of the Services in order to perform a technical intervention, particularly in the case of defective operation, or to improve the operation, or to perform maintenance. In accordance with our 99.5% self-service uptime, we will do everything necessary to limit the time of such interruption as much as possible and, if possible, we will give you reasonable prior notice, indicating the date, type, and duration of the intervention, so that you can make all the necessary arrangements. \n However, you acknowledge that we will not be able to give you prior notice in the case where the Service interruption is due to an external reason, for example emergency security patching (and in particular, one that would be inherent to the internet itself, acts of God, war, terrorism, riot, embargoes, acts of civil or military authorities, fire, floods, earthquakes, labor strikes, industrial disputes, or fuel crises) or if it is explicitly requested by a competent authority or in application of current French law. \n Platform.sh Professional is intended to be used to host websites, web-applications, and web-APIs with unmetered bandwidth based on fair-use assumptions. It is not intended to be used as a download service or as a Content Delivery Network (CDN). As such, the Services self-service offering currently does not limit the bandwidth you may use, as long as it falls inside the realm of what Platform.sh deems as ordinary usage. The Professional Enterprise offering includes CDN with a 1Tb per month included amount, beyond which overages are chargeable. \n Our development environments share resources between themselves and as such are not intended to be used for production type workloads such as intensive calculations and regular long running jobs. \n Should Platform.sh deem a customer\u2019s account as exceeding fair use bandwidth consumption, or development environment usage, Platform.sh will notify the customer and allow the customer to remedy the problem. However, should a customer\u2019s\u2019 bandwidth or Central Processing Unit (CPU) usage be significantly greater than what Plaform.sh deems as fair use of the Services, Platform.sh reserves the right to suspend or throttle the customer\u2019s account where appropriate. In such event, Platform.sh will notify you and discuss other available options and Services that could better suited for your use and needs. \n SSL Certificates \n Platform.sh provisions automatically for every site and environment SSL certificates using the \u201c Let\u2019s Encrypt \u201d service (with some limitations). You may provision your own SSL certificates for production environments, but development environments will always carry a \u201cLet\u2019s Encrypt\u201d provisioned certificate. By using the Platform.sh service, you recognize Platform.sh as a duly authorized agent for the provisioning of such certificates. \n Free Trial \n If you sign up for our 30-day free trial period (the \u201cFree Trial\u201d), you may be required to provide a valid credit card or other valid payment method. Your provided payment method will be charged on the first day following the Free Trial unless you cancel and uninstall your ongoing projects utilizing our Services, as required for cancellation, before the end of the Free Trial period. The Free Trial is only available to first-time users of the service. Platform.sh reserves the right, in its absolute discretion, to determine your eligibility for a Free Trial, and, subject to applicable laws, to withdraw or to modify a Free Trial at any time without prior notice and with no liability, to the greatest extent permitted under the law. \n Currently, the Free Trial is limited to development plans and you may not host production sites using the Free Trial. \n The Free Trial offers development plans which have different resource allocations than our production plans, and as such, a project that successfully deploys as a Free Trial development plan may not be able to deploy at any of the other plans. \n You may not sign up for multiple accounts in order to receive additional Free Trial benefits. We may terminate or suspend a Free Trial at any time without notice or liability, and in our sole discretion, and we reserve the right to adjust pricing relative to any Services offered through a Free Trial. \n Sponsored Sites \n From time to time, at its sole discretion, Platform.sh may sponsor the hosting of selected sites. Such hosted sites must comply with the current Terms regardless of whether they pay for the Services or not. Platform.sh reviews all sponsored hosted sites from time to time and may decide to terminate, without prejudice, the Services at its sole discretion. \n Sponsored sites are expected to display a widget \u201cPowered by Platform.sh.\u201d Platform.sh may update such widget\u2019s contents from time to time and the sponsored site will update the contents in a timely fashion. A sponsored site may request, and Platform.sh will accept, variations of the widget as long as such variations have written pre-approval from Platform.sh, or fall within branding guidelines provided by Platform.sh .In accordance with such sponsorship, Platform.sh may announce on its own media presence, both online and offline, regarding such sponsored project hosting, and kindly ask the sponsored site communicate the same (at least once) over its social media presence (Twitter, mailing list, etc) the sponsored hosting. \n If such eligible customer project is a registered non-profit organization in the US or Germany, it is also expected to provide paperwork to register an in-kind donation to the organization of the equivalent price of the service ($50 USD/month or the EUR equivalent), for the non-profit organization\u2019s tax purposes. \n SECTION 6 - FEES AND TERM \n Our monthly plans for Services usually include a certain amount of resources (for example three included development environments or 5GB storage). In the future, we may change those plans, but we will not change the conditions of your subscription without prior notice. Such changes and our notification will never apply within the same billing period. \n You may, at any time, choose the compute capacity of your instance, augment its storage capacity, add more tools, services, users, or create new environments (see Section 5 -SERVICES for important details). Such additional services may incur additional costs. Currently, you can change: the number of users, storage capacity, the number of development environments and the size of your production plan. But know that this will change in the future and you will be allowed to change other elements. As such, these other elements (for example specifying larger development environments) will have their pricing detailed on our  pricing page and may either be billed at a prorated hourly rate, on a one-time basis or per billing period. \n Such prices, applicable incorporated terms, and packages are available on our  pricing page . The total bill for each month is calculated on a prorated per hourly usage basis with the default billing period being one month. \n Prices for our Services are subject to change without notice. We shall not be liable to you or to any third party for any modification, price change, suspension or discontinuance of the Service. \n We reserve the right to refuse any order you place with us. We may, in our sole discretion, limit or cancel quantities purchased per person, per affiliate, per household, or per order. These restrictions may include orders placed by or under the same customer account, the same credit card, and/or orders that use the same billing and/or shipping address. In the event that we make a change to or cancel an order, we will notify you by contacting the e-mail and/or billing address/phone number provided at the time the order was made. We reserve the right to limit or prohibit orders that, in our sole judgment, appear to be placed by dealers, resellers or distributors. \n Depending on the total estimated amount for the Services, we may require prepayment of part of, or the total amount of, the estimated current billing period. We may suspend or terminate any Services if it was not prepaid to the estimated billing period total. We may also modify your billing period as general policy or on a per-customer basis, as notified to you. At any time, you may access the estimation of your current billing period through your account. \n Your Services term are determined by your selected package and any applicable cancellation terms will apply. In accordance with our Services, Platform.sh will allow you to downgrade, upgrade, or terminate your Services within your account settings at any time, and such changes will be applied immediately, with the exception of termination, which pre-payment for the month will not be returned or paid back to you prorated. Upon your termination, you will not be charged for the next subsequent month, unless your package deems otherwise (e.g. quarterly or yearly package). \n In the event you cannot pay Platform.sh any portion of the fees when due, you must pay interest on all amounts not paid at the rate of one and one half percent (1.5%) per month or the highest rate permitted by law, whichever is lower. \n The applicable currency will be stated on the selected package of the pricing page\u2019s order confirmation; otherwise it is US dollars. Fees are not refundable. Unless explicitly identified as taxes on the order confirmation, all amounts due are exclusive of taxes, withholding, duties, levies, tariffs, and other governmental charges (including without limitation VAT), excluding taxes on Platform.sh\u2019s net income (collectively, \u201ctaxes\u201d), and you are responsible for payment of all such taxes. Both you and Platform.sh will reasonably cooperate to lawfully minimize taxes. \n SECTION 7 - CENSORSHIP \n Platform.sh exercises no control whatsoever over the content of the information passing through the network, email or website. The customer is solely responsible for the services it proposes to its end users through the usage of resources provided by Platform.sh. \n SECTION 8 - INTERACTION WITH THIRD PARTIES \n We may provide you with access to third-party tools and links over which we neither monitor nor have any control nor input.Third-party links on this site may direct you to third-party websites that are not affiliated with us. We are not responsible for examining or evaluating the content or accuracy and we do not warrant, and will not have any liability or responsibility for any third-party materials or websites, or for any other materials, products, or services of third-parties. \n You acknowledge and agree that we provide access to such third party links or tools \u201cas is\u201d and \u201cas available\u201d without any warranties, representations or conditions of any kind and without any endorsement. We are not liable and shall have no liability whatsoever for any harm or damages related to the purchase or use of goods, services, resources, content, or any other transactions made in connection with any third-party websites relating to your use of optional third-party tools. \n Any use by you of such third party optional tools offered through the site is entirely at your own risk and discretion and you should ensure that you are familiar with and approve of the terms on which tools are provided by the relevant third-party provider(s). Certain content, products and services available via our Services may include materials from third-parties. \n Please carefully review such third-party\u2019s policies and practices and make sure you understand them before you engage in any transaction. Complaints, claims, concerns, or questions regarding third-party tools products should be directed to the third-party. \n You agree that we shall not be responsible or liable for any loss or damage of any sort incurred as the result of any such third party dealings. If there is a dispute between participants on such third party website (or your own), or between users and any third party, you understand and agree that we are under no obligation to become involved. In the event that you have a dispute with one or more other users or third parties, you hereby release us, our officers, employees, agents, and successors in rights from claims, demands, and damages (actual and consequential) of every kind or nature, known or unknown, suspected or unsuspected, disclosed or undisclosed, arising out of or in any way related to such disputes. If you are a California resident, you shall and hereby do waive California Civil Code Section 1542, which says: \u201cA general release does not extend to claims which the creditor does not know or suspect to exist in his favor at the time of executing the release, which, if known by him must have materially affected his settlement with the debtor.\u201d \n In the case where any user authorized by you consents to a third party integration, you shall be deemed as agreeing to the passage of data to the third party integration partner for the purposes agreed upon between you and us. \n SECTION 9 - PERSONAL INFORMATION \n All information we collect on and through our site and our Services is subject to our  Privacy Policy . By using the Services, you consent to all actions taken by us with respect to your information in compliance with the Privacy Policy. \n SECTION 10 - DISCLOSURES AND NOTICES \n Occasionally we may, in our sole discretion, make changes to the Terms of Service and such incorporated agreements (e.g. the Privacy Policy, pricing page). When we make a material change to the legal terms relating to the Services, we will provide you with prominent notice as appropriate under the circumstances, (e.g., by displaying a prominent notice within the Services or by sending you an email). In some cases, we will notify you in advance, and your continued use of the Services after the changes have been made will constitute your acceptance of the changes. Please therefore make sure you read any such notice carefully. \n You agree that Platform.sh may provide disclosures and notices regarding the Services to you by posting such disclosures and notices on our website, emailing them to the email address listed in your Platform.sh account, or mailing them to the address listed in your Platform.sh account. You also agree that electronic disclosures and notices have the same meaning and effect as if we had provided you with a paper copy. Such disclosures and notices shall be considered to be received by you within 24 hours of the time it is posted to our website or emailed to you unless we receive notice that the email was not delivered. \n As a user, you must promptly report any known security deficiencies in, or intrusions to, our Services as soon as you have knowledge. You agree to comply with our responsible disclosure practices and provide us with an initial notice and 90 days by filing a support ticket to address any security vulnerabilities before publicly disclosing those. You agree that failure to do so would breach these Terms. \n You agree that, from the time you activate a paying account with Platform.sh until you terminate, we may identify you as a customer of Platform.sh. Neither you nor we will imply any untrue sponsorship, endorsement or affiliation between you and Platform.sh, but you are more than welcome to post a \u201cHosted on Platform.sh\u201d message anywhere regarding your service. \n SECTION 11 - INTELLECTUAL PROPERTY, DMCA TAKE DOWN POLICY AND OTHER LIMITATIONS \n You will not attempt (and will not allow others) to: \n \n \n Reverse engineer, decompile, disassemble or translate the Platform.sh service, or otherwise attempt to derive source code, trade secrets or know-how in or underlying any Platform.sh service or any portion thereof; unless specifically authorized in writing by an officer of Platform.sh. In the case specific components of Platform.sh are published as open source software, the customer agrees to respect the license terms of each component and agrees that the non-respect of such a license can lead to the immediate termination of the present service or contract with Platform.sh, without prejudice. \n \n \n Interfere with, modify, disrupt or disable features or functionality of Platform.sh, including without limitation any such mechanism used to restrict or control the functionality, or defeat, avoid, bypass, remove, deactivate or otherwise circumvent any software protection or monitoring mechanisms of our Services. \n \n \n The Services (including but not limited to all information, software, text, displays, images, video and audio, and the design, selection and arrangement thereof, but excluding any information or materials uploaded or otherwise provided by you), are owned by Platformsh, its licensors or other providers of such material and are protected by France and international copyright, trademark, patent, trade secret and other intellectual property or proprietary rights laws. \n These Terms of Service permit you to use our site solely as a means of procuring our Services, and you must not reproduce or attempt to reproduce or duplicate, distribute, modify, create derivative works of, publicly display, publicly perform, republish, download, store or transmit any of the material available on accessible through our Services, website, or mobile applications, except in the context of customary caching to increase performance and otherwise as required for the functioning of the Services. \n If you print, copy, modify, download or otherwise use or provide any other person with access to any part of our site or Services in breach of these Terms, your right to use the site and Services will cease immediately and you must, at our option, return or destroy any copies of the materials you have made. No right, title or interest in or to our Services, site, or any content on our site is transferred to you, and all rights not expressly granted are reserved by Platform.sh. Any use of the site not expressly permitted by these Terms of Service is a breach of these Terms of Service and may violate copyright, trademark and other laws. \n Trademarks \n The Company name, the terms Platform.sh, Platform.sh sas, Platform.sh Gmbh, Platform.sh, Inc, \u201cDeploy On Friday,\u201d the company logo and all related names, logos, product and service names, designs and slogans are trademarks of Platform.sh or its affiliates or licensors. You must not use such marks without the prior written consent of the company. All other names, logos, product and service names, designs and slogans on the website are the trademarks of their respective owners. If you upload any designs, logos or names subject to trademark or servicemark for use on the site, you represent and warrant that you have the right and authority to do so. \n Prohibited Uses \n You may use our Services only for lawful purposes and in accordance with these Terms of Service. We reserve the right to terminate your use of the Service or any related site for violating any of the following prohibited uses. \n You agree not to use the Services: \n \n \n In any way that knowingly violates any applicable federal, state, local or international law or regulation (including, without limitation, GDPR, any laws regarding the export of data or software to and from the US or other countries). For more information on GDPR, please visit our Privacy Policy. \n \n \n For the purpose of exploiting, harming or attempting to exploit or harm minors in any way by exposing them to inappropriate content, asking for personally identifiable information or otherwise. \n \n \n To transmit, or procure the sending of, any advertising or promotional material, including any \u201cjunk mail\u201d, \u201cchain letter\u201d or \u201cspam\u201d or any other similar solicitation. \n \n \n To knowingly infringe or violate the intellectual property rights or proprietary rights, rights of publicity or privacy, or other rights of any third party. \n \n \n In any way that is harmful, fraudulent, deceptive, threatening, abusive, harassing, tortious, defamatory, vulgar, obscene, libelous, or unlawful. \n \n \n To impersonate or attempt to impersonate Platform,sh, a Platform.sh employee, another user or any other person or entity (including, without limitation, by using e-mail addresses or screen names associated with any of the foregoing). \n \n \n To knowingly engage in any other conduct that restricts or inhibits anyone\u2019s use of the site or our Services, or which, as determined by us, may harm the Platform.sh or users of the site or our Services or expose them to liability. \n \n \n Additionally, you agree not to: \n \n \n Use the site or our mobile applications or any technological device or process in any manner that you know could disable, overburden, damage, or impair the site or interfere with any other party\u2019s use of the site, our mobile applications or Services, including their ability to engage in real time activities through the same. \n \n \n Use any robot, spider or other automatic device, process or means to access the Website or any of its content or any Services for any purpose, including monitoring or copying any of the material on the site or providing any competing services. \n \n \n Use any manual process to monitor or copy any of the material on the site or any other content of ours or for any other unauthorized purpose without our prior written consent. \n \n \n Use any device, software or routine that knowingly interferes with the proper working of the site or the provision of our Services. \n \n \n Introduce any viruses, trojan horses, worms, logic bombs or other material which is malicious or technologically harmful. \n \n \n Attempt to gain unauthorized access to, or knowingly interfere with, damage or disrupt any parts of the site, the infrastructure on which the site is stored, or any server, computer or database connected to the site or our Services. \n \n \n Attack the site or our Services via a denial-of-service attack or a distributed denial-of-service attack. \n \n \n Otherwise knowingly interfere with the proper working of the site or the proper provision of our Services. \n \n \n Customers or users residing in countries on the United States Office of Foreign Assets Control sanction list or the Restrictive measures (sanctions) in force of the European Union regarding Internet-based services, including Cuba, Iran, North Korea, Sudan and Syria, may not use the Platform.sh Services. \n Content Reliance on Information Posted \n We reserve the right to remove any content from our site at any time upon receipt of claims or allegations from third parties or authorities relating to such content or if we have cause to believe that you have breached these Terms of Service. You, not us, remain solely responsible for all content that you upload, post, email, transmit, or otherwise disseminate using, or in connection with, the Services, and you warrant that you possess all rights necessary to provide such content to us and to grant us the rights to use such information in connection with the Services and as otherwise provided herein. \n We do not warrant the accuracy, completeness or usefulness of the content on the Website. Any reliance you place on such information is strictly at your own risk. \n DMCA Copyright Policy and Copyright Agent \n Platform.sh respects the intellectual property rights of others. If you believe something on our site or our Services has infringed your intellectual property rights, please notify our local office, locations for which can be found on in our \u2018About us\u2019 page on our  Privacy Policy . To assist you as soon as possible, please go to our \u2018 Contact Us \u2019 page, or file a support ticket through your account and provide the following information: \n \n \n A physical or electronic signature of a person authorized to act on behalf of the owner of an exclusive right that is allegedly infringed. \n \n \n Identification of the copyrighted work claimed to have been infringed. \n \n \n Identification of the material that is claimed to be infringing or to be the subject of infringing activity and that is to be removed or access to which is to be disabled. \n \n \n Address, telephone number, and, if available, an electronic mail address where we may contact you. \n \n \n A statement that the complaining party has a good faith belief that use of the material in the manner complained of is not authorized by the copyright owner, its agent, or the law. \n \n \n A statement that the information in the notification is accurate, and under penalty of perjury, that you are authorized to act on behalf of the owner of an exclusive right that is allegedly infringed. \n \n \n Use of third party software \nPlatform.sh allows you to automatically deploy code and services which may have their own terms of services, copyright and licenses. It is your exclusive responsibility to ensure that you have proper licenses to any third party software and libraries and that you comply with their terms of service. This includes, but is not limited to you:\nYour own project code and any included libraries\nLibraries pulled during build time into your project through dependency management tools\nThird party services such as databases, search engines or caches.\nMost services automatically provisioned by platform.sh are open-source projects with a permissive OSI approved open-source license. Some (such as Elastic Search) have premium versions where you may supply your own license keys. Others (such as MongoDB or the Oracle Java Runtime) may require a specific license. \n SECTION 12 - SECURITY RESPONSIBILITIES; DISCLAIMER OF WARRANTIES; LIMITATION OF LIABILITY; LIMITED UPTIME GUARANTEE \n Security Responsibilities \n Platform.sh is responsible for the overall security of the underlying Platform.sh infrastructure and applying industry best practices, If Platform.sh is made aware of potential security issues with the Customer\u2019s account, Platform.sh will inform the customer of such issue. \n PLATFORM.SH IS NOT RESPONSIBLE FOR FIXING ANY SECURITY ISSUES WITH CUSTOMER\u2019S ACCOUNT THAT DO NOT INVOLVE PLATFORM.SH PRODUCTS OR SERVICES. PLEASE NOTE THE FOLLOWING: \n \n \n The customer is solely responsible for the security of their users\u2019 accounts, including but not limited to, ensuring the confidentiality of credentials, usernames, and API tokens. Platform.sh has no obligation to correct or identify any security vulnerabilities, including but not limited to the customers\u2019 code or configuration. \n \n \n The customer is solely responsible for the security of any application they deploy on Platform.sh, both on production and development environments. \n \n \n Platform.sh may notify customer of security vulnerabilities. Not patching notified vulnerabilities may lead to account suspension, at the discretion of Platform.sh. Any notified vulnerabilities must be patched as soon as possible. For the avoidance of any doubt, Platform.sh will not be responsible for any such vulnerabilities and the customer remains solely responsible for applying security patches. \n \n \n At its sole discretion, Platform.sh may employ mitigation techniques to reduce the effects of any attack or security vulnerability, without taking on any such liability for such mitigation. \n \n \n Platform.sh may provide templates and code examples in its documentation, public repositories,  and support interactions. It will make reasonable efforts to make sure these examples respect secure coding standards but the client recognizes that example code may not be ready for production settings, and it is the clients responsibility to make sure and application code they run, even when originally provided by Platform.sh  is up-to-date and secure. \n \n \n The Service is provided as-is, we do not guarantee, represent or warrant that your use of our Services will be uninterrupted, timely, secure or error-free. We do offer a limited 99.5% uptime guarantee for production environments as detailed in these Terms for all contracts starting after the 1st of January 2018. We do not warrant that the results that may be obtained from the use of these Services will be accurate or reliable. You agree that from time to time we may remove the Services for indefinite periods of time and reserve the right to cancel the Services at any time, without notice to you. Errors in the information contained in our Services sometimes occur. In addition, we may make changes and improvements to the Services provided herein at any time. \n THE SERVICE AND THE INFORMATION, SOFTWARE, PRODUCTS AND SERVICES ASSOCIATED WITH IT ARE PROVIDED \u201cAS IS.\u201d WE AND/OR OUR PARTNERS SUPPLIERS AND AFFILIATES DISCLAIM ANY WARRANTY OF ANY KIND, WHETHER EXPRESS OR IMPLIED, AS TO ANY MATTER WHATSOEVER RELATING TO THE SERVICE AND ANY INFORMATION, SOFTWARE, PRODUCTS AND SERVICES PROVIDED HEREIN, INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE, AND NON-INFRINGEMENT. USE OF OUR SERVICE IS AT YOUR OWN RISK. WE AND/OR OUR AFFILIATES, ARE NOT LIABLE FOR ANY INDIRECT, PUNITIVE, INCIDENTAL, SPECIAL OR CONSEQUENTIAL DAMAGES OR OTHER INJURY ARISING OUT OF OR IN ANY WAY CONNECTED WITH THE USE OF THE SERVICE OR WITH THE DELAY OR INABILITY TO USE THE SERVICES, OR FOR ANY INFORMATION, SOFTWARE, PRODUCTS AND SERVICES OBTAINED THROUGH US, OR OTHERWISE ARISING OUT OF THE USE OF THE SERVICE, WHETHER RESULTING IN WHOLE OR IN PART, FROM BREACH OF CONTRACT, TORTIOUS BEHAVIOR, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE, EVEN IF WE AND/OR OUR AFFILIATES HAD BEEN ADVISED OF THE POSSIBILITY OF DAMAGES. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO THE ABOVE EXCLUSION MAY NOT APPLY TO YOU. \n IN NO EVENT SHALL EITHER PARTY OR ITS SUPPLIERS BE LIABLE FOR LOST PROFITS OR ANY SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES (HOWEVER ARISING, INCLUDING NEGLIGENCE) ARISING OUT OF OR IN CONNECTION WITH THIS AGREEMENT. EXCEPT FOR THE INDEMNIFICATION OBLIGATIONS IN this SECTION OF THIS AGREEMENT, EACH PARTY\u2019S LIABILITY, AND THE LIABILITY OF EACH PARTY\u2019S AFFILIATES, TO THE OTHER PARTY OR ANY THIRD PARTIES IN ANY CIRCUMSTANCE, SHALL BE LIMITED TO THE LESSER OF (I) ACTUAL DAMAGES INCURRED, OR (II) PAYMENTS MADE BY YOU FOR THE SERVICE DURING THE TWELVE (12) MONTHS PRECEDING THE CLAIM. IN ADDITION, PLATFORM.SH WILL NOT BE LIABLE FOR (A) THE COST OR PROCUREMENT OF ANY SUBSTITUTE TECHNOLOGY OR SERVICES, (B) ANY MATTERS CONTEMPLATED BY FORCE MAJEURE, (C) ANY BUGS, VIRUSES, TROJAN HORSES, OR THE LIKE CONTAINED IN OR DELIVERED VIA THE SERVICES (REGARDLESS OF THE SOURCE OF ORIGINATION), (D) THE LOSS OF ANY DATA OR OTHER TECHNICAL ISSUES, OR DAMAGES TO YOUR MOBILE DEVICE OR OTHER HARDWARE OR SOFTWARE THAT IS CAUSED BY THE SERVICE (FOR CLARITY, INCLUDING ANY SYSTEMS, APPLICATIONS, CODE, PROCESSES OR METHODS USED TO PROVIDE THE SERVICE), OR (E) DAMAGES FOR ANY EMAILS OR OTHER CONTENT THAT YOU OR YOUR END USERS SEND OR POST VIA THE SERVICE. THE FOREGOING LIMITATIONS ON LIABILITY WILL NOT APPLY TO THE EXTENT PROHIBITED BY APPLICABLE LAW. THE PARTIES ACKNOWLEDGE AND AGREE THAT THE ESSENTIAL PURPOSE OF THIS SECTION IS TO ALLOCATE THE RISKS UNDER THESE TERMS BETWEEN THE PARTIES AND LIMIT THEIR POTENTIAL LIABILITY GIVEN THE FEES CHARGED UNDER THIS AGREEMENT, WHICH WOULD HAVE BEEN SUBSTANTIALLY HIGHER IF PLATFORM.SH WERE TO ASSUME ANY FURTHER LIABILITY OTHER THAN AS SET FORTH HEREIN. THE PARTIES HAVE RELIED ON THESE LIMITATIONS IN DETERMINING WHETHER TO ENTER INTO THESE TERMS. THE LIMITATIONS OF LIABILITY SET FORTH ABOVE ARE FUNDAMENTAL ELEMENTS OF THE CONTRACT BETWEEN US AND YOU. Some states do not allow the limitation of liability, so the foregoing limitation may not always apply. \n LIMITED 99.5% AND 99.9% UPTIME GUARANTEE \n \n \n The 99.5 % uptime guarantee (the \u201cguarantee\u201d) is limited to the production (master) environments of paying Professional plans and Professional Enterprise plans that have been configured with a domain name. \n \n \n It explicitly does not cover development plans and development environments \n \n \n It explicitly covers only customers that have a direct business relationship with Platform.sh with a separately executed agreement. \n \n \n The guarantee covers projects that were created after the 1st of January 2018, it does not apply retroactively. \n \n \n It does not cover Platform.sh Enterprise customers that benefit from a higher 99.99% guarantee (please refer to our Platform.sh Enterprise Terms) \n \n \n Professional plans do not come with a specific support SLA included, although there is an Enterprise support SLA included when purchasing Professional Enterprise plans (refer to our specific terms as referenced in the order quote form). For customers that do not purchase the Enterprise offering, we try to respond quickly to your tickets but the service is best-effort based, and we give no warranties regarding response-times or resolution time, when downtime is concerned. Only the Enterprise offering includes a guaranteed response SLA. \n \n \n The guarantee entitles the customer to a maximum usage credit of 30% of the actual monthly spend for the project concerned. Prorated to the hours of unavailability per production environment below the guaranteed 99.5% (5% credit) and below 99% (30% credit). \n \n \n The guarantee only covers the infrastructure. It explicitly does not cover incidents caused by customer action or inaction (such as for example: letting disk space fill up, introducing programming errors, not applying updates) \n \n \n The guarantee explicitly does not cover SSL certificates (both those provided automatically through Let\u2019s Encrypt and through other third-party providers) and their validity. The customer should make sure SSL certificates are valid. \n \n \n It is the customer\u2019s responsibility to ask for a voucher to be issued covering any downtime. The customer must ask for the service credit within 30 days after the incident. Platform.sh, upon confirming it is responsible for the downtime incident shall calculate the amount due and issue a voucher (limited to 30% of the actual monthly payment for the project concerned) that will automatically be applied towards the payment of the next billing period. \n \n \n Force Majeure \n In the event Platform.sh fails to perform any obligation pursuant to these Terms due to an external reason, in particular, one that would be inherent to the internet itself, acts of God, war, terrorism, riot, embargoes, acts of civil or military authorities, fire, floods, earthquakes, labor strikes, industrial disputes, fuel crises, or any other cause of any nature beyond Platorm.sh\u2019s control, such failure shall not be deemed to be a breach of this Agreement. \n SECTION 13 - INDEMNIFICATION \n You agree to indemnify, defend and hold harmless Platform.sh, its subsidiaries, affiliates partners, officers, directors, employees, agents, and contractors, licensors, and suppliers from and against any and all claims, costs, demands, damages, liabilities, or expenses, including, without limitation, reasonable attorneys\u2019 fees, arising from or related to: (a) anything you provide or approve for using the Services, (b) your use of the Services, (c) your breach of these Terms of Service (including your failure to comply), or (d) any actual, prospective, completed or terminated service between you and a third party. \n SECTION 14 - SEVERABILITY \n In the event that any provision of these Terms of Service is determined to be unlawful, void or unenforceable, such provision shall nonetheless be enforceable to the fullest extent permitted by applicable law, and the unenforceable portion shall be deemed to be severed from these Terms of Service, such determination shall not affect the validity and enforceability of any other remaining provisions. \n SECTION 15 - TERMINATION \n The obligations and liabilities of the parties incurred prior to the termination date shall survive the termination of the Terms of Service for all purposes. \n These Terms of Service are effective unless and until terminated by either you or us. You may terminate these Terms of Service at any time by notifying us that you no longer wish to use our Services, or when you cease using our site. \n If in our sole judgment you fail, or we suspect that you have failed, to comply with any term or provision of these Terms of Service, we also may terminate this agreement at any time without notice and you will remain liable for all amounts due up to and including the date of termination; and/or accordingly may deny you access to our Services (or any part thereof). \n SECTION 16 - ENTIRE AGREEMENT \n The failure of us to exercise or enforce any right or provision of the Terms of Service shall not constitute a waiver of such right or provision. \n Except as otherwise agreed to in separately signed writing, these Terms of Service and any incorporated policies or operating rules posted by us on this site or in respect to the Services constitute the entire agreement and understanding between you and us and govern your use of the Services, superseding any prior or contemporaneous agreements, communications and proposals, whether oral or written, between you and us (including, but not limited to, any prior versions of the Terms of Service). \n SECTION 17 - GOVERNING LAW AND DISPUTE RESOLUTION \n Let\u2019s Try To Sort Things Out First. \n Platform.sh wants to address your concerns without needing a formal legal case. Before filing a claim, you agree to try to resolve the dispute informally by contacting us which can be found on our \u2018Contact Us\u2019 page:  https://platform.sh/contact . Platform.sh will try to resolve the dispute informally by contacting you via email. If a dispute is not resolved within 30 days of submission, you or Platform.sh may bring a formal proceeding. \n Governing Law; Judicial forum for disputes. \n These Terms are governed by French law and in accordance with the laws the Commerce Tribunal of Paris, France, without regard to any such conflicts of law principles. You and Platform.sh agree that any judicial proceeding to resolve claims relating to these Terms will be subject to the mandatory international arbitration provisions below. Both you and Platform.sh consent to such mandatory arbitration.  If you reside in a country (for example, European Union member states) with laws that give consumers the right to bring disputes in their local courts, this paragraph doesn\u2019t affect those requirements or rights. \n IF YOU\u2019RE A U.S. RESIDENT, YOU ALSO AGREE TO THE FOLLOWING MANDATORY ARBITRATION PROVISIONS: \n Both Parties Agree To Arbitrate.  You and Platform.sh agree to resolve any claims relating to these Terms through final and binding arbitration before one arbitrator, except as set forth under Exceptions to Agreement to Arbitrate below. This includes disputes arising out of or relating to interpretation or application of this \u201cMandatory Arbitration Provisions\u201d section, including its enforceability, revocability, or validity. \n Arbitration Procedures.  Any dispute, claim or controversy arising out of or relating to this Terms of Service and incorporated agreements or the breach, termination, enforcement, interpretation or validity thereof, including the determination of the scope or applicability to arbitrate, shall be determined by arbitration in London, United Kingdom before one arbitrator(s) with substantial experience arbitrating claims relating to commercial contracts relating to software. The arbitration shall be administered by JAMS pursuant to its International Arbitration Rules and Procedures and in accordance with the Expedited Procedures in those Rules or pursuant to JAMS\u2019 International Arbitration Rules and Procedures. This clause shall not preclude parties from seeking provisional remedies in aid of arbitration from a court of appropriate jurisdiction. The language to be used in the arbitral proceedings will be English. Judgment upon the award rendered by the arbitrator(s) may be entered by any court having jurisdiction thereof. \n Exceptions to Agreement to Arbitrate . Either you or Platform.sh may assert claims, if they qualify, in small claims court in France. Either party may bring a lawsuit solely for injunctive relief to stop unauthorized use or abuse of the Services, or intellectual property infringement (for example, trademark, trade secret, copyright, or patent rights) without first engaging in arbitration or the informal dispute-resolution process described above. If the agreement to arbitrate is found not to apply to you or your claim, you agree to the exclusive jurisdiction of the Commerce Tribunal of Paris, France to resolve your claim. \n NO CLASS ACTIONS.  You may only resolve disputes with Platform.sh on an individual basis, and may not bring a claim as a plaintiff or a class member in a class, consolidated, or representative action. Class arbitrations, class actions, private attorney general actions, and consolidation with other arbitrations aren\u2019t allowed. If this specific paragraph is held unenforceable, then the entirety of this \u201cMandatory Arbitration Provisions\u201d section will be deemed void. \n Notwithstanding the above, if you reside in a country with laws that give consumers the right to bring disputes in their local courts (for example, European Union member states), the Terms of Service shall be governed by the laws of the Commerce Tribunal of Paris, France (or construed in accordance with your local laws if the laws of France are not enforceable). If you reside in a country (for example, European Union member states) with laws that give consumers the right to bring disputes in their local courts, this paragraph doesn\u2019t affect those requirements or rights. \n SECTION 18 - CHANGES TO TERMS \n You can review the most current version of the Terms of Service at any time on this page. \n We reserve the right, in our sole discretion, to make any changes to the Terms of Service and such incorporated agreements (e.g. the Privacy Policy, pricing page). \n When we make a material legal change, we will provide you with prominent notice as appropriate under the circumstances, (e.g., by displaying a prominent notice within the Services or by sending you an email). In some cases, we will notify you in advance, and your continued use of the Services after the changes have been made will constitute your acceptance of the changes. Please therefore make sure you read any such notice carefully. If you do not wish to continue using the Services under the new version of the such legal material changes, you may contact us to see what accommodations may be made. \n SECTION 19 - CONTACT US AND THANK YOU \n If you have any questions, requests, feedback, data rectification, or concerns regarding this Terms of Service (including our pricing and Privacy Policy), please  contact us . For existing customers,  please create a support ticket through your account . Or send a request by mail to: Attention Legal Platform.sh, 131, Boulevard de S\u00e9bastopol, Paris, 75002 France. \n If you read our terms this far, we thank you from the bottom of our heart. If any of this is not clear, please send us a note and we will strive to make it better. \n SECTION 20 - CHANGELOG \n This is the Platform.sh Terms Of Service Version 1.8 March 7th, 2019. \n The following is a list of changes from inception until present. \n Changes from Version 1.0 to 1.1 February 27th, 2016 \n \n Company name change from Commerce Guys to Platform.sh \n \n Changes from Version 1.1 to 1.2 March 7th, 2016 \n \n Formatting updates and postal address update \n \n Changes from Version 1.2 to 1.3 June 6th, 2017 \n \n Added subsections 4.a \u201cSSL certificates\u201d, 4.b \u201cFree Trial\u201d and 4.c \u201cSponsored Sites\u201d \n \n Changes from Version 1.3 to 1.4 June 8th, 2017 \n \n \n Added information on GDPR compliance \n \n \n Changed age limit to 16 or age of majority whichever is greater \n \n \n Spelling and grammar fixes \n \n \n Changes from Version 1.4 to 1.5 January 1st, 2018 \n \n \n Add limited 99.5% Uptime Guarantee \n \n \n Spelling and grammar fixes \n \n \n Changes from Version 1.5 to 1.6 February 1st, 2018 \n \n Add the availability of a Business SLA \n \n Changes from 1.6 to 2.0 July 28th, 2018 \n \n GDPR compliance updates, DMCA take down policy, material legal change notifications, personal information management, limitations of liability, dispute resolution and geographic considerations, age limitations moved to Privacy Policy, intellectual property protections expanded, prices, taxes, further defined terms, spelling and grammar fixes, and Services clarified. \n \n Changes from 2.0 to 2.1 October 9th, 2018 \n \n Corrected the order of the numbered Sections \n \n Changes from Version 2.1 to 2.2 February 14th, 2019 \n \n \n Include Professional Enterprise offering product description \n \n \n Add Professional Enterprise support SLA \n \n \n Add & amend credit penalty tables and uptime clauses \n \n \n Remove Business SLA \n \n \n Changes from 2.2 to 2.3 April  17, 2019 \n \n Clarification of security responsibilities for customer accounts that do not involve Platform.sh products and services. \n Clarification of responsibilities for use of third-party software \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Demos", "title": "Easy version upgrades", "url": "https://platform.sh/product/demos/upgrades/deck/", "documentId": "4f0e9c849758fd5bf5f53aae2ebccc379809936c", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Running Anaconda environments", "url": "https://platform.sh/product/demos/anaconda/deck/", "documentId": "8ccc7997dde4b745bbd9a99c86bf85c31663edb1", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Control costs", "url": "https://platform.sh/product/demos/control-costs/deck/", "documentId": "7c36d04b1ffe7787c8ee2e4097886173fb140697", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "SaaS on Platform.sh", "url": "https://platform.sh/product/demos/saas/deck/", "documentId": "001d636c87149e0d3697bd99157364dab4810781", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Scaling on demand", "url": "https://platform.sh/product/demos/fast-scale/deck/", "documentId": "0aca634c678ddaa561a9772c09d6e3f7aeb9f07e", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Updating Drupal with Composer", "url": "https://platform.sh/product/demos/drupal-update/deck/", "documentId": "32d31b777720d5c37def414c4fe3bf917cbc3c6f", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Integrate with GitHub, Bitbucket, or GitLab", "url": "https://platform.sh/product/demos/github/deck/", "documentId": "608cc356a1f4952bf206eb0a853be3517460508a", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "The tool for scrum", "url": "https://platform.sh/product/demos/scrum/deck/", "documentId": "46396690a2b6a3407a6edea5ae224be586388061", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Microservices", "url": "https://platform.sh/product/demos/microservices/deck/", "documentId": "646da8a7387d303602711673935d9901dc7ede6f", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Dev vs Prod", "url": "https://platform.sh/product/demos/dev-prod/deck/", "documentId": "d3b9f1345a86b435eabef489b59b9369ad463ae7", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Add new team members", "url": "https://platform.sh/product/demos/team-scale/deck/", "documentId": "7a7330e1736fe02d68edfb7f4d3d6fd108feccc5", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Flexible options for development", "url": "https://platform.sh/product/demos/local-dev/deck/", "documentId": "7db3772165d18166831b1adf598ecae4d5449152", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Laravel with the Platform.sh CLI", "url": "https://platform.sh/product/demos/laravel-cli/deck/", "documentId": "252f070b81e8f5e17d282723ba3714c286f65637", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Django 2 with the Platform.sh CLI", "url": "https://platform.sh/product/demos/django-cli/deck/", "documentId": "04cb49551662be43ee220fe88ea483f013e2ad07", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Installing Drupal with the Platform.sh CLI", "url": "https://platform.sh/product/demos/drupal-install-cli/deck/", "documentId": "d9ce959234955917037e921f8850302b7c0838aa", "text": "", "rank": 4},
{"site": "website", "section": "Preferences", "title": "Manage your Platform.sh communications preferences ", "url": "https://platform.sh/preferences/", "documentId": "31ef84af312cae36451ec55bf790a0e7841f530b", "text": "\n     \n       \n         Manage your Platform.sh communications preferences \n         Find out what\u2019s happening at Platform.sh. \n       \n     \n   \n     \n       \n         \n           Stay up to date \n           Receive product updates, the latest news, and relevant content. Sign up with your email address. \n           \n   \n   Subscribe to our latest news \n   \n   Subscribe \n \n\n\n         \n       \n       \n         \n           So sorry to see you go \n           If you no longer wish to receive future communications from Platform.sh, you can opt out here. \n           \n   \n   Subscribe to our latest news \n   \n   Unsubscribe \n \n\n\n         \n       \n     \n   \n   \n     \n       Build your greatest-ever app. \n      \n      \n       \n         Get started \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Downloads and whitepapers ", "url": "https://platform.sh/downloads/", "documentId": "e6c8c5b9ec27a01f770b3ec8370a244180da3f31", "text": "\n   \n     \n       Downloads and whitepapers \n      \n\n       White Papers, Testimonials, and References \n Looking for our documentation? Check it out  here . \n Popular resources: \n \n     \n         \n             Why choose Platform.sh vs Pantheon? \n             Migrating from Acquia to Platform.sh \n             Outgrowing the cost and capabilites of Heroku? \n             What is best practice in web application deployment? \n             The Platform.sh build-and-deploy pipeline \n         \n     \n \n\n\n     \n   \n", "rank": 4},
{"site": "website", "section": "Events", "title": "Join the Platform.sh team at these upcoming events ", "url": "https://platform.sh/events/", "documentId": "2ac968184f80e28ef2026e9f5770f0c902a82568", "text": "\n   \n     \n       Join the Platform.sh team at these upcoming events \n     \n   \n \n   \n     \n      \n     \n   \n \n   \n     \n       Upcoming \n     \n     \n       Past \n     \n   \n   \n     \n     \n   \n \n         \n        \n           April 2020 \n        \n\n        \n\n        \n     \n       \n         \n           24  \n         \n         \n           Pan Piper, Paris, IDF, France \n         \n       \n\n       \n         Serverless Days \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n         \n       \n         \n        \n           May 2020 \n        \n\n        \n\n        \n     \n       \n         \n           18    - 22 \n         \n         \n           Minneapolis, Minnesota, USA \n         \n       \n\n       \n         DrupalCon Minneapolis \n        \n         Sponsor Level: Platinum \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n         \n       \n         \n        \n           \n        \n\n        \n\n        \n     \n       \n         \n           19    - 21 \n         \n         \n           Wellington, NZ \n         \n       \n\n       \n         Government Digital Transformation Summit \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n         \n       \n         \n        \n           \n        \n\n        \n\n        \n     \n       \n         \n           20  \n         \n         \n           Up-Down Minneapolis \u2014 3012 Lyndale Ave S, Minneapolis, Minnesota, USA \n         \n       \n\n       \n         DrupalCon Minneapolis Party \n        \n         Sponsor Level: Platinum \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n\n      \n       \n         Sign up for our party \n       \n      \n\n     \n\n         \n       \n         \n        \n           \n        \n\n        \n\n        \n     \n       \n         \n           26    - 27 \n         \n         \n           Maritim Pro Arte Hotel, Berlin, Germany \n         \n       \n\n       \n         International PHP Conference \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n         \n       \n         \n        \n           \n        \n\n        \n\n        \n     \n       \n         \n           28    - 29 \n         \n         \n           Citycube Berlin, Germany \n         \n       \n\n       \n         WeAreDevelopers Conference \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n         \n       \n         \n        \n           June 2020 \n        \n\n        \n\n        \n     \n       \n         \n           6    - 7 \n         \n         \n           Kyiv, Ukraine \n         \n       \n\n       \n         DrupalCamp Kyiv  \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n         \n       \n         \n        \n           \n        \n\n        \n\n        \n     \n       \n         \n           10    - 12 \n         \n         \n           Asheville, NC, USA \n         \n       \n\n       \n         DrupalCamp Asheville  \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n         \n       \n         \n        \n           \n        \n\n        \n\n        \n     \n       \n         \n           22    - 24 \n         \n         \n           San Francisco, CA \n         \n       \n\n       \n         SaaStock North America \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n         \n       \n         \n        \n           September 2020 \n        \n\n        \n\n        \n     \n       \n         \n           13    - 17 \n         \n         \n           Mandalay Bay, Las Vegas,\tNevada \n         \n       \n\n       \n         Shoptalk \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n         \n       \n         \n        \n           November 2020 \n        \n\n        \n\n        \n     \n       \n         \n           7  \n         \n         \n           Chattanooga, TN, USA \n         \n       \n\n       \n         DrupalCamp Chattanooga  \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n         \n      ", "rank": 4},
{"site": "website", "section": "Regions", "title": "Keeping your websites and user data in the UK ", "url": "https://platform.sh/regions/uk/", "documentId": "4b4605904a9bff89d64432640a8d5bddb0d00319", "text": "\n     \n       \n         \n  \n\n   \n     \n       \n         \n           Keeping your websites and user data in the UK \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh has added a new cloud region in London, England to support our customers who require their data to remain inside the UK. \n Our team stands ready to assist with migration of applications for Enterprise customers seeking alternatives to strictly European Economic Area (EEA) cloud hosts. Already on Platform.sh? Moving an existing project to a new region is straightforward, and our team can assist with that, too. \n Platform.sh will remain aligned with EEA regulatory practices, including the GDPR, and will provide assurance of data localization within the UK and business continuity via our UK subsidiary. \n \n Platform.sh serves more than 5,000 customers globally, and as a company with European roots, we\u2019ve focused on enabling those customers to build, run, and scale their website fleets exactly where they need to be\u2014both to comply with privacy and data security regulations and to ensure the highest performance for their audiences. \n We\u2019re pleased to be able to extend this capability to London to serve customers with UK data localization needs, joining our list of regions that includes the US, Canada, Ireland, France, Germany, and Australia. \n \u2013 Fred Plais, CEO and co-founder, Platform.sh \n \n In a post-Brexit world, will UK users be able to access data and services in EEA cloud application hosts? With Platform.sh, you won\u2019t have to worry\u2013or choose between data localization and cutting-edge website fleet management capabilities. \n \n   \n     \n       \n         \n   Talk with our UK team \n   \n \n\n       \n       \n         \n   Launch a project in the UK now \n   \n \n\n       \n     \n   \n \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Regions", "title": "Host your applications in Canada with CASL and PIPEDA compliance ", "url": "https://platform.sh/regions/canada/", "documentId": "c0609cc63a6cafb082809e1034f46469d4ae4774", "text": "\n   \n     \n       Canada region \n       Achieve 90% less DevOps efforts today. Instantly create production-ready environments on demand so that your developer teams build, test, and run your web applications faster and better. \n     \n   \n \n     \n       Powering the most demanding modern web applications in Canada and beyond \n     \n     \n       \n         \n           Data privacy and security  Compliant with both Canada\u2019s Personal Information Protection and Electronic Documents Act (PIPEDA) and Canada's Anti-Spam Law (CASL). \n           Mix and match modern apps and services  Let your teams to choose the best solutions for the job. \n           Code-driven infrastructure  Let your developer teams spend more time building features and less on sysadmin chores. \n         \n       \n       \n         \n           Fail-proof deployments  Create unlimited, on-the-fly perfect clones of production. No more QA bottlenecks. \n           End-to-end process automation  Fix bugs, upgrade to new software versions, or apply security patches in minutes (not days). \n           High performance and scaling  Scale your web application for peak traffic without interruption or problem. \n         \n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Regions", "title": "Host your Drupal, WordPress and other applications in Australia ", "url": "https://platform.sh/regions/australia/", "documentId": "f97cc6799f8ffb9ef86904abc5200c2893729376", "text": "\n   \n     \n       Dedicated Australian region \n       Say goodbye to downtime with blazing-fast hosting and fail-proof deployments, now in a locally based, low-latency Australian region. Spend more time on Dev, and less time on Ops. \n     \n   \n \n     \n       Powering the most-demanding modern web applications in Australia and around the world \n     \n     \n       \n         \n           High performance, automatic high availability, and dynamic scaling . Unique, triple-redundant architecture for 99.99% uptime SLAs. 24x7 support for guaranteed response times. Pay for the capacity only when you need it. \n           Fail-proof deployments for faster time to market . Robust workflow and infrastructure for your teams to develop and launch new features and offers that customers love, how you want, as often as you want. \n           Git-driven infrastructure for greater efficiency, quality, and control . Knowing exactly what's been deployed and where makes it easier for your teams to continuously deploy in frequent, small steps. \n         \n       \n       \n         \n           Multiapp, multistack, multicloud for seamless integration . Whatever your microservices, applications, and infrastructure look like now or later, integrate seamlessly and flexibly at build time from day one. \n           End-to-end process automation for productivity boost . Our entirely automated development process boosts developer productivity by 20%. That's more time spent on creating, less time on sysadmin tasks. \n           Reliable and secure Australian cloud hosting . Whether you're running a high-traffic Drupal website, a Magento store, or a microservices Node.js cluster, Platform.sh has you covered. \n         \n       \n     \n   \n   \n     \n       Platform.sh provides governments the control they require and the freedom their developers expect.\n       \n         \n   Find out how \n   \n \n\n       \n     \n     \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Regions", "title": "D\u00e9veloppez et d\u00e9ployez rapidement vos id\u00e9es sur le Cloud en France. ", "url": "https://platform.sh/regions/france/", "documentId": "bc6e84ea84951ade344f1159b75f0e25a8b4ad4d", "text": "\n   \n     \n       \n     \n         D\u00e9ployez et h\u00e9bergez rapidement vos id\u00e9es sur le cloud \n\n        \n\n        \n         Consacrez 100% de votre temps sur votre business, vos clients, vos applications, sans vous soucier de la gestion de l\u2019infrastructure. \n        \n\n        \n\n        \n         \n         \n           \n             Email Address \n             \n           \n           \n             Obtenir une d\u00e9mo \n             \n           \n         \n        \n\n        \n          \n\n            \n\n            \n\n              \n                 \n                   \n                    D\u00e9marrer un projet gratuitement\n                     \n   \n   \n   \n   \n \n\n                   \n                 \n              \n            \n            \n\n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n        \n      \n     \n   \n \n     \n         \n             \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n         \n         \n             Gr\u00e2ce \u00e0 Platform.sh, vos d\u00e9veloppeurs gagnent du temps, peuvent se concentrer sur le d\u00e9ploiement de nouvelles fonctionnalit\u00e9s et acc\u00e9l\u00e9rer votre time to market. \n         \n         \n             \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n         \n         \n             Assemblez, adaptez et faites \u00e9voluer votre flotte d\u2019applications web avec notre solution d\u2019h\u00e9bergement totalement manag\u00e9e, multi-langages, multi-cloud, CI/CD int\u00e9gr\u00e9 et support \u201cfollow the sun\u201d.  \n         \n     \n \n   \n     \n       Plus de 5000 entreprises et 65 000 d\u00e9veloppeurs d\u00e9ploient le vendredi avec Platform.sh \n     \n   \n \n   \n     \n        \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n            \n           \n          \n        \n     \n   \n  \n   \n     \n       \n       \n       \n     \n   \n  \n \n   \n     \n       \n         \n         \n       \n     \n     \n       Uniformise et met \u00e0 jour l\u2019ensemble de votre flotte d\u2019applications web \n       Un site ? 10 sites ? 10 000 sites ? Platform.sh permet \u00e0 votre \u00e9quipe d\u2019\u00e9quilibrer gouvernance et flexibilit\u00e9. \n       \n      \t\n         Gestion centralis\u00e9e et uniformisation de toutes les applications \n        \n         SLA 99.99% (Offre Entreprise) \n        \n         \u00c9quipe support \"follow the sun\" \n        \n         Services de base de donn\u00e9es enti\u00e8rement manag\u00e9s qui s\u00e9curisent vos donn\u00e9es \n        \n         S\u00e9curit\u00e9 et conformit\u00e9 certifi\u00e9es \n        \n       \n       \n      \t \n   En savoir plus \n   \n \n\n       \n     \n   \n \n   \n     \n       Des solutions pour acc\u00e9l\u00e9rer votre time to market \n     \n     \n       Plus que de l\u2019h\u00e9bergement, des technologies innovantes vous permettant d\u2019\u00e9tendre vos services, votre client\u00e8le et votre potentiel de revenus. \n     \n     \n       \n      \t\n      \t \n        \t \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     Lancez des sites o\u00f9 et quand votre business en a besoin gr\u00e2ce \u00e0 notre approche multi-cloud. \n    \n   \n \n\n         \n        \n      \t \n        \t \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     Am\u00e9liorez continuellement votre offre digitale, en d\u00e9ployant vos innovations en quelques clics. \n    \n   \n \n\n         \n        \n      \t \n        \t \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     Travaillez en confiance avec vos \u00e9quipes \u00e9largies, en int\u00e9grant vos prestataires dans un workflow unifi\u00e9. \n    \n   \n \n\n         \n        \n   \n       \n     \n   \n \n   \n     \n       Fonctionnalit\u00e9s principales \n     \n     \n       \n     \n     \n       \n         \n           \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                Clonez votre production instantan\u00e9ment...\n               \n               \n                 \n                  \n                   Tout commence par une commande : \n                  \n                   git branch new-idea \n                  \n                   Travaillez sur une copie parfaite de votre environnement de production - vos donn\u00e9es, vos services, absolument tout est clon\u00e9. \n                  \n                 \n               \n             \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                ...pour suivre vos process de d\u00e9veloppement\n               \n               \n                 \n                  \n                   Platform.sh s\u2019adapte \u00e0 votre workflow, en d\u00e9ployant instantan\u00e9ment des nouveaux environnements pour cr\u00e9er, tester et faire \u00e9voluer vos applications. \n                  \n                 \n               \n             \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                Infrastructure as Code\n               \n               \n                 \n                  \n                   Ajoutez ou mettez \u00e0 jour les services sur lesquels s\u2019appuie votre application en quelques lignes de code. \n                  \n                   Platform.sh transforme votre code en conteneurs enti\u00e8rement manag\u00e9s en quelques instants, sans intervention de votre part. \n                  \n                 \n               \n             \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                CI/CD int\u00e9gr\u00e9\n               \n               \n                 \n                  \n                   Pr\u00eats \u00e0 lancer votre site ? Un simple  git merge  vous permet de passer votre code et votre infrastructure en production, pour des d\u00e9ploiements plus rapides et fr\u00e9quents. \n                  \n                 \n               \n             \n            \n           \n           \n             \n               \n             \n           \n         \n       \n     \n   \n \n   \n     \n       Un workflow unifi\u00e9, du d\u00e9veloppement \u00e0 la production \n     \n     \n      \n \n   \n    \n     \n       \n         Develop \n         \n          \n           Git-native : clone instantan\u00e9 du code et de l\u2019infrastructure pour chaque branche \n          \n           Ajout de services en une ligne de code\u2013de MySQL \u00e0 Kafka, en passant par Elasticsearch \n          \n           Int\u00e9gration \u00e0 n\u2019importe quel runtime ou framework \n          \n         \n       \n       \n         Fonctionne avec \n         \n          \n           Bitbucket \n          \n           GitHub \n          \n           GitLab \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Build \n         \n          \n           CI/CD int\u00e9gr\u00e9 : testez, assemblez vos d\u00e9pendances \n          \n           Extensible avec des webhooks pour s\u2019int\u00e9grer \u00e0 n\u2019importe quel workflow \n          \n           L\u2019Infrastructure est modulaire et versionn\u00e9e, comme votre code \n          \n         \n       \n       \n         Inclut \n         \n          \n           CircleCI \n          \n           Jenkins \n          \n           TravisCI \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Package \n         \n          \n           Gestion des bases de donn\u00e9es, mise en r\u00e9seau, stockage \n          \n           Migrations entre les versions de services en une ligne de code \n          \n           Services uniformis\u00e9s et s\u00e9curis\u00e9s par Platform.sh \n          \n         \n       \n       \n         Remplace \n         \n          \n           Ansible \n          \n           Chef \n          \n           Puppet \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Deploy \n         \n          \n           Applications et services mis en conteneurs automatiquement et d\u00e9ploy\u00e9s sur notre r\u00e9seau \n          \n           Supporte les applications stateful et stateless \n          \n           S\u2019adapte \u00e0 votre workflow \n          \n         \n       \n       \n         Plus besoin de \n         \n          \n           Docker \n          \n           XLDeploy \n          \n           Kubernetes \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Provision \n         \n          \n           D\u00e9ploiement de nouvelles applications en un clic \n          \n           Biblioth\u00e8ques de templates d\u2019applications personnalisables \n          \n           Contr\u00f4le des APIs sur le RBAC, le provisionnement et le d\u00e9ploiement \n          \n         \n       \n       \n         Plus rapide et rentable que \n         \n          \n           CloudFoundry \n          \n           OpenShift \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Run \n         \n          \n           H\u00e9bergement Cloud en production inclus \n          \n           Support Multi Cloud : AWS, Azure, Google Cloud, Orange, et autres partenariats r\u00e9gionaux \n          \n           Pas de modification de code \u00e0 pr\u00e9voir selon les r\u00e9gions ou les Clouds \n          \n         \n       \n       \n         En partenariat avec \n         \n          \n           AWS \n          \n           Google Cloud \n          \n           Microsoft Azure \n          \n           Orange \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Manage \n         \n          \n           Mises \u00e0 jour de votre flotte de sites en une commande \n          \n           Support global: microservices, CMS entreprises, et sites statiques \n          \n           Une gouvernance ma\u00eetris\u00e9e, peu importe les process, les technos, l\u2019infrastructure ou la taille de l'\u00e9quipe. \n          \n         \n       \n       \n         Capacit\u00e9s que vous ne trouverez pas chez \n         \n          \n           Acquia \n          \n           Pantheon \n          \n           Heroku \n          \n           WPEngine \n          \n           Netlify \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Secure \n         \n          \n           Changements du code et de l\u2019infrastructure totalement auditables \n          \n           Certifi\u00e9 SOC 2 \n          \n           Localisation pr\u00e9cise des donn\u00e9es disponible \n          \n           Plus de d\u00e9tails sur la s\u00e9curit\u00e9 \n          \n         \n       \n       \n         S\u00e9curit\u00e9 et Confidentialit\u00e9 des donn\u00e9es 24/7/365 \n         \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n   \n \n\n     \n   \n \n   \n     \n       Vous \u00eates multi-technos ?   Multi-services ?    \u00c7a tombe bien, nous aussi ! \n       Platform.sh h\u00e9berge des projets dans de nombreux langages, frameworks, CMS, et microservices.  \n      \n     \n     \n       \n   \n     \n      \n       \n      \n      Go\n     \n   \n   \n     \n      \n       \n      \n        Java\n       \n     \n     \n       \n        \n         \n        \n        Node.js\n       \n     \n     \n       \n        \n         \n        \n        PHP\n       \n     \n     \n       \n        \n         \n        \n        Python\n       \n     \n\n     \n       \n        \n         \n        \n          Ruby\n       \n     \n     \n       \n        \n         \n        \n        Drupal\n       \n     \n\n     \n       \n        \n         \n        \n        eZ\n       \n     \n\n     \n       \n        \n         \n        \n        Laravel\n       \n     \n\n     \n       \n        \n         \n        \n        Magento\n       \n     \n\n     \n       \n      \n       \n      \n        Strapi\n       \n     \n\n     \n       \n      \n       \n      \n        Symfony\n       \n     \n\n     \n       \n        \n         \n        \n        Typo3\n       \n     \n\n   \n     \n      \n       \n      \n      WordPress\n     \n   \n\n \n\n     \n   \n \n   \n     \n       Vous avez le choix : Cloud souverain fran\u00e7ais, ou Clouds publics localis\u00e9s en Europe \n       Platform.sh est \u201cCloud-Agnostic\u201d avec des points de pr\u00e9sence dans 25 r\u00e9gions diff\u00e9rentes, chez nos partenaires AWS, Google Cloud Platform, Microsoft Azure et Orange en France. \n       Ne vous pr\u00e9occupez plus de la souverainet\u00e9 de vos donn\u00e9es : choisissez vos centres de donn\u00e9es dans des pays europ\u00e9ens op\u00e9r\u00e9s par un fournisseur europ\u00e9en et non soumis \u00e0 la l\u00e9gislation am\u00e9ricaine. \n       \u00c9tant associ\u00e9s avec Orange Business Services en tant que solution fran\u00e7aise d\u2019h\u00e9bergement, vous b\u00e9n\u00e9ficiez des avantages de la performance et de la productivit\u00e9 de Platform.sh sur une infrastructure souveraine. \n     \n     \n       \n     \n   \n \n   \n     \n       \n     \n     \n       Platform.sh int\u00e8gre le French Tech 120 \n       Lanc\u00e9 en septembre 2019 par le Pr\u00e9sident de la R\u00e9publique et Premier Ministre Fran\u00e7ais, le programme a pour but d'acc\u00e9l\u00e9rer le d\u00e9veloppement et de cr\u00e9er des opportunit\u00e9s pour les 120 startups fran\u00e7aises en hypercroissance. Ces startups ont \u00e9t\u00e9 identifi\u00e9es comme les plus prometteuses du pays et illustrent la diversit\u00e9 de l\u2019\u00e9cosyst\u00e8me de la French Tech. \n       En savoir plus sur le French Tech 120 \n     \n   \n \n   \n     \n       T\u00e9moignages clients  \n     \n     \n       \n        \n         \n           \n             \n              \n              \n                \n                  \n                    \n                      \n                      \n                      \n                      \n                     \n                       \n                     \n                    \n                \n              \n               \n                 Comic Relief apporte du rire et de l\u2019espoir aux enfants du monde \n                 D\u00e9veloppement acc\u00e9l\u00e9r\u00e9, productivit\u00e9 individuelle et collective am\u00e9lior\u00e9e \n               \n             \n           \n         \n        \n         \n           \n             \n              \n              \n                \n                  \n                    \n                      \n                      \n                      \n                      \n                     \n                       \n                     \n                    \n                \n              \n               \n                 Teeps, startup Fran\u00e7aise, se concentre sur son \u00e9volution dans un environnement NoOps \n                 Z\u00e9ro downtime \u00e0 chaque d\u00e9ploiement \n               \n             \n           \n         \n        \n         \n           \n             \n              \n              \n                \n                  \n                    \n                      \n                      \n                      \n                      \n                     \n                       \n                     \n                    \n                \n              \n               \n                 Emakina France : structurer ses process pour des projets multi-types \n                 Plus besoin d\u2019aucun DevOps \n               \n             \n           \n         \n        \n       \n     \n   \n \n   \n     \n       Testez gratuitement Platform.sh \n      \n      \n       \n         Je cr\u00e9e mon projet maintenant \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Company", "title": "Press ", "url": "https://platform.sh/company/press/", "documentId": "7db2c5b5dd8b59695ab8022ea1e02557d81df3e1", "text": "\n     \n       \n         Recent Press Coverage \n       \n     \n\n     \n       \n        \n        \n         \n           \n            \n            \n              \n              \n              \n               \n                 \n               \n            \n             Platform.sh delivers web application fleet management solution for 6,000+ of Orange Business Services\u2019 SMB customers \n             29 Jul 2019 \n            \n             Platform.sh \n            \n           \n         \n        \n         \n           \n            \n            \n              \n              \n              \n               \n                 \n               \n            \n             Platform.sh fournit une solution d\u2019h\u00e9bergement web \u00e0 plus de 6000 clients d\u2019Orange Business Services \n             26 Jul 2019 \n            \n             Platform.sh \n            \n           \n         \n        \n         \n           \n            \n            \n              \n              \n              \n               \n                 \n               \n            \n             Platform.sh certified by the Great Place to Work Institute \n             01 Jul 2019 \n            \n             Platform.sh \n            \n           \n         \n        \n         \n           \n            \n            \n             Platform.sh Unlocks Continuous Deployment With an End-to-End Platform That Enables Developers to Build, Run, and Scale Applications \n             27 Jun 2019 \n            \n             hostingadvice.com \n            \n           \n         \n        \n         \n           \n            \n            \n             This site makes it ridiculously easy to experiment with Apache Kafka \n             12 Jun 2019 \n            \n             Matthew Hughes - The Next Web \n            \n           \n         \n        \n       \n     \n\n     \n       \n        \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Company", "title": "Careers ", "url": "https://platform.sh/company/careers/", "documentId": "9962340730bc22e918b58e9370ee8f32f21b83fe", "text": "\n   \n     \n       \n     \n         Do what you do best \n\n        \n\n        \n         Bring your expertise and enthusiasm to a fast-growing, global, distributed organization\u2014where your contributions, collaboration, and unique point of view are recognized and valued \n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n \n \n \n\t.st0{fill:none;}\n\t.st1{fill:#171719;}\n\t.st2{fill:#FFBDBB;}\n\t.st3{fill:#FFFFFF;}\n\t.st4{fill:#EDA900;}\n\t.st5{fill:#E04AA5;}\n \n Header \n \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n \n \n\n        \n      \n     \n   \n \n   \n     \n       \n     \n     \n       Wanted: your talent \n       Thrive within a multicultural, international team, dedicated to open source and to an open, welcoming environment. \n       Some of our engineers hail from prestigious institutions. Others, self-taught hackers. From illustrators and expert sales staff to finance wizards, our team spans the age and experiential spectrum. Our common thread? A curious spirit. A thirst for knowledge. And a willingness to go the extra mile. \n       Sound like you? \n       \n         \n           View jobs \n           \n         \n       \n     \n   \n \n   \n     \n       Why Platform.sh \n       Our ethos: be happy. That means more than building the highest-quality product (which we do and are very proud of). It means creating an environment that frees you to do your best work. And that affords you the personal time to invest in what\u2019s most important to you. \n     \n   \n   \n     \n       \n   \n    \n    \n    \n       .b4740699-d0b7-4d18-b19c-3bedaa659de8{fill:#fcc938;}.fc35b2e6-d68d-4e8b-b072-a71e9fc2ac58{fill:#ffd9d9;}.eadbdda3-9f7c-42f8-ad33-1f270e181cc9{fill:#171719;} Challange yourself \n    \n   \n   \n     Challenge yourself \n     Feel free to experiment on your path to innovation or to solving perplexing problems. \n   \n \n\n     \n     \n       \n   \n    \n    \n    \n       .e428a9b3-a1ab-4bbb-ae8d-ed9ebcc2ee69{fill:#ffd9d9;}.a64e024f-7b55-494c-89eb-3b7104c09570{fill:#171719;}.b14d27aa-0e17-4005-b069-4d8373ff0d0c{fill:#fff;} Dont go changing \n    \n   \n   \n     Don't go changing \n     Our culture: open, diverse, and inclusive. We appreciate you\u2014just the way you are. \n   \n \n\n     \n     \n       \n   \n    \n    \n    \n       .ef2ca069-3afb-4bce-9261-d601ffa549c7{fill:#eae5e7;}.b56c0ded-5ed9-49b1-8f93-0ddd96bb5764{fill:#ffbdbb;}.f5fb7453-2027-44fa-a755-cb7224970255{fill:#171719;} Work from anywhere \n    \n   \n   \n     Work wherever you want \n     Globetrotter. Rural dweller. Juggler with a busy family. Here, you can grow your career and live your life. (Unfailing Internet access required.) \n   \n \n\n     \n   \n \n   \n     \n   \n \n   \n     \n       Benefits \n     \n     \n       Competitive PTO \n       Maternity and paternity leave \n       Remote working/flexibility \n       Healthcare, dental, and vision (US and France staff only) \n       401k, with employer contribution (US staff only) \n     \n     \n       Extra compensation for on-call ops and support staff \n       Company shares (discretionary) \n       Annual budget for professional development \n       Unlimited Platform.sh accounts \n       Annual company retreat \n     \n   \n \n   \n     \n       Our values \n     \n   \n   \n     \n       \n   \n    \n    \n    \n       .b659048a-e29c-4a4d-81eb-0fde4890a6ee{fill:#eae5e7;}.a79155b4-6688-4ce3-a7c8-b723dd13f446{fill:#ffd9d9;}.b5073fac-d8ee-405c-b19d-8440b7cd3ef6{fill:#fcc938;}.e160f299-c969-4ac7-963c-2318d5dc9e99{fill:#171719;} Value1 \n    \n   \n   \n     We aim for the stars; we get there one step at a time. \n     We want to tackle and solve hard problems, with a sense of urgency and bias toward action. We promote radical change through incremental steps. We\u2019re balanced: thinking small is a self-fulfilling prophecy, betting the house is for cowboys. \n   \n \n\n     \n     \n       \n   \n    \n    \n    \n       .bbde55d4-d4e5-4e30-99cd-eca69e5187f2{fill:#ffbdbb;}.bc44e30c-0ad7-4313-b04a-fa985b95a48c{fill:#171719;} Value2 \n    \n   \n   \n     We care for each other. \n     We\u2019re good colleagues, focused on accessibility, not hierarchy. We jump in to help one another whenever we can. We double-down on solidarity when we\u2019re under pressure. \n   \n \n\n     \n     \n       \n   \n    \n    \n    \n       .ef1d7c03-d840-4631-a17a-c51955a7c3ef{fill:#eae5e7;}.f49ec7ef-47d2-4bf7-8fe0-8a4bbbc598de{fill:#fcc938;}.ec88f3e6-b9a0-4aed-a30a-74e841f641d3{fill:#171719;} Value3 \n    \n   \n   \n     We\u2019re here to help our customers thrive \n     We live and breathe because we make software run, and almost nothing matters as much as keeping our customers\u2019 applications running. But our goal is bigger. We measure our success on how we improve our customer\u2019s lives and their digital businesses. \n   \n \n\n     \n     \n       \n   \n    \n    \n    \n       .e13b743d-65ae-4ddb-bebb-54431a365cae{fill:#eae5e7;}.b4be54f1-018c-4f69-bcd6-0baeaf1d66fa{fill:#ffd9d9;}.a245e81f-e2a3-496f-818b-0054aa91ef79{fill:#171719;} Value4 \n    \n   \n   \n     We never sacrifice quality. \n     We appreciate and value quality in everything we do: code, design and communication. Our product is written with good, sustainable, explicit code and accessible, user-centric design. We automate everything that we can automate, and always design for resilience and high-availability. We know how to refactor, let go, and change when we have to. We stay aware of the world around us. \n   \n \n\n     \n     \n       \n   \n    \n    \n    \n       .a4a2414b-a965-41bc-9de2-42c7a916cc30{fill:#eae5e7;}.be2dcea1-863b-4d82-830a-0d1788361a49{fill:#fcc938;}.bd299fda-77ab-4163-bd3f-f9656d8748b5{fill:#171719;} Value5 \n    \n   \n   \n     We\u2019re diverse, curious, passionate, and courageous. \n     Our work is not assigned to us, we grab it. And it goes way beyond what\u2019s immediately expected from us. Structures and roles are there to help guide us, not limit and contain us. We want people who are passionate, open, multicultural, friendly, and smart. We\u2019re demanding of ourselves and expect a lot from our colleagues, driven by our sense of common purpose and solidarity. \n   \n \n\n     \n     \n       \n   \n    \n    \n    \n       .aeba23ff-ba87-49d6-bdc2-43b1c5bd055d{fill:#eae5e7;}.f886d6a0-598b-463c-bab9-b502d83d8f09{fill:#ffbdbb;}.a8eb5744-61cb-4f8a-b83e-2de44ab02051{fill:#171719;} Value6 \n    \n   \n   \n     We\u2019re fair and tell it like it is. \n     We care about doing the right thing. We\u2019re fair to our team members, our clients, and our partners when they join us and fair when they leave. We tell the truth. Our marketing and sales teams only communicate facts (and plausible fairy tales). \n   \n \n\n     \n   \n \n   \n     \n       Explore more of Platform.sh \n     \n   \n   \n     \n       About us \n       \n   \n     View \n     \n   \n \n\n     \n     \n       Team \n       \n   \n     View \n     \n   \n \n\n     \n   \n", "rank": 4},
{"site": "website", "section": "Demos", "title": "Try new technologies and architectures", "url": "https://platform.sh/product/demos/newtech/deck/", "documentId": "34a471a498dd2dcabb7ac39b341a2769925e1809", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Use Elasticsearch with Drupal", "url": "https://platform.sh/product/demos/drupal-elasticsearch/deck/", "documentId": "167dbd329f177d8bfdf50e0f38e807d169d8288a", "text": "", "rank": 4},
{"site": "website", "section": "Demos", "title": "Drupal 8 Multi-site", "url": "https://platform.sh/product/demos/drupal-multisite/deck/", "documentId": "aca52ac3493166540788dc59267cfc21ba23ddd9", "text": "", "rank": 4},
{"site": "website", "section": "Regions", "title": "Deutsches Cloud Hosting und Datenschutz f\u00fcr Ihre Anwendungen ", "url": "https://platform.sh/regions/germany/", "documentId": "aa68531c510528f6a452ab0507294c31cf0d3e04", "text": "\n   \n     \n       \n         Web-Apps schneller und effizienter entwickeln und skalieren \n         Ob 1 oder 1000 Applikationen: Verwalten Sie Ihre Website-Flotte ohne viel Geld in Infrastrukturverwaltung zu investieren. Platform.sh bietet Ihnen Hosting, CI/CD, automatisierte Updates, globalen 24/7 Kundenservice und vieles mehr! \n         \n   Kostenlos testen \n   \n \n\n         \n           \n  Demo anfordern\n   \n   \n   \n   \n   \n \n\n \n\n         \n       \n     \n     \n       \n     \n   \n \n   \n     \n       Moderne Webanwendungen schnell erstellen, bearbeiten und aktualisieren \n     \n     \n       Platform.sh beseitigt Barrieren in Ihrem Workflow und erm\u00f6glicht es Ihnen, Ihre Softwareentwicklung und Systemadministration ohne Aufwand zu optimieren. \n     \n     \n       \n         \n           \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                Instant cloning\n               \n               \n                 \n                  \n                   Beginnen Sie mit einem Befehl: \n                  \n                   git branch new-idea \n                  \n                   Und arbeiten Sie in einer perfekten Kopie der Produktionsdaten und Dienstleistungen Ihrer Webseite ohne Ihre Live-Umgebung zu gef\u00e4hrden. \n                  \n                 \n               \n             \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                Anpassungsf\u00e4hig\n               \n               \n                 \n                  \n                   Platform.sh passt sich Ihrem Workflow an und schafft neue Umgebungen f\u00fcr Features und Tests. Egal ob Sie alleine arbeiten oder im Team. \n                  \n                 \n               \n             \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                Infrastruktur als Code\n               \n               \n                 \n                  \n                   F\u00fcgen Sie neue Dienste oder Funktionen durch schnelle Konfiguration hinzu oder aktualisieren Sie sie. \n                  \n                   Platform.sh verwandelt Ihre Konfiguration sofort in vollst\u00e4ndig orchestrierte Container, ohne dass Add-ons erforderlich sind. \n                  \n                 \n               \n             \n            \n             \n               \n                 \n   \n   \n   \n   \n   \n   \n \n \n   \n   \n   \n   \n   \n   \n \n\n                Eingebautes CI/CD\n               \n               \n                 \n                  \n                   Wir aktualisieren Ihre Code- und Infrastruktur\u00e4nderungen in der Produktion mit einem einfachen  git merge , f\u00fcr schnelle und einfache Deployments. \n                  \n                 \n               \n             \n            \n           \n           \n             \n               \n             \n           \n         \n       \n     \n   \n \n   \n     \n       \n     \n     \n       Keine Kompromisse: DSGVO-konformes deutsches Cloud Hosting \n       Inklusive strenger Datenlokasierung \n       Das deutschlandbasierte Cloud Hosting von Platform.sh erf\u00fcllt die Anforderungen des Bundesdatenschutzgesetzes (BDSG)- und der GDPR (EU-DSVGO). Unser Angebot kombiniert dabei die Vorteile einer technologisch f\u00fchrenden Cloud-Infrastruktur mit strengem Datenschutz, robusten technischen Sicherheitsl\u00f6sungen und unserem Datensicherheitsversprechen. Sie sch\u00fctzen Ihr Unternehmen und kontrollieren alle Compliance-Mandate, die Sie von Ihren Kunden erhalten haben \n       \n   Erfahren Sie mehr \n   \n \n\n     \n   \n \n   \n     \n       Mehrere Technologien, Services und Sprachen? Kein Problem! \n       Wir unterst\u00fctzen unz\u00e4hlige verschiedene Technologien, Frameworks und Services. Arbeiten Sie flexibel und zukunftssicher, ohne sich \u00fcber die Kompatibilit\u00e4t Ihrer Werkzeuge Gedanken machen zu m\u00fcssen. \n       \n         \n   Wie Platform.sh ihren Workflow vereint \n   \n \n\n       \n     \n     \n       \n   \n     \n      \n       \n      \n      Go\n     \n   \n   \n     \n      \n       \n      \n        Java\n       \n     \n     \n       \n        \n         \n        \n        Node.js\n       \n     \n     \n       \n        \n         \n        \n        PHP\n       \n     \n     \n       \n        \n         \n        \n        Python\n       \n     \n\n     \n       \n        \n         \n        \n          Ruby\n       \n     \n     \n       \n        \n         \n        \n        Drupal\n       \n     \n\n     \n       \n        \n         \n        \n        eZ\n       \n     \n\n     \n       \n        \n         \n        \n        Laravel\n       \n     \n\n     \n       \n        \n         \n        \n        Magento\n       \n     \n\n     \n       \n      \n       \n      \n        Strapi\n       \n     \n\n     \n       \n      \n       \n      \n        Symfony\n       \n     \n\n     \n       \n        \n         \n        \n        Typo3\n       \n     \n\n   \n     \n      \n       \n      \n      WordPress\n     \n   \n\n \n\n\n     \n   \n \n   \n     \n       Optimieren Sie Ihre Prozesse von der Entwicklung bis hin zur Produktion \n     \n     \n      \n \n   \n    \n     \n       \n         Entwickeln \n         \n          \n           Git-native:  Schreiben Sie den Code Ihrer Applikation mit beliebigen Laufzeiten oder Frameworks und verwandeln Sie ihre Git-Branches in vollst\u00e4ndige Kopien Ihrer Produktivumgebung, um neue Funktionen und Updates zu testen. \n          \n         \n       \n       \n         Integriert mit \n         \n          \n           Bitbucket \n          \n           GitHub \n          \n           GitLab \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Bauen \n         \n          \n           Nutzen Sie unsere integrierte CI/CD-Pipeline, um Ihren Code zu kompilieren und zu testen. Durch unsere Infrastruktur-als-Code Ansatz k\u00f6nnen Sie ihn schnell und einfach durch die bereitgestellten Webhooks in Ihren bestehenden Workflow integrieren. \n          \n         \n       \n       \n         Beinhaltet das Beste aus \n         \n          \n           CircleCI \n          \n           Jenkins \n          \n           TravisCI \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Packaging \n         \n          \n           Alles, was Sie ben\u00f6tigen, wird von uns bereitgestellt und verwaltet, w\u00e4hrend auf Ihrer Seite trotzdem alles konfigurierbar bleibt \u2013 von laufenden Service-Updates bis hin zu Datenbanken, Archivierung usw. \n          \n         \n       \n       \n         Ersetzt \n         \n          \n           Ansible \n          \n           Chef \n          \n           Puppet \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Bereitstellen \n         \n          \n           Stellen Sie Ihre Web Applikationen kontinuierlich und im Handumdrehen bereit: Platform.sh integriert sich reibungslos in Ihre aktuellen DevOps-Prozesse und verpackt Ihre Apps und Dienste automatisch in Container, die in unserem Grid laufen. \n          \n         \n       \n       \n         Funktioniert wie \n         \n          \n           Docker \n          \n           XLDeploy \n          \n           Kubernetes \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Provisionieren \n         \n          \n           W\u00e4hlen Sie von ma\u00dfgeschneiderten Template Libraries oder erstellen Sie Ihre Projekte von Grund auf neu. Stellen Sie neue Apps mit nur einem Klick sofort bereit und steuern Sie rollenspezifische Zugriffe per API. \n          \n         \n       \n       \n         Schneller und preiswerter als \n         \n          \n           CloudFoundry \n          \n           OpenShift \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Ausf\u00fchren \n         \n          \n           Egal welche und wie viele Cloud-Anbieter Sie nutzen, Platform.sh unterst\u00fctzt eine Vielzahl von verschiedenen Clouds und erm\u00f6glicht reibungslose Abl\u00e4ufe unabh\u00e4ngig von Ihrem Anbieter oder Ihrem Standort. \n          \n         \n       \n       \n         Unsere Partner \n         \n          \n           AWS \n          \n           Google Cloud \n          \n           Microsoft Azure \n          \n           Orange \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Verwalten \n         \n          \n           Ganz egal wie viele statische oder dynamische Webseiten Sie verwalten, aktualisieren Sie alle zur gleichen Zeit mit nur einem einzigen Befehl. Sie erhalten eine verbesserte Steuerung von Ihren Prozessen und Infrastruktur auch \u00fcber verschiedene Teams. \n          \n         \n       \n       \n         Mehr M\u00f6glichkeiten als in \n         \n          \n           Acquia \n          \n           Pantheon \n          \n           Heroku \n          \n           WPEngine \n          \n           Netlify \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n     \n       \n         Sicherstellen \n         \n          \n           Alle \u00c4nderungen an Code und Infrastruktur sind vollst\u00e4ndig revisionssicher. Platform.sh ist SOC 2 zertifiziert [Link to security page] und gew\u00e4hrleistet konsequente Datenlokalisierung. \n          \n           Erfahren Sie mehr \n          \n         \n       \n       \n         Globaler 24-7 Kundendienst und strenge Sicherheitsstandards \n         \n          \n         \n         \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n          \n           \n          \n          \n\n \n    \n     \n    \n     \n     \n \n          \n           \n          \n         \n       \n     \n    \n   \n \n\n     \n   \n \n   \n     \n       Datenschutz und Sicherheit \n     \n   \n   \n     \n       \n         \n           \n  \n   \n    \n       .f82a1b3d-ebc9-4ac1-9ec2-96ed3b554cb4{fill:#fcacac;isolation:isolate;}.bff7f9f5-f45f-40c1-94af-0d89b0521203{fill:#171719;} Icon_Cloud-Hosting auf deutschen Servern \n    \n   \n  \n   \n    \n     Cloud-Hosting  auf deutschen Servern \n    \n    \n     Ihre Kundendaten liegen verschl\u00fcsselt auf deutschen Rechenzentren, welche von der Google Cloud Plattform betrieben werden. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       .cls-1{fill:#fcacac;isolation:isolate;}.cls-2{fill:#171719;} German_Cloud_Page_v1_sb \n    \n   \n  \n   \n    \n     Strenge  Datenschutzrichtlinien \n    \n    \n     Wir befolgen konsequent die Anforderungen des Bundesdatenschutzgesetzes (BDSG) und Datenschutz-Grundverordnung (DSGVO/GDPR). \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       .a8136291-6ba0-43c7-b012-a798342ad998{fill:#fcacac;isolation:isolate;}.b46065cb-8281-4539-af03-ca5a3b3bce6f{fill:#171719;} Icon_ \n    \n   \n  \n   \n    \n     Gezielte  Sicherheitsmechanismen \n    \n    \n     Unsere automatisierten Sicherheitsvorkehrungen sch\u00fctzen die Daten Ihres Unternehmens und ihrer Kunden. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       .f2d96ec3-e031-4dac-8030-ee849101b076{fill:#fcacac;}.f2d96ec3-e031-4dac-8030-ee849101b076,.fc4eae50-e85a-4984-8579-8df20bd71a57{isolation:isolate;}.b29c3ebe-0719-4e9b-aaf9-1cf50f444470{fill:#171719;} Icon__1 \n    \n   \n  \n   \n    \n     Zus\u00e4tzliche  Sicherheitskontrollen \n    \n    \n     Unsere innovativen Kontrollwerkzeuge und M\u00f6glichkeiten zur Datenlokalisierung unterliegen stetiger \u00dcberpr\u00fcfung. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       .e31e054b-e96a-4971-8be7-e07f6dd92f80{fill:#fcacac;isolation:isolate;}.bbdabea3-3d28-4047-ad8f-7e4fbf191e8c{fill:#171719;} Icon__2 \n    \n   \n  \n   \n    \n     Read-only  Infrastruktur \n    \n    \n     Unsere Platform.sh Infrastruktur ist zu 100% schreibgesch\u00fctzt; dadurch werden h\u00e4ufige Angriffsvektoren gemieden und h\u00f6chste Sicherheit gew\u00e4hrleistet. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       .eb063655-11da-4f99-974e-92284de3f928{fill:#fcacac;isolation:isolate;}.bf921b43-2b11-4e4f-afb9-8b48b7d5b3d8{fill:#171719;} Icon_Unser \u2028Sicherheitsversprechen \n    \n   \n  \n   \n    \n     Unser\u2028  Sicherheitsversprechen \n    \n    \n     Die Sicherheit Ihrer Daten ist das Fundament unseres Services. Wir versprechen Ihre Informationen niemals an Dritte weiterzuleiten oder zu gef\u00e4hrden. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       .e1de3c4e-d679-4698-bd02-b56cfb1f68d9{fill:#eae5e7;}.b68025d1-5db6-4ecb-98cf-4159bea555b7{fill:#fcc938;}.a615203e-5bd9-4caa-95ac-6c030eec86da{fill:#171719;} Trophy \n\n     \n     \n       Preise und  Auszeichnungen \n       \n         Europ\u00e4ische Kommission H2020 f\u00fcr die beste horizontale Cloud L\u00f6sung \n         Franz\u00f6sischer nationaler Innovationswettbewerb. \n         Status Preis f\u00fcr Cloud Computing \n         Great Place to Work Zertifizierung \n       \n     \n   \n \n   \n     \n       \u00dcber 5.000 Kunden und 65.000 Entwickler vertrauen Platform.sh. \n     \n   \n \n   \n     \n        \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n             \n               Einer der gr\u00f6\u00dften Wohlfahrtsverb\u00e4nde in Deutschland mit 3 Millionen Mitgliedern \n             \n              \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n             \n               Releases 5x more often with 100% uptime \n             \n              \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n             \n               Deutsches Branchenverzeichnis mit 4 Millionen Unternehmenseintr\u00e4gen \n             \n              \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n             \n               F\u00fchrende schweizer Verm\u00f6gensverwaltung\u2028und Privatbank \n             \n              \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n             \n               Bekannteste Handelsmarke f\u00fcr Automobilien des globalen Konzerns Daimler AG \n             \n              \n            \n           \n          \n        \n     \n   \n  \n   \n     \n       \n       \n       \n     \n   \n  \n \n   \n     \n       \n   Lesen Sie weitere Erfolgsgeschichten \n   \n \n\n     \n   \n \n   \n     \n\n       \n         \n           Kontaktieren Sie uns \n           Unsere engagierten Vertriebs- und Serviceteams stehen Ihnen jederzeit zur Verf\u00fcgung. \n         \n       \n\n       \n\n        \n         \n           \n             \n               \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n             \n\n             Kontakt  zum Vertrieb \n             M\u00f6chten Sie mehr dar\u00fcber erfahren, wie Platform.sh Ihrem Unternehmen helfen kann? \n             \n              Weitere Informationen anfordern\n             \n           \n         \n        \n\n        \n         \n           \n             \n               \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n             \n\n             Kontakt  zum Kundenservice \n             Sind Sie ein bestehender Kunde und suchen Unterst\u00fctzung? \n             \n              Support anfordern\n             \n           \n         \n        \n       \n\n     \n   \n \n   \n     \n       In der Presse  \n     \n     \n       \n        \n         \n           \n             \n              \n              \n               \n                 Schnellere Cloud-Deployments \n                 DevOps-Prozesse mit PaaS optimieren \n               \n             \n           \n         \n        \n         \n           \n             \n              \n              \n               \n                 EZ Platform Cloud \n                 Beliebtes CMS jetzt auch ohne Hosting-Sorgen \n               \n             \n           \n         \n        \n         \n           \n             \n              \n              \n               \n                 Komplexit\u00e4t aus der Cloud nehmen \n                 Komplettl\u00f6sungen zur Entwicklung und Bereitstellung von Webseiten \n               \n             \n           \n         \n        \n       \n     \n   \n \n   \n     \n       Platform.sh kostenlos und unverbindlich testen \n      \n      \n       \n         Mehr erfahren \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Company", "title": "Leadership Team ", "url": "https://platform.sh/company/board/", "documentId": "84293ebf8a3586e2b37920d6260b35af702b5918", "text": "\n   \n     \n       Our board + investors \n     \n   \n   \n     Our deeply experienced board believes Platform.sh is unique. They share the commitment to our vision and helps to guide/set the pace for our current operations and future developments. \n   \n \n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n         \n         \n           \n             Fred Plais \n             \n              Co-founder and CEO, Platform.sh\n             \n             \n              Read more\n             \n           \n         \n         \n           Fred is a serial entrepreneur. Co-founder and CEO of Platform.sh, he previously co-founded Commerce Guys, a leading Drupal ecommerce provider. His mission is to guarantee that as we continue on an ambitious journey to profoundly transform how cloud computing is used and perceived, we keep our feet well on the ground continuing the rapid growth we have enjoyed up until now.  Previously, he was also General Manager of af83, an open source company that specialized in social web and digital media. Fred started his career working for larger organizations with different roles in marketing, sales and business development for SFR (Vodafone Group) and L'Or\u00e9al after his graduation from the Paris Business School of Management (ESCP Europe). \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n               \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n               \n            \n         \n         \n           \n             Damien Tournoud \n             \n              Chief Technology Officer, Platform.sh\n             \n             \n              Read more\n             \n           \n         \n         \n           Damien, a polyglot developer if there is one, leads the zoo of system engineers, front-end hackers, security experts, API-buffs and glorious DevOps people to deliver on a grand unifying vision of a cloud platform that is as robust as it is broad, as cutting-edge as it is simple. He is the architect around dozens of software projects that compose Platform.sh and the lead developer of many of them.  Previously, he was one of the top architects and contributors to Drupal 7 and a key architect behind Drupal Commerce. An alumni of the prestigious engineering school MINES ParisTech, has also worked in the banking, energy and government sectors. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n               \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n               \n            \n         \n         \n           \n             Ori Pekelman \n             \n              Chief Product Officer, Platform.sh\n             \n             \n              Read more\n             \n           \n         \n         \n           Ori is a technologist with a taste for business. A polyglot developer and software architect, he also worked as a teacher in a design school and had a previous career as a journalist. His job is to translate an incredibly ambitious roadmap that stretches years into the future into a concrete product offering that is not only efficient but also enjoyable to its users.  Over the years he helped build a number of very successful startups amongst which aSmallWorld, AF83, Commerce Guys and now Platform.sh. He is an open source advocate and promoter and organizer of tech meetups such as ParisDataGeeks, the largest European regular big-data gathering. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n         \n         \n           \n             R\u00e9za Malekzadeh \n             \n              General Partner, Partech\n             \n             \n              Read more\n             \n           \n         \n         \n           R\u00e9za is General Partner of Partech and based in San Francisco. He joined in 2016. R\u00e9za is an active catalyst and leader in the French Silicon Valley tech community and an advocate of French and European technological innovation. He has twenty years of experience in various  executive sales, marketing and operations roles for both large and startup companies. He was one of the very early VMware employees joining the company in 1998 and has also co-founded and successfully sold two startups. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n         \n         \n           \n             Mathieu Baret \n             \n              Partner, Idinvest\n             \n             \n              Read more\n             \n           \n         \n         \n           Matthieu is a Partner in the Venture & Growth Capital team working mainly in the telecoms/media, software sectors. He has overseen around 20 digital investments. He is also responsible for Idinvest Partners' ESG policy and is a member of the UN-PRI (United Nations Principles for Responsible Investment) Private Equity Advisory Committee. He also regularly lectures on entrepreneurship at the Centrale Sup\u00e9lec engineering school. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n         \n         \n           \n             Eric Buatois \n             \n              General Partner, Benhamou Global Ventures\n             \n             \n              Read more\n             \n           \n         \n         \n           Eric has 15 years of active venture capital experience, first at Sofinnova Ventures as a General Partner from 2001 until 2013 managing several funds of 250M$ and then General Partner at BGV since 2013. He is a lead investor who truly enjoys building global companies and has demonstrated experience in executing spin-offs from large companies. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n         \n         \n           \n             Val\u00e9rie Gombart \n             \n              Co-founder and CEO, Hi Inov\n             \n             \n              Read more\n             \n           \n         \n         \n           Val\u00e9rie co-founded and headed the Information and Communication Technologies investment department at Seventure and was promoted Managing Partner in 2003. In 2012, she joined Pierre-Henri Dentressangle to co-found Hi Inov. She has more than 20 professional years experience in venture capital and funded 35 startups. Her portfolio has returned 116M\u20ac of net gross profits to LPs. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n         \n         \n           \n             Justin Ziegler \n             \n              Investor\n             \n             \n              Read more\n             \n           \n         \n         \n           Justin is the tech founder of Priceminister. In 2010, PriceMinister was acquired by Japan\u2019s Rakuten, owners of more than 40 companies and services and one of the largest ecommerce companies in the world. With over 200 million new and used items for sale and a community of over 21 million members (February 2015), PriceMinister sees over 27 million visits per month and delivers over 600,000 new ads each day making it the second most visited ecommerce site in France. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n         \n         \n           \n             Alban wyniecki \n             \n              Investment Director, Idinvest\n             \n             \n              Read more\n             \n           \n         \n         \n           Alban is Investment Director for the Growth Fund. Before joining Idinvest in November 2016, Alban spent two years at Partech Ventures, where he sourced and executed investments in Europe and the US (Alban was notably board member at Brandwatch and M-Files). Before that, Alban worked at Dassault Syst\u00e8mes where from 2008 to 2014 he successively led the CATIA Strategy team and then the 3DS Group Corporate Strategy team. Here he managed the 3DS technical partners' portfolio, the 3DS group and the brand's corporate planning efforts, closing over 10 M&A deals. Alban started his career with various Engineering & Research consulting positions at Salomon, EADS, and Geonumeric. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n         \n         \n           \n             Pierre-Henri Dentressangle \n             \n              Co-founder + Chairman, Hi Inov\n             \n             \n              Read more\n             \n           \n         \n         \n           Pierre-Henri is the co-founder and President at Hi Inov. He created and developed several websites and then at the age of 21, he founded the digital content archiver, Archive Concept. In 2006, he built Aquasolo Systems, a company developing and selling an innovative drip irrigation system for plants. He listed Aquasolo\u2019s products in French and European mass-market retailers. He also managed the marketing strategy and implementation of supply and production chain. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n         \n         \n           \n             Edward Colby \n             \n              Advisor\n             \n             \n              Read more\n             \n           \n         \n         \n           Ed is based in San Francisco and is Partner at Quadrille Capital. He has worked for Citibank and Apple, most recently as Director of R&D in Europe. For nine years he was Managing Director, US for a Venture Capital fund established by Vivendi, Cisco, Qualcomm, Nokia, Siemens, and BT. Ed has also founded, managed and exited two technology companies. He has worked with the Quadrille team for 14 years. He is a graduate of Princeton and the University of Virginia. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n         \n         \n           \n             Eric Wittman \n             \n              Advisor\n             \n             \n              Read more\n             \n           \n         \n         \n           Based in San Francisco, Eric is the COO of Figma, which is solving the collaboration problems teams face when building well designed software. Eric is an industry veteran who previously ran the Developer Tools business at Atlassian, including Bitbucket. At Figma, in addition to scaling processes like recruiting and finance, he is focusing on GTM and revenue. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n               \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n                 \n               \n            \n         \n         \n           \n             Fabien Potencier \n             \n              Advisor\n             \n             \n              Read more\n             \n           \n         \n         \n           Fabien founded SensioLabs SAS in 1998 and serves as its Chief Executive Officer. He founded the Symfony project in 2004. He is a serial entrepreneur, and among other companies, he founded Sensio in 1998, a software company that provides products, services, and technical support for the Open-Source Symfony framework. He is also the creator of several other open-source projects, a writer, a blogger, a speaker at international conferences. \n         \n       \n     \n    \n \n\n  \n\n \n     \n       \n         \n             \n         \n       \n       \n         \n            \n               \n                 \n                   \n                 \n               \n            \n            \n         \n         \n           \n             Fran\u00e7ois Dufour \n             \n              Advisor\n             \n             \n              Read more\n             \n           \n         \n         \n           Fran\u00e7ois Dufour was the VP of Global Marketing at Twilio, a cloud communication company that enables users to use standard web languages to build voice, VoIP, and SMS apps via a web API. Prior to Twilio, he held various leadership roles in marketing at Udacity and LinkedIn. \n         \n       \n     \n    \n \n\n \n   \n     \n       Want to work with us? \n     \n   \n   \n     \n       Careers \n       \n   \n     View \n     \n   \n \n\n     \n     \n       About us \n       \n   \n     View \n     \n   \n \n\n     \n   \n", "rank": 4},
{"site": "website", "section": "Company", "title": "About Platform.sh- ", "url": "https://platform.sh/company/", "documentId": "161b392c719d5b867b3d30e83b15d1e2a1a70a0e", "text": "\n   \n     \n       \n     \n         Our mission \n\n        \n\n        \n         Enable organizations to focus 100% of their time on building amazing experiences\u2014and zero time managing infrastructure. \n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           .abb17f6a-17bd-4175-911b-273e3ddc68c4{fill:#fb3728;}.af161a21-5428-4686-8157-ea90a9b67c8b{fill:#ff7b22;}.f5a69812-cc42-4946-bda6-3ae67f85a8d9{fill:#7bd8db;}.a7d54b16-6369-4305-b22d-17ac67b3e5e1{fill:none;}.b6ef465f-438c-417c-890f-c1a2b20cad66{fill:#171719;} Header \n        \n      \n     \n   \n \n   \n     \n       What we do \n     \n     \n       \n        We take care of your infrastructure\u2014from hosting and technology to global deployment and support\u2014so you\u2019re free to explore new ideas. Ideas you can turn quickly into apps and experiences that customers everywhere love. And that can increase your organization\u2019s revenue potential.\n       \n       \n   \n     Explore the product \n     \n   \n \n\n     \n   \n \n   \n     \n       Who we are \n       \n        Nearly a decade ago, our founders began with a core belief:  there's a better, simpler way to develop and deploy code. That companies of any size should be able to deploy anytime, anywhere without breakage. That it\u2019s possible to build cloud infrastructure that abstracts away complexities, but not power or flexibility. That vision became Platform.sh\u2014now adopted by more than 62,000 developers and thousands of companies (and growing rapidly) around the world.\n       \n       \n   \n     View board and investors \n     \n   \n \n\n     \n   \n \n   \n     \n       Where we come from \n       \n        Sure, we have offices in Paris and San Francisco. But our distributed team reaches across 5 continents, 13 time zones, and 22 languages. What we all have in common?  Our mission (of course). And a passionate commitment to helping our customers succeed.\n       \n       \n   \n     Join our team \n     \n   \n \n\n     \n   \n \n   \n     \n       How we measure up \n       \n        We take a lot of pride in what we create together. And we\u2019re humbled by the recognition our work and our team have received.\n       \n       \n         \n           \n         \n         \n           \n         \n         \n           \n         \n         \n             \n               \n             \n         \n         \n             \n               \n             \n         \n       \n     \n   \n \n   \n     \n       Explore more of Platform.sh \n     \n   \n   \n     \n       Team \n       \n   \n     View \n     \n   \n \n\n     \n     \n       Careers \n       \n   \n     View \n     \n   \n \n\n     \n   \n \n   \n     \n       Create a Platform.sh project now \n      \n      \n       \n         Get started for free \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Building a resilient digital foundation with Drupal + Gatsby  ", "url": "https://platform.sh/blog/2020/building-a-resilient-digital-foundation-with-drupal-and-gatsby/", "documentId": "39299dd49ac0e432844e471bb00ea5199d75be51", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Building a resilient digital foundation with Drupal + Gatsby  \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Tara Arnold \n                  \n                   Senior Marketing Content Strategist, Mediacurrent \n                  \n                  \n                 \n            \n          \n         \n         09 Apr 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     Extending beyond Drupal \n       \n         Decoupling Drupal with React \n         Drupal Rain and GatsbyJS \n       \n     \n     Enhancing open-source security \n     Flexibility through reusable components \n       \n         Scalability \n       \n     \n     Next-level Drupal: finding tech that fits the challenge \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         We can\u2019t predict the future of tech, but we can plan for it to get the full value of our website investment. \n In this post, we explore Mediacurrent\u2019s approach to developing solutions beyond Drupal with a GatsbyJS-driven approach to fully decoupled static sites. This approach has taken organizations like  MagMutual ,  The City of Sandy Springs , and  Emory University  on an empowered path to manage digital content and experiences. \n We\u2019ll explore this approach through the lenses of flexibility, scalability, and security\u2014the key ingredients for a future-proof digital foundation. \n For sites that require functionality beyond what\u2019s supported by Drupal, a decoupled architecture is often the answer. A decoupled approach addresses some of the pain points of conventional monolithic systems. These include barriers to web service integration, and struggles to source front-end talent (Drupal 8/Twig developers) and maintain an overstuffed codebase. \n Extending beyond Drupal \n Decoupling Drupal with React \n As an agency, Mediacurrent has grown from our roots as a leader in Drupal development, strategy, and design to become an open-source expansion partner for our customers. Since launching  The Weather Channel  on a progressively decoupled platform in 2013, our development approach at Mediacurrent has gravitated toward decoupled, with a recent, increased focus on React. \n When you decouple, you have the opportunity to choose the best tool for individual technical requirements. As we consider the  state of Drupal  and its place in the landscape of the modern technology stack, we predict Drupal will maintain its foothold in the enterprise when paired with a flexible Javascript frontend.  React (and Javascript)  are on the rise. Extending a content-modeling tool like Drupal with a best-in-class, front-end framework like ReactJS is a powerful way to achieve a web service-oriented approach. React\u2019s widening talent pool offers a large community of developers to support your application. \n Drupal Rain and GatsbyJS \n Our search for the best decoupled Drupal approach for Mediacurrent.com led us to  Gatsby, a React-based framework . Combined, Drupal and Gatsby form a fully open-source, enterprise-grade system. We pair Gatsby with Rain, a Drupal install profile focused on enterprise use cases, for a speedy end-to-end solution. This approach has helped many of our customers expand on open-source software\u2014balancing flexibility and scalability to create a future-proof platform. \n \u201cUsing Drupal with Gatsby is a great way to get an enterprise-quality CMS for free, paired with a great modern development experience and all the benefits of the JAMstack, like performance, scalability, and security.\u201d \n \u2014  Gatsbyjs.org \n \n   \n     \n Rain Install Profile for Drupal . On the backend, Drupal 8 provides a powerful capacity for content modeling. \n GatsbyJS . Gatsby, the presentation layer, adds a robust dimension of UI flexibility and performance capabilities. ( See this tutorial  for a guide on how to get set up with Rain and connect to our Gatsby starter.) \n Platform.sh . Well-suited for this approach,  Platform.sh  can host a range of technologies, including Drupal and static-based applications like Gatsby. \n \n   \n   \n   \n \n\n Enhancing open-source security \n Together, Drupal and Gatsby provide a  robust security architecture . A fully decoupled setup allows the option to protect Drupal\u2019s CMS with a wall-off environment that only a VPN or private network can access.  As a statically generated frontend, Gatsby exposes fewer services and pieces of back-end code or databases that could be compromised. \n With a Gatsby site, you can sidestep public-facing servers and the security challenges that come with them. This approach can also improve your resilience to DDoS attacks. \n Flexibility through reusable components \n As a means to future-proofing and flexibility, we created Mediacurrent\u2019s Rain + Gatsby integration to expedite design with reusable components, providing a consistent, intuitive user experience. \n Gatsby doesn\u2019t require expensive hardware to run, which lowers overall hosting costs. It\u2019s fast, too\u2014really  fast . Gatsby has delivered gains of  3-10 times  speed improvement for migrated sites. \n Scalability \n Mega-trafficked websites like The Weather Channel have proven that a well-optimized Drupal platform can scale to serve millions of users. A Gatsby site can handle higher volumes of traffic per unit of hardware than a traditional CMS because it uses so few server resources to serve pages. \n When it comes to scaling content volume, Gatsby Cloud is improving the framework to handle huge amounts of media assets through optimizations and parallel processing. \n Next-level Drupal: finding tech that fits the challenge \n Drupal remains a powerful tool for managing content, but it shines brightest when paired with a leading, front-end framework like React.  The Rain installation profile  for Drupal is open source (and if combined with Gatsby, that\u2019s open source, too) so it\u2019s free for everyone to get started. \n Decoupled isn\u2019t always a fit, but when it is, consider Drupal and Gatsby to get the speed, security, and adaptability features you need for what\u2019s next in the world of open source. \n Tara Arnold is a Senior Marketing Content Strategist at Mediacurrent, the open-source expansion and Platform.sh agency partner. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Multisite on Platform.sh: the how and why \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes ", "url": "https://platform.sh/blog/2020/new-enterprise-pricing-tiers-fleetops/", "documentId": "02bcf1ceb7a78c36b272244b614d3d71a7ff2f30", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n         \n\n        \n         \n            \n              \n                \n                 \n                \n                 \n                   Patrick Klima \n                  \n                   Product Manager \n                  \n                  \n                 \n            \n          \n         \n         15 Apr 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     Platform.sh offers new options for diverse website and app fleets \n       \n         What if I only have a single site or app? \n       \n     \n     Flexible Reservations give you cost predictability without lock-in \n     New features give you control over your fleet, flexibility for your team \n     How to get started with Platform.sh for website fleets \n     Related reading and upcoming events \n       \n         \n       \n     \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         More often than ever, Platform.sh customers are building and maintaining a multitude of web applications: sometimes a handful, often dozens, occasionally thousands. \n As we listened closely to our customers and agency partners, we wanted to make the features and support they need available. Today, we\u2019re excited to introduce new product tiers that deliver the features enterprise teams need to manage website fleets\u2013from 2 to 2,000 and even more. \n Platform.sh offers new options for diverse website and app fleets \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n We revamped our Enterprise product tier to deliver the uptime and support SLAs organizations need for business-critical applications. You can now get Enterprise features and faster support response for fleets comprised of any of our Grid plans\u2013from Standard to 2XL\u2013in addition to our Dedicated architecture plans. \n Previously, our Enterprise product was limited to larger plan sizes, but we\u2019ve come to understand from our customers that websites don\u2019t need to be large in size to be important. Now you can run every site in your fleet with the same assurance and access to key features. \n Today, we\u2019re also introducing the new Elite tier of Platform.sh. Elite comes with Technical Account Management, even higher SLAs on support response time, access to personalized compliance assistance for GDPR, PCI, and SOC2, integration with your Single Sign-On systems, and even the option to deploy on your own Infrastructure-as-a-Service (IaaS) accounts. \n \n  View the new Platform.sh pricing\n   \n   \n   \n   \n   \n \n\n \n\n What if I only have a single site or app? \n If you just have one site or app to move, that\u2019s OK. Platform.sh scales as you need to\u2013up to 192 CPUs and 768GB RAM on a single app! You can also start your fleet a-la-carte with Platform.sh Professional, which remains unchanged. \n Flexible Reservations give you cost predictability without lock-in \n Enterprise and Elite tiers are eligible for Platform.sh Flexible Reservations, which give you the cost predictability benefit of levelizing your cloud hosting and development costs and discounts on every project. All without locking you into a specific application architecture or IaaS provider. \n With Flexible Reservations on Enterprise and Elite tiers, you can reserve capacity up front at a discount and use those resources at any time to upgrade your applications, as needed. And if you\u2019re a Platform.sh agency partner, we\u2019ve got special discounts just for you. \n New features give you control over your fleet, flexibility for your team \n Our Enterprise and Elite tiers include a number of new features designed to make it easier to build and maintain your website fleet and get the most out of your team. \n \n Source Operations.  Now available in public beta. Enable you to define operations and run them across all your projects. Use Source Operations to automate maintenance updates to all your sites, patch open-source components such as Drupal or WordPress modules, or pull updates from an upstream repo. \n Single Sign-on integration.  Via Google and GitHub. Available on Enterprise tier. Elite tier enables you to tie Platform.sh users to your organization\u2019s internal identity management systems. \n Dedicated architecture.  Serves critical applications with triple-redundant, high-availability service, 99.99% uptime, and optional multiavailability zone configuration for disaster recovery. \n Private template libraries.  Bring one-click launches to your organization. Similar to our public library of more than 50 frameworks (including Drupal, WordPress, Node.Js, Gatsby, Strapi) in eight different runtimes (from PHP to Java), private libraries enable you to govern the templates your team uses to launch new applications in minutes in any region Platform.sh supports. Launch templates for new campaigns, regions, or microsites in minutes. And deliver faster than ever. \n \n How to get started with Platform.sh for website fleets \n If you\u2019re a current Platform.sh customer or partner, you can contact your account representative or partner manager. Or you can  send a message to our sales team  to upgrade your account to Enterprise or Elite. \n New to Platform.sh? You can  chat with us in real time  or  contact us to get a quote or demo from our team . \n Of course we\u2019d love for you to try Platform.sh for yourself. You can  start a free 30-day trial  with no credit card required. \n Related reading and upcoming events \n FleetOps-focused webinars this month \n \n FleetOps: aligning business and technology for success at scale \n Your checklist for running thousands of websites \n How the University of Missouri cost-effectively migrated its fleet of web apps to the cloud \n \n More reading \n \n Guide :  Solve the challenge of website fleet management: Is Kubernetes the right choice? \n Executive Brief:  FleetOps: The secret to managing your growing website fleet \n The monolith myth: Why all-in-one tech suites aren\u2019t the solution \n \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Health notifications for all \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Blog", "title": "Platform.sh + Lando: local dev in perfect sync with the cloud ", "url": "https://platform.sh/blog/2020/partnership-with-lando/", "documentId": "faf6a864fcba4f0125f514f455bbe39637fb8df4", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         blog \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh + Lando: local dev in perfect sync with the cloud \n         \n\n        \n         \n            \n              \n          \n         \n         21 Apr 2020 \n         \n           Subscribe to updates \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n           In this post \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n             \n   \n     What the Lando and Platform.sh partnership means \n     What features will be available to Lando and Platform.sh users? \n     When will the new Lando and Platform.sh integration be available? \n     How do I stay informed about the project? \n   \n \n          \n        \n        \n       \n       \n        \n        \n        \n         Platform.sh removes a major pain point for developers: having to invest time in managing servers, virtual machines, or containers. Instead, Platform.sh enables developers to focus 100% of their time on their code. Since the beginning, Platform.sh has provided instant cloning capability, so dev teams can work on perfect copies of their production sites in the cloud for every Git branch. \n Now, in partnership with  Lando , we\u2019re extending that capability to the desktop. Lando simplifies local development the way Platform.sh simplifies the cloud\u2013replacing DevOps drudgery with declarative infrastructure. \n Platform.sh and Lando have embarked on a long-term partnership to tightly integrate the two products. \n What the Lando and Platform.sh partnership means \n Platform.sh and Lando will enable developers to synchronize their development work easily between their local environments and the cloud. Start new projects with a command, download from Platform.sh, work locally, and push changes back. All with the simple configuration and automation devs expect from Platform.sh. \n While Lando and Platform.sh have  worked together informally  in the past, this official partnership means Lando and Platform.sh have committed to a multiyear roadmap of close integration. That integration means developers will have a bulletproof toolchain that extends from their laptops to the cloud and back, covering all the web projects in their  fleet . \n What features will be available to Lando and Platform.sh users? \n With the newly developed functionality, users will be able to: \n \n Pull a project from Platform.sh into their local Lando environments \n Pull and push all of the application components (code, database[s], and files) between their Platform.sh project and Lando \n Run Platform.sh build and deploy hooks \n Create a new Platform.sh project from a local Lando project \n \n When will the new Lando and Platform.sh integration be available? \n We\u2019ll be rolling out features progressively throughout this year, beginning this spring. \n In the coming months, we\u2019ll support Drupal, WordPress, Magento, eZ, and Node.js projects as well as our data services, including MariaDB, MySQL, PostgreSQL, Redis, Elasticsearch, Memcached, Solr, MongoDB, and Varnish. \n In the meantime, check out our current documentation on  using Lando for local development of Drupal 8 . \n How do I stay informed about the project? \n The best way to get the latest from our teams about the Lando and Platform.sh project is to  subscribe to the Platform.sh newsletter . We\u2019ll also be posting periodically on the  Platform.sh blog  with new feature announcements and how-tos. \n\n        \n\n\n\n  \n    \n     \n    \n  \n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Improving access and security for your projects \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New Enterprise pricing tiers make FleetOps accessible to web app fleets of all sizes \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Health notifications for all \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Stacks", "title": "A platform built for modern PHP development and hosting ", "url": "https://platform.sh/stacks/php/", "documentId": "9c34b232faa28495b932ca83fbba6b20300175b0", "text": "\n     \n       \n         A platform built for modern PHP \n        \n         Leading the pack in PHP development and delivery. We\u2019re the chosen cloud solution behind Symfony, Magento, eZ Systems, and Drupal Commerce. \n        \n        \n         \n   Try Sculpin now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           You write the best code. \n          \n           We take care of the rest. \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           PHP microservices: No add-on required \n           Build sites faster with full Composer, Drupal Console, and Drush support. Our Composer-based builds for Drupal 8 are unique among PHP hosts. \n         \n       \n      \n       \n         \n           \n         \n         \n           Instant staging environments for continuous deployments \n           Create clones of production into staging environments in seconds to speed UAT. Say goodbye to QA bottlenecks. \n         \n       \n      \n       \n         \n           \n         \n         \n           Batteries included \n           Everything on SSDs. Built-in Redis and Solr support for every account. Integrated Blackfire.io support and a managed CDN make your sites faster. \n         \n       \n      \n     \n   \n     \n       \n         \n       \n       \n         Modern hosting  for modern PHP \n\n        \n         From day one we\u2019ve supported PHP 7.0 , PHP 5.x, and best of breed PHP tooling, integrated Composer support. You can run PHP 7.1 ZTS with the Pthreads extension for fully threaded workers. Or the ext/event extension for high-performance, asynchronous PHP (with support for ReactPHP and AmPHP). \n        \n\n        \n\n         \n          \n           \n   Start free trial \n   \n \n\n         \n\n       \n     \n   \n     \n       \n         The greatest toolbox for PHP developers \n       \n     \n     \n       \n         \n   Learn more \n   \n \n\n       \n     \n     \n      \n       \n         Git \n         Our main API is Git. You can do most operations by just pushing code or a config file. Then watching your cluster configure itself automatically. \n       \n      \n       \n         Command line \n         Manage your projects directly from within your terminal. Anything you can do in the Platform.sh UI, you can do in your terminal with our CLI. \n       \n      \n       \n         Composer \n         With built-in Composer support, no need to check in your vendor directory. Just push your composer.json to us and we\u2019ll handle it, just as it should be. \n       \n      \n     \n   \n     \n       \n         \n           \n             \n               Whitepaper \n               Modern PHP Dev and Ops Field Guide \n              \n               Adopt DevOps current best practices \n              \n               \n   Download \n   \n \n \n             \n             \n               \n             \n           \n         \n       \n     \n   \n     \n       \n         Related documentation \n       \n     \n     \n       \n         \n   More PHP Docs \n   \n \n \n       \n     \n     \n      \n       \n         Accessing services with PHP \n         How to call Solr, Redis, MySQL, and more from your PHP application. \n         View \n       \n      \n       \n         CMS and framework templates \n         There\u2019s no easier way to get started developing on Platform.sh. Check out our library of templates, from Drupal to Symfony to WordPress. \n         View \n       \n      \n       \n         Platform.sh configuration reader \n         Library provides a streamlined and easy to use approach to interact with a Platform.sh environment. Utility methods enable you to access routes and relationships more cleanly than reading the raw environment variables yourself. \n         View \n       \n      \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Taking your application to SaaS: a business decision \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             A 10x increase in enterprise valuation over two years: a SaaS case study  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Alternative To Heroku", "title": "Heroku alternative for web app hosting and development ", "url": "https://platform.sh/alternative-to-heroku/", "documentId": "cb97282a6a0c3159bcdb7adf82744bd9cec141ed", "text": "\n   \n     \n       \n         A more complete and \n         more cost-effective \n         alternative to Heroku \n       \n       \n   Get started with Platform.sh for FREE \n   \n \n\n\n       \n   Chat with an expert \n   \n \n\n     \n   \n \n   \n     \n       Why are people switching from Heroku to Platform.sh? \n     \n   \n   \n     \n       \n        Heroku and Platform.sh both help you run applications in a variety of languages and frameworks. But the similarities end there.\n       \n     \n   \n   \n     \n      Platform.sh gives you the power to build and deliver predictably\u2014without costly add-ons\n     \n     \n       If you're just starting a project, Heroku makes it easy to build something new in the programming languages you're already familiar with. \n       But when you're ready to scale\u2014to more users, expanded services, increased traffic, or multiple sites\u2014or even if you just need enterprise grade uptime and support, Heroku gets expensive or doesn't offer a solution at all. \n       More than 5,000  customers  worldwide develop and deploy their sites on Platform.sh. What drove their decisions for Platform.sh over Heroku? We asked, and they answered, below. \n       \n        Have questions? Let's  chat now .\n       \n     \n   \n   \n     \n       \n     \n     \n       1. No need for expensive \"add-ons\" with Platform.sh \n       Heroku supports many databases and other services, like PostgreSQL, Kafka, MySQL, Redis, Elasticsearch, Solr, RabbitMQ, and MongoDB. \n       So does Platform.sh . \n       The challenge with Heroku: Many of those add-on services are delivered by third parties, and  each has its own pricing model . \n       With Platform.sh, not only are all data services maintained and secured by our team, they're included in your project price. You pay for the capacity to run your whole project without complex billing models that quickly get expensive as you scale. \n       Some add-ons for Heroku are not available in all regions, and each integrates differently with your project. \n       With Platform.sh, including a new service is simple; just describe what you need and how you want it connected to your application: \n       \n       Services and runtimes (PHP, Java, Go, NodeJS, and more) are supported across all of our regions and cloud partners. \n       2. Container-driven continuous integration and continuous deployment (CI/CD) built-in \n       Heroku offers a CI product as an  add-on, priced on a per-pipeline basis , in addition to the cost of executing your integration processes tests. Both metrics are hard to predict. \n       Platform.sh takes a very different approach. Our  CI/CD pipeline  is built into the core of Platform.sh, enabling you to compile dependencies, run tests, and deploy automatically to containerized infrastructure, with predictable cost. \n       Need another deployment environment for testing or vetting with a stakeholder? It's available on demand at a consistent price. \n       3. Our primary API? Git. \n       With Heroku, you can manage your code in Git and manually connect that repository to a Heroku application environment. That's pretty cool. \n       What would be even better? \n       How about having your  entire application  instantly cloned from production, for every branch you create\u2014data and all? \n       Platform.sh enables you to run one command\u2014 git checkout -b new-idea \u2014to create a perfect, nearly instant clone of your application, and all its services.\n       \n       \n       The Platform.sh workflow supports nested branches. This is great for teams, because it means you can group work by feature, team, or release. Whatever works for you. And you can push changes live from any branch. Each environment also has  configurable access control  for devs and viewers, and free, auto-generated SSL certificates. \n       Because services are defined by simple  yaml  markup, making changes to infrastructure and managing upgrades is as simple as a  git merge  too. \n       Platform.sh also has a  robust API , and plays well with the rest of your DevOps toolchain via flexible  integrations  and  webhooks . \n       4. Uptime SLA\u201499.99% vs zero \n       Platform.sh can provide \u201cfour nines\u201d (99.99%) high-availability guarantees for mission-critical sites, powered by our  Enterprise HA architecture . That is less than seven minutes of downtime a month, and a support response SLA of less than an hour for urgent tickets. Platform.sh runs thousands of ecommerce sites and has extensive experience managing mission-critical sites and apps. Our global team is ready to assist, 24/7. \n       Heroku  promises to do their best , but contractually, you're on your own. \n     \n   \n   \n     \n      One Git command, and Platform.sh clones your entire production app\u2014data and all.\n     \n     \n       5. Heroku works for single apps, but what if I have dozens, or thousands in my fleet? \n       Heroku offers an Enterprise Add-on for teams to manage access to multiple projects. In fact, it's the only way to get  compliance guarantees and secure data localization. \n       With Platform.sh, role-based access control to your apps and environments is included. You can grant access to view, contribute to, or manage individual environments or whole projects, to keep your development process secure. \n       What makes Platform.sh the better choice for many websites or apps (whether you've got 10 or 10,000)? \n       Platform.sh was built for managing website fleets at scale. That's why  Orange ,  Symfony , and  Magento  chose Platform.sh as their partner. \n       Here's what Platform.sh offers, if you're managing many sites or apps: \n       \n           \n             Platform.sh \n             for Website Fleets \n             A complete governance platform with  enterprise-grade support \n           \n           \n             \n               Single dashboard to manage all your apps on multiple stacks \n               Tools to patch and update your fleet \n               Template Libraries to provision new apps in moments \n               Access control, multicloud, multiregion support \n             \n           \n         \n         6. Choice is good. That's why Platform.sh is multicloud. \n         Choosing which Infrastructure-as-a-Service (IaaS) provider to use can be a gamble, and once your die is cast, it's hard to switch. The same can be true of your hosting or PaaS provider. That's why most hosting providers like Heroku work with only a single IaaS partner (in Heroku's case that\u2019s AWS). \n         Instead, Platform.sh makes it easy to use the IaaS provider that works best for your business, whether your choice is based on  data locality for compliance , getting your application as close to your end users as possible, or simply preference. We can run your applications in the US, Canada, Australia, Ireland, Germany, and France. \n         Platform.sh works with four IaaS partners\u2014Amazon Web Services, Google Cloud Platform, Microsoft Azure, and Orange\u2014to give you the most choices and global reach. And you can run the same code across all four of these platforms without making any changes. \n         We also take security and compliance seriously. For some countries and companies, that means hosting locally too. Not only are we  SOC 2 certified , we\u2019re compliant with the  CASL in Canada , and  Germany\u2019s BDSG and strict data locality and access rules . \n         Need to run your fleet in a custom location? Let's talk. \n     \n   \n   \n     \n         Power. Simplicity. Freedom. \n         The best tools are the ones that fade into the background and let you get on with your work. Find out how we can help your organization focus, faster. Chat with our team now, or try out Platform.sh for free, below. \n     \n   \n", "rank": 4},
{"site": "website", "section": "Stacks", "title": "Node.js microservices simplified with PaaS ", "url": "https://platform.sh/stacks/nodejs/", "documentId": "038eaff55e113de936d8b8b6de64b490be8b3ad4", "text": "\n     \n       \n         The Enteprise Node.js PaaS \n        \n         Javascript developers can now host their apps and enjoy incredible productivity features with fully managed back-end services\u2014from MongoDB and RabbitMQ to Elasticsearch, Postgres, MariaDB, Redis, and others \n        \n        \n         \n   Try Strapi now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           Multiapp and microservices \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Git-driven, built for microservices \n           Check in your Node app, and bring along its friends ReactJS, Angular, Python, and more. Merge to master and you\u2019re running and scaling in production. \n         \n       \n      \n       \n         \n           \n         \n         \n           Instant clones for every branch \n           Do away with staging bottlenecks. Now every git branch gets a perfect byte-for-byte replica of prod, data included, in seconds. \n         \n       \n      \n       \n         \n           \n         \n         \n           Batteries included \n           Just include the Platform.sh npm package, and your application will get all the context it needs dynamically. Services from Redis to MongoDB to Elasticsearch are available with a few lines of YAML. \n         \n       \n      \n     \n   \n     \n       \n         Related documentation \n       \n     \n     \n       \n         \n   More Node.js Docs \n   \n \n \n       \n     \n     \n      \n       \n         Interactive debugging for Node.js \n         Debug your multi-layered environment where it\u2019s going to run\u2014in the cloud. \n         View \n       \n      \n       \n         Getting started with Node on Platform.sh \n         Using our multiapp support, you can build a micro-service oriented system mixing both Javascript and other application languages and frameworks. \n         View \n       \n      \n       \n         Platform.sh npm configuration library \n         Library provides a streamlined and easy-to-use way to interact with the Platform.sh environment. Utility methods enable you to access routes and relationships more cleanly than reading the raw environment variables yourself. \n         View \n       \n      \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh\u2013deploying the future of content with one click \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Out of the lab: Node.js 12 features graduate from experimental status \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Off with its head! Headless Chrome as a service. \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Acquia Alternative Platformsh Vs Pantheon", "title": "Looking for an alternative to Acquia for Drupal? Pantheon vs Platform.sh ", "url": "https://platform.sh/acquia-alternative-platformsh-vs-pantheon/", "documentId": "c4a3af7babc0292b8813fc0076dad0d4fa174277", "text": "\n   \n     \n       \n         Looking for a Drupal \n         alternative to Acquia? \n         Pantheon vs Platform.sh \n       \n       \n   Get started for FREE \n   \n \n\n\n       \n   Chat with an expert \n   \n \n\n     \n   \n \n   \n     \n       Why choose Platform.sh vs Pantheon? \n     \n   \n   \n     \n       \n        Looking for a more modern platform to host and manage your Drupal sites? If you\u2019re using Drupal (and have a big budget), it\u2019s likely those sites are running with a traditional managed services provider like Acquia, or you\u2019re running your sites on-premises. Either way, your team deserves a better cloud solution, and you\u2019re now considering Platform.sh and Pantheon.\n       \n     \n   \n   \n     \n      Platform.sh was created to give you choice, work the way your team does, and get out of your way.\n     \n     \n       Let\u2019s begin by saying we\u2019ve known our friends at Pantheon for a long time\u2014after all, we both have deep roots in the Drupal community (their founders ran development shops while Platform.sh was incubated by Commerce Guys, the software vendor behind Drupal Commerce). They\u2019ve built a great team and hosting product for Drupal. \n       More than 5,000  customers  worldwide develop and deploy their sites on Platform.sh. What drove their decisions for Platform.sh over Pantheon? We asked for the top ten reasons. But like many awesome things, this list goes to eleven. \n       \n\n       \n     \n   \n   \n     \n       \n     \n     \n       1. Platform.sh is built for Composer and Symfony, but doesn\u2019t leave your legacy Drupal behind \n       Modern Drupal 8 is built around two technologies that make developers\u2019 lives easier. \n       Composer simplifies dependency management for PHP applications, much like PIP for Python or NPM for Node.js. Unlike Pantheon, Platform.sh supports Composer natively. Instead of downloading and committing all of the dependencies for your Drupal site to your host, you describe them in a Composer file, and the Platform.sh CI/CD pipeline takes care of installing them and running any other build or deployment tasks. \n       Symfony is the other technology at the heart of Drupal 8. As the 'cloud' powering  Symfony Cloud  and  Magento Commerce , our Symfony expertise runs deep.  Learn more about Symfony on Platform.sh . \n       2. Platform.sh supports any Drupal version \n       Running Drupal 7? Or even Drupal 6? Drupal Multisite? You can run them on Platform.sh alongside your Drupal 8 (and when it\u2019s available, Drupal 9) sites, with the same Git-driven workflow and \u201cbatteries included\u201d approach to data services. Platform.sh supports Drupal Multisite  multiple MySQL databases and schemas on a single project , too. There are arguments for and against Multisite, but with Platform.sh you\u2019re not forced to change your architecture. Pantheon on the other hand doesn't support Drupal Multisite or more than one MySQL database per project.\n       \n       3. All the services you need to run an ambitious digital experience with Drupal \n       Drupal has never existed in a technological vacuum. That\u2019s more true now than ever before, with \u201cHeadless Drupal\u201d or \u201cDecoupled\u201d architectures combining a Drupal back end with a Javascript front end written in Angular, React, and so on. are becoming the norm rather than the exception. Platform.sh supports multiple runtimes\u2013like PHP and Node.js\u2013in the same project, so you can manage and deploy your sites as a single app. Pantheon only allows Drupal and WordPress, so you\u2019ll need to find a separate host for your application\u2019s dependencies, and manage the resulting complex deployment process yourself.\n       \n       For your data, Pantheon provides the basics: MySQL, Redis, and Solr. \n       Platform.sh gives you simple access to those services and  myriad others, with no extra cost or complexity. You can snap in  PostgreSQL ,  Kafka ,  Elasticsearch ,  RabbitMQ ,  Network Storage ,  worker processes , and more, with just a few lines of a  yaml  file.  Learn more about configuring data services with Platform.sh .\n       \n       4. Highly scalable and highly available \n       Platform.sh can provide \u201cfour nines\u201d (99.99%) high-availability guarantees for mission-critical sites. That is less than seven minutes of downtime a month, and an SLA of less than an hour for urgent tickets. Platform.sh runs thousands of ecommerce sites and has extensive experience managing mission-critical applications. That\u2019s why our approach to high availability isn\u2019t based strictly on caching\u2013we\u2019ve designed triple-redundant architecture to ensure even transactional sites are fault-tolerant. Platform.sh can also scale up  any site as needed when there is a surge of traffic , without downtime.\n       \n     \n   \n   \n     \n      One Git command, and Platform.sh clones your entire production app\u2014data and all.\n     \n     \n       5. Drupal developers deserve tools for the way modern developers work \n       \n      Platform.sh has been based around Git from the very beginning. We think of it as our main API. And, it drives collaboration across teams between devs and other stakeholders. Do you need a new environment to work on a feature or to fix a bug? It's as simple as:\n       \n       git checkout -b new-idea \n       That's it. \n       One Git command, and Platform.sh clones your entire production app\u2013data and all. That\u2019s right, Platform.sh gives you new environments on demand, in moments. \n       Pantheon has a feature that's similar in concept called MultiDev, available as an option on higher support plans\u2014but there are critical differences. \n        With Platform.sh, you can have as many dev/stage/test environments as you need. Pantheon limits you to a maximum of 10. \n       \n       The Platform.sh workflow supports nested branches. This is great for teams, because it means you can group work by feature, team, or release. Whatever works for you. And you can push changes live from any branch. Each environment also has  configurable access control  for devs and viewers, and auto-generated (and free) SSL certificates. \n       \n       Pantheon lets you do parallel dev work, but requires those changes to be synchronized through a single test/staging environment. \n     \n   \n   \n     \n       6. Deploy anytime \n       Because deploying to production is basically a  git merge , and your team is developing on a perfect clone\u2014including all the components and data of your [headless] Drupal site\u2014you can be assured that  what worked in dev is going to work in production . Our  Deploy Friday  motto isn\u2019t just a marketing slogan; our customers live it.  Learn more about therm.sh CI/CD process \n\n       7. Real integrations with GitHub, Bitbucket, GitLab, and anything else \n       Because Platform.sh has a  robust API  and supports custom  webhooks , it's integrated with third-party tools you're probably already using, like GitLab, Bitbucket, and GitHub. Branches and pull requests created in those tools automatically generate (and clean up) environments in Platform.sh! That same API, coupled with our system of hooks and support for tools like  Headless Chrome , gives you a robust continuous integration solution for Drupal and other technologies\u2014again, at no extra cost. \n       With Pantheon, configuring a pull request driven workflow with GitHub, Bitbucket or GitLab requires manual creation of environments and their mapping to individual branches in your code management tool.   Learn more about Platform.sh integrations . \n       The Platform.sh API isn't limited to managing your current Drupal projects. With just a few commands, you can create new projects across regions around the world. This is how Platform.sh partners like  GoalGorilla  build their own successful SaaS businesses ( Open Social ) with Drupal and Platform.sh.  Learn more about the Platform.sh API and SaaS platform . \n\n       8. Platform.sh does Drupal best, at a lower cost \n       The most cost-effective host for your Drupal applications, Platform.sh doesn\u2019t charge you for your success. (And that doesn\u2019t even count the value of our continuous integration and deployment tools.) What does that mean? \n       Platform.sh was incubated as a tool to run high-volume Drupal commerce applications, which means the traffic is primarily \u201cauthenticated pageviews.\u201d They\u2019re difficult to cache and have to be served by Drupal directly, instead of a caching layer (including Content Delivery Networks [CDNs]). Therefore, our pricing model is based on capacity (in memory and CPU) to serve requests. We include CDN with our  Enterprise  solutions, and a caching layer (either viah or our own cache system) is provided for all Platform.sh projects. \n       In sharp contrast, Pantheon charges for every pageview and visit you serve. Why? Because they include a single CDN with every project, and that CDN provider\u2019s cost model has to be accounted for. If you have a great month of traffic, you\u2019re potentially looking at a larger invoice based on pageviews and visits. Let\u2019s look at a quick example: \n       \n       Pantheon\u2019s Medium tier allows you up to 250,000 pages served per month\u2014whether they\u2019re served via CDN or not\u2014 at a  Preferred   price of $225/month. \n       On the other hand, the Platform.sh Professional Medium tier can serve 500,000 pageviews per month, uncached, at a price of $135/month. If your app is cacheable, you can serve far more, and we won\u2019t charge you extra. \n       \n         \n           Professional \n           $135 \n           Medium , Low traffic, multiple apps \n         \n         \n           \n             3 GB memory \n             Medium-to-higher traffic websites \n             Microservice apps or multidatabase apps \n             Suitable for around 500,000 monthly page views \n           \n         \n       \n       Need a CDN? We can provide one, but you also have the choice to use the caching options that work best for your applications and budget. \n       Do you need to run tests, compile Sass, use Node.js-based tools as part of your build? Platform.sh handles all of that natively, too, rather than charging you more. You\u2019ll have to account for using tools like CircleCI at $50/month or Codeship at $75/month (at minimum) in addition to your Pantheon hosting costs.  Learn more about Platform.sh pricing . \n       9. Platform.sh does more than Drupal \n       Across organizations, it's rare for a single CMS to be adopted universally. There are many reasons for this: developer expertise, budget, and even internal politics. Supporting many languages and frameworks is good for us, and good for our customers. Real freedom comes from having a platform that can grow and shift with you as your needs evolve. \n     \n   \n \n   \n     \n      Platform.sh isn't exclusive to Drupal or WordPress by design. Instead, we let you run Drupal alongside your  Node.js /Javascript app,  Java ,  Python , and more at no extra cost. You can combine the front end and back end of your app in the same project, deployed automatically by us across our secure, containerized grid. Check out our complete list of supported runtimes in the Developers menu above.\n     \n   \n \n   \n     \n      Need hands-on support to keep your Drupal projects patched and secure? Platform.sh does that, too. Just ask us about Application Support.\n     \n     \n       With Platform.sh, you can use the best solution for every site you build and manage:  WordPress ? Our PHP support is peerless. Static Site Generators (SSGs)? Check out our examples with  Hugo ,  Jekyll , and  Gatsby .  Java ? Run CMS apps like  Brightspot , or OSS stacks like  Spring MVC and MongoDB . Pantheon is limited to WordPress and Drupal. \n       10. Platform.sh has Drupal expertise when you need it \n       Selecting the right platform for scalability is important, but sometimes your team will run into challenges. For that, we have a global team of support engineers spanning North America, South America, Europe, Africa, Oceania, and Asia. \n       Need hands-on support to keep your Drupal projects patched and secure? Platform.sh does that, too. Just ask us about Application Support. \n\n       11. Choice is good. That's why Platform.sh is multicloud. \n       Choosing which Infrastructure-as-a-Service (IaaS) provider to use can be a gamble, and once your die is cast, it's hard to switch. The same can be true of your hosting or PaaS provider. That's why most hosting providers like Pantheon work with only a single IaaS partner (in Pantheon\u2019s case that\u2019s Google). \n       Instead, Platform.sh makes it easy to use the IaaS provider that works best for your business, whether your choice is based on  data locality for compliance , getting your application as close to your end users as possible, or simply preference. We can run your applications in the US, Canada, Australia, Ireland, Germany, and France. \n       Platform.sh works with four IaaS partners\u2014Amazon Web Services, Google Cloud Platform, Microsoft Azure, and Orange\u2014 to give you the most choices and global reach. And you can run the same code across all four of these platforms without making any changes. \n       Need a custom location? Let's talk. \n       We take security and compliance seriously. For some countries and companies, that means hosting locally too. Not only are we  SOC 2 certified , we\u2019re compliant with the CASL in Canada, and  Germany\u2019s BDSG and strict data locality and access rules . \n\n       Power. Simplicity. Freedom. \n       The best tools are the ones that fade into the background and let you get on with your work. Find out how we can help your organization focus, faster. Chat with our team now, or try out Platform.sh for free, below. \n     \n   \n", "rank": 4},
{"site": "website", "section": "How To Migrate From Acquia To Platformsh", "title": "Migrate your Drupal site from Acquia to Platform.sh ", "url": "https://platform.sh/how-to-migrate-from-acquia-to-platformsh/", "documentId": "09549c738fd9161da1200d06d9573352e377e8e2", "text": "\n   \n     \n       \n         It's time to migrate \n         from Acquia to Platform.sh \n       \n       \n   Get started for FREE \n   \n \n\n\n       \n   Chat with an expert \n   \n \n\n     \n   \n \n   \n     \n       Why migrate your Drupal sites from Acquia to Platform.sh? \n     \n   \n\n   \n     \n       \n        Are you looking for a more modern, cost-effective platform to host and manage your Drupal sites than on Acquia? You\u2019re not alone. Your team deserves more than a traditional managed services provider approach. They deserve a cloud hosting solution that natively supports headless Drupal and gives them the flexibility to develop using modern Drupal tools to build new features faster and to deploy them anytime, anywhere.\n       \n     \n   \n\n   \n     \n      Platform.sh was created to give you choice, work the way your team does, and get out of your way.\n     \n     \n       You probably have concerns about migrating to a new platform. How much is it going to cost? How many resources do you need to redirect from business-critical tasks to the migration? Does your team have the skill set to tackle the process? How long is it going to take? We get it. \n       Platform.sh was incubated by Commerce Guys\u2014the software vendor behind Drupal Commerce\u2014and has deep roots in the Drupal community. Today, more than 5,000  customers  worldwide develop and deploy their sites on Platform.sh. And we say confidently that moving your sites from Acquia to Platform.sh can happen quickly and smoothly. \n     \n   \n\n   \n     \n       How to migrate your Drupal 8 site to Platform.sh in just a few steps \n       1. Copy down your Acquia Git repository details \n       You\u2019ll connect to your Acquia Cloud account, select the site you want to migrate, and retrieve the Git and SSH connection details. \n\n       2. Export your data and configurations \n       Select your MySQL database[s] from the Acquia console, and download it to your computer. Make a copy of your scheduled [cron] jobs and variables, which are easily configured in Platform.sh. \n\n       3. Prepare your Platform.sh project \n       Once you\u2019ve created a new project on Platform.sh to host your site, you\u2019ll need to add in a few files to define your crons, variables, and mount points. You can download these directly from our GitHub templates, making setup simple. Did you know you can even create new Platform.sh projects from the command line? \n\n       4. Time to deploy! \n       Simply commit your changes to your Platform.sh project. We\u2019ll take care of running Composer, compiling Sass, and containerizing your Drupal, Solr, and MySQL apps, then deploying to our grid. We\u2019ll automatically generate an SSL certificate for your site, too. \n\n       5. Sync your database and media files \n       Using the  Platform.sh CLI , you can import your MySQL database into your project. You can even transfer your media files directly from Acquia to Platform.sh. \n\n       6. Test your site, and go live \n       Platform.sh has continuous integration and continuous deployment built in, so if you\u2019ve got unit or integration tests, Platform.sh can run those for you. Once you\u2019re ready to go, just add your domain to the project, and direct your DNS to Platform.sh. \n     \n   \n\n   \n     \n       \n         Three ways to migrate \n         Many customers are up and running on Platform.sh in a matter of minutes or hours (depending on how much data needs to be migrated). There are three options to get started: \n\n         \n           \n             \n               1 \n             \n             Use our how-to guide to Acquia migration \n           \n           \n             \n               2 \n             \n             Work with our onboarding team to migrate your sites \n           \n           \n             \n               3 \n             \n             Have our team perform the migration for you \n           \n         \n\n         \n           \n               \n   Find out about migration \n   \n \n\n           \n         \n       \n     \n   \n\n   \n     \n       Why are people switching from Acquia to Platform.sh for modern Drupal applications? \n       We asked our customers for the reasons they switched. Here are their top-ten responses. \n\n       1. Platform.sh is built for Composer and Symfony, but doesn\u2019t leave your legacy Drupal behind \n       Modern Drupal 8 is built around two technologies that make developers\u2019 lives easier. \n       Composer simplifies dependency management for PHP applications, much like PIP for Python or NPM for Node.js. Unlike Acquia, Platform.sh supports Composer natively. Instead of downloading and committing all of the dependencies for your Drupal site to your host, you describe them in a Composer file, and the Platform.sh CI/CD pipeline takes care of installing them and running any other build or deployment tasks. \n       Symfony is the other technology at the heart of Drupal 8. As the 'cloud' powering  Symfony Cloud  and  Magento Commerce , our Symfony expertise runs deep.  Learn more about Symfony on Platform.sh . \n\n       2. All the services you need to run an ambitious digital experience with Drupal \n       Drupal has never existed in a technological vacuum. That\u2019s more true now than ever before, with \u201cHeadless Drupal\u201d or \u201cDecoupled\u201d architectures combining a Drupal back end with a Javascript front end written in Angular, React, and so on. are becoming the norm rather than the exception. Platform.sh supports multiple runtimes\u2013like PHP and Node.js\u2013in the same project, so you can manage and deploy your sites as a single app. Acquia supports Drupal, with limited Node.js support for additional cost, so you\u2019ll need to find a separate host for your application\u2019s dependencies, and manage the resulting complex deployment process yourself. \n       For your data, Acquia provides the basics: MySQL and Solr. That's great for a basic site, but Platform.sh provides far more. \n       Platform.sh gives you simple access to those services and myriad others, with no extra cost or complexity. You can snap in  PostgreSQL ,  Kafka ,  Elasticsearch ,  RabbitMQ ,  Headless Chrome ,  Network Storage ,  worker processes , and more, with just a few lines of a  yaml  file.  Learn more about configuring data services with Platform.sh . \n\n       3. Highly scalable and highly available \n       Platform.sh can provide \u201cfour nines\u201d (99.99%) high-availability guarantees for mission-critical sites. That is less than five minutes of downtime a month, and an SLA of less than an hour for urgent support tickets. Acquia limits SLA for uptime to 99.95% (that's nearly 22 minutes per month), and only offers an SLA for Enterprise customers. \n       Platform.sh also runs thousands of ecommerce sites and has extensive experience managing mission-critical applications. That\u2019s why our approach to high availability isn\u2019t based strictly on caching\u2013we\u2019ve designed triple-redundant architecture to ensure even transactional sites are fault-tolerant. Platform.sh can also scale up  any site, as needed, when there's a surge of traffic , without downtime. \n     \n   \n\n   \n     \n      One Git command, and Platform.sh clones your entire production app\u2014data and all.\n     \n     \n       4. Drupal developers deserve tools for the way modern developers work \n       Platform.sh has been based around Git from the very beginning. We think of it as our main API. And it drives collaboration across teams, between devs and other stakeholders. Do you need a new environment to work on a feature or to fix a bug? It's as simple as: \n       git checkout -b new-idea \n       That's it. \n       One Git command, and Platform.sh clones your entire production app\u2013data and all. That\u2019s right, Platform.sh gives you new environments on demand, in moments. \n       Acquia's approach is more linear, in a traditional dev/test/prod architecture. Though Acquia Cloud Enteprise customers can request more environments, that process involves support or account management intervention. \n       \n       \n        The Platform.sh workflow supports nested branches. This is great for teams because it means you can group work by feature, team, or release. Whatever works for you. And you can push changes live from any branch. Each environment also has  configurable access control  for devs and viewers, and auto-generated (and free) SSL certificates.\n       \n       \n       \n        Acquia doesn't support teams doing parallel development.\n       \n     \n   \n\n   \n     \n       5. Deploy anytime \n       Because deploying to production is basically a  git merge , and your team is developing on a perfect clone\u2014including all the components and data of your [headless] Drupal site\u2014you can be assured that  what worked in dev is going to work in production . Our  Deploy Friday  motto isn\u2019t just a marketing slogan; our customers live it. This capability is included with  every  Platform.sh subscription, not justnterprise\" budgets.  Learn more about the Platform.sh CI/CD process . \n\n       6. Real integrations with GitHub, Bitbucket, GitLab, and anything else \n       Because Platform.sh has a  robust API  and supports custom  webhooks , it's integrated with third-party tools you're probably already using, like GitLab, Bitbucket, and GitHub. Branches and pull requests created in those tools automatically generate (and clean up) environments in Platform.sh! That same API, coupled with our system of hooks and support for tools like  Headless Chrome , gives you a robust continuous integration solution for Drupal and other technologies\u2014again, at no extra cost.  Learn more about Platform.sh integrations . \n       Acquia provides some integration with GitHub via an extra-cost add-on product for Enterprise customers, but doesn't support GitLab or Bitbucket. \n       The Platform.sh API isn't limited to managing your current Drupal projects. With just a few commands, you can create new projects across regions around the world. This is how Platform.sh partners like  GoalGorilla  build their own successful SaaS businesses ( Open Social ) with Drupal and Platform.sh.  Learn more about the Platform.sh API and SaaS platform . \n\n       7. Platform.sh does Drupal best, at a lower cost \n       The most cost-effective host for your Drupal applications, Platform.sh doesn\u2019t charge you for your success. (And that doesn\u2019t even count the value of our continuous integration and deployment tools.) What does that mean? \n       \n       Acquia's pricing starts at $141 and is suitable for \"Personal Drupal sites and blogs.\" \n       On the other hand, the Platform.sh Professional Medium tier can serve 500,000 pageviews per month, uncached, at a price of $135/month. If your app is cacheable, you can serve far more. That's a real business solution, not a personal blog. \n\n       \n         \n           Professional \n           $135 \n           Medium , Low traffic, multiple apps \n         \n         \n           \n             3 GB memory \n             Medium-to-higher traffic websites \n             Microservice apps or multidatabase apps \n             Suitable for around 500,000 monthly page views \n           \n         \n       \n\n       Platform.sh also  includes  a global CDN with our  Enterprise  plans, starting at only $1,250/month, while CDN is an extra-cost service with Acquia. \n       Do you need to run tests, compile Sass, use Node.js-based tools as part of your build? Platform.sh handles all of that natively, too, rather than charging you more.  Learn more about Platform.sh pricing . \n       8. Platform.sh does more than Drupal \n       Across organizations, it's rare for a single CMS to be adopted universally. There are many reasons for this: developer expertise, budget, and even internal politics. Supporting many languages and frameworks is good for us, and good for our customers. Real freedom comes from having a platform that can grow and shift with you as your needs evolve. \n     \n   \n \n   \n     \n      Platform.sh isn't exclusive to Drupal by design. Instead, we let you run Drupal alongside your  Node.js /Javascript app,  Java ,  Python , and more at no extra cost. You can combine the front end and back end of your app in the same project, deployed automatically by us across our secure, containerized grid. Check out our complete list of supported runtimes in the Developers menu above.\n     \n   \n \n   \n     \n      Need hands-on support to keep your Drupal projects patched and secure?\n      Platform.sh does that, too. Just ask us about Application Support.\n     \n     \n       With Platform.sh, you can use the best solution for every site you build and manage:  WordPress ? Our PHP support is peerless. Static Site Generators (SSGs)? Check out our examples with  Hugo ,  Jekyll , and  Gatsby .  Java ? Run CMS apps like  Brightspot , or OSS stacks like  Spring MVC and MongoDB . Acquia supports Drupal, with limited Node.js app support as an extra-cost feature for Acquia Cloud Enterprise. \n\n       9. Platform.sh has Drupal expertise when you need it \n       Selecting the right platform for scalability is important, but sometimes your team will run into challenges. For that, we have a global team of support engineers spanning North America, South America, Europe, Africa, Oceania, and Asia. \n       Need hands-on support to keep your Drupal projects patched and secure? Platform.sh does that, too. Just ask us about Application Support. \n\n       10. Choice is good. That's why Platform.sh is multicloud. \n       Choosing which Infrastructure-as-a-Service (IaaS) provider to use can be a gamble, and once your die is cast, it's hard to switch. The same can be true of your hosting or PaaS provider. That's why most hosting providers like Acquia work with only a single IaaS partner (in Acquia\u2019s case, that\u2019s Amazon Web Services [AWS]). \n       Instead, Platform.sh makes it easy to use the IaaS provider that works best for your business, whether your choice is based on  data locality for compliance , getting your application as close to your end users as possible, or simply preference. We can run your applications in the US, Canada, Australia, Ireland, Germany, and France. \n       Platform.sh works with four IaaS partners\u2014Amazon Web Services, Google Cloud Platform, Microsoft Azure, and Orange\u2014 to give you the most choices and global reach. And you can run the same code across all four of these platforms without making any changes. \n       Need a custom location?  Let's talk . \n       We take security and compliance seriously. For some countries and companies, that means hosting locally, too. Not only are we  SOC 2 certified , we\u2019re compliant with the CASL in Canada, and  Germany\u2019s BDSG and strict data locality and access rules . \n\n       Power. Simplicity. Freedom. \n       The best tools are the ones that fade into the background and let you get on with your work. Find out how we can help your organization focus, faster. Chat with our team now, or try out Platform.sh for free, below. \n     \n   \n", "rank": 4},
{"site": "website", "section": "Stacks", "title": "Java hosting and developer workflow ", "url": "https://platform.sh/stacks/java/", "documentId": "e1fb169770f2736440a6ebcddaeda715d6632bba", "text": "\n     \n       \n         Enterprise-grade Java hosting \n        \n         The most modern Java frameworks and product management tools\u2014and fully managed back-end services\u2014to seamlessly host your apps. \n        \n        \n         \n   Launch a Spring MVC + MongoDB app now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Java microservices. No add-on required \n           Build sites and apps faster with native support for pipenv, and yaml-driven configuration of PostgreSQL, Redis, Elasticsearch, and more. Build and deploy your Java apps without having to manage add-ons from third-party marketplaces. \n         \n       \n      \n       \n         \n           \n         \n         \n           Instant staging environments for continuous deployments \n           Platform.sh solves the issue by giving you an immutable infrastructure to host your Java projects. We build your hosting environment from scratch every time you  git push , so you always know what you\u2019re getting at deploy time. You tell us what your project needs to fly, and we\u2019ll take it from there. \n         \n       \n      \n       \n         \n           \n         \n         \n           Batteries included \n           We support Java 8, 11, and 12, and our Git-based workflow makes it a snap to test out your Java application across versions. \n         \n       \n      \n     \n   \n     \n       \n         \n           \n             \n               Blog \n               Develop with the greatest tools in the Java ecosystem \n              \n               Platform.sh supports the best project management tools in the Java ecosystem, including Gradle, Maven, and Ant. Our Java blog series explores best practices using them. \n              \n               \n   View blog series \n   \n \n \n             \n             \n               \n             \n           \n         \n       \n     \n   \n     \n       \n         Related documentation \n       \n     \n     \n       \n         \n   More Java Docs \n   \n \n \n       \n     \n     \n      \n       \n         Java frameworks \n         Platform.sh has support for the most popular frameworks, like  Jakarta EE ,  Eclipse Microprofile ,  Spring ,  Spring Boot ,  Spring MVC , and more. You can get started right away with a template project. \n         View \n       \n      \n       \n         Accessing services with Java \n         How to call Solr, Redis, MySQL, and more from your Java application using the official Java provider. Platform.sh template support for  Spring Data ,  JPA ,  Jakarta ,  Jakarta NoSQL , and then some. \n         View \n       \n      \n       \n         Platform.sh configuration library \n         Library provides a streamlined, easy-to-use way to interact with a Platform.sh environment. Find utility methods to access routes and relationships more cleanly than reading the raw environment variables yourself. \n         View \n       \n      \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What\u2019s new with Jakarta NoSQL? (Part II) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             What's new with Jakarta NoSQL? (Part I) \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Ready to have fun? Try Kotlin and Spring! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Stacks", "title": "Enterprise-grade Golang hosting and development ", "url": "https://platform.sh/stacks/go/", "documentId": "41a5674e423458451119fdd7f3c1fd58a6c4cc6f", "text": "\n     \n       \n         Build, run, and scale your Go applications \n        \n         The most popular frameworks and fully managed back-end services to seamlessly host your apps \n        \n        \n         \n   Try Go and MariaDB now for FREE on Platform.sh \n   \n \n\n        \n       \n       \n         \n           .a2d95dd4-46f6-4b68-a549-3be48553ecb2{fill:none;}.a2dea788-1342-46eb-a320-11c6bcdd27f8{fill:#fcc938;}.f4f08e73-86b5-49bd-93a9-75d50b005e00{fill:#7bd8db;}.fe103eef-bb51-47e7-ac81-c3b8de9ef76d{fill:#171719;} Header \n  \n         \n         \n           \n         \n       \n     \n   \n     \n       \n         \n          \n           The greatest toolbox for Go developers \n          \n         \n       \n     \n   \n     \n      \n       \n         \n           \n         \n         \n           Go microservices. No add-on required. \n           Build sites and apps faster with native support for Go modules, and YAML-driven configuration of PostgreSQL, Redis, Elasticsearch, and more. Build and deploy your Go apps without having to manage add-ons from third-party marketplaces. \n         \n       \n      \n       \n         \n           \n         \n         \n           Instant staging environments for continuous deployments \n           Platform.sh solves the issue by giving you an immutable infrastructure to host your Go projects. We build your hosting environment from scratch every time you  git push , so you always know what you\u2019re getting at deploy time. You tell us what your project needs to fly, and we\u2019ll take it from there. \n         \n       \n      \n       \n         \n           \n         \n         \n           Batteries included \n           Easily upgrade Go versions, and configure services from Redis to MongoDB to Elasticsearch, all with a few lines of YAML. No add-ons or management required. \n         \n       \n      \n     \n   \n     \n       \n         Related documentation \n       \n     \n     \n       \n         \n   More Go Docs \n   \n \n \n       \n     \n     \n      \n       \n         Go frameworks and templates \n         Platform.sh has support for some of the most popular frameworks, like  Gin ,  Beego , and  Echo , as well as the  Hugo  static site generator. You can get started right away with a template project. \n         View \n       \n      \n       \n         Accessing services with Go \n         How to call Solr, Redis, MySQL, and more from your Go application \n         View \n       \n      \n       \n         Platform.sh configuration library \n         Library provides a streamlined, easy-to-use way to interact with a Platform.sh environment. Find utility methods to access routes and relationships more cleanly than reading the raw environment variables yourself. \n         View \n       \n      \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             New: Go release 1.13 on Platform.sh \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Who Needs DevOps? Some of us really. ", "url": "https://platform.sh/downloads/who-needs-devops/", "documentId": "c6cd466bd428c196907911a4dc81d0bea1ec021a", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Unlocking Agile ", "url": "https://platform.sh/downloads/unlocking-agile/", "documentId": "56097465b4e6d464efe7415c8b1dbe99bffe995e", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "The Agency Program - why you would want to join ", "url": "https://platform.sh/downloads/platform.sh-agency-program/", "documentId": "8cbfc349f8135df218cc2d6fd0a8b2dbc39dc5f7", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Slimtrader Testimonial ", "url": "https://platform.sh/downloads/slimtrader/", "documentId": "9d069887a0613d4de3dabb9a51ad8c3d42a2f0ed", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Savings being made by Agencies and Enterprise ", "url": "https://platform.sh/downloads/savings-for-agencies-enterprise/", "documentId": "d0dac08fc7998fece8e06239b8a6bdb029157c59", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "SaaS/Cloud Vendors: Reach Further with Platform.sh ", "url": "https://platform.sh/downloads/saas-and-cloud-white-label/", "documentId": "f95e252f028a385ab5ae8b427734617a56891966", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Reiss Testimonial ", "url": "https://platform.sh/downloads/reiss-testimonial/", "documentId": "0d97fce2d74c267dd930e3a2c9ec752c96ca401a", "text": "", "rank": 4},
{"site": "website", "section": "Company", "title": "Platform.sh fournit une solution d\u2019h\u00e9bergement web \u00e0 plus de 6000 clients d\u2019Orange Business Services ", "url": "https://platform.sh/company/press/2019/platformsh-fournit-une-solution-dhebergement-web-a-plus-de-6000-clients-dorange-business-services/", "documentId": "d344a2440861242910284b61ca402bed376c2ca0", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         press \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh fournit une solution d\u2019h\u00e9bergement web \u00e0 plus de 6000 clients d\u2019Orange Business Services \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \n Plus de 6000 sites web de TPE / PME sont en cours de migration vers Flexible Web Publisher d\u2019Orange Business Services qui s\u2019appuie sur une nouvelle offre de Platform.sh. \n Artisans, h\u00f4teliers, professionnels de la sant\u00e9\u2026 pourront ainsi am\u00e9liorer leur pr\u00e9sence sur internet. \n \n Paris, le 26 juillet 2019 \u2013  Platform.sh, la plateforme (PaaS) qui simplifie les infrastructures cloud pour les \u00e9quipes digitales, annonce aujourd\u2019hui l\u2019extension de son partenariat avec Orange Business Services qui vise \u00e0 enrichir l\u2019offre d\u2019h\u00e9bergement web d\u2019Orange. Elle pr\u00e9voit la migration de plus de 6000 sites WordPress, Joomla, Prestashop et Drupal sur le PaaS de Platform.sh. \n Les clients TPE / PME d\u2019Orange Business Services, ainsi que les agences digitales partenaires b\u00e9n\u00e9ficient ainsi d\u2019une solution premium pour g\u00e9rer leur site ou application web et mobile. Cette derni\u00e8re propose un syst\u00e8me de gestion de contenus h\u00e9berg\u00e9 et s\u00e9curis\u00e9. La gestion des noms de domaine et la s\u00e9curit\u00e9 sont enti\u00e8rement prises en charge et des environnements de test offrent aux d\u00e9veloppeurs une exp\u00e9rience de travail enrichie. Diff\u00e9rents services sont inclus sur une seule et m\u00eame plateforme : multiples niveaux de stockage, mises \u00e0 jour automatis\u00e9es du syst\u00e8me de gestion de contenu utilis\u00e9, sauvegardes et restaurations de l\u2019environnement de production, syst\u00e8me de clonage instantan\u00e9 pour tester les changements avant de les mettre en production. \n \u201cNotre objectif est de permettre \u00e0 nos clients de b\u00e9n\u00e9ficier de l\u2019excellente exp\u00e9rience de d\u00e9veloppement et de d\u00e9ploiement offerte par Platform.sh. Flexible Web Publisher, dont l\u2019h\u00e9bergement est localis\u00e9 en France dans nos datacenters, simplifie drastiquement les mises \u00e0 jour des sites. Elle permet aux \u00e9quipes digitales d'\u00eatre plus efficaces dans leur travail et soutient ainsi la transformation digitale de nos clients, notamment les petites et moyennes entreprises.\u201d d\u00e9clare Stefan Kanis, Directeur de l\u2019activit\u00e9 Cloud d\u2019Orange Business Services. \u201cCette action s\u2019inscrit compl\u00e8tement dans la vision d\u2019Orange Business Services de faire profiter \u00e0 nos clients des incroyables gains de productivit\u00e9 offerts par le cloud.\u201d \n \u201cNous sommes ravis de continuer \u00e0 \u00e9tendre notre expertise et d\u2019avoir s\u00e9duit l\u2019entit\u00e9 cloud d\u2019Orange Business Services. Gr\u00e2ce \u00e0 ce nouveau projet d\u2019envergure, nous allons pouvoir aider des entreprises plus petites, avec moins de moyens, \u00e0 r\u00e9ussir leur transformation digitale en ayant acc\u00e8s aux solutions les plus pertinentes sur le cloud. D\u00e9sormais, notre offre couvre l\u2019ensemble du march\u00e9 digital\u201d se r\u00e9jouit Fr\u00e9d\u00e9ric Plais, CEO et co-fondateur de Platform.sh. \n Pour plus d\u2019information sur Platform.sh pour Orange Business Services, visitez :  https://cloud.orange-business.com/fr/cloud-application-services/platform-sh-by-orange \n Platform.sh \n Platform.sh est une plateforme cloud d\u2019h\u00e9bergement d\u2019applications web. Sa plateforme innovante d\u2019int\u00e9gration continue permet aux \u00e9quipes d\u00e9ployant sites eCommerce, sites m\u00e9dia, applications innovantes et \u00e0 fort trafic de concentrer leurs efforts sur le d\u00e9veloppement et l\u2019am\u00e9lioration de leurs applications sans \u00e0 avoir \u00e0 se soucier des probl\u00e9matiques d\u2019infrastructure (scalabilit\u00e9, d\u00e9ploiement continu, maintenance\u2026). Platform.sh est actuellement en Europe, aux Etats Unis et en Asie, via des partenariats mondiaux avec Orange, AWS et Azure.\nLa soci\u00e9t\u00e9, laur\u00e9ate du programme H2020 de la Commission europ\u00e9enne et membre de la French Tech a son si\u00e8ge social \u00e0 Paris (France) et San Francisco, et a parmi ses clients des marques prestigieuses telles que le Financial Times, Gap, Unity3D, Magento Commerce, Orange, Hachette, The British Council ou Lufthansa.\nRetrouvez-nous sur  LinkedIn  ou  Twitter . \n CONTACTS PRESSE : AGENCE RAOUL \n Pierre Gatey \u2013  Pierre@agenceraoul.com  - 06 07 33 89 45 \n Marion Clavel \u2013  Marion@agenceraoul.com  \u2013 06 60 41 78 57 \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Regions", "title": "Emakina France : structurer ses process pour des projets multi-types ", "url": "https://platform.sh/regions/france/temoignages/emakina/", "documentId": "2b93d5ccfc6845e220a90d4a757b24382f42458b", "text": "\n     \n       \n         \n  \n\n   \n     \n       \n         \n           Emakina France : structurer ses process pour des projets multi-types \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Plus besoin d\u2019aucun DevOps \n Faisant partie d\u2019un groupe Europ\u00e9en ayant des entit\u00e9s en France, Su\u00e8de, Turquie et Europe de l\u2019Ouest, Emakina est une agence digitale orient\u00e9e utilisateurs, avec des axes commerce et eCommerce, ainsi qu\u2019un axe connaissance clients qui a pour but d\u2019aider ses clients \u00e0 mieux conna\u00eetre les leurs. Emakina propose des strat\u00e9gies pures pour des lancements de marques, des livraisons de projets ou pour fournir des exp\u00e9riences utilisateurs efficaces, originales et m\u00e9morables, qui sauront susciter de l\u2019engagement. \n De par sa conception, Emakina est une agence \u00e0 multiples projets et clients, tous avec des typologies et des infrastructures diff\u00e9rentes. Il est donc crucial d\u2019avoir des process en place pour pouvoir \u00eatre le plus rapide et agile possible dans la mise \u00e0 disposition d\u2019infrastructures facilement configurables. Cela faisait partie des priorit\u00e9s pour l\u2019agence : permettre aux d\u00e9veloppeurs de s\u2019occuper de leurs clients pleinement, facilement, et qu\u2019ils puissent \u00eatre le plus autonomes possible sur la partie infrastructure, pour ne pas avoir recours \u00e0 une \u00e9quipe IT. Dans leur recherche de process plus optimal et solide, Platform.sh a r\u00e9pondu pr\u00e9sent. \n L\u2019objectif global d\u2019Emakina \u00e9tait de simplifier ses process. L\u2019agence cherchait exactement ce que Platform.sh offre : de la simplicit\u00e9 d\u2019usage, de gestion et de support, et la possibilit\u00e9 de lancer un projet et le configurer en un clic. Ces fonctionnalit\u00e9s et la gamme de services inclus ont ouvert la voie \u00e0 un c\u00f4t\u00e9 tr\u00e8s pratique, une gestion extr\u00eamement simple et un co\u00fbt tr\u00e8s comp\u00e9titif. \n Gr\u00e2ce \u00e0 la facilit\u00e9 d\u2019adoption de Platform.sh, et la documentation technique disponible pour s\u2019impr\u00e9gner du syst\u00e8me, les premi\u00e8res utilisations ont \u00e9t\u00e9 assez faciles. Un petit temps d\u2019adaptation a \u00e9t\u00e9 n\u00e9cessaire pour faire changer les habitudes des \u00e9quipes de d\u00e9veloppement car elles n\u2019avaient pas l\u2019habitude d\u2019un process aussi fluide. Aujourd\u2019hui, Emakina n\u2019a plus besoin d\u2019aucun DevOps. \n Un des plus grands changements qu\u2019Emakina a vu s\u2019installer gr\u00e2ce \u00e0 Platform.sh est l\u2019uniformisation du processus de d\u00e9marrage et lancement d\u2019un nouveau projet, r\u00e9duisant le temps de setup par 50%. En effet, malgr\u00e9 les diff\u00e9rences de typologies de clients et de projets,  Emakina peut d\u00e9sormais profiter d\u2019un cadre structur\u00e9 et d\u2019une philosophie de travail uniforme pour toute son \u00e9quipe, avec une automatisation de 100% des workflows. \n D\u2019autres fonctionnalit\u00e9s qui apportent beaucoup \u00e0 Emakina en termes d\u2019efficacit\u00e9 et de productivit\u00e9 sont la partie build des projets, les d\u00e9ploiements automatis\u00e9s qui poussent les \u00e9quipes \u00e0 comprendre sans besoin d\u2019intervention, et le fait de dupliquer un environnement en un clic. M\u00eame quand un bug est identifi\u00e9, son environnement peut \u00eatre dupliqu\u00e9 et transform\u00e9 en environnement de test pour pouvoir mieux avancer. L\u2019\u00e9quipe de d\u00e9veloppement peut d\u00e9sormais d\u00e9ployer quatre fois plus qu\u2019avant, en 70% de temps en moins. \n \n  Nous avons rarement voire jamais de probl\u00e8mes avec la plateforme, ca marche tres bien et c\u2019est tr\u00e8s efficace. Le support est la en cas de besoin et les \u00e9quipes sont toujours disponibles.\u201d \n   \n     \n     Nicolas Fabre ,\n    CTO France, Emakina\n     \n   \n \n Enfin le dernier point fort qui a marqu\u00e9 Emakina et ses \u00e9quipe est la disponibilit\u00e9 des \u00e9quipes support, qui ont accompagn\u00e9 l\u2019agence dans toutes leurs d\u00e9marches. L\u2019agence recommande d\u00e9sormais Platform.sh \u00e0 ses clients pour leurs productions. \n \n  \u201cUn autre aspect que nous trouvons particuli\u00e8rement positif c\u2019est la capacite de platform.sh a evoluer et a toujours chercher a am\u00e9liorer les choses pour ses clients, et proposer des nouveautes regulierement.\u201d \n   \n     \n     Nicolas Fabre \n     \n   \n \n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Regions", "title": "Contactez nous ", "url": "https://platform.sh/regions/france/contact/", "documentId": "11c07c235bb394764bf9f49d858b33dc8354098d", "text": "\n   \n     \n\n       \n         \n           Contactez nous \n           Nos \u00e9quipes d\u00e9di\u00e9es sont pr\u00eates \u00e0 vous aider. \n         \n       \n\n       \n\n        \n         \n           \n             \n               \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n             \n\n             Contactez  l\u2019\u00e9quipe commerciale \n             Vous souhaitez d\u00e9couvrir comment Platform.sh peut aider votre entreprise ? \n             \n              En savoir plus\n             \n           \n         \n        \n\n        \n         \n           \n             \n               \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n             \n\n             Contactez le Customer Care \n             Vous \u00eates d\u00e9j\u00e0 client et avez besoin d\u2019aide ? Notre  \u00e9quipe support  est disponible 24x7. \n             \n              Contacter le Support\n             \n           \n         \n        \n       \n\n     \n   \n \n   \n     \n       \n \n \n \n \n \n \n \n \n \n\n \n       Rejoignez notre Slack \n     \n     \n       \n        \u00c9changez avec nous sur notre  canal public Slack  et utilisez  @platform  pour attirer notre attention si c'est vraiment important.\n       \n     \n   \n \n   \n     \n       Notre pr\u00e9sence internationale \n     \n   \n \n   \n     \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n     \n     \n       France \n       131 Boulevard de S\u00e9bastopol \n       75002 Paris, France \n       +33 (0) 1 40 09 30 00 \n     \n     \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n     \n     \n       Allemagne \n       Marienstr. 90-92 \n       50825 K\u00f6ln, Germany \n       +49(0) 221 169 23136 \n     \n   \n \n   \n     \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n     \n     \n       Grande-Bretagne \n       Kemp House | 152 City Road \n       London, EC1V 2NX UK \n       +44(0) 203 815 7962 \n     \n     \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n     \n     \n       \u00c9tats-Unis \n       255 Kansas St \n       San Francisco, CA 94103 \n       +1 818-369-4597 \n     \n   \n \n   \n     \n       \n   G\u00e9rez vos pr\u00e9f\u00e9rences de communications Platform.sh \n  \n   \n     G\u00e9rer mes pr\u00e9f\u00e9rences \n     \n   \n  \n \n\n     \n   \n \n   \n     \n       D\u00e9marrer un projet Platform.sh \n      \n      \n       \n         J\u2019y vais \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Regions", "title": "Teeps, startup Fran\u00e7aise, se concentre sur son \u00e9volution dans un environnement NoOps ", "url": "https://platform.sh/regions/france/temoignages/teeps/", "documentId": "67a8899bd225fcc5f147ab4234e7623c671f804d", "text": "\n     \n       \n         \n  \n\n   \n     \n       \n         \n           Teeps, startup Fran\u00e7aise, se concentre sur son \u00e9volution dans un environnement NoOps \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Z\u00e9ro downtime \u00e0 chaque d\u00e9ploiement \n Lanc\u00e9e \u00e0 Paris en 2016 pour redonner un aspect humain au eCommerce, l\u2019application de shopping collaboratif Teeps se compose aujourd\u2019hui de 2500 experts qui jouent un r\u00f4le de prescripteur aupr\u00e8s de leur communaut\u00e9 de 350 000 membres et 750 marques march\u00e9s, dans les secteurs d\u00e9co, mode, sport, et beaut\u00e9, avec une marketplace de 500 000 produits disponibles. La mission de Teeps est de permettre aux marques de (re)cr\u00e9er un lien authentique avec leurs clients qui aiment d\u00e9j\u00e0 sinc\u00e8rement leur marque et leur produits mais aussi avec toutes les personnes passionn\u00e9es par leur univers et partageant leur valeurs. \n Le concept ? La publication de contenus pour cibler une audience sp\u00e9cifique, l\u2019identification d\u2019experts et l\u2019engagement conversationnel avec les consommateurs. Les experts qui recommandent des produits peuvent gagner une commission (entre 5 et 8%). La plateforme est ludique et gamifi\u00e9e et permet aux membres de la communaut\u00e9 d\u2019\u00e9changer par chat/messagerie instantan\u00e9e. \n En recherche de technologie pour soutenir le projet efficacement et avec de l\u2019uptime en continu, l'\u00e9quipe technique de Teeps a \u00e9tudi\u00e9 et test\u00e9 plusieurs options, dont Heroku et AWS, mais le fait que Platform.sh apporte une couche d\u2019abstraction avec AWS, et qu\u2019il n\u2019y ait pas de besoin de manager en interne les machines virtuelles ou leurs sizings, a acc\u00e9l\u00e9r\u00e9 leur prise de d\u00e9cision. Ayant d\u00e9j\u00e0 \u00e9t\u00e9 confront\u00e9 \u00e0 l\u2019installation de serveurs et connaissant l\u2019administration syst\u00e8me qui peut s\u2019av\u00e9rer tr\u00e8s lourde, la couche d\u2019abstraction de Platform.sh a fait la diff\u00e9rence. \n L\u2019adoption de Platform.sh s\u2019est faite tr\u00e8s rapidement apr\u00e8s une d\u00e9monstration d\u2019un membre de l'\u00e9quipe. La solution a \u00e9t\u00e9 tr\u00e8s facile \u00e0 prendre en main et n\u2019a pr\u00e9sent\u00e9 aucune difficult\u00e9 pour d\u00e9marrer, selon l'\u00e9quipe technique de Teeps. Elle a permis de r\u00e9soudre certains challenges que Teeps avait eu auparavant, par sa simplicit\u00e9 d\u2019utilisation et mise en place des environnements de d\u00e9veloppement et staging. \n \n  Platform.sh nous a fait gagner beaucoup, beaucoup de temps.\u201d\n   \n     \n     Riaz Hatia ,\n    CTO, Teeps\n     \n   \n \n La fonctionnalit\u00e9 qui a le plus plu \u00e0 Teeps est le d\u00e9ploiement automatique d\u2019un environnement par branche, qui permet de rapidement mettre en place un environnement pour faire tester une fonctionnalit\u00e9 sans que les d\u00e9veloppeurs aient \u00e0 se soucier de changer le sch\u00e9ma de la base de donn\u00e9es. Les environnements isol\u00e9s permettent de faire des tests en toute tranquillit\u00e9 sans se soucier de la partie installation de l\u2019environnement, et sans avoir \u00e0 se poser de questions sur ce que les autres membres de l'\u00e9quipe sont en train de faire. \n \n  Globalement, notre exp\u00e9rience avec Platform.sh est tr\u00e8s positive, notamment la r\u00e9activit\u00e9 et le niveau de l'\u00e9quipe support. Au moindre soucis, le support Platform.sh est r\u00e9actif et tr\u00e8s comp\u00e9tent.\u201d\n   \n     \n     Riaz Hatia \n     \n   \n \n Platform.sh permet \u00e0 Teeps d\u2019atteindre ses objectifs business gr\u00e2ce \u00e0 sa bonne performance et le fait qu\u2019elle soit une solution s\u00e9curis\u00e9e. \u201cTout fonctionne bien, et lorsqu\u2019on a des clients en B2B on sait qu\u2019on peut s\u2019appuyer sur cette solution pour la partie hosting,\u201d nous communique Riaz Hatia, CTO chez Teeps. \u201cNous avons beaucoup de demandes d\u2019un point de vue s\u00e9curit\u00e9 et service, et Platform.sh offre tout ce qu\u2019il faut.\u201d \n La plateforme permet \u00e9galement de mettre en ligne plus rapidement et de mettre en place en interne les outils de d\u00e9ploiement continu, de monitoring, ou d\u2019alerting. Cela a g\u00e9n\u00e9r\u00e9 un gain de productivit\u00e9 consid\u00e9rable pour toute l'\u00e9quipe IT. \n \n  Cela a g\u00e9n\u00e9r\u00e9 un gain de productivit\u00e9 consid\u00e9rable pour toute l'\u00e9quipe IT.\u201d\n   \n     \n     Riaz Hatia \n     \n   \n \n En termes de points d\u2019am\u00e9lioration concrets, Teeps a vu plusieurs r\u00e9els points positifs. ll est d\u00e9sormais possible pour Teeps de lancer un projet en mois d\u2019une heure. Il suffit de configurer deux fichiers et tout se d\u00e9ploie automatiquement, ce qui permet de laisser la main aux d\u00e9veloppeurs directement pour la configuration du projet sans besoin d\u2019une \u00e9quipe DevOps. \n La majorit\u00e9 des tickets sont trait\u00e9s en moins de 24h pour un niveau d\u2019urgence normal, dans l\u2019heure pour un ticket urgent. L\u2019\u00e9quipe support est proactive pour les projets entreprise sur le monitoring de la plateforme et prend en charge les probl\u00e8mes avant m\u00eame qu\u2019ils soient remarqu\u00e9s. \n Teeps d\u00e9ploie d\u00e9sormais plusieurs fois par jour (minimum deux fois). Le temps de build reste variable selon le projet, mais les d\u00e9ploiements ne voient jamais de downtime. \n \n  Nous recommandons tout \u00e0 fait Platform.sh. Sa simplicit\u00e9 d\u2019utilisation, la qualit\u00e9 du service et les gains de productivit\u00e9 de l'\u00e9quipe nous ont vraiment convaincu. On est d\u00e9sormais dans un environnement NoOps - plus besoin que les d\u00e9veloppeurs sachent installer un serveur Apache, ils n\u2019ont plus besoin de s\u2019occuper de l\u2019infrastructure. Tout se passe bien, nous sommes tr\u00e8s contents.\u201d\n   \n     \n     Riaz Hatia \n     \n   \n \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Regions", "title": "Comic Relief apporte du rire et de l\u2019espoir aux enfants du monde ", "url": "https://platform.sh/regions/france/temoignages/comic-relief/", "documentId": "4529a9635863636fc115d5d99680afc75d36648d", "text": "\n     \n       \n         \n  \n\n   \n     \n       \n         \n           Comic Relief apporte du rire et de l\u2019espoir aux enfants du monde \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         En 1985, l'\u00e9crivain et r\u00e9alisateur britannique Richard Curtis, la philanthrope Jane Tewson et quelques uns de leurs amis se sont r\u00e9unis autour d\u2019une id\u00e9e et d\u2019un but com muns : recueillir des fonds et changer la vie de ceux qui vivent en Afriqueet au Royaume-Uni gr\u00e2ce \u00e0 la com\u00e9die. C\u2019est ainsi qu\u2019est n\u00e9 Comic Relief, le plus souvent reconnu pour le Red Nose Day. \n Le tout premier Red Nose Day a \u00e9t\u00e9 diffus\u00e9 en direct sur la cha\u00eene de la BBC en 1988, mettant en vedette plus de 150 c\u00e9l\u00e9brit\u00e9s et com\u00e9diens, et recueillant plus de 15 millions de livres sterling. Au fil des ann\u00e9es, la mission de Comic Relief, qui consiste \u00e0 susciter des changements positifs par le biais du divertissement, a permis d\u2019accro\u00eetre la sensibilisation et de recueillir des fonds pour s\u2019attaquer \u00e0 certains des d\u00e9fis les plus urgents dans le monde : l\u2019itin\u00e9rance, la pauvret\u00e9, les droits des personnes handicap\u00e9es, le VIH, la maltraitance des personnes \u00e2g\u00e9es et la faim dans le monde. Au cours de ses 30 premi\u00e8res ann\u00e9es d\u2019existence, l\u2019organisation a vers\u00e9 plus d\u2019un milliard de livres sterling en subventions \u00e0 des organismes caritatifs m\u00e9ritants, traversant l\u2019oc\u00e9an jusqu\u2019aux \u00c9tats-Unis en 2015 pour \u00e9tendre sa port\u00e9e. \n Au-del\u00e0 des \u00e9v\u00e9nements t\u00e9l\u00e9vis\u00e9s de grande envergure, Comic Relief parraine \u00e9galement des activit\u00e9s et des campagnes num\u00e9riques qui ont pour but d\u2019attirer, d\u2019informer et de mobiliser les donateurs. Pour pouvoir lancer plus rapidement de nouvelles fonctionnalit\u00e9s sur leur site Web et de nouvelles exp\u00e9riences digitales pour leurs donateurs, l'\u00e9quipe IT hautement sophistiqu\u00e9e de Comic Relief avait besoin d\u2019une plate-forme de d\u00e9veloppement robuste. \n \n   \n     \n   \n   \n     D\u00e9veloppement acc\u00e9l\u00e9r\u00e9, productivit\u00e9 individuelle et collective am\u00e9lior\u00e9e \n     \"En 2017, nous avons travers\u00e9 une transformation difficile de l'architecture technique, en d\u00e9pla\u00e7ant nos anciens sites Web vers Drupal 8 et en construisant g\u00e9n\u00e9ralement des sites Web de campagne plus attrayants \", explique Peter Vanhee, responsable de la technologie chez Comic Relief. \"Nous avons d'abord introduit notre \u00e9quipe \u00e0 Platform.sh pour cr\u00e9er plus d'environnements de pr\u00e9visualisation, avec l'objectif d'it\u00e9rer plus rapidement.\" \n     Avant d'adopter Platform.sh, l'\u00e9quipe de Vanhee devait s'appuyer sur l'\u00e9quipe WebOps de Comic Relief pour faire tourner un environnement de contr\u00f4le qualit\u00e9 ou pour faire examiner les changements s\u00e9par\u00e9ment, et cela prenait des jours. L'\u00e9quipe passait en revue plusieurs fonctionnalit\u00e9s \u00e0 la fois, ce qui rendait plus difficile les tests et les fusions ult\u00e9rieures dans une branche stable. Il fallait des ressources DevOps et de CQ plus robustes pour g\u00e9rer le processus. \n     Maintenant, gr\u00e2ce \u00e0 l'int\u00e9gration de Platform.sh sur GitHub, le processus est automatis\u00e9. Chaque fonctionnalit\u00e9 a son propre environnement, ce qui est tr\u00e8s avantageux quand vous avez plusieurs d\u00e9veloppeurs travaillant sur plusieurs fonctionnalit\u00e9s en m\u00eame temps. Aux p\u00e9riodes de d\u00e9veloppement les plus charg\u00e9es, l'utilisation des branches de Comic Relief peut aller jusqu'\u00e0 20 branches et environnements associ\u00e9s. \n   \n \n \n  On dit que les meilleurs outils sont ceux qui s'effacent en arri\u00e8re-plan et vous permettent de poursuivre votre travail. Vanhee est d'accord. \"Nos d\u00e9veloppeurs ne voient pas Platform.sh ; il est totalement invisible pour eux. Ils n'ont pas besoin d'y acc\u00e9der directement. Au contraire, ils passent juste par GitHub.\"\n   \n     \n     Peter Vanhee ,\n    Head of Technology, Comic Relief\n     \n   \n \n Plus d\u2019efficacit\u00e9, plus de donateurs potentiels \n Le processus permettant \u00e0 l'\u00e9quipe de Comic Relief de tester les changements d\u00e9pend en grande partie du d\u00e9veloppement et du contr\u00f4le qualit\u00e9 requis pour une fonctionnalit\u00e9 particuli\u00e8re, par exemple l\u2019am\u00e9lioration de l\u2019exp\u00e9rience des donateurs sur comicrelief.com ou l\u2019optimisation du site pour les mobiles. Avec Platform.sh, l\u2019outillage pour la mise en place de nouveaux environnements, la reprise de la base de donn\u00e9es actuelle de la production et l\u2019application des changements de la branche dessus est, encore une fois, enti\u00e8rement automatis\u00e9. Il ne faut pas plus de 10 minutes lors du premier commit, et seulement 5 minutes environ par la suite pour que l\u2019environnement de pr\u00e9visualisation soit disponible pour des tests manuels et automatis\u00e9s. \n Le contr\u00f4le qualit\u00e9, les chefs de produits, les concepteurs UX et les autres ing\u00e9nieurs peuvent simplement examiner l'\u00e9tat du travail dans un environnement de staging au moment o\u00f9 un commit est envoy\u00e9, ce qui acc\u00e9l\u00e8re le processus de r\u00e9vision. Avec des environnements de staging maintenant pr\u00eats en moins de 10 minutes, les chefs de produits peuvent montrer les fonctionnalit\u00e9s aux dirigeants dans une fen\u00eatre tr\u00e8s serr\u00e9e. Platform.sh a permis d\u2019augmenter la productivit\u00e9 individuelle des membres de l'\u00e9quipe, en permettant \u00e0 85% des ressources DevOps/CQ de Comic Relief d'\u00eatre r\u00e9affect\u00e9es \u00e0 d\u2019autres t\u00e2ches. \n Auparavant, l'\u00e9quipe de Comic Relief d\u00e9ployait des changements chaque semaine. Avec Platform.sh, ils d\u00e9ploient des changements \u00e0 chaque fois qu\u2019ils fusionnent avec la branche master, ce qui arrive plusieurs fois par jour. L'\u00e9quipe effectue une s\u00e9rie de tests dans un environnement de staging avant que la modification ne soit automatiquement d\u00e9ploy\u00e9e en production avec une simple fusion Git. Tout cela se produit en moins d\u2019une heure apr\u00e8s que la modification ait \u00e9t\u00e9 fusionn\u00e9e dans la branche master. \n \n   \n  Le pipeline de d\u00e9ploiement de Comic Relief Concourse.ci pour  sportrelief.com , une initiative de Comic Relief. Les \u00e9tapes du pipeline de d\u00e9ploiement automatis\u00e9 sont repr\u00e9sent\u00e9es, de la mise en place dans la branche master (\u00e0 l'extr\u00eame gauche) \u00e0 la mise en staging du d\u00e9ploiement, au test de bout en bout (au milieu) et au d\u00e9ploiement en production. Le tout automatis\u00e9 \u00e0 l'aide de l'outil de d\u00e9ploiement Platform.sh dans divers environnements.\n \n Des r\u00e9sultats concrets \n Globalement, Comic Relief estime que l\u2019adoption de Platform.sh a permis \u00e0 leur \u00e9quipe d'\u00e9conomiser 40% sur leurs projets Drupal. \n \n Plus besoin d\u2019un ing\u00e9nieur WebOps d\u00e9di\u00e9 pour g\u00e9rer les environnements de contr\u00f4le qualit\u00e9 Drupal et le staging/production. \n R\u00e9duction des co\u00fbts d\u2019h\u00e9bergement car auparavant l'\u00e9quipe aurait construit sa propre pile sur AWS, \u201cce qui pouvait, parfois, devenir assez co\u00fbteux\u201d. \n A permis aux ing\u00e9nieurs de passer du d\u00e9ploiement au contr\u00f4le qualit\u00e9 et au staging/production pour se concentrer sur le d\u00e9veloppement de fonctionnalit\u00e9s et les tests associ\u00e9s, sachant que le pipeline s\u2019occupera du reste. \n \n Une grande concentration sur la mission \n Avec Platform.sh, Comic Relief dit avoir trouv\u00e9 une plate-forme partenaire strat\u00e9gique qui lui permet de construire, de lancer et de faire tourner tout nouveau site Drupal en quelques semaines, en s\u2019adaptant selon les besoins pour soutenir les campagnes annuelles de collecte de fonds de Red Nose Day et de Sport Relief. Le choix technologique de l\u2019IUR pour Platform.sh s\u2019aligne bien avec le plan strat\u00e9gique quinquennal de Comic Relief qui consiste \u00e0 travailler intelligemment en se concentrant sur l\u2019efficacit\u00e9 et l\u2019efficience, afin de maximiser la valeur qu\u2019ils apportent \u00e0 leurs b\u00e9n\u00e9ficiaires. \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Regions", "title": "Digital Factory ", "url": "https://platform.sh/regions/france/offre-esn/", "documentId": "f0ca0ef9e0c83c0fde45ab3660cbe87860aa317c", "text": "\n   \n     \n       \n     \n         Platform.sh, \u2028votre nouvelle \u2028digital factory \n\n        \n\n        \n         Mot cl\u00e9 : v\u00e9locit\u00e9. C\u2019est ce que vos clients recherchent, c\u2019est ce que nous vous offrons. Boostez la productivit\u00e9 de vos d\u00e9veloppeurs, la rentabilit\u00e9 de votre agence, et la satisfaction de vos clients. \n        \n\n        \n\n        \n         \n         \n           \n             Email Address \n             \n           \n           \n             Obtenir une d\u00e9mo \n             \n           \n         \n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n        \n      \n     \n   \n \n\t \n\t\t \n\t\t   Faites preuve de  souplesse \n       Prise en charge d'un large \u00e9ventail de langages et de frameworks, ce qui permet \u00e0 vos d\u00e9veloppeurs d'adapter leurs solutions aux besoins des clients, tout en vous lib\u00e9rant de l'emprise de la technologie. Cela r\u00e9duit vos risques et augmente votre avantage concurrentiel. \n       Platform.sh couvre + de 95% des technos web open source \n\t\t \n     \n       \n     \n\t \n \n\t \n\t\t \n        \n   \u201c \n  Avec Platform.sh, on peut mettre en place une nouvelle base de donn\u00e9es, serveur web, ElasticSearch et configuration en une minute.\u201d\n   \n     \n       Adam Zielinski , CTO, Kurier\n     \n   \n \n     \n\t \n \n   \n     \n       \n     \n     \n       Simplifiez votre workflow \n       Avec Platform.sh, votre \u00e9quipe peut se concentrer sur l\u2019essentiel : cr\u00e9er une exp\u00e9rience client exceptionnelle qui g\u00e9n\u00e8re des revenus. \u00c9liminez les goulots d'\u00e9tranglement du workflow en clonant instantan\u00e9ment l'ensemble de votre environnement de production, services et donn\u00e9es inclus, pour acc\u00e9l\u00e9rer le go-to-market de nouvelles applications et fonctionnalit\u00e9s. Simplifiez les r\u00e9visions, validations et recettes clients gr\u00e2ce \u00e0 ce processus. \n       Platform.sh vous permet de cloner votre production en quelques minutes \n     \n   \n \n   \n     \n        \n   \u201c \n  Avec Platform.sh, nous d\u00e9marrons un projet en 15 minutes.\u201d\n   \n     \n       Miro Dietiker , Founder, MD Systems\n     \n   \n \n     \n   \n \n   \n     \n       Portez votre agence vers de nouveaux sommets \n       Acc\u00e9l\u00e9rez votre croissance en saisissant de nouvelles opportunit\u00e9s et en \u00e9largissant votre offre sur de nouveaux march\u00e9s. Alignez vos strat\u00e9gies de vente et de marketing avec les capacit\u00e9s de Platform.sh pour \u00e9largir votre portefeuille client et adapter facilement votre offre \u00e0 la demande des clients. \n       Obtenez des remises sur les prix catalogues en vous inscrivant au Programme Partenaire \n     \n     \n       \n     \n   \n \n   \n     \n        \n   \u201c \n  Platform.sh nous a permis d'\u00e9conomiser 80% de temps DevOps.\u201d\n   \n     \n       Tonio Zemp , Founder, LIIP\n     \n   \n \n     \n   \n \n   \n     \n       \n   D\u00e9couvrez notre Programme Partenaires \n   \n \n\n     \n   \n \n   \n     \n       Boostez votre productivit\u00e9. \n      \n      \n       \n         Je d\u00e9marre un projet \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Company", "title": "This site makes it ridiculously easy to experiment with Apache Kafka ", "url": "https://platform.sh/company/press/2019/this-site-makes-it-ridiculously-easy-to-experiment-with-apache-kafka/", "documentId": "993e75a433e31121fd210c44a5309747536dbb79", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         press \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           This site makes it ridiculously easy to experiment with Apache Kafka \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         The Next Web covers the launch of Kafka on Platform.sh. \n https://thenextweb.com/dd/2019/06/12/this-site-makes-it-ridiculously-easy-to-experiment-with-apache-kafka/ \n About Platform.sh \n Platform.sh enables teams to develop and deliver web applications at scale, with an end-to-end Platform-as-a-Service. With Platform.sh, organizations can focus 100 percent of their time on building amazing experiences\u2013and zero time managing infrastructure. With headquarters in San Francisco and Paris, Platform.sh serves more than 5,000 clients and their 65,000+ developers worldwide. Customers like Unity, The Economist, Kaplan, CFL, Reiss, Pinterest, and The British Council rely on Platform.sh to launch, scale, and manage their fleets of websites and applications. \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Apache Kafka now available \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Events", "title": "Past Platform.sh events ", "url": "https://platform.sh/events/all/", "documentId": "244a8f9459d102d350a03bbe0a97c2eb5f8ea3c1", "text": "\n    \n      \n        Past Platform.sh events \n      \n    \n  \n    \n      \n       \n      \n    \n  \n    \n      \n        Upcoming \n      \n      \n        Past \n      \n    \n    \n      \n      \n    \n  \n      \n     \n        June 2017 \n     \n\n     \n\n     \n     \n       \n         \n           6    - 8 \n         \n         \n           London, UK \n         \n       \n\n       \n         eZ Conference \n        \n\n        \n         Sessions \n          \n\n            \n               TBA \n            \n\n            \n             Presenters \n             \n              \n                Kieron Sambrook-Smith\n              \n             \n            \n            \n              | Wed 2:40 pm\n            \n\n          \n\n            \n               Debugging Effectively in the Cloud \n            \n\n            \n             Presenters \n             \n              \n                Felipe Fidelix\n              \n             \n            \n            \n              | Thu 10:50 am\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           6    - 9 \n         \n         \n           Chicago, Illinois \n         \n       \n\n       \n         Internet Retailer Conference + Exhibition (IRCE) \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           12    - 15 \n         \n         \n           Berlin, Germany \n         \n       \n\n       \n         DevOps Con  \n        \n\n        \n         Sessions \n          \n\n            \n               Beyond OCD: transforming your agency\u2019s delivery pipeline with orchestrated, consistent, and deterministic Deployment \n            \n\n            \n             Presenters \n             \n              \n                Robert Douglass\n              \n             \n            \n            \n              | Tue 3:00 pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           13  \n         \n         \n           Paris, France \n         \n       \n\n       \n         Paris Container Day \n        \n\n        \n         Sessions \n          \n\n            \n               Nous approfondirons la r\u00e9alit\u00e9 de ce qui mat\u00e9rialise r\u00e9ellement un conteneur. Qu\u2019est-ce que la conteneurisation? Comment cela fonctionne? \n            \n\n            \n             Presenters \n             \n              \n                Ori Pekelman\n              \n             \n            \n            \n              | Tue 2:00 pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           26  \n         \n         \n           Das B\u00fcro, Theodor-Heuss Str. 16, 70174 Stuttgart \n         \n       \n\n       \n         Innovativer eCommerce im Zeitalter von Cloud Hosting \n        \n\n        \n         Sessions \n          \n\n            \n               Microsoft Azure Deutschland: Infrastruktur, Sicherheit und Compliance - Christian Arnold (Business Development Manager, Microsoft Deutschland GmbH) \n            \n\n            \n            \n\n          \n\n            \n               Platform.sh in der Praxis: agiler entwickeln, schneller deployen, stabiler hosten - Robert Douglass (VP Customer Success, Platform.sh) \n            \n\n            \n            \n\n          \n\n            \n               Worauf es heutzutage bei eCommerce-relevanten Applikationen ankommt - Benni Mack (CTO, b:dreizehn GmbH) \n            \n\n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n\n      \n       \n         Register now \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           28  \n         \n         \n          \n         \n       \n\n       \n         Webinar: Schneller entwickeln mit Platform.sh &amp; Microsoft Cloud Deutschland \n        \n\n        \n         Sessions \n          \n\n            \n               Pr\u00e4sentatoren: Christian Arnold, Business Development Manager, Microsoft Deutschland & Andrew Melck, Gesch\u00e4ftsf\u00fchrer, Platform.sh GmbH \n            \n\n            \n            \n              | Wed 5:00 pm CEST\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register for free \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           29  \n         \n         \n           Paris, France \n         \n       \n\n       \n         Drupagora \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        July 2017 \n     \n\n     \n\n     \n     \n       \n         \n           7    - 9 \n         \n         \n           Paris, France \n         \n       \n\n       \n         PolyConf \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        September 2017 \n     \n\n     \n\n     \n     \n       \n         \n           5    - 7 \n         \n         \n           Shanghai \n         \n       \n\n       \n         Huawei Connect \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           8    - 9 \n         \n         \n           Antwerp, Belgium \n         \n       \n\n       \n         DrupalCamp Antwerp \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More Information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           26    - 29 \n         \n         \n           Vienna, Austria \n         \n       \n\n       \n         DrupalCon Vienna \n        \n\n        \n         Sessions \n          \n\n              \n               DevOps Tools that Work: Behind the Scenes with Platform.sh \n               \n\n            \n             Presenters \n             \n              \n                Christian Sieber\n              \n             \n            \n            \n              | Tue 2:50 pm\n            \n\n          \n\n              \n               Embracing Devops: Modern Drupal Development with agencies \n               \n\n            \n             Presenters \n             \n              \n                Kieron Sambrook-Smith, Robert Douglass\n              \n             \n            \n            \n              | Tue 3:45 pm\n            \n\n          \n\n              \n               PHP debugging and more, a practical guide \n               \n\n            \n             Presenters \n             \n              \n                Felipe Fidelix\n              \n             \n            \n            \n              | Wed 3:45 pm\n            \n\n          \n\n              \n               Headless, stateless, DB-less: how Kurier.at is transforming digital production with Drupal, NodeJS and Platform.sh \n               \n\n            \n             Presenters \n             \n              \n                Andrew Melck\n              \n             \n            \n            \n              | Wed 5:00 pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           26    - 27 \n         \n         \n           Brussels and Amsterdam \n         \n       \n\n       \n         French Tech Days Benelux \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        October 2017 \n     \n\n     \n\n     \n     \n       \n         \n           12  \n         \n         \n           Heusden-Zolder, Belgium \n         \n       \n\n       \n         Strategic Marketing Day \n        \n\n        \n         Sessions \n          \n\n            \n               Brand Commerce \u2013 We all know the shiny stuff at the front. But what magic is required to make it all happen? \n            \n\n            \n             Presenters \n             \n              \n                Erik Evrard\n              \n             \n            \n            \n              | Thu 4:15 pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register Here \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           18    - 21 \n         \n         \n           Berkeley, California \n         \n       \n\n       \n         BADCamp  \n        \n\n        \n         Sessions \n          \n\n            \n               The Christian Sieber Experience \n            \n\n            \n             Presenters \n             \n              \n                Christian Sieber\n              \n             \n            \n            \n              | Thu 10:30 am\n            \n\n          \n\n            \n               There Is No Container \n            \n\n            \n             Presenters \n             \n              \n                John Grubb\n              \n             \n            \n            \n              | Thu 4:00 pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           20    - 21 \n         \n         \n           Dublin, Ireland \n         \n       \n\n       \n         Drupal Camp Dublin \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register Here \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           26    - 27 \n         \n         \n           Paris, France \n         \n       \n\n       \n         Forum PHP Paris 2017 \n        \n\n        \n         Sessions \n          \n\n              \n               Software management lessons from the 1960s \n               \n\n            \n             Presenters \n             \n              \n                Larry Garfield\n              \n             \n            \n            \n              | Thu 11:25 am\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           31  \n         \n         \n           London \n         \n       \n\n       \n         DevOps Expo London \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n\n      \n       \n         Register Here \n       \n      \n\n     \n\n      \n    \n      \n     \n        November 2017 \n     \n\n     \n\n     \n     \n       \n         \n           16    - 17 \n         \n         \n           Auckland \n         \n       \n\n       \n         Drupal South \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register Here \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           16    - 18 \n         \n         \n           Cluj, Romania \n         \n       \n\n       \n         SymfonyCon Cluj 2017 \n        \n\n        \n         Sessions \n          \n\n            \n               Building a cloud-friendly application \n            \n\n            \n             Presenters \n             \n              \n                Larry Garfield\n              \n             \n            \n            \n              | Thu 3:20 pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        December 2017 \n     \n\n     \n\n     \n     \n       \n         \n           6    - 8 \n         \n         \n           Hong Kong Convention and Exhibition Centre \n         \n       \n\n       \n         HKTDC SmartBiz Expo \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           14  \n         \n         \n           Orange Paris Office \n         \n       \n\n       \n         Orange Business Afterwork (French event)  \n        \n\n        \n         Sessions \n          \n\n              \n               Acc\u00e9l\u00e9rez vers le DevOps avec Platform.sh (Accelerate your DevOps with Platform.sh) \n               \n\n            \n            \n              | Thu 7:00 pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        January 2018 \n     \n\n     \n\n     \n     \n       \n         \n           26    - 27 \n         \n         \n           Antwerp, Belgium \n         \n       \n\n       \n         PHPBenelux Conference 2018 \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More Information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           30    - 31 \n         \n         \n           Paris, France \n         \n       \n\n       \n         APIdays Paris \n        \n\n        \n         Sessions \n          \n\n              \n               Don\u2019t get Equifaxed \n               \n\n            \n             Presenters \n             \n              \n                Ori Pekelman\n              \n             \n            \n            \n              | Wed 11:45 am\n            \n\n          \n\n              \n               A framework to build and deploy API-driven projects \n               \n\n            \n             Presenters \n             \n              \n                Alphonse Delaporte, K\u00e9vin Dunglas\n              \n             \n            \n            \n              | Tue 4:15 pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More Information \n       \n      \n\n     \n\n      \n    \n      \n     \n        February 2018 \n     \n\n     \n\n     \n     \n       \n         \n           14    - 16 \n         \n         \n           London, UK \n         \n       \n\n       \n         PHP UK Conference \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More Information \n       \n      \n\n     \n\n      \n    \n      \n     \n        March 2018 \n     \n\n     \n\n     \n     \n       \n         \n           2    - 4 \n         \n         \n           London \n         \n       \n\n       \n         DrupalCamp London \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Get involved \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           7    - 8 \n         \n         \n           Sitges, Spain \n         \n       \n\n       \n         Digital 1 to 1  \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           8  \n         \n         \n           Frankfurt \n         \n       \n\n       \n         Drupal Splash Awards  \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           8    - 11 \n         \n         \n           Chicago \n         \n       \n\n       \n         MidCamp  \n        \n\n        \n         Sessions \n          \n\n            \n               NoOps and Data Integrity \n            \n\n            \n             Presenters \n             \n              \n                Aaron Porter, John Grubb\n              \n             \n            \n            \n              | Fri 11:00 am 6:00 PM (18:00) CET\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           19    - 1 \n         \n         \n           Hong Kong, Shenzhen, Guangzhou, Shanghai, Beijing \n         \n       \n\n       \n         Impact China Spring 2018 \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           22    - 25 \n         \n         \n           Singapore \n         \n       \n\n       \n         FOSSASIA \n        \n\n        \n         Sessions \n          \n\n            \n               The secrets of high-performance software teams \n            \n\n            \n             Presenters \n             \n              \n                Christopher Skene\n              \n             \n            \n            \n              | Sun 10:30 am UTC+5:30\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n        \n         \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n   \n\n    \n    \n\n    \n    \n\n    \n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            1  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            2  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            3  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            4  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            5  (current) \n           \n         \n      \n\n    \n\n    \n    \n     \n       \n         \u00bb \n         Next \n       \n     \n    \n\n    \n    \n     \n       \n         \u00bb\u00bb \n         Last \n       \n     \n    \n\n   \n \n\n\n        \n      \n   ", "rank": 4},
{"site": "website", "section": "Company", "title": "Platform.sh Unlocks Continuous Deployment With an End-to-End Platform That Enables Developers to Build, Run, and Scale Applications ", "url": "https://platform.sh/company/press/2019/interview-hostingadvice/", "documentId": "efe7e256ca675e5826ca27630b8c5a31e736c79e", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         press \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh Unlocks Continuous Deployment With an End-to-End Platform That Enables Developers to Build, Run, and Scale Applications \n         \n\n        \n       \n\n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         TL; DR: Platform.sh introduces a reliable way to safely deploy updates created in a cloned production environment by removing any fears about breaking your website or application in the middle of a critical traffic spike. The company\u2019s multi-cloud platform streamlines infrastructure configuration and management to simple YAML files, enabling developers and startups to more easily launch and scale containerized or headless applications. Vice President of Marketing Chris Yates shared his own experiences using Platform.sh and how the user-focused company continuously aims to simplify development and delivery. Share \n Read the article in its entirety at  Hostingadvice.com . \n About Platform.sh \n Platform.sh enables teams to develop and deliver web applications at scale, with an end-to-end Platform-as-a-Service. With Platform.sh, organizations can focus 100 percent of their time on building amazing experiences\u2013and zero time managing infrastructure. With headquarters in San Francisco and Paris, Platform.sh serves more than 5,000 clients and their 65,000+ developers worldwide. Customers like Unity, The Economist, Kaplan, CFL, Reiss, Pinterest, and The British Council rely on Platform.sh to launch, scale, and manage their fleets of websites and applications. \n\n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh\u2013deploying the future of content with one click \n           \n         \n        \n         \n           \n             \n            \n            \n            \n             \n           \n           \n             Platform.sh CEO Fred Plais on Digital Trends Live \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Fleetops A Kubernetes Alternative", "title": "Solve the challenge of website fleet management  ", "url": "https://platform.sh/fleetops-a-kubernetes-alternative/", "documentId": "1d0dbfa86d9473e3aafb8e8d1e5fc027efacc789", "text": "\n   \n     \n       \n         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n       \n       Get guide \n     \n   \n \n   \n     \n       Solve the challenge of website fleet management\n       Is Kubernetes the right choice? \n     \n     \n       \n     \n   \n \n   \n     \n       Today, many organizations are choosing between building from scratch on Kubernetes or relying on Platform-as-a-Service (PaaS) offerings that provide a complete platform for development and deployment, including container orchestration. \n       This guide explains the benefits and technologies of containers, container orchestration, and PaaS, alongside what each technology does and doesn\u2019t provide. We\u2019ll cover some of the functionality necessary for organizations to leverage containers in production. \n       Topics \n       \n         The ABCs of containers \n         Using Kubernetes to orchestrate containers \n         How to build a platform with Kubernetes \n         PaaS lets you focus on your apps \n       \n     \n     \n       \n   \n     Get the guide \n     Find out how easy it is to manage your website fleet on Platform.sh. \n     \n     \n       \n      \n      \n       \n         First Name \n         \n       \n       \n         Last Name \n         \n       \n       \n         Email Address \n         \n       \n       \n         Company \n         \n       \n       \n         Country \n         \n           Country \n          \n             Afghanistan \n          \n             Albania \n          \n             Algeria \n          \n             American Samoa \n          \n             Andorra \n          \n             Angola \n          \n             Anguilla \n          \n             Antarctica \n          \n             Antigua And Barbuda \n          \n             Argentina \n          \n             Armenia \n          \n             Aruba \n          \n             Australia \n          \n             Austria \n          \n             Azerbaijan \n          \n             Bahamas \n          \n             Bahrain \n          \n             Bangladesh \n          \n             Barbados \n          \n             Belarus \n          \n             Belgium \n          \n             Belize \n          \n             Benin \n          \n             Bermuda \n          \n             Bhutan \n          \n             Bolivia \n          \n             Bosnia And Herzegovina \n          \n             Botswana \n          \n             Bouvet Island \n          \n             Brazil \n          \n             British Indian Ocean Territory \n          \n             Brunei Darussalam \n          \n             Bulgaria \n          \n             Burkina Faso \n          \n             Burundi \n          \n             Cambodia \n          \n             Cameroon \n          \n             Canada \n          \n             Cape Verde \n          \n             Cayman Islands \n          \n             Central African Republic \n          \n             Chad \n          \n             Chile \n          \n             China \n          \n             Christmas Island \n          \n             Cocos (keeling) Islands \n          \n             Colombia \n          \n             Comoros \n          \n             Congo \n          \n             Congo, The Democratic Republic Of The \n          \n             Cook Islands \n          \n             Costa Rica \n          \n             Cote D'ivoire \n          \n             Croatia \n          \n             Cuba \n          \n             Cyprus \n          \n             Czech Republic \n          \n             Denmark \n          \n             Djibouti \n          \n             Dominica \n          \n             Dominican Republic \n          \n             East Timor \n          \n             Ecuador \n          \n             Egypt \n          \n             El Salvador \n          \n             Equatorial Guinea \n          \n             Eritrea \n          \n             Estonia \n          \n             Ethiopia \n          \n             Falkland Islands (malvinas) \n          \n             Faroe Islands \n          \n             Fiji \n          \n             Finland \n          \n             France \n          \n             French Guiana \n          \n             French Polynesia \n          \n             French Southern Territories \n          \n             Gabon \n          \n             Gambia \n          \n             Georgia \n          \n             Germany \n          \n             Ghana \n          \n             Gibraltar \n          \n             Greece \n          \n             Greenland \n          \n             Grenada \n          \n             Guadeloupe \n          \n             Guam \n          \n             Guatemala \n          \n             Guinea \n          \n             Guinea-bissau \n          \n             Guyana \n          \n             Haiti \n          \n             Heard Island And Mcdonald Islands \n          \n             Holy See (vatican City State) \n          \n             Honduras \n          \n             Hong Kong \n          \n             Hungary \n          \n             Iceland \n          \n             India \n          \n             Indonesia \n          \n             Iran, Islamic Republic Of \n          \n             Iraq \n          \n             Ireland \n          \n             Israel \n          \n             Italy \n          \n             Jamaica \n          \n             Japan \n          \n             Jordan \n          \n             Kazakstan \n          \n             Kenya \n          \n             Kiribati \n          \n             Korea, Democratic People's Republic Of \n          \n             Korea, Republic Of \n          \n             Kosovo \n          \n             Kuwait \n          \n             Kyrgyzstan \n          \n             Lao People's Democratic Republic \n          \n             Latvia \n          \n             Lebanon \n          \n             Lesotho \n          \n             Liberia \n          \n             Libyan Arab Jamahiriya \n          \n             Liechtenstein \n          \n             Lithuania \n          \n             Luxembourg \n          \n             Macau \n          \n             Macedonia, The Former Yugoslav Republic Of \n          \n             Madagascar \n          \n             Malawi \n          \n             Malaysia \n          \n             Maldives \n          \n             Mali \n          \n             Malta \n          \n             Marshall Islands \n          \n             Martinique \n          \n             Mauritania \n          \n             Mauritius \n          \n             Mayotte \n          \n             Mexico \n          \n             Micronesia, Federated States Of \n          \n             Moldova, Republic Of \n          \n             Monaco \n          \n             Mongolia \n          \n             Montserrat \n          \n             Montenegro \n          \n             Morocco \n          \n             Mozambique \n          \n             Myanmar \n          \n             Namibia \n          \n             Nauru \n          \n             Nepal \n          \n             Netherlands \n          \n             Netherlands Antilles \n          \n             New Caledonia \n          \n             New Zealand \n          \n             Nicaragua \n          \n             Niger \n          \n             Nigeria \n          \n             Niue \n          \n             Norfolk Island \n          \n             Northern Mariana Islands \n          \n             Norway \n          \n             Oman \n          \n             Pakistan \n          \n             Palau \n          \n             Palestinian Territory, Occupied \n          \n             Panama \n          \n             Papua New Guinea \n          \n             Paraguay \n          \n             Peru \n          \n             Philippines \n          \n             Pitcairn \n          \n             Poland \n          \n             Portugal \n          \n             Puerto Rico \n          \n             Qatar \n          \n             Reunion \n          \n             Romania \n          \n             Russian Federation \n          \n             Rwanda \n          \n             Saint Helena \n          \n             Saint Kitts And Nevis \n          \n             Saint Lucia \n          \n             Saint Pierre And Miquelon \n          \n             Saint Vincent And The Grenadines \n          \n             Samoa \n          \n             San Marino \n          \n             Sao Tome And Principe \n          \n             Saudi Arabia \n          \n             Senegal \n          \n             Serbia \n          \n             Seychelles \n          \n             Sierra Leone \n          \n             Singapore \n          \n             Slovakia \n          \n             Slovenia \n          \n             Solomon Islands \n          \n             Somalia \n          \n             South Africa \n          \n             South Georgia And The South Sandwich Islands \n          \n             Spain \n          \n             Sri Lanka \n          \n             Sudan \n          \n             Suri- name \n          \n             Svalbard And Jan Mayen \n          \n             Swaziland \n          \n             Sweden \n          \n             Switzerland \n          \n             Syrian Arab Republic \n          \n             Taiwan, Province Of China \n          \n             Tajikistan \n          \n             Tanzania, United Republic Of \n          \n             Thailand \n          \n             Togo \n          \n             Tokelau \n          \n             Tonga \n          \n             Trinidad And Tobago \n          \n             Tunisia \n          \n             Turkey \n          \n             Turkmenistan \n          \n             Turks And Caicos Islands \n          \n             Tuvalu \n          \n             Uganda \n          \n             Ukraine \n          \n             United Arab Emirates \n          \n             United Kingdom \n          \n             United States \n          \n             United States Minor Outlying Islands \n          \n             Uruguay \n          \n             Uzbekistan \n          \n             Vanuatu \n          \n             Venezuela \n          \n             Viet Nam \n          \n             Virgin Islands, British \n          \n             Virgin Islands, U.s. \n          \n             Wallis And Futuna \n          \n             Western Sahara \n          \n             Yemen \n          \n             Zambia \n          \n             Zimbabwe \n          \n         \n       \n       \n         State \n         \n           State \n          \n             AK \n          \n             AL \n          \n             AR \n          \n             AZ \n          \n             CA \n          \n             CO \n          \n             CT \n          \n             DE \n          \n             FL \n          \n             GA \n          \n             HI \n          \n             IA \n          \n             ID \n          \n             IL \n          \n             IN \n          \n             KS \n          \n             KY \n          \n             LA \n          \n             MA \n          \n             MD \n          \n             ME \n          \n             MI \n          \n             MN \n          \n             MO \n          \n             MS \n          \n             MT \n          \n             NC \n          \n             ND \n          \n             NE \n          \n             NH \n          \n             NJ \n          \n             NM \n          \n             NV \n          \n             NY \n          \n             OH \n          \n             OK \n          \n             OR \n          \n             PA \n          \n             RI \n          \n             SC \n          \n             SD \n          \n             TN \n          \n             TX \n          \n             UT \n          \n             VA \n          \n             VT \n          \n             WA \n          \n             WI \n          \n             WV \n          \n             WY \n          \n             NU \n          \n             QC \n          \n             NB \n          \n             NS \n          \n             PE \n          \n             NL \n          \n             BC \n          \n             SK \n          \n             NT \n          \n             MB \n          \n             YT \n          \n             AB \n          \n         \n       \n       \n   Download \n   \n \n\n     \n\n     \n       Success! \n       \n         Get PDF \n       \n     \n   \n  \n     \n   \n", "rank": 4},
{"site": "website", "section": "Fleet Ops Executive Brief", "title": "FleetOps: The secret to managing your growing website fleet ", "url": "https://platform.sh/fleet-ops-executive-brief/", "documentId": "5a9d8f37ded27b4e46d299601f7893fd81c445c0", "text": "\n   \n     \n       \n         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n       \n       Get brief \n     \n   \n \n   \n     \n       FleetOps:\n       The secret to managing your growing website fleet \n     \n     \n       \n     \n   \n \n   \n     \n       If you haven\u2019t incorporated FleetOps into your website fleet strategy, then you\u2019re feeling the results. Your IT expenditures are swelling alarmingly, your digital teams are working at cross-purposes, and your security protocols are patchy and difficult to coordinate. \n       \u201cFleetOps: the secret to managing your growing website fleet\u201d breaks down the benefits of incorporating FleetOps into your website fleet strategy. You\u2019ll get an overview of how a FleetOps strategy can increase the effectiveness of teams across your entire organization. FleetOps will bring out the best in your: \n       \n         Security team \n         Digital team \n         Development team \n         CIO & IT teams \n\n       \n     \n     \n       \n   \n     Get the brief \n     FleetOps: the secret to managing your growing website fleet \n     \n     \n       \n      \n      \n       \n         First Name \n         \n       \n       \n         Last Name \n         \n       \n       \n         Email Address \n         \n       \n       \n         Company \n         \n       \n       \n         Country \n         \n           Country \n          \n             Afghanistan \n          \n             Albania \n          \n             Algeria \n          \n             American Samoa \n          \n             Andorra \n          \n             Angola \n          \n             Anguilla \n          \n             Antarctica \n          \n             Antigua And Barbuda \n          \n             Argentina \n          \n             Armenia \n          \n             Aruba \n          \n             Australia \n          \n             Austria \n          \n             Azerbaijan \n          \n             Bahamas \n          \n             Bahrain \n          \n             Bangladesh \n          \n             Barbados \n          \n             Belarus \n          \n             Belgium \n          \n             Belize \n          \n             Benin \n          \n             Bermuda \n          \n             Bhutan \n          \n             Bolivia \n          \n             Bosnia And Herzegovina \n          \n             Botswana \n          \n             Bouvet Island \n          \n             Brazil \n          \n             British Indian Ocean Territory \n          \n             Brunei Darussalam \n          \n             Bulgaria \n          \n             Burkina Faso \n          \n             Burundi \n          \n             Cambodia \n          \n             Cameroon \n          \n             Canada \n          \n             Cape Verde \n          \n             Cayman Islands \n          \n             Central African Republic \n          \n             Chad \n          \n             Chile \n          \n             China \n          \n             Christmas Island \n          \n             Cocos (keeling) Islands \n          \n             Colombia \n          \n             Comoros \n          \n             Congo \n          \n             Congo, The Democratic Republic Of The \n          \n             Cook Islands \n          \n             Costa Rica \n          \n             Cote D'ivoire \n          \n             Croatia \n          \n             Cuba \n          \n             Cyprus \n          \n             Czech Republic \n          \n             Denmark \n          \n             Djibouti \n          \n             Dominica \n          \n             Dominican Republic \n          \n             East Timor \n          \n             Ecuador \n          \n             Egypt \n          \n             El Salvador \n          \n             Equatorial Guinea \n          \n             Eritrea \n          \n             Estonia \n          \n             Ethiopia \n          \n             Falkland Islands (malvinas) \n          \n             Faroe Islands \n          \n             Fiji \n          \n             Finland \n          \n             France \n          \n             French Guiana \n          \n             French Polynesia \n          \n             French Southern Territories \n          \n             Gabon \n          \n             Gambia \n          \n             Georgia \n          \n             Germany \n          \n             Ghana \n          \n             Gibraltar \n          \n             Greece \n          \n             Greenland \n          \n             Grenada \n          \n             Guadeloupe \n          \n             Guam \n          \n             Guatemala \n          \n             Guinea \n          \n             Guinea-bissau \n          \n             Guyana \n          \n             Haiti \n          \n             Heard Island And Mcdonald Islands \n          \n             Holy See (vatican City State) \n          \n             Honduras \n          \n             Hong Kong \n          \n             Hungary \n          \n             Iceland \n          \n             India \n          \n             Indonesia \n          \n             Iran, Islamic Republic Of \n          \n             Iraq \n          \n             Ireland \n          \n             Israel \n          \n             Italy \n          \n             Jamaica \n          \n             Japan \n          \n             Jordan \n          \n             Kazakstan \n          \n             Kenya \n          \n             Kiribati \n          \n             Korea, Democratic People's Republic Of \n          \n             Korea, Republic Of \n          \n             Kosovo \n          \n             Kuwait \n          \n             Kyrgyzstan \n          \n             Lao People's Democratic Republic \n          \n             Latvia \n          \n             Lebanon \n          \n             Lesotho \n          \n             Liberia \n          \n             Libyan Arab Jamahiriya \n          \n             Liechtenstein \n          \n             Lithuania \n          \n             Luxembourg \n          \n             Macau \n          \n             Macedonia, The Former Yugoslav Republic Of \n          \n             Madagascar \n          \n             Malawi \n          \n             Malaysia \n          \n             Maldives \n          \n             Mali \n          \n             Malta \n          \n             Marshall Islands \n          \n             Martinique \n          \n             Mauritania \n          \n             Mauritius \n          \n             Mayotte \n          \n             Mexico \n          \n             Micronesia, Federated States Of \n          \n             Moldova, Republic Of \n          \n             Monaco \n          \n             Mongolia \n          \n             Montserrat \n          \n             Montenegro \n          \n             Morocco \n          \n             Mozambique \n          \n             Myanmar \n          \n             Namibia \n          \n             Nauru \n          \n             Nepal \n          \n             Netherlands \n          \n             Netherlands Antilles \n          \n             New Caledonia \n          \n             New Zealand \n          \n             Nicaragua \n          \n             Niger \n          \n             Nigeria \n          \n             Niue \n          \n             Norfolk Island \n          \n             Northern Mariana Islands \n          \n             Norway \n          \n             Oman \n          \n             Pakistan \n          \n             Palau \n          \n             Palestinian Territory, Occupied \n          \n             Panama \n          \n             Papua New Guinea \n          \n             Paraguay \n          \n             Peru \n          \n             Philippines \n          \n             Pitcairn \n          \n             Poland \n          \n             Portugal \n          \n             Puerto Rico \n          \n             Qatar \n          \n             Reunion \n          \n             Romania \n          \n             Russian Federation \n          \n             Rwanda \n          \n             Saint Helena \n          \n             Saint Kitts And Nevis \n          \n             Saint Lucia \n          \n             Saint Pierre And Miquelon \n          \n             Saint Vincent And The Grenadines \n          \n             Samoa \n          \n             San Marino \n          \n             Sao Tome And Principe \n          \n             Saudi Arabia \n          \n             Senegal \n          \n             Serbia \n          \n             Seychelles \n          \n             Sierra Leone \n          \n             Singapore \n          \n             Slovakia \n          \n             Slovenia \n          \n             Solomon Islands \n          \n             Somalia \n          \n             South Africa \n          \n             South Georgia And The South Sandwich Islands \n          \n             Spain \n          \n             Sri Lanka \n          \n             Sudan \n          \n             Suri- name \n          \n             Svalbard And Jan Mayen \n          \n             Swaziland \n          \n             Sweden \n          \n             Switzerland \n          \n             Syrian Arab Republic \n          \n             Taiwan, Province Of China \n          \n             Tajikistan \n          \n             Tanzania, United Republic Of \n          \n             Thailand \n          \n             Togo \n          \n             Tokelau \n          \n             Tonga \n          \n             Trinidad And Tobago \n          \n             Tunisia \n          \n             Turkey \n          \n             Turkmenistan \n          \n             Turks And Caicos Islands \n          \n             Tuvalu \n          \n             Uganda \n          \n             Ukraine \n          \n             United Arab Emirates \n          \n             United Kingdom \n          \n             United States \n          \n             United States Minor Outlying Islands \n          \n             Uruguay \n          \n             Uzbekistan \n          \n             Vanuatu \n          \n             Venezuela \n          \n             Viet Nam \n          \n             Virgin Islands, British \n          \n             Virgin Islands, U.s. \n          \n             Wallis And Futuna \n          \n             Western Sahara \n          \n             Yemen \n          \n             Zambia \n          \n             Zimbabwe \n          \n         \n       \n       \n         State \n         \n           State \n          \n             AK \n          \n             AL \n          \n             AR \n          \n             AZ \n          \n             CA \n          \n             CO \n          \n             CT \n          \n             DE \n          \n             FL \n          \n             GA \n          \n             HI \n          \n             IA \n          \n             ID \n          \n             IL \n          \n             IN \n          \n             KS \n          \n             KY \n          \n             LA \n          \n             MA \n          \n             MD \n          \n             ME \n          \n             MI \n          \n             MN \n          \n             MO \n          \n             MS \n          \n             MT \n          \n             NC \n          \n             ND \n          \n             NE \n          \n             NH \n          \n             NJ \n          \n             NM \n          \n             NV \n          \n             NY \n          \n             OH \n          \n             OK \n          \n             OR \n          \n             PA \n          \n             RI \n          \n             SC \n          \n             SD \n          \n             TN \n          \n             TX \n          \n             UT \n          \n             VA \n          \n             VT \n          \n             WA \n          \n             WI \n          \n             WV \n          \n             WY \n          \n             NU \n          \n             QC \n          \n             NB \n          \n             NS \n          \n             PE \n          \n             NL \n          \n             BC \n          \n             SK \n          \n             NT \n          \n             MB \n          \n             YT \n          \n             AB \n          \n         \n       \n       \n   Download \n   \n \n\n     \n\n     \n       Success! \n       \n         Get PDF \n       \n     \n   \n  \n     \n   \n", "rank": 4},
{"site": "website", "section": "Company", "title": "Platform.sh certified by the Great Place to Work Institute ", "url": "https://platform.sh/company/press/2019/platformsh-named-great-place-to-work/", "documentId": "00511898ccb2a354ceed95be7698aedddf90d46c", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         press \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Platform.sh certified by the Great Place to Work Institute \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         San Francisco, July 1, 2019 -  Platform.sh is thrilled to announce that has been certified by the Great Place To Work(r) Institute for 2019. \n \n \n Read more about the Platform.sh experience from the Great Place to Work(r) Institute \n Find out about Platform.sh \n Work at Platform.sh \n \n About Platform.sh \n Platform.sh enables teams to develop and deliver web applications at scale, with an end-to-end Platform-as-a-Service. With Platform.sh, organizations can focus 100 percent of their time on building amazing experiences\u2013and zero time managing infrastructure. With headquarters in San Francisco and Paris, Platform.sh serves more than 5,000 clients and their 65,000+ developers worldwide. Customers like Unity, The Economist, Kaplan, CFL, Reiss, Pinterest, and The British Council rely on Platform.sh to launch, scale, and manage their fleets of websites and applications. \n\n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Regions", "title": "Customer Stories ", "url": "https://platform.sh/regions/france/temoignages/", "documentId": "8e7526dfab00b517be979f1f4c28b95c4bcf5c82", "text": "\n     \n       \n        \n\n\n \n   \n     \n\n       \n         \n          \n           \n             01 Mar 2020 \n           \n          \n\n           \n             Comic Relief apporte du rire et de l\u2019espoir aux enfants du monde \n           \n\n          \n           \n             \n               Read \n               \n             \n           \n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n         T\u00e9moignages r\u00e9cents \n       \n     \n\n     \n       \n         \n          \n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Emakina France : structurer ses process pour des projets multi-types \n\n      \n       \n         01 Mar 2020\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n           \n   \n     \n      \n      \n      \n        \n        \n        \n         \n           \n         \n      \n       Teeps, startup Fran\u00e7aise, se concentre sur son \u00e9volution dans un environnement NoOps \n\n      \n       \n         01 Mar 2020\u00a0 \n           \n              Author:\n              Platform.sh\n         \n       \n      \n     \n    \n   \n \n\n          \n         \n       \n     \n\n     \n       \n        \n\n\n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Regions", "title": "Enterprise ", "url": "https://platform.sh/regions/france/offre-enterprise/", "documentId": "93d771d373a6dafff90cfed7b56afb148e5c2f52", "text": "\n   \n     \n       \n     \n         Enterprise \n\n        \n\n        \n         Disponibilit\u00e9. Fiabilit\u00e9. \u00c9volutivit\u00e9. Ces conditions n\u00e9cessaires au succ\u00e8s de vos applications sont une \u00e9vidence chez Platform.sh, ne vous en souciez plus. \n        \n\n        \n         Plus de 1000 clients Enterprise dans des secteurs vari\u00e9s comme la grande distribution, la finance ou les m\u00e9dias ont choisi Platform.sh pour leurs applications les plus critiques. \n        \n\n        \n         \n         \n           \n             Email Address \n             \n           \n           \n             Obtenir une d\u00e9mo \n             \n           \n         \n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n        \n      \n     \n   \n \n\t \n\t\t \n\t\t\t \n         \n\t\t\t\t \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     99.99% SLA \n    \n    \n     Soyez transparents avec vos clients, comme Platform.sh l\u2019est avec vous. \n    \n   \n \n\n\n         \n         \n    \t\t \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     S\u00e9curit\u00e9 SOC-2 compliant \n    \n    \n     Offrez leur la meilleure exp\u00e9rience digitale sans faire de concessions sur la s\u00e9curit\u00e9. \n    \n   \n \n\n\n         \n         \n    \t\t \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Support \u201cfollow the sun\u201d \n    \n    \n     Investissez dans votre business, pas dans l\u2019infog\u00e9rance. \n    \n   \n \n\n\n         \n\t\t\t \n\t\t \n\t \n \n\t \n\t\t \n\t\t\t CIOs/CDOs, cr\u00e9ez une relation gagnant-gagnant \n\t\t \n     \n       Platform.sh a tous les outils n\u00e9cessaires pour que vos \u00e9quipes M\u00e9tier soient autonomes et puissent s\u2019affranchir de la gestion d\u2019infrastructure et pour que votre DSI propose des solutions Cloud certifi\u00e9es. \n     \n\t \n\t \n\t\t \n\t\t\t  C\u2019est une victoire pour les \u00e9quipes digitales/M\u00e9tier qui peuvent : \n\t\t\t \n\t\t\t\t D\u00e9ployer plus rapidement, plus s\u00fbrement et plus r\u00e9guli\u00e8rement \n\t\t\t\t R\u00e9duire le Time-to-Market (de l\u2019id\u00e9e au \u201cGo Live\u201d) \n\t\t\t\t Innover en exploitant tous les langages/frameworks web souhait\u00e9s \n\t\t\t\t Embarquer rapidement une agence ou un freelance sans compromettre la s\u00e9curit\u00e9 et la conformit\u00e9 \n\t\t\t\t \u00c9viter de devoir justifier le \u201cShadow IT\u201d \n\t\t\t \n\t\t \n     \n       C\u2019est une victoire pour les \u00e9quipes CIO/IT qui peuvent : \n       \n         Assurer la gouvernance IT de tous les sites web, des plus critiques au plus petits\n         R\u00e9duire les co\u00fbts en ayant moins d\u2019ETP d\u00e9di\u00e9 au DevOps\n         Migrer des applications sur le Cloud sans efforts\n         Assurer la s\u00e9curit\u00e9 et la conformit\u00e9 (GDPR, SOC-2) \u00e0 tous les niveaux de l\u2019organisation\n         Dire \u201cOui\u201d aux demandes M\u00e9tier \u2026 m\u00eame \u00e0 la derni\u00e8re minute \n       \n     \n\t \n \n   \n     \n       S\u00e9curit\u00e9 \n       Data Privacy - Privatisation des Donn\u00e9es \n       Nous sommes conformes au GDPR europ\u00e9en (DPA disponible), au BDSG allemand (DPA disponible) et \u00e0 la LPRPDE canadienne. Nous avons d\u00e9montr\u00e9 notre engagement envers la s\u00e9curit\u00e9 des donn\u00e9es en obtenant la certification SOC 2 Type 1 en mati\u00e8re de s\u00e9curit\u00e9 et de disponibilit\u00e9 sur Amazon Web Services (AWS), Microsoft Azure, Orange Cloud for Business et Google Cloud Platform (GCP). \n\n       Mises \u00e0 jour de s\u00e9curit\u00e9 \n       Platform.sh fournit des mises \u00e0 jour de s\u00e9curit\u00e9 pour chaque \u00e9l\u00e9ment de la pile d\u2019applications d\u00e8s qu'elles sont disponibles, sans interruption de service. \n\n       Contr\u00f4le des permissions/acc\u00e8s \n       Gardez un contr\u00f4le et une gouvernance compl\u00e8te de votre application en g\u00e9rant les niveaux d\u2019acc\u00e8s des utilisateurs, tout en offrant une flexibilit\u00e9 totale \u00e0 vos d\u00e9veloppeurs pour construire, tester et d\u00e9ployer rapidement de nouvelles fonctionnalit\u00e9s. \n     \n     \n       \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n     \n   \n \n   \n     \n       \n        Temps de disponibilit\u00e9 \u00e0 la pointe de l\u2019industrie. \n         Vitesse garantie. \n       \n     \n     \n       \n        Des hauts volumes de trafic ou des applications lourdes ? Lorsque c'est crucial pour votre entreprise, \n         Platform.sh est l\u00e0 pour vous soutenir \u00e0 chaque \u00e9tape. \n       \n     \n   \n   \n     \n       \n         \n         \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Des SLA fiables \n    \n    \n     Con\u00e7u pour des d\u00e9ploiements s\u00e9curis\u00e9s et conformes, avec un SLA de 99,99 %. Support 24x7 avec des temps de r\u00e9ponse garantis par une \u00e9quipe d\u2019experts r\u00e9partis sur les cinq continents. \n    \n   \n \n\n\n         \n         \n         \n  \n   \n    \n       \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Assistance pour la mise en place et la r\u00e9alisation rapide de votre projet \n    \n    \n     Des sp\u00e9cialistes onboarding pr\u00eats \u00e0 soutenir votre nouveau projet. \n    \n   \n \n\n\n         \n         \n         \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Con\u00e7u pour les applications complexes \n    \n    \n     Platform.sh s\u2019occupe de tout : des sites Drupal ou Java tr\u00e8s fr\u00e9quent\u00e9s ou des vitrines Magento aux microservices Node.js. \n    \n   \n \n\n\n         \n         \n         \n  \n   \n    \n       \n \n \n \n \n\n    \n   \n  \n   \n    \n     Mises \u00e0 l'\u00e9chelle sans temps d\u2019arr\u00eat de l\u2019application \n    \n    \n     Architecture d\u00e9di\u00e9e \u00e0 triple redondance disponible qui r\u00e9plique chaque composant applicatif sur plusieurs instances. Chaque instance h\u00e9berge l\u2019ensemble de la pile d\u2019applications, offrant ainsi une tol\u00e9rance aux pannes sup\u00e9rieure aux installations N-Tier traditionnelles. \n    \n   \n \n\n\n         \n         \n         \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Les meilleures exp\u00e9riences livr\u00e9es plus rapidement \n    \n    \n     La couche CDN \u00e0 plusieurs niveaux offre un temps de r\u00e9ponse ultra-rapide jusqu\u2019au premier octet, avec plus de 57 noeuds sur tous les continents. Ainsi, vous b\u00e9n\u00e9ficiez \u00e0 la fois d\u2019une mise en cache d\u2019applications pleine page riche en fonctionnalit\u00e9s et d\u2019une mise en cache des ressources rentable pour am\u00e9liorer l\u2019exp\u00e9rience client. \n    \n   \n \n\n\n         \n         \n         \n  \n   \n    \n       \n \n \n \n \n\n    \n   \n  \n   \n    \n     H\u00e9bergement sans fil \n    \n    \n     L\u2019h\u00e9bergement Platform.sh n\u2019est pas li\u00e9 \u00e0 un seul centre de donn\u00e9es ou \u00e0 une seule r\u00e9gion. De concert avec nos partenaires Cloud - Amazon Web Services (AWS), Google, Orange et Microsoft Azure - nous fournissons des services aux \u00c9tats-Unis, au Canada, en Australie, en Irlande, en Allemagne et en France. \n    \n   \n \n\n\n         \n       \n       \n   \n \n   \n     \n       Votre business passe avant tout \n      \n      \n       \n         Je souhaite un devis \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Platform.sh White Label Cloud Experience for Agencies & Software Vendors ", "url": "https://platform.sh/downloads/platform.sh-white-label-agencies/", "documentId": "054d0a125ffc01c05b830bad08bc6117859c7f57", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Platform.sh Data Sheet ", "url": "https://platform.sh/downloads/platform-data-sheet/", "documentId": "15dc7835cad6e551efe9d6853114726731fdf889", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Modernizing Drupal multi-site implementations ", "url": "https://platform.sh/downloads/moderinizing-drupal-multi-site/", "documentId": "9f8c3d7afdc476f18cac5f21e78ba04a5c6d8b8e", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Modern Drupal Dev and Ops Field Guide - The Technical Perspective ", "url": "https://platform.sh/downloads/modern-drupal-dev-and-ops-field-guide/", "documentId": "6942fb9e6a3cf0030fee5a7c9b9636fac64a9b32", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Modern PHP Dev and Ops Field Guide - The Business Perspective ", "url": "https://platform.sh/downloads/modern-php-dev-and-ops-field-guide-business/", "documentId": "c43632a6e6b9a451b56f24c5089a5c6875ac0c6b", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Modern Drupal Dev and Ops Field Guide - The Business Perspective ", "url": "https://platform.sh/downloads/modern-drupal-dev-and-ops-field-guide-business/", "documentId": "18a7256b568bb93b59999071eff468c7046c46da", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Migrating your Web properties ", "url": "https://platform.sh/downloads/migrating-your-web-properties/", "documentId": "452c640f8a85c622ecf87a4981e82cdb684f41f4", "text": "", "rank": 4},
{"site": "website", "section": "Regions", "title": "What is FleetOps ? | The DevOps approach to managing website fleets ", "url": "https://platform.sh/regions/france/fleetops/", "documentId": "e19ceb3b67f036f2e0108ae7e9fbe36ede2645f8", "text": "\n   \n     \n       \n     \n         FleetOps \n\n        \n         La strat\u00e9gie pour manager votre flotte croissante de sites web \n        \n\n        \n         Vous g\u00e9rez des milliers d\u2019applications et de sites web. Apprenez \u00e0 les g\u00e9rer de mani\u00e8re efficace, s\u00e9curis\u00e9e et pr\u00e9visible. \n        \n\n        \n\n        \n\n        \n           \n   D\u00e9couvrir la strat\u00e9gie FleetOps \n   \n \n\n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n        \n      \n     \n   \n \n     \n         \n            \n\n \n    \n     \n    \n     \n     \n \n         \n         \n             Le d\u00e9fi de la flotte de sites web \n             La taille des parcs de sites web d\u2019entreprises ne fait qu\u2019augmenter, tout comme se multiplient les challenges pour maintenir leur bonne gestion. Ces sites web ou applications sont construits par des \u00e9quipes diff\u00e9rentes, avec des technologies et/ou des frameworks multiples et sont h\u00e9berg\u00e9s sur des infrastructures diff\u00e9rentes. Il est important d\u2019avoir une strat\u00e9gie en place pour r\u00e9pondre \u00e0 ce besoin : la strat\u00e9gie FleetOps. \n         \n     \n \n     \n         \n             Qu\u2019est-ce que la strat\u00e9gie FleetOps ? \n             Nous connaissons tous le DevOps : la combinaison du d\u00e9veloppement logiciel et des op\u00e9rations IT et ce, pour raccourcir le cycle de d\u00e9veloppement et proposer du d\u00e9ploiement continu. Le FleetOps pr\u00e9sente la m\u00eame promesse de vitesse et de s\u00e9curit\u00e9, mais l\u2019applique \u00e0 l\u2019\u00e9chelle de centaines voire de milliers de sites web et/ou applications. \n         \n         \n             \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n         \n     \n \n     \n         \n             \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n         \n         \n             Pourquoi avoir besoin d\u2019une strat\u00e9gie FleetOps \n             Si le FleetOps ne fait pas encore partie de votre strat\u00e9gie pour la gestion de votre parc de sites web, vous en ressentirez les cons\u00e9quences avec le temps. Vos co\u00fbts IT augmenteront, vos \u00e9quipes digitales travailleront \u00e0 contre-courant et vos protocoles de s\u00e9curit\u00e9 seront disparates et difficiles \u00e0 maintenir. Le FleetOps est le meilleur moyen de r\u00e9pondre au 'Shadow IT' de masse dans votre organisation. \n         \n     \n \n     \n         \n             Vous \u00eates plus agile gr\u00e2ce au FleetOps \n             Les flottes de sites web ne sont pas des monolithes ; elles sont construites avec une multitude d'outils. Gr\u00e2ce \u00e0 la prise en charge de plusieurs frameworks et services, une Platform as a Service (PaaS) vous permet d'utiliser les technologies qui r\u00e9pondent le mieux \u00e0 vos besoins, et de pouvoir ajouter de nouveaux outils pour faire \u00e9voluer vos sites. \n         \n         \n             \n     \n         \n             \n                 \u00a0 \n                \n                    \n                     \n                         drupal \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         gatsby \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         hugo \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         java \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         jekyll \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         magento \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         wordpress \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                \n             \n         \n         \n            \n                 \n                 Platform.sh \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n             \n            \n                 \n                 Pantheon \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n             \n            \n                 \n                 Acquia \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n             \n            \n                 \n                 WP engine \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n             \n            \n                 \n                 Netifly \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n             \n            \n           \n     \n \n\n\n         \n     \n \n     \n         \n            \n\n \n    \n     \n    \n     \n     \n \n         \n         \n             Concentrez vous sur votre business, pas sur votre infrastructure \n             Un fournisseur PaaS d\u00e9veloppe, teste et d\u00e9ploie vos applications et sites web ; manage et outille vos DevOps ; g\u00e8re vos stacks technologiques, vos solutions d'orchestration et tout cela dans un budget ma\u00eetris\u00e9. Cela vous permet de concentrer vos ressources sur le d\u00e9veloppement de vos applications. \n         \n     \n \n   \n     \n       Pr\u00eats \u00e0 vous lancer sur Platform.sh ? \n      \n       Avec Platform.sh comme PaaS, vous pourrez profiter pleinement de votre strat\u00e9gie FleetOps. Platform.sh assure la gestion centralis\u00e9e et le correctif de toutes vos applications, des services de base de donn\u00e9es enti\u00e8rement g\u00e9r\u00e9s, ainsi qu'une s\u00e9curit\u00e9 et une conformit\u00e9 certifi\u00e9es. \n      \n      \n       \n         Nous contacter \n         \n       \n      \n     \n   \n \n     \n         \n             Fonctionnalit\u00e9s FleetOps que vous ne trouverez que sur Platform.sh \n             Gr\u00e2ce \u00e0 notre fonctionnalit\u00e9 avant-gardiste appel\u00e9e Source Operations\u2122, vous pouvez automatiser les mises \u00e0 jour du code de toutes vos applications web. Source Operations permet la mise \u00e0 jour \u00e0 grande \u00e9chelle du code de votre site pour votre flotte d'applications et presque toutes les autres actions que vous pouvez scripter. \n             \n                 Multisite Drupal ou WordPress avec mises \u00e0 jour s\u00e9lectives \n                 Mises \u00e0 jour automatis\u00e9es de votre flotte de sites web au moment de correctifs de s\u00e9curit\u00e9 \n                 Transfert d\u2019une bonne pratique d'une de vos Business Units vers les autres apps de votre flotte \n             \n             Source Operations rend ces actions possibles. \n             Source Operations n'est qu'une des fonctionnalit\u00e9s disponibles parmi les autres outils de gestion de flotte Platform.sh. Et nous en ajoutons constamment des nouvelles. Vous \u00eates pr\u00eat \u00e0 lancer votre strat\u00e9gie FleetOps ?  Contactez-nous  d\u00e8s aujourd'hui. \n         \n         \n            \n\n \n    \n     \n    \n     \n     \n \n         \n     \n \n     \n         \n             Platform.sh propulse des parcs de sites web dans le monde entier \n         \n         \n             \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     En seulement trois mois, Platform.sh a aid\u00e9 le British Council \u00e0 migrer son syst\u00e8me interne vers Platform.sh. Le syst\u00e8me prend d\u00e9sormais en charge 1.000 personnes sur 120 sites multilingues, avec 115 millions d\u2019utilisateurs dans 110 pays. \n    \n   \n \n\n\n         \n         \n             \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     Hachette a travaill\u00e9 avec Platform.sh pour manager leurs sites web fran\u00e7ais et internationaux. Nous avons fourni \u00e0 leurs \u00e9diteurs des outils pour g\u00e9rer leurs contenus et leurs m\u00e9dias avec plus d\u2019autonomie et de fluidit\u00e9 dans leur workflow. \n    \n   \n \n\n\n         \n         \n             \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     Platform.sh fournit une solution de gestion de flotte d\u2019applications web \u00e0 plus de 6 000 clients PME d\u2019Orange Business Services. Orange Cloud for Business donne aux clients la possibilit\u00e9 de cr\u00e9er et de g\u00e9rer leurs sites web avec le CMS de leur choix, qu\u2019il s\u2019agisse de Drupal, WordPress, Joomla ou PrestaShop. \n    \n   \n \n\n\n         \n         \n             \n  \n   \n    \n    \n\n \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     En travaillant avec Platform.sh, l\u2019Universit\u00e9 du Missouri a consolid\u00e9 des milliers de sites web et 13 CMS diff\u00e9rents. \n    \n   \n \n\n\n         \n     \n \n   \n     \n       T\u00e9moignages clients  \n     \n     \n       \n        \n         \n           \n             \n              \n              \n                \n                  \n                    \n                      \n                      \n                      \n                      \n                     \n                       \n                     \n                    \n                \n              \n               \n                 Comic Relief apporte du rire et de l\u2019espoir aux enfants du monde \n                 D\u00e9veloppement acc\u00e9l\u00e9r\u00e9, productivit\u00e9 individuelle et collective am\u00e9lior\u00e9e \n               \n             \n           \n         \n        \n         \n           \n             \n              \n              \n                \n                  \n                    \n                      \n                      \n                      \n                      \n                     \n                       \n                     \n                    \n                \n              \n               \n                 Teeps, startup Fran\u00e7aise, se concentre sur son \u00e9volution dans un environnement NoOps \n                 Z\u00e9ro downtime \u00e0 chaque d\u00e9ploiement \n               \n             \n           \n         \n        \n         \n           \n             \n              \n              \n                \n                  \n                    \n                      \n                      \n                      \n                      \n                     \n                       \n                     \n                    \n                \n              \n               \n                 Emakina France : structurer ses process pour des projets multi-types \n                 Plus besoin d\u2019aucun DevOps \n               \n             \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Looking at Drupal 8 Security ", "url": "https://platform.sh/downloads/looking-at-drupal-8-security/", "documentId": "102b69cc548f28ffb64fe80fc4b544782be7aa41", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "eCommerce Game Changer ", "url": "https://platform.sh/downloads/ecommerce-game-changer/", "documentId": "b44b769db6e9404d34ca974573be95052cfd852f", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Development Process Regime Change ", "url": "https://platform.sh/downloads/development-process-change/", "documentId": "f76f623f8fcde3710631ff508211cc27086c99f5", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Data Driven Hosting Decisions: What Platform.sh Customers Say ", "url": "https://platform.sh/downloads/data-driven-hosting-decisions/", "documentId": "f0eab3972b40761e8a2def0aeb7b9e883b220d77", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "British Council ", "url": "https://platform.sh/downloads/british-council-case-study/", "documentId": "b05f6f1353b4ba24e9400a9ba5188b50cfcac401", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "Bettracks Testimonial ", "url": "https://platform.sh/downloads/bettracks-testimonial/", "documentId": "cfd5ee0a736a72af5c27b4544e7f7bde04d06c10", "text": "", "rank": 4},
{"site": "website", "section": "Events", "title": "Past Platform.sh events ", "url": "https://platform.sh/events/all/page/5/", "documentId": "c17bd6e554e24db42573b12350b2f3997f425334", "text": "\n    \n      \n        Past Platform.sh events \n      \n    \n  \n    \n      \n       \n      \n    \n  \n    \n      \n        Upcoming \n      \n      \n        Past \n      \n    \n    \n      \n      \n    \n  \n      \n     \n        June 2020 \n     \n\n     \n\n     \n     \n       \n         \n           6    - 7 \n         \n         \n           Kyiv, Ukraine \n         \n       \n\n       \n         DrupalCamp Kyiv  \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           10    - 12 \n         \n         \n           Asheville, NC, USA \n         \n       \n\n       \n         DrupalCamp Asheville  \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           22    - 24 \n         \n         \n           San Francisco, CA \n         \n       \n\n       \n         SaaStock North America \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        September 2020 \n     \n\n     \n\n     \n     \n       \n         \n           13    - 17 \n         \n         \n           Mandalay Bay, Las Vegas,\tNevada \n         \n       \n\n       \n         Shoptalk \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        November 2020 \n     \n\n     \n\n     \n     \n       \n         \n           7  \n         \n         \n           Chattanooga, TN, USA \n         \n       \n\n       \n         DrupalCamp Chattanooga  \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n        \n         \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n   \n\n    \n    \n     \n       \n         \u00ab\u00ab \n         First \n       \n     \n    \n\n    \n    \n     \n       \n         \u00ab \n         Previous \n       \n     \n    \n\n    \n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            1  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            2  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            3  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            4  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            5  (current) \n           \n         \n      \n\n    \n\n    \n    \n\n    \n    \n\n   \n \n\n\n        \n      \n   ", "rank": 4},
{"site": "website", "section": "Events", "title": "Past Platform.sh events ", "url": "https://platform.sh/events/all/page/4/", "documentId": "4149363dcae350edc836a5d3076578a3755ff0f6", "text": "\n    \n      \n        Past Platform.sh events \n      \n    \n  \n    \n      \n       \n      \n    \n  \n    \n      \n        Upcoming \n      \n      \n        Past \n      \n    \n    \n      \n      \n    \n  \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           27  \n         \n         \n           Orlando, FL \n         \n       \n\n       \n         Orlando Java Users Group \n        \n\n        \n         Sessions \n          \n\n              \n               Java USA Tour 2019 \n               \n\n            \n             Presenters \n             \n              \n                Otavio Santana\n              \n             \n            \n            \n              | 7pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           28  \n         \n         \n           Jacksonville, FL \n         \n       \n\n       \n         Jacksonville Java Users Group \n        \n\n        \n         Sessions \n          \n\n              \n               Java USA Tour 2019 \n               \n\n            \n             Presenters \n             \n              \n                Otavio Santana\n              \n             \n            \n            \n              | 9am\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           30  \n         \n         \n           Oklahoma City, OK \n         \n       \n\n       \n         Oklahoma Java Users Group \n        \n\n        \n         Sessions \n          \n\n              \n               Java USA Tour 2019 \n               \n\n            \n             Presenters \n             \n              \n                Otavio Santana\n              \n             \n            \n            \n              | 1pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        October 2019 \n     \n\n     \n\n     \n     \n       \n         \n           2    - 5 \n         \n         \n           Berkeley, CA \n         \n       \n\n       \n         BADCamp 2019 \n        \n         Sponsor Level: Big BADCamp Party Sponsors \n        \n\n        \n         Sessions \n          \n\n            \n               Big BADCamp Party, Marsh Art Theatre \n            \n\n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           2  \n         \n         \n           Houston, TX \n         \n       \n\n       \n         Houston Java Users Group \n        \n\n        \n         Sessions \n          \n\n              \n               Java USA Tour 2019 \n               \n\n            \n             Presenters \n             \n              \n                Otavio Santana\n              \n             \n            \n            \n              | 1pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           9    - 10 \n         \n         \n           Singapore \n         \n       \n\n       \n         Cloud Expo Asia \n        \n         Sponsor Level: Silver \n        \n\n        \n         Sessions \n          \n\n            \n               The Secrets of High Performing DevOps Teams \n            \n\n            \n            \n\n          \n\n            \n               Platform-as-a-Service for Web Applications Deep Dive \n            \n\n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           13    - 15 \n         \n         \n           Milwaukee, WI \n         \n       \n\n       \n         HighEdWeb 2019 \n        \n\n        \n         Sessions \n          \n\n            \n               Herding a clowder of cats: how the University of Missouri cost-effectively migrated hundreds of websites \n            \n\n            \n             Presenters \n             \n              \n                University of Missouri, Platform.sh\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           14    - 16 \n         \n         \n           Dublin, Ireland \n         \n       \n\n       \n         SaaStock \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           29  \n         \n         \n           Caf\u00e9 de Doffer, Amsterdam, NL \n         \n       \n\n       \n         DrupalCon Amsterdam Party \n        \n         Sponsor Level: Night Fever \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n            \n              | 19:00 Tuesday, 29 October\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Pick your song! \n       \n      \n\n     \n\n      \n    \n      \n     \n        November 2019 \n     \n\n     \n\n     \n     \n       \n         \n           21  \n         \n         \n           Antwerpen, Belgium \n         \n       \n\n       \n         Antwerp GITtogether \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n            \n              | 17:30-19:30 Thursday, 21 November\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         RSVP \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           27    - 29 \n         \n         \n           Hobart, Tasmania, AUS \n         \n       \n\n       \n         DrupalSouth Hobart \n        \n         Sponsor Level: Gold \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        February 2020 \n     \n\n     \n\n     \n     \n       \n         \n           18    - 19 \n         \n         \n           Paris, IDF, France \n         \n       \n\n       \n         ParisRB Conf \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           21    - 23 \n         \n         \n           Florida Techincal College, Orlando, Florida, USA \n         \n       \n\n       \n         Florida DrupalCamp \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           26    - 28 \n         \n         \n           Bonaventure Hotel, Montreal, Canada \n         \n       \n\n       \n         Confoo \n        \n\n        \n         Sessions \n          \n\n            \n               Never* use arrays \n            \n\n            \n             Presenters \n             \n              \n                Larry Garfield\n              \n             \n            \n            \n              | February 27, 15:00\n            \n\n          \n\n            \n               PSR-14: A major PHP Event \n            \n\n            \n             Presenters \n             \n              \n                Larry Garfield\n              \n             \n            \n            \n              | February 29, 15:00\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           28    - 28 \n         \n         \n           Lohmann & Birkner Health Care Consulting Gmbh, Alt-Reinickendorf 25, Berlin, Germany \n         \n       \n\n       \n         Bob Konferenz \n        \n\n        \n         Sessions \n          \n\n            \n               How to use the same CI/CD DevOps workflow for Java, .NET, PHP, Node.js, Elixir, Lisp, and anything else. \n            \n\n            \n             Presenters \n             \n              \n                Robert Douglass\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        March 2020 \n     \n\n     \n\n     \n     \n       \n         \n           2  \n         \n         \n           Th\u00e9\u00e2tre de Paris, Paris, France \n         \n       \n\n       \n         dotPy \n        \n\n        \n         Sessions \n          \n\n            \n               A Frozen World \n            \n\n            \n             Presenters \n             \n              \n                Florian Margaine\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           9    - 11 \n         \n         \n           G Data Campus Bochum, Bochum, Germany \n         \n       \n\n       \n         Devops Gathering \n        \n\n        \n         Sessions \n          \n\n            \n               Develop and deploy on containers with just a few lines of YAML, no Docker, and no Kubernetes \n            \n\n            \n             Presenters \n             \n              \n                Robert Douglass\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           10    - 12 \n         \n         \n           San Jose Convention Center,\tSan Jose,\tCalifornia \n         \n       \n\n       \n         SaaStr Annual 2020 \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           11    - 12 \n         \n         \n           ExCel London, London, UK \n         \n       \n\n       \n         Cloud Expo Europe: London \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           13    - 15 \n         \n         \n           City University, London, UK \n         \n       \n\n       \n         DrupalCamp London \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           18    - 21 \n         \n         \n           DePaul University, Chicago, Illinois, USA \n         \n       \n\n       \n         Midcamp \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           25  \n         \n         \n           Wellington, NZ \n         \n       \n\n       \n         Future Government \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        April 2020 \n     \n\n     \n\n     \n     \n       \n         \n           6    - 8 \n         \n         \n           Hogeschool Ghent, Ghent, Belgium \n         \n       \n\n       \n         Drupal Dev Days \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           15    - 17 \n         \n         \n           San Jose Convention Center, San Jose, California, USA \n         \n       \n\n       \n         Martech West \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           24  \n         \n         \n           Pan Piper, Paris, IDF, France \n         \n       \n\n       \n         Serverless Days \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        May 2020 \n     \n\n     \n\n     \n     \n       \n         \n           18    - 22 \n         \n         \n           Minneapolis, Minnesota, USA \n         \n       \n\n       \n         DrupalCon Minneapolis \n        \n         Sponsor Level: Platinum \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           19    - 21 \n         \n         \n           Wellington, NZ \n         \n       \n\n       \n         Government Digital Transformation Summit \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           20  \n         \n         \n           Up-Down Minneapolis \u2014 3012 Lyndale Ave S, Minneapolis, Minnesota, USA \n         \n       \n\n       \n         DrupalCon Minneapolis Party \n        \n         Sponsor Level: Platinum \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n\n      \n       \n         Sign up for our party \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           26    - 27 \n         \n         \n           Maritim Pro Arte Hotel, Berlin, Germany \n         \n       \n\n       \n         International PHP Conference \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           28    - 29 \n         \n         \n           Citycube Berlin, Germany \n         \n       \n\n       \n         WeAreDevelopers Conference \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Sign up \n       \n      \n\n     \n\n      \n    \n      \n        \n         \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n   \n\n    \n    \n     \n       \n         \u00ab\u00ab \n         First \n       \n     \n    \n\n    \n    \n     \n       \n         \u00ab \n         Previous \n       \n     \n    \n\n    \n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            1  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            2  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            3  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            4  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            5  (current) \n           \n         \n      \n\n    \n\n    \n    \n     \n       \n         \u00bb \n         Next \n       \n     \n    \n\n    \n    \n     \n       \n         \u00bb\u00bb \n         Last \n       \n     \n    \n\n   \n \n\n\n        \n      \n   ", "rank": 4},
{"site": "website", "section": "Events", "title": "Past Platform.sh events ", "url": "https://platform.sh/events/all/page/3/", "documentId": "063b3e8858ff30ef11dd54f16e1adcb4067d268f", "text": "\n    \n      \n        Past Platform.sh events \n      \n    \n  \n    \n      \n       \n      \n    \n  \n    \n      \n        Upcoming \n      \n      \n        Past \n      \n    \n    \n      \n      \n    \n  \n      \n     \n        January 2019 \n     \n\n     \n\n     \n     \n       \n         \n           16  \n         \n         \n           10:00 AM PT \n         \n       \n\n       \n         Webinar: Transform your Software into a Profitable SaaS Cloud Business \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           25    - 26 \n         \n         \n           Belgium \n         \n       \n\n       \n         PHPBenelux \n        \n\n        \n         Sessions \n          \n\n            \n               Software Management Lessons from the 1960s \n            \n\n            \n             Presenters \n             \n              \n                Larry Garfield\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a Meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        February 2019 \n     \n\n     \n\n     \n     \n       \n         \n           5    - 7 \n         \n         \n           San Francisco \n         \n       \n\n       \n         SaaStr Annual 2019 \n        \n\n        \n         Sessions \n          \n\n            \n               Crossing the Pond: the Dos and Don'ts \n            \n\n            \n             Presenters \n             \n              \n                Fred Plais\n              \n             \n            \n            \n              | Thu 2:45 pm PT\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a Meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           20    - 22 \n         \n         \n           London \n         \n       \n\n       \n         PHP UK \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a Meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        March 2019 \n     \n\n     \n\n     \n     \n       \n         \n           3    - 6 \n         \n         \n           Las Vegas, NV \n         \n       \n\n       \n         Shoptalk \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a Meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           6  \n         \n         \n          \n         \n       \n\n       \n         German Webinar: Wie Platform.sh dabei hilft, die Entwicklung von Kurier.at zu beschleunigen und eine gesunde Work-Life-Balance zu pflegen \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Watch Recording \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           7    - 10 \n         \n         \n           Davos, Switzerland \n         \n       \n\n       \n         Drupal Mountain Camp \n        \n\n        \n         Sessions \n          \n\n              \n               Introduction to Pragmatic Functional PHP \n               \n\n            \n             Presenters \n             \n              \n                Branislav Bujisic\n              \n             \n            \n            \n              | Sat 2:00 pm\n            \n\n          \n\n              \n               CI made dead simple with Drupal 8, GitLab and Platform.sh  \n               \n\n            \n             Presenters \n             \n              \n                Branislav Bujisic\n              \n             \n            \n            \n              | Sat 4:30 pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           12    - 13 \n         \n         \n           London \n         \n       \n\n       \n         Cloud Expo DevOps Live \n        \n\n        \n         Sessions \n          \n\n            \n               DevOps Transformation: moving faster into the post-container world \n            \n\n            \n             Presenters \n             \n              \n                Kieron Sambrook-Smith\n              \n             \n            \n            \n              | Tue 11:25 am\n            \n\n          \n\n            \n               Leading Lean and Agile Teams \n            \n\n            \n             Presenters \n             \n              \n                Ori Pekelman\n              \n             \n            \n            \n              | Wed 11:55 am\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a Meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           13    - 15 \n         \n         \n           Portland, OR \n         \n       \n\n       \n         Nonprofit Technology Conference \n        \n\n        \n         Sessions \n          \n\n            \n               Designing infrastructure that protects your WordPress site \n            \n\n            \n            \n\n          \n\n            \n               Case Study: Transforming Nonprofits with Platform-as-a-Service \n            \n\n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a Meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           20  \n         \n         \n          \n         \n       \n\n       \n         Webinar: How one agency saved time, data, and man&#039;s best friend \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n            \n              | Wed 10:00 am PT\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           26  \n         \n         \n           Brainery-B\u00e4ckerbreitergang 12, 20355 Hamburg, Germany \n         \n       \n\n       \n         Agency GITtogether-Hamburg \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           26  \n         \n         \n           The Thief Bar- Landgangen 1, 0252 Oslo, Norway \n         \n       \n\n       \n         Agency GITtogether-Oslo \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           26  \n         \n         \n          \n         \n       \n\n       \n         Workshop: Deploy microservices in minutes with Platform.sh \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n            \n              | Tue 3:00 pm CET\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           28    - 28 \n         \n         \n          \n         \n       \n\n       \n         PHP Ghent Meetup \n        \n\n        \n         Sessions \n          \n\n            \n               CI made dead simple with Drupal 8, GitLab and Platform.sh \n            \n\n            \n             Presenters \n             \n              \n                Branislav Bujisic\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        April 2019 \n     \n\n     \n\n     \n     \n       \n         \n           2  \n         \n         \n           Paris \n         \n       \n\n       \n         AWS Summit Paris \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           8    - 12 \n         \n         \n           Seattle, WA \n         \n       \n\n       \n         DrupalCon  \n        \n\n        \n         Sessions \n          \n\n            \n               Live Coding Session] Develop from scratch and deploy to production a decoupled Drupal 8 + Vue JS site! \n            \n\n            \n             Presenters \n             \n              \n                Augustin Delaporte\n              \n             \n            \n            \n\n          \n\n            \n               \n            \n\n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a Meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           8    - 12 \n         \n         \n           Seattle, WA \n         \n       \n\n       \n         Devopscon \n        \n         Sponsor Level: Diamond \n        \n\n        \n         Sessions \n          \n\n              \n               [Live Coding Session] Develop from scratch and deploy to production a decoupled Drupal 8 + Vue JS site! \n               \n\n            \n             Presenters \n             \n              \n                Augustin Delaporte\n              \n             \n            \n            \n              | 4pm Sunday\n            \n\n          \n\n              \n               Interpretive Dance Class \n               \n\n            \n             Presenters \n             \n              \n                Chris Yates, Evel Knievel, Scrooge McDuck\n              \n             \n            \n            \n              | All Day, Every Day\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           10  \n         \n         \n           SPIN Seattle- 1511 6th Ave \n         \n       \n\n       \n         DrupalCon Seattle Ping Pong Party \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         RSVP \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           23    - 24 \n         \n         \n           Singapore \n         \n       \n\n       \n         APIDays Singapore \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           30  \n         \n         \n           The Ivy Soho Brasserie- 26-28 Broadwick St, Soho, London W1F 8JB, UK \n         \n       \n\n       \n         London GITtogether \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        May 2019 \n     \n\n     \n\n     \n     \n       \n         \n           1    - 9 \n         \n         \n           Cleveland, OH \n         \n       \n\n       \n         PyCon \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        June 2019 \n     \n\n     \n\n     \n     \n       \n         \n           11  \n         \n         \n           Utrecht, Netherlands \n         \n       \n\n       \n         Utrecht GITtogether \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           12    - 13 \n         \n         \n           Paris, France \n         \n       \n\n       \n         SaaStr Europa \n        \n         Sponsor Level: Gold \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        July 2019 \n     \n\n     \n\n     \n     \n       \n         \n           16    - 17 \n         \n         \n           San Francisco, CA \n         \n       \n\n       \n         API Days San Francisco \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           24    - 25 \n         \n         \n           New York City \n         \n       \n\n       \n         Laracon US \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting with us \n       \n      \n\n     \n\n      \n    \n      \n     \n        August 2019 \n     \n\n     \n\n     \n     \n       \n         \n           28    - 30 \n         \n         \n           Amsterdam \n         \n       \n\n       \n         Laracon EU \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        September 2019 \n     \n\n     \n\n     \n     \n       \n         \n           12    - 14 \n         \n         \n           Atlanta, GA \n         \n       \n\n       \n         Drupalcamp Atlanta \n        \n\n        \n         Sessions \n          \n\n              \n               DrupalCamp ATL Afterparty at Fado Irish Pub \n               \n\n            \n             Presenters \n             \n              \n                The Platform.sh Team\n              \n             \n            \n            \n              | Friday, September 13\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Schedule a meeting or RSVP \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           23  \n         \n         \n           Milwaukee, WI \n         \n       \n\n       \n         Greater Milwaukee Java Users Group \n        \n\n        \n         Sessions \n          \n\n              \n               Java USA Tour 2019 \n               \n\n            \n             Presenters \n             \n              \n                Otavio Santana\n              \n             \n            \n            \n              | 1pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           24  \n         \n         \n           Pittsburgh, PA \n         \n       \n\n       \n         Pittsburgh Java Users Group \n        \n\n        \n         Sessions \n          \n\n              \n               Java USA Tour 2019 \n               \n\n            \n             Presenters \n             \n              \n                Otavio Santana\n              \n             \n            \n            \n              | 7pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           26  \n         \n         \n           Durham, NC \n         \n       \n\n       \n         Triangle Java Users Group \n        \n\n        \n         Sessions \n          \n\n              \n               Java USA Tour 2019 \n               \n\n            \n             Presenters \n             \n              \n                Otavio Santana\n              \n             \n            \n            \n              | 7pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n        \n         \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n   \n\n    \n    \n     \n       \n         \u00ab\u00ab \n         First \n       \n     \n    \n\n    \n    \n     \n       \n         \u00ab \n         Previous \n       \n     \n    \n\n    \n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            1  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            2  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            3  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            4  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            5  (current) \n           \n         \n      \n\n    \n\n    \n    \n     \n       \n         \u00bb \n         Next \n       \n     \n    \n\n    \n    \n     \n       \n         \u00bb\u00bb \n         Last \n       \n     \n    \n\n   \n \n\n\n        \n      \n   ", "rank": 4},
{"site": "website", "section": "Events", "title": "Past Platform.sh events ", "url": "https://platform.sh/events/all/page/2/", "documentId": "1d5838fd8792bebe0933b6ed46937e1588a56d0b", "text": "\n    \n      \n        Past Platform.sh events \n      \n    \n  \n    \n      \n       \n      \n    \n  \n    \n      \n        Upcoming \n      \n      \n        Past \n      \n    \n    \n      \n      \n    \n  \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           24    - 25 \n         \n         \n           Cambridge, Massachusetts  \n         \n       \n\n       \n         Libreplanet 2018 \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           29    - 30 \n         \n         \n           Paris \n         \n       \n\n       \n         SYMFONYLIVE 2018 \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        April 2018 \n     \n\n     \n\n     \n     \n       \n         \n           9    - 13 \n         \n         \n           Nashville, TN \n         \n       \n\n       \n         DrupalCon Nashville 2018 \n        \n\n        \n         Sessions \n          \n\n              \n               Lando & Platform.sh NoOps Workshop \n               \n\n            \n            \n              | Mon 2:00 pm\n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More Information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           14    - 15 \n         \n         \n           Brasilia \n         \n       \n\n       \n         DArkmira Tour PHP \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           24    - 25 \n         \n         \n           Copenhagen \n         \n       \n\n       \n         Devopsdays Copenhagen \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        May 2018 \n     \n\n     \n\n     \n     \n       \n         \n           3  \n         \n         \n           Munich \n         \n       \n\n       \n         TYPO3 Congress 2018 \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           9    - 17 \n         \n         \n           Cleveland  \n         \n       \n\n       \n         PyCon Cleveland \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           29    - 30 \n         \n         \n           Berlin \n         \n       \n\n       \n         DevopsCon \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        June 2018 \n     \n\n     \n\n     \n     \n       \n         \n           1    - 3 \n         \n         \n          \n         \n       \n\n       \n         BigBoss  \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           1  \n         \n         \n           Paris \n         \n       \n\n       \n         DotScale \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           5    - 8 \n         \n         \n           McCormick Place West, Chicago \n         \n       \n\n       \n         IRCE \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More Information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           7    - 9 \n         \n         \n           Amsterdam \n         \n       \n\n       \n         DUTCH PHP Conference \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           15  \n         \n         \n           Paris \n         \n       \n\n       \n         Saastr Europa \n        \n\n        \n         Sessions \n          \n\n              \n               CEO Confidential:  What To Do Better Next Time \n               \n\n            \n             Presenters \n             \n              \n                Fred Plais\n              \n             \n            \n            \n              | Fri 2:35 pm GMT+2\n            \n\n          \n\n            \n               \n            \n\n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           19  \n         \n         \n           Paris \n         \n       \n\n       \n         AWS Summit \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           25    - 7 \n         \n         \n           Hong Kong, Shenzhen, Guangzhou, Shanghai, Beijing \n         \n       \n\n       \n         Impact China Summer 2018 \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More Information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           28    - 29 \n         \n         \n           Paris \n         \n       \n\n       \n         Paris Ruby  \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        July 2018 \n     \n\n     \n\n     \n     \n       \n         \n           2    - 6 \n         \n         \n           Lisbon \n         \n       \n\n       \n         Drupal Dev Days \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        August 2018 \n     \n\n     \n\n     \n     \n       \n         \n           17    - 19 \n         \n         \n           New York  \n         \n       \n\n       \n         Decoupled Drupal Days \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           30    - 31 \n         \n         \n           Amsterdam \n         \n       \n\n       \n         Laracon EU \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        September 2018 \n     \n\n     \n\n     \n     \n       \n         \n           18  \n         \n         \n           Marriot Hotel Champs Elysees \n         \n       \n\n       \n         European Agency Roadshow - Paris \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n             Presenters \n             \n              \n                Michael Garnier\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           25  \n         \n         \n           Charles Hotel \n         \n       \n\n       \n         European Agency Roadshow - Munich \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n             Presenters \n             \n              \n                Andrew Melck\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           27  \n         \n         \n           Hotel Sacher Wien \n         \n       \n\n       \n         European Agency Roadshow - Vienna \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n             Presenters \n             \n              \n                Andrew Melck\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        October 2018 \n     \n\n     \n\n     \n     \n       \n         \n           6  \n         \n         \n           Edinburgh \n         \n       \n\n       \n         Scotland PHP \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           24    - 27 \n         \n         \n           Bay Area, San Francisco \n         \n       \n\n       \n         Badcamp \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         More information \n       \n      \n\n     \n\n      \n    \n      \n     \n        November 2018 \n     \n\n     \n\n     \n     \n       \n         \n           9    - 10 \n         \n         \n           Mesh \n         \n       \n\n       \n         DrupalCamp Oslo \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           13  \n         \n         \n           The Nimb \n         \n       \n\n       \n         European Agency Roadshow - Copenhagen \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n             Presenters \n             \n              \n                Erik Evrard\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           28  \n         \n         \n           Baur au Lac \n         \n       \n\n       \n         European Agency Roadshow - Zurich \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n             Presenters \n             \n              \n                Andrew Melck\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           29  \n         \n         \n           Euratechnologies \n         \n       \n\n       \n         European Agency Roadshow - Lille \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n             Presenters \n             \n              \n                Michael Garnier\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        \n     \n\n     \n\n     \n     \n       \n         \n           29  \n         \n         \n           Radisson Collection Strand \n         \n       \n\n       \n         European Agency Roadshow - Stockholm \n        \n\n        \n         Sessions \n          \n\n            \n               \n            \n\n            \n             Presenters \n             \n              \n                Erik Evrard\n              \n             \n            \n            \n\n          \n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n     \n        December 2018 \n     \n\n     \n\n     \n     \n       \n         \n           3    - 5 \n         \n         \n           Hotel Realm \n         \n       \n\n       \n         DrupalSouth Canberra \n        \n\n        \n       \n     \n\n\n     \n      \n      \n\n      \n       \n         \n       \n\n      \n\n      \n       \n         Register \n       \n      \n\n     \n\n      \n    \n      \n        \n         \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n   \n\n    \n    \n     \n       \n         \u00ab\u00ab \n         First \n       \n     \n    \n\n    \n    \n     \n       \n         \u00ab \n         Previous \n       \n     \n    \n\n    \n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            1  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            2  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            3  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            4  (current) \n           \n         \n      \n\n    \n\n      \n\n\n      \n      \n\n        \n\n      \n\n      \n      \n         \n           \n            5  (current) \n           \n         \n      \n\n    \n\n    \n    \n     \n       \n         \u00bb \n         Next \n       \n     \n    \n\n    \n    \n     \n       \n         \u00bb\u00bb \n         Last \n       \n     \n    \n\n   \n \n\n\n        \n      \n   ", "rank": 4},
{"site": "website", "section": "Pricing", "title": "Pricing for website fleet hosting and development tools ", "url": "https://platform.sh/pricing/", "documentId": "966df2f1fdd730d7170c4c5dc9190a1ea7205fd6", "text": "\n     \n       \n         Scale with simple, predictable pricing \n         \n           Platform.sh is the end-to-end solution to develop and host web apps and sites. \n           Massive apps? Lots of sites? Big development teams? Platform.sh grows with you. \n         \n       \n     \n   \n   \n     \n       \n         \n           Professional \n         \n         \n           Enterprise \n         \n         \n           Elite \n         \n       \n     \n   \n   \n     \n       \n         Currency \n         \n           USD \n           EUR \n           GBP \n           AUS \n         \n       \n     \n   \n   \n     \n       \n         \n           \n             Professional \n             Git-driven development, CI/CD for agile teams, from: \n             \n               $50  \n               *  \n               /project/month \n             \n           \n           \n             \n              \n               Instant cloning \n               Flexible dev environments \n               Data services included \n               Polyglot, fast production hosting \n               \n           \n           \n             \n   Try for free \n   \n \n\n           \n         \n         \n           \n             Enterprise \n             End-to-end FleetOps platform, from: \n             \n               $90  \n               *  \n               /project/month  ** \n             \n           \n           \n             1-hr Urgent P1 Support SLA \n             \n               99.9%-99.99% Uptime guarantee *** \n               Instant cloning \n               Flexible dev environments \n               Data services included \n               Polyglot, fast production hosting \n               Technical Account Management \n               Source Operations\u2122 \n               Automated backups \n               Flexible reservations \n             \n             And more\u2026   \n           \n           \n             \n   Get started \n   \n \n\n           \n         \n         \n           \n             Elite \n             Scale your fleet to thousands of unique apps, from: \n             \n               $105  \n               *  \n               /project/month  ** \n             \n           \n           \n             45-min Urgent P1 Support SL \n             \n               99.9%-99.99% Uptime guarantee *** \n               Instant cloning \n               Flexible dev environments \n               Data services included \n               Polyglot, fast production hosting \n               Technical Account Management \n               Source Operations \n               Automated backups \n               Flexible reservations \n               Managed scaling \n               Single Sign-on \n               Built on your cloud account \n               \n             And more\u2026 \n           \n           \n             \n   Inquire today \n   \n \n\n           \n         \n         \n           * Tier prices are base estimates, actual cost will vary depending on your plan sizes and any additional add ons. \n           ** On the Enterprise tier, the minimum fleet spend is $1,250/month billed annually ($15K/year). \n           ***  Details about our uptime guarantee \n           \n       \n     \n   \n \n   \n     \n       \n         Our plans on \n         Plan \n         \n           \n             Elite \n             Enterprise \n             Professional \n           \n         \n       \n     \n   \n   \n     \n       \n         Curreny \n         \n           USD \n           EUR \n           GBP \n           AUS \n         \n       \n     \n   \n  \n   \n     \n       \n         \n          \n\n           \n             \n                 \n                   Plans \n                   \n \n \n\n \n                 \n                \n\n                \n                 \n                     Development \n                    Development only, no production environments\n                 \n                \n\n                \n                 \n                     Standard \n                    Drupal, WordPress, and JAMstack sites\n                 \n                \n\n                \n                 \n                     Medium \n                    Small e-commerce sites, larger WordPress sites, microservices and multidatabase apps\n                 \n                \n\n                \n                 \n                     Large \n                    Medium Magento sites, larger Drupal sites\n                 \n                \n\n                \n                 \n                     XL \n                    Larger e-commerce sites, memory-intensive applications\n                 \n                \n\n                \n                 \n                     2XL \n                    Complex microservices applications\n                 \n                \n             \n             \n                 \n                     \n                         Estimated \n                         Traffic   \n                     \n                    \n                     \n \n \n\n \n                 \n                \n                 No production traffic \n                \n                 Roughly 500K pageviews \n                \n                 500K+ pageviews \n                \n                 1M+ pageviews \n                \n                 2M+ pageviews \n                \n                 4M+ pageviews \n                \n             \n             \n                 \n                   Resources \n                   \n \n \n\n \n                 \n                \n                 \n                  \n                     No resource guarantees  \n                  \n                 \n                \n                 \n                  \n                     0.96 vCPU   \n                  \n                      0.8 GB RAM  \n                  \n                 \n                \n                 \n                  \n                     2.09 vCPU   \n                  \n                      3.1 GB RAM  \n                  \n                 \n                \n                 \n                  \n                     4.11 vCPU   \n                  \n                      6.1 GB RAM  \n                  \n                 \n                \n                 \n                  \n                     8.22 vCPU   \n                  \n                      12.2 GB RAM  \n                  \n                 \n                \n                 \n                  \n                     16.4vCPU   \n                  \n                      24.5 GB RAM  \n                  \n                 \n                \n             \n             \n                 \n                     \n                         Infra  \n                         Cost \n                     \n                     \n \n \n\n \n                 \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n             \n             \n                 \n                     \n                         Support +  \n                         Software  \n                     \n                     \n \n \n\n \n                 \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n             \n             \n                 Total \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n                 0 \n                \n             \n           \n          \n         \n       \n     \n   \n\n   \n     \n      \n       \n         \n           \n            Development\n            \n           \n           Development only, no production environments \n         \n         \n           \n             Traffic \n             No production traffic \n           \n           \n             Resources \n             No resource guarantees \n           \n         \n        \n         \n           \n             Plan cost \n             Software \n             Total \n           \n           \n             0 \n             0 \n             0 \n           \n         \n        \n       \n      \n       \n         \n           \n            Standard\n            \n           \n           Drupal, WordPress, and JAMstack sites \n         \n         \n           \n             Traffic \n             Roughly 500K pageviews \n           \n           \n             Resources \n             0.96 vCPU / 0.8 GB RAM \n           \n         \n        \n         \n           \n             Plan cost \n             Software \n             Total \n           \n           \n             0 \n             0 \n             0 \n           \n         \n        \n       \n      \n       \n         \n           \n            Medium\n            \n           \n           Small e-commerce sites, larger WordPress sites, microservices and multidatabase apps \n         \n         \n           \n             Traffic \n             500K+ pageviews \n           \n           \n             Resources \n             2.09 vCPU / 3.1 GB RAM \n           \n         \n        \n         \n           \n             Plan cost \n             Software \n             Total \n           \n           \n             0 \n             0 \n             0 \n           \n         \n        \n       \n      \n       \n         \n           \n            Large\n            \n           \n           Medium Magento sites, larger Drupal sites \n         \n         \n           \n             Traffic \n             1M+ pageviews \n           \n           \n             Resources \n             4.11 vCPU / 6.1 GB RAM \n           \n         \n        \n         \n           \n             Plan cost \n             Software \n             Total \n           \n           \n             0 \n             0 \n             0 \n           \n         \n        \n       \n      \n       \n         \n           \n            XL\n            \n           \n           Larger e-commerce sites, memory-intensive applications \n         \n         \n           \n             Traffic \n             2M+ pageviews \n           \n           \n             Resources \n             8.22 vCPU / 12.2 GB RAM \n           \n         \n        \n         \n           \n             Plan cost \n             Software \n             Total \n           \n           \n             0 \n             0 \n             0 \n           \n         \n        \n       \n      \n       \n         \n           \n            2XL\n            \n           \n           Complex microservices applications \n         \n         \n           \n             Traffic \n             4M+ pageviews \n           \n           \n             Resources \n             16.4vCPU / 24.5 GB RAM \n           \n         \n        \n         \n           \n             Plan cost \n             Software \n             Total \n           \n           \n             0 \n             0 \n             0 \n           \n         \n        \n       \n      \n     \n   \n\n \n   \n     \n       Plan prices are per month, paid annually for Enterprise and Elite tiers.  Annual minimum applies  for Enterprise and Elite tiers. \n     \n   \n \n   \n     \n       \n         Scale when you need \n         $10  per user \n         $21/3  Environments \n         $2.50/5 GB  Storage \n       \n     \n   \n \n   \n     \n\n       \n  \n   \n    \n     Capacity on demand \n    \n    \n     With Flexible Reservations on Enterprise and Elite tiers, you can reserve resources up front at a discount and use them as needed to spin up, spin down, and upgrade your projects, on demand. \n    \n   \n \n\n\n\n       \n  \n   \n    \n     Discounts available \n    \n    \n     On Enterprise and Elite tier, ask your account executive about available discounts for payment and contract terms. \n    \n   \n \n\n\n\n       \n  \n   \n    \n     Pricing that scales with you \n    \n    \n     With our higher tiers, you get even better support and uptime guarantees as well as access to our latest features and no pricing creep on your resources. \n    \n   \n \n\n\n\n     \n   \n \n     \n       \n         Our features \n       \n     \n     \n       \n         \n           \n             Professional \n           \n           \n             Enterprise \n           \n           \n             Elite \n           \n         \n       \n     \n     \n       \n         \n           \n             \n               \n                 Our features \n               \n             \n             \n              \n               \n                 \n                  Cost per pageview or unique visitor\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Minimum annual fleet contract\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Storage\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Dev Environments (per site)\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Automated Backups\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Managed CDN\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Instant Application Cloning\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Onboarding\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Source operations  (Beta)\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Single Sign-on\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Flexible reservations\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Dedicated Architecture available\n                   \n \n \n\n \n                 \n               \n              \n             \n           \n\n           \n             \n               \n                 Support + SLA\u2019s \n               \n             \n             \n              \n               \n                 \n                  Uptime guarantee\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Managed updates\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Managed scaling\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Support availability\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Support SLA - Urgent\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Support SLA - High\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  Support SLA - Normal\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  TAM/CSM/EAM\n                   \n \n \n\n \n                 \n               \n              \n             \n           \n\n           \n             \n               \n                 Compliance \n               \n             \n             \n              \n               \n                 \n                  GDPR\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  SOC 2 - Type 1 (compliance assistance)\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  PCI (compliance assistance)\n                   \n \n \n\n \n                 \n               \n              \n               \n                 \n                  CDN TLS Certificates\n                   \n \n \n\n \n                 \n               \n              \n             \n           \n       \n\n       \n         \n           \n             \n               \n                 Professional \n               \n             \n             \n              \n               \n                  0 \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  5 GB \n                 \n               \n              \n               \n                  3 \n                 \n               \n              \n               \n                  On demand \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  \n                   Yes \n                   \n \n \n\n \n                 \n               \n              \n               \n                  Self \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n             \n           \n\n           \n             \n               \n                 Support + SLA\u2019s \n               \n             \n             \n              \n               \n                  - \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  24x7, Unlimited \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n             \n           \n\n           \n             \n               \n                 Compliance \n               \n             \n             \n              \n               \n                  Compliant, no assistance \n                 \n               \n              \n               \n                  Compliant, no assistance \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n             \n           \n           \n   Try for free \n   \n \n\n         \n\n         \n           \n             \n               \n                 Enterprise \n               \n             \n             \n              \n               \n                  0 \n                 \n               \n              \n               \n                  $15,000 \n                 \n               \n              \n               \n                  5 GB \n                 \n               \n              \n               \n                  3 \n                 \n               \n              \n               \n                  \n                   Yes \n                   \n \n \n\n \n                 \n               \n              \n               \n                  Available \n                 \n               \n              \n               \n                  \n                   Yes \n                   \n \n \n\n \n                 \n               \n              \n               \n                  \n                   Yes \n                   \n \n \n\n \n                 \n               \n              \n               \n                  \n                   Yes \n                   \n \n \n\n \n                 \n               \n              \n               \n                  Google and GitHub \n                 \n               \n              \n               \n                  \n                   Yes \n                   \n \n \n\n \n                 \n               \n              \n               \n                  Up to 192 CPUs, 768 GB RAM \n                 \n               \n              \n             \n           \n\n           \n             \n               \n                 Support and SLAs \n               \n             \n             \n              \n               \n                  99.9-99.99% \n                 \n               \n              \n               \n                  Yes - Inquire \n                 \n               \n              \n               \n                  Yes - Inquire \n                 \n               \n              \n               \n                  24x7, Unlimited \n                 \n               \n              \n               \n                  1 hr 24x7 \n                 \n               \n              \n               \n                  8 business hours \n                 \n               \n              \n               \n                  24 business hours \n                 \n               \n              \n               \n                  TAM level 1 \n                 \n               \n              \n             \n           \n\n           \n             \n               \n                 Compliance \n               \n             \n             \n              \n               \n                  Compliant, no assistance \n                 \n               \n              \n               \n                  Compliant, no assistance \n                 \n               \n              \n               \n                  - \n                 \n               \n              \n               \n                  Apex and Wildcard \n                 \n               \n              \n             \n           \n           \n   Get started \n   \n \n\n         \n\n         \n           \n             \n               \n                 Elite \n               \n             \n             \n              \n               \n                  0 \n                 \n               \n              \n               \n                  $75,000 \n                 \n               \n              \n               \n                  5 GB \n                 \n               \n              \n               \n                  3 \n                 \n               \n              \n               \n                  \n                   Yes \n                   \n \n \n\n \n                 \n               \n              \n               \n                  Available \n                 \n               \n              \n               \n                  \n                   Yes \n                   \n \n \n\n \n                 \n               \n              \n               \n                  \n                   Yes \n                   \n \n \n\n \n                 \n               \n              \n               \n                  \n                   Yes \n                   \n \n \n\n \n                 \n               \n              \n               \n                  Your enterprise SSO \n                 \n               \n              \n               \n                  \n                   Yes \n                   \n \n \n\n \n                 \n               \n              \n               \n                  Up to 192 CPUs, 768 GB RAM \n                 \n               \n              \n             \n           \n\n           \n             \n               \n                 Support + SLA\u2019s \n               \n             \n             \n              \n               \n                  99.9-99.99% \n                 \n               \n              \n               \n                  Yes - Inquire \n                 \n               \n              \n               \n                  Yes - Inquire \n                 \n               \n              \n               \n                  24x7, Unlimited \n                 \n               \n              \n               \n                  45 min 24x7 \n                 \n               \n              \n               \n                  4 hours 24x7 \n                 \n               \n              \n               \n                  8 hours 24x7 \n                 \n               \n              \n               \n                  TAM all levels \n                 \n               \n              \n             \n           \n\n           \n             \n               \n                 Compliance \n               \n             \n             \n              \n               \n                  Compliant, assistance \n                 \n               \n              \n               \n                  Compliant, assistance \n                 \n               \n              \n               \n                  Compliant, no assistance \n                 \n               \n              \n               \n                  Apex and Wildcard \n                 \n               \n              \n             \n           \n           \n   Inquire today \n   \n \n\n         \n        \n       \n     \n   \n\n\n\n\n\n\n \n   \n     \n        \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n           \n          \n        \n     \n   \n  \n \n\n\n\n     \n       \n         \n           \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n           \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n         \n       \n     \n   \n \n\n           \n             \n   \n   Subscribe to our latest news \n   \n   \n \n\n           \n         \n         \n           Company \n           \n             About \n             Board and investors \n             Careers \n             Press \n           \n         \n         \n           Regions \n           \n             Australia \n             Canada \n             France \n             Germany \n             UK \n             Europe and USA \n           \n         \n         \n           Connect \n           \n             Events \n             Contact us \n             Find us on Slack \n             Communications preferences \n           \n         \n         \n           Resources \n           \n             Whitepapers and downloads \n             What is FleetOps? \n             PHP PaaS cloud hosting \n             Drupal PaaS cloud hosting \n             CI/CD on Platform.sh \n           \n         \n       \n    \n\n       \n         \n           \n   \n   Subscribe to our latest news \n   \n   \n \n\n         \n       \n       \n         \n           \n         \n       \n\n   \n     \n       \u00a9 2020 Platform.sh. All rights reserved. \n     \n     \n       \n         Security \n         Privacy \n         Terms of Service \n         Impressum \n          Cookie Settings \n         Security Issue \n       \n     \n   \n   \n     \n       Supported by Horizon 2020's SME Instrument - European Commission \ud83c\uddea\ud83c\uddfa \n     \n   \n \n\n \n \n  MktoForms2.setOptions({formXDPath: \"/rs/232-OWY-009/images/marketo-xdframe-relative.html\"});\n  MktoForms2.loadForm(\"https://lp.platform.sh\", \"232-OWY-009\", 1169);\n \n\n    ", "rank": 4},
{"site": "website", "section": "Downloads", "title": "An alternative to Acquia and other managed hosting providers ", "url": "https://platform.sh/downloads/acquia-alternative/", "documentId": "d8057b0dfc56dbffd1621a27a733c729f714d102", "text": "", "rank": 4},
{"site": "website", "section": "Downloads", "title": "A complete solution for DevOps: why every agency needs a PaaS ", "url": "https://platform.sh/downloads/agency-paas-devops/", "documentId": "a00362369f3467d0a06f6f151f0acd9e962e33ee", "text": "", "rank": 4},
{"site": "website", "section": "Regions", "title": "FleetOps: La strat\u00e9gie pour manager votre flotte croissante de sites web ", "url": "https://platform.sh/regions/france/fleet-ops-executive-brief/", "documentId": "2e8b8b067622416b6dd24972e856f79913f2d190", "text": "\n   \n     \n       \n         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n       \n       Obtenir le dossier \n     \n   \n \n   \n     \n       FleetOps:\n       La strat\u00e9gie pour manager votre flotte croissante de sites web \n     \n     \n       \n     \n   \n \n   \n     \n       Si le FleetOps ne fait pas encore partie de votre strat\u00e9gie pour la gestion de votre parc de sites web, vous en ressentirez les cons\u00e9quences avec le temps. Vos co\u00fbts IT augmenteront, vos \u00e9quipes digitales travailleront \u00e0 contre-courant et vos protocoles de s\u00e9curit\u00e9 seront disparates et difficiles \u00e0 maintenir. Le FleetOps est le meilleur moyen de r\u00e9pondre au 'Shadow IT' de masse dans votre organisation. \n       Le dossier \"FleetOps : La strat\u00e9gie pour manager votre flotte croissante de sites web\" pr\u00e9sente les avantages de l'int\u00e9gration de FleetOps dans votre strat\u00e9gie de parc de sites web. Vous aurez un aper\u00e7u de la mani\u00e8re dont cette approche peut accro\u00eetre l'efficacit\u00e9 des \u00e9quipes dans toute votre organisation. FleetOps fera ressortir le meilleur de vos \u00e9quipes digitales, \u00e9quipes de d\u00e9veloppement, \u00e9quipes s\u00e9curit\u00e9 et \u00e9quipes IT. \n     \n     \n       \n   \n     Obtenir le dossier \n     FleetOps: La strat\u00e9gie pour manager votre flotte croissante de sites web \n     \n     \n       \n      \n      \n       \n         Pr\u00e9nom \n         \n       \n       \n         Nom \n         \n       \n       \n         Email \n         \n       \n       \n         Poste \n         \n       \n       \n         Pays \n         \n           Pays \n          \n             Afghanistan \n          \n             Albania \n          \n             Algeria \n          \n             American Samoa \n          \n             Andorra \n          \n             Angola \n          \n             Anguilla \n          \n             Antarctica \n          \n             Antigua And Barbuda \n          \n             Argentina \n          \n             Armenia \n          \n             Aruba \n          \n             Australia \n          \n             Austria \n          \n             Azerbaijan \n          \n             Bahamas \n          \n             Bahrain \n          \n             Bangladesh \n          \n             Barbados \n          \n             Belarus \n          \n             Belgium \n          \n             Belize \n          \n             Benin \n          \n             Bermuda \n          \n             Bhutan \n          \n             Bolivia \n          \n             Bosnia And Herzegovina \n          \n             Botswana \n          \n             Bouvet Island \n          \n             Brazil \n          \n             British Indian Ocean Territory \n          \n             Brunei Darussalam \n          \n             Bulgaria \n          \n             Burkina Faso \n          \n             Burundi \n          \n             Cambodia \n          \n             Cameroon \n          \n             Canada \n          \n             Cape Verde \n          \n             Cayman Islands \n          \n             Central African Republic \n          \n             Chad \n          \n             Chile \n          \n             China \n          \n             Christmas Island \n          \n             Cocos (keeling) Islands \n          \n             Colombia \n          \n             Comoros \n          \n             Congo \n          \n             Congo, The Democratic Republic Of The \n          \n             Cook Islands \n          \n             Costa Rica \n          \n             Cote D'ivoire \n          \n             Croatia \n          \n             Cuba \n          \n             Cyprus \n          \n             Czech Republic \n          \n             Denmark \n          \n             Djibouti \n          \n             Dominica \n          \n             Dominican Republic \n          \n             East Timor \n          \n             Ecuador \n          \n             Egypt \n          \n             El Salvador \n          \n             Equatorial Guinea \n          \n             Eritrea \n          \n             Estonia \n          \n             Ethiopia \n          \n             Falkland Islands (malvinas) \n          \n             Faroe Islands \n          \n             Fiji \n          \n             Finland \n          \n             France \n          \n             French Guiana \n          \n             French Polynesia \n          \n             French Southern Territories \n          \n             Gabon \n          \n             Gambia \n          \n             Georgia \n          \n             Germany \n          \n             Ghana \n          \n             Gibraltar \n          \n             Greece \n          \n             Greenland \n          \n             Grenada \n          \n             Guadeloupe \n          \n             Guam \n          \n             Guatemala \n          \n             Guinea \n          \n             Guinea-bissau \n          \n             Guyana \n          \n             Haiti \n          \n             Heard Island And Mcdonald Islands \n          \n             Holy See (vatican City State) \n          \n             Honduras \n          \n             Hong Kong \n          \n             Hungary \n          \n             Iceland \n          \n             India \n          \n             Indonesia \n          \n             Iran, Islamic Republic Of \n          \n             Iraq \n          \n             Ireland \n          \n             Israel \n          \n             Italy \n          \n             Jamaica \n          \n             Japan \n          \n             Jordan \n          \n             Kazakstan \n          \n             Kenya \n          \n             Kiribati \n          \n             Korea, Democratic People's Republic Of \n          \n             Korea, Republic Of \n          \n             Kosovo \n          \n             Kuwait \n          \n             Kyrgyzstan \n          \n             Lao People's Democratic Republic \n          \n             Latvia \n          \n             Lebanon \n          \n             Lesotho \n          \n             Liberia \n          \n             Libyan Arab Jamahiriya \n          \n             Liechtenstein \n          \n             Lithuania \n          \n             Luxembourg \n          \n             Macau \n          \n             Macedonia, The Former Yugoslav Republic Of \n          \n             Madagascar \n          \n             Malawi \n          \n             Malaysia \n          \n             Maldives \n          \n             Mali \n          \n             Malta \n          \n             Marshall Islands \n          \n             Martinique \n          \n             Mauritania \n          \n             Mauritius \n          \n             Mayotte \n          \n             Mexico \n          \n             Micronesia, Federated States Of \n          \n             Moldova, Republic Of \n          \n             Monaco \n          \n             Mongolia \n          \n             Montserrat \n          \n             Montenegro \n          \n             Morocco \n          \n             Mozambique \n          \n             Myanmar \n          \n             Namibia \n          \n             Nauru \n          \n             Nepal \n          \n             Netherlands \n          \n             Netherlands Antilles \n          \n             New Caledonia \n          \n             New Zealand \n          \n             Nicaragua \n          \n             Niger \n          \n             Nigeria \n          \n             Niue \n          \n             Norfolk Island \n          \n             Northern Mariana Islands \n          \n             Norway \n          \n             Oman \n          \n             Pakistan \n          \n             Palau \n          \n             Palestinian Territory, Occupied \n          \n             Panama \n          \n             Papua New Guinea \n          \n             Paraguay \n          \n             Peru \n          \n             Philippines \n          \n             Pitcairn \n          \n             Poland \n          \n             Portugal \n          \n             Puerto Rico \n          \n             Qatar \n          \n             Reunion \n          \n             Romania \n          \n             Russian Federation \n          \n             Rwanda \n          \n             Saint Helena \n          \n             Saint Kitts And Nevis \n          \n             Saint Lucia \n          \n             Saint Pierre And Miquelon \n          \n             Saint Vincent And The Grenadines \n          \n             Samoa \n          \n             San Marino \n          \n             Sao Tome And Principe \n          \n             Saudi Arabia \n          \n             Senegal \n          \n             Serbia \n          \n             Seychelles \n          \n             Sierra Leone \n          \n             Singapore \n          \n             Slovakia \n          \n             Slovenia \n          \n             Solomon Islands \n          \n             Somalia \n          \n             South Africa \n          \n             South Georgia And The South Sandwich Islands \n          \n             Spain \n          \n             Sri Lanka \n          \n             Sudan \n          \n             Suri- name \n          \n             Svalbard And Jan Mayen \n          \n             Swaziland \n          \n             Sweden \n          \n             Switzerland \n          \n             Syrian Arab Republic \n          \n             Taiwan, Province Of China \n          \n             Tajikistan \n          \n             Tanzania, United Republic Of \n          \n             Thailand \n          \n             Togo \n          \n             Tokelau \n          \n             Tonga \n          \n             Trinidad And Tobago \n          \n             Tunisia \n          \n             Turkey \n          \n             Turkmenistan \n          \n             Turks And Caicos Islands \n          \n             Tuvalu \n          \n             Uganda \n          \n             Ukraine \n          \n             United Arab Emirates \n          \n             United Kingdom \n          \n             United States \n          \n             United States Minor Outlying Islands \n          \n             Uruguay \n          \n             Uzbekistan \n          \n             Vanuatu \n          \n             Venezuela \n          \n             Viet Nam \n          \n             Virgin Islands, British \n          \n             Virgin Islands, U.s. \n          \n             Wallis And Futuna \n          \n             Western Sahara \n          \n             Yemen \n          \n             Zambia \n          \n             Zimbabwe \n          \n         \n       \n       \n         State \n         \n           State \n          \n             AK \n          \n             AL \n          \n             AR \n          \n             AZ \n          \n             CA \n          \n             CO \n          \n             CT \n          \n             DE \n          \n             FL \n          \n             GA \n          \n             HI \n          \n             IA \n          \n             ID \n          \n             IL \n          \n             IN \n          \n             KS \n          \n             KY \n          \n             LA \n          \n             MA \n          \n             MD \n          \n             ME \n          \n             MI \n          \n             MN \n          \n             MO \n          \n             MS \n          \n             MT \n          \n             NC \n          \n             ND \n          \n             NE \n          \n             NH \n          \n             NJ \n          \n             NM \n          \n             NV \n          \n             NY \n          \n             OH \n          \n             OK \n          \n             OR \n          \n             PA \n          \n             RI \n          \n             SC \n          \n             SD \n          \n             TN \n          \n             TX \n          \n             UT \n          \n             VA \n          \n             VT \n          \n             WA \n          \n             WI \n          \n             WV \n          \n             WY \n          \n             NU \n          \n             QC \n          \n             NB \n          \n             NS \n          \n             PE \n          \n             NL \n          \n             BC \n          \n             SK \n          \n             NT \n          \n             MB \n          \n             YT \n          \n             AB \n          \n         \n       \n       \n   T\u00e9l\u00e9charger \n   \n \n\n     \n\n     \n       Success! \n       \n         T\u00e9l\u00e9charger \n       \n     \n   \n  \n     \n   \n", "rank": 4},
{"site": "website", "section": "Solutions", "title": "End to end enterprise hosting and development tools for PHP, Java, Node.js and more ", "url": "https://platform.sh/solutions/", "documentId": "06a29af713ba7ff614ea5c6bc2d1ec658c838f7b", "text": "\n   \n     \n       \n     \n         Enterprise \n\n        \n\n        \n         Availability. Reliability. Scalability. Your reputation, brand, and revenue potential all rely on these business-critical hallmarks of trust. Platform.sh enterprise solutions help you deliver. \n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n        \n      \n     \n   \n \n   \n     \n    Industry-leading uptime. Speed. \n    Guaranteed.\n     \n   \n   \n     \n      Massive traffic volumes or applications? When it\u2019s crucial for your business, we\u2019re here to support you every step of the way.\n     \n   \n \n   \n     \n       \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     SLAs you can count on \n    \n    \n     Architected for secure, compliant deployments, with a 99.99% uptime SLA (that\u2019s only 4 minutes, 19 seconds/month downtime) on the complete stack. 24x7 support. And guaranteed response times from an expert team, spanning five continents. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Support to get your project up and running\u2014fast \n    \n    \n     Dedicated onboarding specialists stand ready to support your new project plan. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Scale up (or down)\u2014 without application downtime \n    \n    \n     Available dedicated, triple-redundant architecture that replicates every application component across multiple instances. Each instance hosts the entire application stack, delivering superior fault tolerance to traditional N-Tier installations. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Built for complex applications \n    \n    \n     Platform.sh handles everything from highly trafficked Drupal or Java sites or Magento storefronts to Node.js microservices. Every day. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Great experiences delivered faster \n    \n    \n     Multitiered, global, managed content delivery network (CDN) layer provides ultra-fast time to first byte, with more than 57 edge points in every continent. So you get both feature-rich, full-page application caching and cost-effective asset caching to improve customer experiences. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Untethered hosting \n    \n    \n     Platform.sh hosting isn\u2019t tied to a single data center or region. In concert with our cloud partners\u2014Amazon Web Services (AWS), Google, Orange, and Microsoft Azure\u2014we provide services in the US, Canada, Australia, Ireland, Germany, and France. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n     \n       Platform.sh: beyond hosting \n       \n         \n           Unique Platform.sh workflow and branching features help you get new developers\u2014even those outside your organization\u2014onboard quickly and easily while protecting sensitive data. \n           With newfound capabilities and confidence, developers can be more productive, building and getting your product to market faster. \n         \n         \n           Running your app without re-architecture. And deploying at scale to meet unprecedented demand. (Upscaling and downscaling can help keep costs in check.) \n           We do it all at a price point that\u2019s comparable to (and sometimes less expensive than) traditional managed hosting providers\u2014who offer significantly less. \n         \n       \n     \n     \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Customer story", "title": "Why developers, devops, and marketers love the Platform.sh PaaS ", "url": "https://platform.sh/customers/", "documentId": "db206db04318ef867d58484f85edca0eb323d583", "text": "\n   \n     \n       \n     \n         Customers \n\n        \n         Everything else \n        \n\n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           .bb2b8f48-9b08-4859-abb4-2826ae3b137d{fill:#fcc938;}.fd72becf-725c-47e0-91b0-c45d464685a9{fill:none;}.b1967bad-a5b6-4f4d-971a-e65864a88b53{fill:#23b7b7;}.fbf54d5c-68d3-4d3b-a64e-7b48899d5098{fill:#171719;} Header \n        \n      \n     \n   \n \n   \n     \n       Overall, customers have reported some incredible results.  \n     \n   \n   \n     \n       \n   \n     90 \n   \n   \n     Reduction in DevOps \n   \n \n\n     \n     \n       \n   \n     40 \n   \n   \n     Uplift in developer productivity \n   \n \n\n     \n     \n       \n   \n     15 \n   \n   \n     Faster User Acceptance Testing \n   \n \n\n     \n     \n       \n   \n     20 \n   \n   \n     More deployments \n   \n \n\n     \n   \n \n   \n    \n\n\n\n\n \n   \n     \n        \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n             \n            \n           \n          \n           \n             \n              \n\n \n    \n     \n    \n     \n     \n \n             \n            \n           \n          \n        \n     \n   \n  \n \n\n\n   \n \n   \n     \n       \n       Case studies \n     \n     \n     \n      \n  \n   \n     \n       \n        \n        \n          \n          \n          \n           \n        \n       \n       \n         University of Missouri \n         Mizzou embraces PaaS to manage security/compliance while maximizing efficiencies across its website fleet \n       \n       \n         \n           300 \n           Increase in number of requests Drupal and WordPress sites can handle \n         \n       \n     \n   \n  \n\n  \n   \n     \n       \n        \n        \n          \n          \n          \n           \n        \n       \n       \n         UNICEF Switzerland and Liechtenstein \n         Nonprofit digital transformation pioneer gains flexibility, drives innovation \n       \n       \n         \n           60 \n           Reduction in costs \n         \n       \n     \n   \n  \n\n  \n   \n     \n       \n        \n        \n          \n          \n          \n           \n        \n       \n       \n         Comic Relief \n         World-renowned not-for-profit brings laughter and hope to the world\u2014at scale \n       \n       \n         \n           40 \n           Overall savings on Drupal projects \n         \n       \n     \n   \n  \n\n  \n   \n     \n       \n        \n        \n          \n          \n          \n           \n        \n       \n       \n         Kurier \n         Austrian publishing giant accelerates development, restores work/life balance \n       \n       \n         \n           66 \n           Reduction in hosting and capacity costs \n         \n       \n     \n   \n  \n\n\n\n     \n     \n       \n       \n   View all \n   \n \n\n     \n   \n \n   \n     \n       \n       Customer love \n     \n     \n       \n\n\n\n  \n   \n  \n\n    \n     \n    \n\n      \n       \n        \n         \n           \n         \n        \n\n        \n         \n          \n           Andreas Mayr \n          \n          \n           @agoradesign_at \n          \n         \n        \n         \n           \n           \n           \n         \n       \n      \n\n       \n         \n          Big #shoutout to Chris from @platformsh dealing with my deployment issue on Saturday evening and even Sunday after lunch (\u2018I was having tacos for lunch and just happened to have my laptop with me.\u2019). I definitely owe you a beer. Thank you very much!\n         \n       \n\n      \n\n     \n\n  \n\n\n\n  \n\n    \n     \n    \n\n      \n\n       \n         \n          You guys seem to do everything right!\n         \n       \n\n      \n         \n          \n           World Food Program (United Nations) \n         \n      \n\n     \n\n  \n\n\n\n  \n\n    \n     \n    \n\n      \n\n       \n         \n          We\u2019ve used Platform.sh for a long time now, and we deploy on Friday all the time\u2026it\u2019s not a big deal anymore.\n         \n       \n\n      \n         \n           Michiel Rook,  \n           Touchdown Consulting \n         \n      \n\n     \n\n  \n\n\n\n  \n\n    \n     \n    \n\n      \n       \n        \n         \n           \n         \n        \n\n        \n         \n          \n           Andy Giles \n          \n          \n           @AndyG5000 \n          \n         \n        \n         \n           \n           \n           \n         \n       \n      \n\n       \n         \n          The support team at @platformsh just saved my rump. Top-notch customer service experience!\n         \n       \n\n      \n\n     \n\n  \n    \n  \n\n\n\n  \n   \n  \n\n    \n     \n    \n\n      \n\n       \n         \n          Thanks for making my life so much easier. Refreshing to see a platform that works in the right way.\n         \n       \n\n      \n         \n           Martin Moar,  \n           System Seed Agency \n         \n      \n\n     \n\n  \n\n\n\n  \n\n    \n     \n    \n\n      \n\n       \n         \n          With Platform.sh, we win deals that we would not win without them.\n         \n       \n\n      \n         \n           Gilles Lelouat,  \n           Chief Commercial Officer, Orange Cloud for Business \n         \n      \n\n     \n\n  \n\n\n\n  \n\n    \n     \n    \n\n      \n\n       \n         \n          In the several years we\u2019ve had projects with Platform.sh, it\u2019s uncommon that a question isn\u2019t resolved quickly through the Slack channel. That\u2019s been huge for us. Technical documentation is clear, concise, and easy to find. Simply put, support with Platform.sh has been second to none.\n         \n       \n\n      \n         \n           Mike Milano,  \n           TDirector of Engineering, Thinkbean, LLC \n         \n      \n\n     \n\n  \n\n\n\n  \n\n    \n     \n    \n\n      \n       \n        \n         \n           \n         \n        \n\n        \n         \n          \n           Benjamin Hirsch \n          \n          \n           @hirschbenjamin \n          \n         \n        \n         \n           \n           \n           \n         \n       \n      \n\n       \n         \n          I can confirm, @platformsh is by far one of the best developer and hosting experiences I've made in my entire career so far! Always a pleasure to kick of a deployment or start a new project.\n         \n       \n\n      \n\n     \n\n  \n    \n  \n\n\n\n  \n   \n  \n\n    \n     \n    \n\n      \n       \n        \n         \n           \n         \n        \n\n        \n         \n          \n           Mark Conroy \n          \n          \n           @markconroy \n          \n         \n        \n         \n           \n           \n           \n         \n       \n      \n\n       \n         \n          Not alone do I deploy on a Friday, I deploy at 17:00 on a Friday. Have a great weekend everyone! Thanks @platformsh\n         \n       \n\n      \n\n     \n\n  \n\n\n\n  \n\n    \n     \n    \n\n      \n       \n        \n         \n           \n         \n        \n\n        \n         \n          \n           Alex Burrows \n          \n          \n           @aburrows \n          \n         \n        \n         \n           \n           \n           \n         \n       \n      \n\n       \n         \n          Put a website as a test that was taking 2 minutes to output json on a drupal 7 website onto a basic @platformsh instance and it loaded in 2 seconds. #superfast\n         \n       \n\n      \n\n     \n\n  \n\n\n\n  \n\n    \n     \n    \n\n      \n       \n        \n         \n           \n         \n        \n\n        \n         \n          \n           Markus Hausammann \n          \n          \n           @m_hausammann \n          \n         \n        \n         \n           \n           \n           \n         \n       \n      \n\n       \n         \n          I know \"deploy friday\" as a slogan of @platformsh and  it fits. Of course our deployment process could still be shitty but we can really trust their infrastructure. Weekday isn't a consideration. We constantly deploy, including Fridays, we would never have done that 5 years ago.\n         \n       \n\n      \n\n     \n\n  \n\n\n \n \n\n     \n   \n", "rank": 4},
{"site": "website", "section": "Demos", "title": "Platform.sh Demos", "url": "https://platform.sh/product/demos/", "documentId": "60970f9c48592dba9f4519754fb5e943087d8866", "text": "\n   \n     \n       Platform.sh Demos \n     \n     \n       \n         \n       \n     \n   \n \n   \n     \n       \n         \n           Featured \n           All demos \n         \n         \n          \n          \n\n           \n             \n               \n                 \n                  Categories\n                 \n                 \n                   \n                     \n                       \n                      All\n                     \n                   \n\n                  \n\n                 \n               \n             \n           \n         \n       \n     \n   \n \n\t \n\t\t \n\t\t\t features \n\t\t \n\t \n\t \n\t\t \n\t\t\t \n\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to install Drupal with the Platform.sh CLI \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to launch a Django 2 project with the Platform.sh CLI \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to manage Drupal 8 Multi-site \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to use Elasticsearch with Drupal \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Splitting your monolithic application into microservices \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Using Laravel with the Platform.sh CLI \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t \n\t\t\t\t \n\t\t\t \n\t\t \n\t \n \n\t \n\t\t \n\t\t\t workflow \n\t\t \n\t \n\t \n\t\t \n\t\t\t \n\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Connecting your local development environment to Platform.sh \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How do I manage a complex development workflow for my team? \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How do I onboard new developers to my team? \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to add new services to your Platform.sh application \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to integrate Platform.sh with GitHub, Bitbucket, or GitLab \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to keep your development environments in sync with prod \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to scale your Platform.sh projects to meet demand \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to update Drupal with Composer \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to upgrade runtime versions with one line of code \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t \n\t\t\t\t \n\t\t\t \n\t\t \n\t \n \n\t \n\t\t \n\t\t\t benefits \n\t\t \n\t \n\t \n\t\t \n\t\t\t \n\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n \n \n\n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Controlling costs with Platform.sh as your virtual DevOps team \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How Platform.sh provides white-label tools to power your SaaS application \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to run Anaconda on Platform.sh \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         How to update a fleet of websites with the Platform.sh API or command line \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         Platform.sh overview \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         What is the Platform.sh approach to security? \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\n\n\n\n  \n\n\n  \n    \n  \n\n \n   \n     \n       \n     \n     \n       \n         What service types does Platform.sh support? \n       \n     \n   \n \n\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t \n\t\t\t\t \n\t\t\t \n\t\t \n\t \n", "rank": 4},
{"site": "website", "section": "Security", "title": "How Platform.sh manages security and compliance of its PaaS hosting ", "url": "https://platform.sh/security/", "documentId": "5b4335028926a6855f406998fb35a135c794d666", "text": "\n   \n     \n       \n     \n         Security \n\n        \n\n        \n         Platform.sh lets you deliver amazing digital experiences, while keeping your site safe, secure, and available\u201424x7. Now you can navigate through changing requirements and updates as you\u2019re protected against cyberattacks. \n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           .a7cb80e7-a880-4e39-9a8c-93926e6ff83b{fill:#f5f4f4;}.a2789663-cda2-4599-95e6-daaaa526ffbb{fill:#8adde1;}.bddeff54-45fd-430c-b263-73a04a8e1ed7{fill:#ede9eb;}.a9889f57-5b35-45a0-bd89-b154dd1472bb{fill:#1e1e21;}.f8868166-b486-4c87-b6b9-811a1b85c2db{fill:#232239;} Hero \n        \n      \n     \n   \n \n   \n     \n       Data security in today\u2019s world \n     \n   \n   \n     \n       Platform.sh takes your privacy seriously. We\u2019re compliant with the European GDPR (DPA available), German BDSG (DPA available), and Canadian PIPEDA. We\u2019ve demonstrated our commitment to data security by achieving SOC 2 Type 2 certification in Security and Availability on Amazon Web Services (AWS), Microsoft Azure, Orange Cloud for Business, and Google Cloud Platform (GCP). The Service Organization Control (SOC) 2 certification is developed by the American Institute of Certified Public Accountants (AICPA) and is recognized as the gold standard for data security and privacy. Platform.sh has also undergone a PCI DSS gap analysis. \n     \n     \n       \n     \n     \n       When you use Platform, you can: \n     \n     \n       \n         Know that your security comes first in everything we do. We promptly notify you if we detect a breach of security. \n         Control what happens to your data. You can access it or take it out at any time. \n       \n     \n     \n       \n         Know where your data is stored and rely on it being available when you need it. You define where your data is stored. We operate our service from multiple data centers with strong security practices that are independently validated by third-party auditors. \n       \n     \n     \n       \n         Be confident knowing that customer data is not used for advertising. You own your data. We don\u2019t process your data for advertising purposes. \n       \n     \n   \n \n   \n     \n       We keep all your data private and safe \n     \n   \n   \n     \n       \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Cryptography and user security \n    \n    \n     All of our sites adhere to our cryptographic controls policy, which mandates the use of strong, industry-standard cryptographic measures. These measures include TLS for data in transit and encrypted disks, and support for 2FA. \n    \n   \n \n\n\n     \n     \n       \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Auto-redundant architecture \n    \n    \n     Our Enterprise offering comes with automated triple redundancy for every element of your stack, as well as automated full-cluster backups. \n    \n   \n \n\n\n     \n     \n       \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Security updates and stack management \n    \n    \n     Platform.sh provides security updates for every element of the stack as soon as they\u2019re available\u2014without service interruption. \n    \n   \n \n\n\n     \n     \n       \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Permissions and access management \n    \n    \n     Retain tight control and governance over user access via fine-grained, per-environment permissions. \n    \n   \n \n\n\n     \n     \n       \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Project and data isolation \n    \n    \n     Each project runs in isolation, with the most minimal network surface possible. Every service is network isolated from other services. \n    \n   \n \n\n\n     \n     \n       \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n     Global managed CDN \n    \n    \n     Platform.sh makes it easier to integrate your application with a CDN versus configuring all the CDN/cloud bits yourself. \n    \n   \n \n\n\n     \n   \n \n   \n     \n       Security updates and stack management \n       We keep your services secure, so your team can focus on building cool stuff. \n       Platform takes over the activities needed to manage the stack and perform infrastructure security updates saving you time, frustration, and money. So you can focus your efforts on building and maintaining world-class applications. \n     \n   \n   \n     \n       Instant and global updates \n       No more outdated software and libraries. Our seamless infrastructure rollouts enable you to stay current with all the latest versions. Updating your application is simply a lightning-fast redeploy away. Do it manually or automate it to fit your change windows. \n     \n     \n       New releases as they go stable \n       We follow a strict testing procedure for every release of new versions of runtimes and stack components. \n     \n     \n       Git-driven architecture \n       Every change to your infrastructure configuration is versioned and auditable, so you can have peace of mind. \n     \n     \n       Immutable architecture \n       Every application is deployed to a read-only file system. Any software install or change to the application is through a secure and auditable process. \n     \n     \n       Incident commanders \n       Should an incident occur, a dedicated engineer is assigned and responsible for executing our incident-management process through resolution. \n     \n     \n       Rigorous security incident procedures \n       Should an infrastructure security incident occur, our security incident-management process will be triggered. Our dedicated security team will bring their experience to bear, determining the root cause and mitigating the issue. \n     \n   \n \n   \n     \n       Project data and isolation \n       Create multiple, byte-for-byte clones of production\u2014securely and in isolation \n       You can clone your environments endlessly to meet your development workflows and know that these environments are isolated from all others\u2014even your own. If your data needs to stay in a specific geographic region, you can specify where you want that to be.  \n     \n     \n       \n     \n   \n   \n     \n       Secrets management \n       Limit the secrets available on a specific environment, and override each value with a test value for non-production environments. \n     \n     \n       Project isolation \n       Every project is fully isolated from others, either logically or physically. \n     \n     \n       Backup and restore \n       Snapshots, a coherent set of all containers with their state and project data, can be captured and restored. \n     \n     \n       Geographic isolation \n       You can specify which region to host your project in, and we'll ensure that your data stays within that region. \n     \n   \n \n   \n     \n       Permissions and access management \n       Safeguard confidentiality, integrity, and availability. \n       Retain complete control and governance of your application, while giving full flexibility to your developers to build, test, and deploy new features quickly. \n     \n     \n       \n     \n   \n   \n     \n       Permissions per environment \n       Let developers freely and fearlessly create and work on test environments without worrying about changing or seeing production. \n     \n     \n       Goodbye passwords \n       SSH access is restricted to Public Key authentication only, ensuring only those who are supposed to log in, can. \n     \n     \n       Two-factor authentication \n       Any dashboard login can be enforced through a second authentication method. \n     \n     \n       Principle of least privilege \n       Permissions are set at minimum level and are managed through a central directory for terminations and audits. \n     \n     \n       Hardening measures \n       Eliminate risks and threats with added layers of protection. \n     \n     \n       Reduced attack surface \n       Our fully automated, reproducible build chain creates microcontainers, with no extraneous packages. \n     \n   \n \n   \n     \n       Hardened kernel and services \n       We run hardened Linux Kernels. All deployed packages come from signed internal repositories. \n       Platform.sh provides a modern, secure infrastructure to provide you with peace of mind. We lock down access to the extent possible, while allowing you to specify your services and routes. \n     \n     \n       Rootless operations \n       Operations are performed without using root and are fully automated. All operations are logged. \n       Restrictive firewall \n       Our infrastructure employs both security groups and iptable firewalls. Only HTTP/S and SSH are allowed in. Services run in full network isolation. You specify the routes your application needs. \n     \n     \n       Restricted access \n       SSH access is controlled per environment. All users are unprivileged. \n       Read-only containers \n       In our Professional offering, user code is run on read-only file system, so no changes can be made in the code once it\u2019s deployed. \n     \n   \n \n   \n     \n       DDoS mitigation \n       The CDN provides Distributed Denial of Service prevention. \n     \n     \n       Modern features \n       Your developers will love our additional modern features, like a built-in reverse proxy cache and TLS encryption on all connections. \n     \n     \n       99.99% uptime guarantee \n       This extends to the worldwide cache layer, so you can consistently deliver the best digital experience to your audiences. \n     \n   \n \n   \n     \n       Build your greatest-ever app. \n      \n      \n       \n         Get Started \n         \n       \n      \n     \n   \n", "rank": 4},
{"site": "website", "section": "Solutions", "title": "What is FleetOps? | The DevOps approach to managing website fleets ", "url": "https://platform.sh/solutions/fleetops/", "documentId": "068b4f3df7676ec379d2ed7f7a266183e4461233", "text": "\n   \n     \n       \n     \n         FleetOps \n\n        \n         The secret to managing your growing website fleet \n        \n\n        \n         Your organization is running thousands of apps and websites. Learn how to manage them efficiently, securely, and predictably. \n        \n\n        \n\n        \n\n        \n           \n   Read the executive brief \n   \n \n\n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n        \n      \n     \n   \n \n     \n         \n            \n\n \n    \n     \n    \n     \n     \n \n         \n         \n             The website fleet challenge \n             As the size of your website fleet grows, so do the challenges in managing it. Your websites could be designed by different teams, be built from different languages and frameworks, and run on different hosting solutions. That\u2019s why you need a FleetOps strategy. \n         \n     \n \n     \n         \n             What is FleetOps? \n             You\u2019re familiar with DevOps: combining software development and IT operations to shorten development life cycle and supply continuous delivery. FleetOps delivers the same promise of speed, security, and predictability, but scales it across thousands of websites and applications. \n         \n         \n             \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n         \n     \n \n     \n         \n             \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n         \n         \n             Why you need a FleetOps strategy \n             If you haven\u2019t incorporated FleetOps into your website fleet strategy, then you\u2019re feeling the results. Your IT expenditures are swelling alarmingly, your digital teams are working at cross-purposes, and your security protocols are patchy and difficult to coordinate. \n         \n     \n \n     \n         \n             Keep your fleet flexible \n             Website fleets aren\u2019t monolithic; they\u2019re built with a mixture of tools. And you\u2019re constantly keeping your eyes open for new tools to empower your sites. With support for multiple frameworks and services, a Platform-as-a-Service (PaaS) lets you use the technologies that best fit your needs. \n         \n         \n             \n     \n         \n             \n                 \u00a0 \n                \n                    \n                     \n                         drupal \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         gatsby \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         hugo \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         java \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         jekyll \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         magento \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                     \n                         wordpress \n                         \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n \n                     \n                    \n                \n             \n         \n         \n            \n                 \n                 Platform.sh \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n             \n            \n                 \n                 Pantheon \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n             \n            \n                 \n                 Acquia \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n             \n            \n                 \n                 WP engine \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n             \n            \n                 \n                 Netifly \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n                 \n                    \n                     \n \n \n \n\n \n                    \n                 \n                \n             \n            \n           \n     \n \n\n\n         \n     \n \n     \n         \n            \n\n \n    \n     \n    \n     \n     \n \n         \n         \n             Focus on your business, not your platform \n             A PaaS provider will develop, test, and deploy your apps and websites; manage and tool your DevOps; and manage and budget your technology stacks and in-container orchestration frameworks. This frees you to focus your resources on developing your applications. \n         \n     \n \n   \n     \n       Ready to partner with Platform.sh? \n      \n       With Platform.sh as your PaaS, you\u2019ll be able to reap the full benefits of your FleetOps strategy. Platform.sh provides centralized management and patching of all your apps, fully managed database services, and certified security and compliance \n      \n      \n       \n         Contact us \n         \n       \n      \n     \n   \n \n     \n         \n             FleetOps features you can only find at Platform.sh \n             With the pioneering Source Operations\u2122 feature, you can automate code updates to your sites. Source Operations enables mass updating of site code for your fleet of web apps and almost any other action you can script. \n             \n                 Like the idea of WordPress or Drupal multisite, but wish you could update sites selectively?  \n                 Want every site in your website fleet to update itself when it needs security patches?  \n                 Looking to transfer innovation happening in one business unit to features across your fleet?  \n             \n             Source Operations can do that. \n             Source Operations is just one of the features available with the Platform.sh fleet management toolset. And we\u2019re rolling new ones out constantly. So if you\u2019re ready to \u2028launch your FleetOps strategy, talk to us today. \n         \n         \n            \n\n \n    \n     \n    \n     \n     \n \n         \n     \n \n     \n         \n             Platform.sh powers website fleets worldwide \n         \n         \n             \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     In just three months, Platform.sh helped The British Council migrate its in-house system to Platform.sh. The system now supports 1,000 staff across 120 multilingual sites with 115 million users in 110 countries. \n    \n   \n \n\n\n         \n         \n             \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     Hachette worked with Platform.sh to manage their French and international websites. We provided their editors with tools to manage their content and media with more autonomy and fluidity in their workflow. \n    \n   \n \n\n\n         \n         \n             \n  \n   \n    \n    \n\n \n    \n     \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     Platform.sh delivers a web application fleet management solution for more than 6,000 Orange Business Services\u2019 SMB customers. Orange Cloud for Business gives customers the power to build and run their websites with the CMS they choose, whether it be Drupal, WordPress, Joomla, or PrestaShop. \n    \n   \n \n\n\n         \n         \n             \n  \n   \n    \n    \n\n \n    \n     \n     \n \n    \n   \n  \n   \n    \n    \n     Working with Platform.sh, the University of Missouri consolidated hundreds of websites and 13 different content management systems. \n    \n   \n \n\n\n         \n     \n \n     \n         \n             Solve the challenge of website fleet management \n             An alternative to Kubernetes \n             \n  Download\n   \n \n \n \n \n\n \n\n         \n         \n            \n\n \n    \n     \n    \n     \n     \n \n\n         \n     \n \n   \n     \n       Learn more about FleetOps  \n     \n     \n       \n        \n         \n           \n             \n              \n              \n                \n                   \n                       \n                    \n                \n              \n               \n                 Source Operations\u2122: automate maintenance, from single sites to fleets \n                 Make your code self-updating with Platform.sh \n               \n             \n           \n         \n        \n         \n           \n             \n              \n              \n                \n                  \n                    \n                      \n                      \n                      \n                      \n                     \n                       \n                     \n                    \n                \n              \n               \n                 The monolith myth: Why all-in-one tech suites aren\u2019t the solution \n                 IT and digital business leaders can forge a win-win partnership, by looking further down the stack for their platform \u2026 \n               \n             \n           \n         \n        \n         \n           \n             \n              \n              \n                \n                  \n                    \n                      \n                      \n                      \n                      \n                     \n                       \n                     \n                    \n                \n              \n               \n                 University of Missouri manages security and compliance, maximizes efficiencies across its website fleet \n                 Increases number of requests its Drupal and WordPress sites can handle by 300% \n               \n             \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Pricing", "title": "Professional pricing ", "url": "https://platform.sh/pricing/calculator/", "documentId": "ff2e91c22edb4cc24f8472d01e86db2e2399c1d9", "text": "\n   \n     \n       Pricing \n       Estimate your monthly costs for a Platform.sh Professional project \n     \n   \n \n   \n\n     \n       \n\n         \n         \n\n           \n           \n             \n               Select your plan \n             \n             \n               \n                 Curreny \n                 \n                   USD$ \n                   EUR\u20ac \n                   GBP\u00a3 \n                 \n               \n             \n           \n\n\n           \n           \n             Select your plan \n             Standard \n             $50 \n           \n           \n             \n               \n                 \n                   \n                 \n                 \n                   D \n                   S \n                   M \n                   L \n                   XL \n                   2XL \n                 \n               \n             \n           \n\n           \n           \n             \n               Environments \n               $21/3 environments \n             \n             $0 \n           \n           \n             \n               \n                 \n                   Environments \n                   \n                   \n                     \n                     \n                     \n                     \n                     \n                     \n                     \n                   \n                 \n                 \n                   3 \n                   6 \n                   9 \n                   12 \n                   15 \n                   18 \n                   21 \n                 \n               \n             \n           \n\n           \n           \n             \n               Storage \n               $2.50/5 GB per env. \n             \n             $0 \n           \n           \n             \n               \n                 \n                   Storage Size \n                   \n                   \n                     \n                     \n                     \n                     \n                     \n                     \n                     \n                     \n                     \n                     \n                   \n                 \n                 \n                   5GB \n                   10GB \n                   15GB \n                   20GB \n                   25GB \n                   30GB \n                   35GB \n                   40GB \n                   45GB \n                   50GB \n                 \n               \n             \n           \n\n           \n           \n             \n               Users \n               $10 each/month* \n             \n             $0 \n           \n           \n             \n               \n                 \n                   Number of users \n                   \n                 \n                 \n                   1 \n                   2 \n                   3 \n                   4 \n                   5 \n                   6 \n                   7 \n                   8 \n                   9 \n                   10 \n                   11 \n                   12 \n                   13 \n                   14 \n                   15 \n                   16 \n                   17 \n                   18 \n                   19 \n                   20 \n                 \n               \n             \n           \n         \n\n\n         \n         \n           \n             Total estimated cost** \n             $50 \n           \n\n           Included \n           \n             \n               \n                 1 user \n                 3 development environments \n                 5 GB storage per environment \n               \n             \n             \n               \n                 0.8 GB memory, 1 CPU Production environment \n                 Low-to-medium traffic websites \n                 Handles hundreds of thousands of monthly page views \n               \n             \n           \n         \n       \n     \n   \n \n   \n     \n       * You will only be billed for users once they\u2019re added to your project. \n       ** Your actual billed amount will depend on usage at the end of the month. Prices include VAT where applicable. Projects on the German Cloud region cost 10% more than the prices shown here. \n     \n   \n", "rank": 4},
{"site": "website", "section": "Customer story", "title": "Customer Stories ", "url": "https://platform.sh/customers/stories/", "documentId": "529c9a9f629acdfb7b311e60acd9cfb9d18e6340", "text": "\n     \n       \n        \n \n   \n     \n       Back to customers \n     \n   \n \n\n\n\n \n   \n     \n\n       \n         \n          \n\n           \n             University of Missouri + Platform.sh \n           \n\n          \n         \n\n        \n        \n        \n        \n        \n        \n         \n           \n         \n        \n        \n\n       \n     \n   \n \n\n\n       \n     \n   \n     \n       \n        \n       \n     \n  ", "rank": 4},
{"site": "website", "section": "Customer story", "title": "Comic Relief brings laughter and hope to the world\u2014at scale ", "url": "https://platform.sh/customers/stories/comic-relief-brings-laughter-and-hope-to-the-worldat-scale/", "documentId": "6a9dcb1119a624ff35cb123e4e817fc8089e4523", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         customers \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Comic Relief brings laughter and hope to the world\u2014at scale \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         In 1985, British writer and director Richard Curtis, philanthropist Jane Tewson, and some of their friends came together with a shared idea and purpose: to raise money and change the lives of those living in Africa and the United Kingdom through comedy. And so,  Comic Relief \u2014most commonly recognized for Red Nose Day\u2014was born. \n The first-ever Red Nose Day hit the BBC TV airwaves live in 1988, featuring more than 150 celebrities and comedians, and raising in excess of \u00a315 million. Over the years, Comic Relief\u2019s mission\u2014to drive positive change through the power of entertainment\u2014has elevated awareness and raised funds to tackle some of the worlds\u2019 most pressing challenges: homelessness, poverty, rights of the disabled, HIV, elder abuse, and global hunger. In its first 30 years, the organization provided more than \u00a31 billion in grants to deserving charities, crossing the pond to the United States in 2015 to expand its reach even further. \n \n   \n     Beyond large-scale, high-profile television events, Comic Relief also sponsors activities and digital campaigns designed to attract, inform, and engage donors. To build and obtain approvals to launch new website features and donor experiences faster, the highly sophisticated Comic Relief technology team needed a robust development platform behind the scenes. \n   \n   \n   \n \n\n \n   \n     \n   \n   \n     Speed development, improve individual and team productivity \n     \u201cIn 2017, we went through a difficult technical architecture transformation, moving our legacy websites to Drupal 8 and generally building more engaging campaign websites.\u201d explains Comic Relief Head of Technology Peter Vanhee. \u201cWe initially introduced our team to Platform.sh to create more preview environments, with the goal of iterating more quickly.\u201d \n     Prior to adopting Platform.sh, Vanhee\u2019s team had to rely on Comic Relief\u2019s WebOps team to spin up a QA environment or to get changes reviewed on a QA environment, and it took days. The team reviewed multiple features at once, making it more difficult to test and subsequently merge these into a stable branch. More DevOps and QA resources were required to manage the process. \n     Now, through Platform.sh GitHub integration, the process is automated. Every feature gets its own environment\u2014hugely beneficial if you have multiple developers working on multiple features at the same time. At peak times of development, Comic Relief\u2019s feature branch usage can be up to 20 branches and associated environments. \n   \n \n \n  It\u2019s been said that the best tools are the ones that fade into the background and let you get on with your work. Vanhee agrees. \u201cOur developers don\u2019t see Platform.sh; it\u2019s totally invisible to them. They don\u2019t need to access it directly. Rather, they just live in GitHub.\u201d\n   \n     \n     Peter Vanhee ,\n    Head of Technology, Comic Relief\n     \n   \n \n Gain efficiency, dazzle prospective donors \n The process for the Comic Relief team to test new changes depends largely on the development and QA required for any particular feature, e.g., improving donor experience on comicrelief.com, or optimizing the site for mobile. With Platform.sh, the tooling around setting up new environments, taking a current database from production, and applying the changes from the feature branch is, again, fully automated. It doesn\u2019t take any longer than 10 minutes on the first commit, and only 5 minutes or so thereafter for the preview environment to be made available for manual and automated testing. \n QA, product managers, UX designers, or other engineers can simply review the state of the work on a preview environment the moment a commit is made, accelerating the review process. With environments now ready in less than 10 minutes, product managers can show features to stakeholders in a very compressed window. Platform.sh helped increase individual team member productivity, enabling 85 percent of Comic Relief\u2019s DevOps/QA resources to be reallocated to other tasks. \n Previously, the Comic Relief team deployed bundles of changes weekly. With Platform.sh, they\u2019re deploying changes every time they merge to the master branch, which happens multiple times a day. The team runs a series of tests through a staging environment before the change is automatically deployed to production with a simple Git merge. All of this happens in less than an hour after the change is merged in master. \n \n   \n   Comic Relief Concourse.ci deployment pipeline for  sportrelief.com , a Comic Relief initiative. Represented are steps in the automated deployment pipeline, from pushing to master branch (far left) to staging deployment and sanity end-to-end testing (middle) to deployment to production. All automated using Platform.sh deployment tooling to various environments. \n \n \n   \n   \n     40 \n   \n   \n     Overall savings on Drupal projects \n   \n \n \n\n Reported real-world results \n Overall, Comic Relief estimates that Platform.sh adoption saved their team 40% on their Drupal projects. \n \n   Eliminated  the need for a dedicated WebOps engineer to manage Drupal QA environments and staging/production. \n   Lowered  hosting costs as previously the team would have built their own stack on AWS, \u201cwhich could, at times, become quite pricey.\u201d \n   Enabled  engineers to shift their time from deploying to QA and staging/production to focusing on developing features and associated tests, knowing the pipeline will handle the rest. \n \n Retain a sharp focus on the mission \n With Platform.sh, Comic Relief says they have a strategic platform partner that enables them to build, launch, and operate any new Drupal site within weeks, scaling up and down as needed, flexing to support annual Red Nose Day and Sport Relief fundraising campaigns. The IUR technology choice for Platform.sh aligns well with  Comic Relief\u2019s strategic five-year  plan to work smart by focusing on efficiency and effectiveness, so they can maximize the value they deliver to beneficiaries. \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Customer story", "title": "Austrian publishing giant Kurier accelerates development, restores work/life balance ", "url": "https://platform.sh/customers/stories/austrian-publishing-giant-kurier-accelerates-development-restores-work-life-balance/", "documentId": "4f50853fe36d1714affc48ba1eb392471da15f90", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         customers \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Austrian publishing giant Kurier accelerates development, restores work/life balance \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Dominating the Austrian publishing landscape for the last 60 years, Vienna-based Kurier Group delivers one of the country\u2019s largest daily tabloid newspapers. An online publishing pioneer, Kurier\u2019s complementary mega website drives ad sales and energizes readers by offering 200 new articles a day. \n Keeping the 5 million unique  Kurier.at  visitors in the know about the latest news around the globe: a monumental responsibility for Adam Zielinski, Kurier Digital CTO. One that used to tether him to his laptop\u2014virtually around the clock. When Zielinski went out to dinner with his family, his laptop occupied an unwelcome seat at the table. \n A laser focus on product,  not  on DevOps \n Historically, Kurier\u2019s dev team split their time between DevOps and development; the latter got the short end of the stick. The team handled a mix of major issues and mundane tasks\u2014from system outages to updating SSL certificates. None of these delivered tangible value to the company. \n Highly motivated to make a change that would free their dev team to focus on product, Zielinski selected Platform.sh as their platform-as-a-service (PaaS) provider. \n \n \u201cIt might take a good DevOps team member 100 minutes to manually set up a new environment, including a new database and web server and all that belongs to it, including Elasticsearch and configuration. With Platform.sh, it takes a minute, and no one has to do anything; it\u2019s completely automated. We push a YAML file that defines we want a database, and two minutes later, we have a database. It can't get better than that. Our developer productivity has increased 25 percent.\u201d \n \u2013 Adam Zielinski, CTO, Kurier Digital \n \n Speeding internal approvals gets features to readers\u2014faster \n The ultimate outcome of gaining dev efficiencies: stakeholder and customer happiness. One example is Kurier\u2019s branch workflow. With its old process, each developer had an instance, and only one active feature branch was allowed per developer. On occasion, this lack of branches meant developers would need to juggle features and fixes, swapping between different versions on the same instance. While that approach was generally acceptable when dealing with different code versions, it often led to challenging, time-consuming issues when varying database schemas were used between versions. \n The Platform.sh feature-branch model enables the Kurier dev team to have three times as many throw-away branches in development as staff. To experiment with a new markup, a new component, a new workflow, or a new CSS, the front-end team simply pushes the branch and activates the environment in Platform.sh. Approvers, like on-the-go editors, can test the home page or new features from their smartphones while they\u2019re out in the field scooping stories\u2014a key feature for Zielinski\u2019s team, who can password-protect prototypes and get feedback quickly (from internal stakeholders and external reviewers). Says Zielinski, \u201cI would honestly never do a project of any magnitude without this capability. It has simplified project management. People can focus on their real work and not worry about the technology behind it. And it\u2019s helped accelerate our development and feedback cycles five-fold.\u201d \n Kurier\u2019s Platform.sh advantage by the numbers \n \n Platform.sh features Kurier loves \n \n\t Remove the need for in-house operations.  Redirect focus to writing code and building features that generate reader and stakeholder value. \n\t Feature branches.  Create a responsive, mobile-first site, with cool markup and a nice CSS\u2014and have it live within minutes.  \n\t Back-end cluster reliability.  Move from on-prem, DIY set up of Elasticsearch and database to Platform.sh environment, which follows best practices; no outages since. \n \n Process improvements yield cost savings \n Instant gratification\u2014 we want it, and we want it now \u2014isn\u2019t new when it comes to expectations of technology. In Kurier\u2019s previous process, their deployments were just a Git pull on the servers, making deployment time zero. \u201cExcept of course,\u201d Zielinski explains, \u201cwhen things went south; then, it all exploded.\u201d It may be counter-intuitive, but in those days, the team actually deployed to production more often, but 80 percent of those deployments were devoted to bug fixes rather than to cool, new features. \n \n \u201cWith Platform.sh, we know our system is stable. Today, we\u2019re not deploying to live as often, but we\u2019re deploying many more feature branches, with more people working on them \u2014 instead of spending time on fixes. In fact, we have five times as many deployments per person. It\u2019s the difference between successful and meaningful deployments versus housekeeping. Thanks to improvements like these, our overall costs have decreased by around 66 percent. That is massive.\u201d  \n \u2013 Adam Zielinski \n \n Performance instills confidence within the team and beyond \n Timing is everything  cannot be more applicable than in the business of delivering news. Making information available to readers in near real time? The prime directive. \n In their old system, building the Kurier.at home page took 30 \u2013 60 seconds. Editorial cycles dictated that the page be refreshed every minute. The site wasn\u2019t exactly reliable, either, going offline on a regular, yet unpredictable schedule every week. For staff giving a press conference or reporting out the latest results of a presidential election, which drew peak traffic, these outages were \u201can embarrassment,\u201c explained Zielinski. He felt compelled to bring his laptop with him wherever he went, even after work hours, in case something went awry; it often did. \n After adopting Platform.sh, Kurier can rebuild an uncached landing page in one or two seconds. And uptime is nearly 100 percent. \n Now, when Zielinski goes on his annual skiing vacation, he leaves his laptop at home. In his absence, his team continues to develop feature branches with stakeholders. The editorial staff? Happy campers. On the rare occasion something fails, Kurier can look to the Platform.sh team for 24x7 support. \u201cHonestly, I think it\u2019s part of my job to create an environment where people don\u2019t need me. Platform.sh helps me accomplish just that,\u201d muses Zielinski. \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Customer story", "title": "University of Missouri + Platform.sh ", "url": "https://platform.sh/customers/stories/university-of-missouri+platform.sh/", "documentId": "20e3268e5ef27e98bf5c4a5b32e3246124611251", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         customers \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           University of Missouri + Platform.sh \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n           \n          \n          \n          \n           \n Challenge \n In the short term, to migrate, standardize, and manage 25 percent of 1,600 unmanaged, on-premises WordPress, Drupal, and static HTML websites to the cloud, applying industry best practices \n Solution \n Adopt Platform.sh to implement the cloud rollout while adhering to the university\u2019s security and compliance mandates \n Results \n \n   300% increase in the number of requests Drupal and WordPress sites can handle \n   30% reduction in annual hosting costs \n   Increased efficiency: the ability to manage websites at scale, with fewer developers \n   Faster, smoother workflows built into Git integration  \n   The ability to deploy new features and updates faster and more frequently \n     \n           \n        \n       \n       \n        \n        \n        \n         Groundbreaking research university embraces PaaS to manage security and compliance, maximize efficiencies across its website fleet \n The first school of journalism. The first public US university west of the Mississippi River. The architect of  homecoming , the long-standing, annual fall tradition of welcoming back the higher education community and its alumni to campus. The  University of Missouri  (Mizzou)\u2014founded in 1839\u2014takes pride not only in these  firsts , but in its students\u2019 and faculty\u2019s contributions, achievements, and innovation. \n With stepping up to tackle complex challenges in their DNA, the university recognized it needed to \u201cput its arms around the technical debt, or organically grown web environments, we had acquired over the course of two decades,\u201d explains Mizzou Director of Digital Service, Joint Office of Strategic Communications and Marketing, Kevin Bailey. In aggregate, an array of different content management systems, hosting platforms, lack of standards, inconsistent processes, interdepartmental dependencies, and \u201cpeople just doing things their own way\u201d prompted Bailey and the university\u2019s Central IT Group to formulate a strategy to move away from local infrastructure to a cloud-based approach. An approach that would enable them to enforce standards, security, and compliance as well as brand and user-interface alignment. \n And so, the search for a cloud platform provider began. \n How to balance business agility and control \n For Mizzou\u2019s marketing and Central IT teams, adopting and implementing standards, security, and compliance policies across their web properties meant that everyone would (over time) use the same kinds of tools, (including content management systems) and processes. Of utmost importance? The mandate to protect student and university data.\nThese criteria became the foundation of the university\u2019s requirements and hosting-provider search. \n \u201cA lot of the systems our teams (the marketing division\u2019s web development team, Central IT, procurement, and legal) evaluated allowed programmers and content managers to easily invite people to work on their sites, which is efficient in an agency environment, but would violate our security protocols,\u201d Bailey explains. \n To add a weighty layer of complexity to the university\u2019s hosting-provider search, the marketing web dev team was then handed a monumental task: to move 25 percent of its 1,600 on-premises websites to the cloud. In concert, the university dictated that these 400 \u2013 500 unmanaged WordPress, Drupal, and static HTML sites be migrated, standardized, and managed according to industry best practices. The conundrum: how could their team efficiently and cost-effectively move the sites to a managed platform, where updates and changes could be deployed to all sites quickly, securely, and consistently while minimizing downtime? \n The university\u2019s team scoured the marketplace and assessed vendors based on their defined requirements, finally selecting Platform.sh. \n \n  Platform.sh afforded us the controls we required to implement our cloud migration  and  our security regimen, which satisfied our security team. They felt comfortable we could protect our data while allowing administrators and programmers to do their jobs efficiently without unnecessary rights and privileges. Platform.sh just really fits the bill nicely.\u201d\n   \n     \u2014 \n     \n       Kevin Bailey Director of Digital Service, Joint Office of Strategic Communications and Marketing University of Missouri\n     \n   \n \n Looking back through a web dev team lens \n Let\u2019s take a step back and look at Mizzou\u2019s environment from a web dev team perspective. Historically, the university\u2019s websites had been completely decentralized. Any school, any division, any department with funding could hire their own developer. Or set up their own server. Or purchase third-party hosting, then set up a website. \u201cThe servers themselves were decentralized,\u201d explains Mizzou Programmer Analyst Principal (WordPress) Paul Gilzow. \u201cWe had servers everywhere. I even had one under my desk that served up websites. We had no visibility into how many sites the university owned, but we projected it was around 2,000. Anyone with a purchasing card could go out and buy hosting, and we had no record of those sites.\u201d \n The proliferation of websites created another challenge: support. The web dev team wasn\u2019t notified if a site had an issue nor did they have any permission to access it. And if a site had been compromised, there was no way to shut it down, potentially tarnishing the university\u2019s brand and putting its security posture at risk. These scenarios prompted the Mizzou Central IT office to offer centralized web hosting, surfacing yet another challenge. \n Within Central IT, various teams managed different pieces of the technology equation\u2014from accounts and databases to physical servers, domains, networking, and development frameworks. The time between submitting a site request and putting it to use could take several days or weeks, depending upon the complexity of the request, and it was difficult to support. \n Gilzow explains, \u201cWe had massive amounts of sites, and 13 different content management systems (which was like re-creating the wheel). From an institutional standpoint, we couldn\u2019t support that much diversity. When we were asked to step in and offer support, it could take days or weeks to parse through how an individual site worked.\u201d \n In some cases, the team\u2019s developers needed to update components of the stack more quickly to keep up with business requirements; change lower-level components more easily, without disrupting all sites on the infrastructure; and isolate a compromised site before it affected other sites. The university wanted the web dev team to quickly spin up new sites and new features. \u201cThe university assumed our team and Central IT all worked in perfect synchronicity, moving in the same direction. But those of us on the ground knew we had all these different sites going in different directions, and we were trying our best to wrangle them,\u201d Gilzow recalls. \n After carefully considering the challenges of continuing to support a diverse web environment, the university chose to invest in systems that tightly integrate operations and development. Systems that could facilitate agile development, deliver high levels of performance, and allow a more standardized stack from the codebase down to the hosting layer. \n The search for\u2014and discovery of\u2014development flexibility \n Gilzow and the team knew that they needed to establish standards for far fewer content management systems (they ultimately chose Drupal and WordPress), DevOps practices, authentication, and backups. They wanted to update different components in the stack, set up new sites, and roll out new features quickly. And they wanted not only developer flexibility, but efficiency to manage more sites with fewer developers, working across departments to support one another. \n More performance and more uptime were also key criteria for the marketing web dev team. They wanted the ability to push updates with confidence and to know things weren\u2019t going to break. Developers felt that without automated tools to keep instances in sync, it was just too much work to test. The result? \u201cA lot of cowboy coding directly on production websites, which would break things,\u201d Gilzow shared. As for performance, the university\u2019s central web hosting could sustain about 266 requests per second and was \u201cpretty stable.\u201d But with big bursts, performance dropped significantly. \n With their technical requirements set, the team sent out their RFP, then weighed their options. \n \n  \u201cWe think there are some good services out there for very cookie-cutter CMS hosting. And, of course, the sky\u2019s the limit with stuff that you roll your own using Kubernetes and Docker. But we wanted something in the middle of that. And we thought that Platform.sh was a really good option.\u201d\n   \n     \u2014 \n     \n       John Boyer Programmer Analyst Principal (Drupal), Marketing University of Missouri\n     \n   \n \n Mizzou Programmer Analyst Principal (Drupal) John Boyer explains it this way: \u201cWe think there are some good services out there for very cookie-cutter CMS hosting. And, of course, the sky\u2019s the limit with stuff that you roll your own using Kubernetes and Docker. But we wanted something in the middle of that. And we thought that Platform.sh was a really good option.\u201d Gilzow chimes in, \u201cWhat we were running into with other providers was that many didn\u2019t have a build process and expected us to provide it, then just ship them the artifact. Which is fine, except that means we have to then find another provider to do the build process; that\u2019s more expense and more time. In higher ed, an RFP can take 6 \u2013 18 months to complete for each service we want to procure. So, when we look at a hosting provider that says, \u2018Oh, well, we do this, but you have to go get your own build process,\u2019 then we have to initiate another RFP. And makes everything really, really difficult. We also looked at systems that were extremely opinionated. If you agreed with their opinion on it, then things worked wonderfully. But we deal with so much variability, we just couldn\u2019t figure out how to mold all of it into that opinionated state. We ended up spending 80 to 90 percent of our time in those systems fighting against that opinion. \n One of the reasons we really liked Platform.sh was that it gave us this wealth of power, performance, and flexibility\u2014without having to manage our own cloud-hosting infrastructure.\u201d \n Gilzow and Boyer shared when tasked with migrating websites\u2014some of them smaller with only dozens of hits per month to those with millions of hits per month\u2014they wanted to find a single solution to manage all of it. \u201cPlatform.sh does a good job of having many of the nuts and bolts for most sites built in,\u201d says Boyer. \n One of the team\u2019s goals: to work together to manage their Drupal and WordPress content management systems, using approximately 90% the same process to leverage efficiencies. \u201cWe\u2019re looking for commonalities to make sure that certain tools can be reused across each stack, gaining the flexibility to provide support for each others\u2019 groups,\u201d Boyer explains. \u201cWith Platform.sh adoption, this effort has already begun. A lot of the tickets we get are below the CMS level. So adding memory or checking a certificate, for example, should be the same across each CMS. Platform.sh lets us do the troubleshooting for each CMS across groups, so we can provide coverage for vacations and the like.\u201d \n Getting the developer community onboard \n With a decentralized campus came a diversity of developer skill sets. And educating the broader development team was more involved than the marketing team had anticipated.\n\u201cWe had a lot of confused looks, especially when we started talking about containerized hosting,\u201d explains Gilzow. \u201cIt\u2019s a complete shift in how you think about your site. People said, \u2018What are you talking about? Where do I have to feed this code?\u2019 They were accustomed to being able to touch the production server and make changes directly to it. Even when I shared the diagram from Platform.sh documentation, which is really, really thorough and good, by the way, the response was \u2018OK, you no longer have just servers, right??\u2019\u201d \n Most developers didn\u2019t have a local development structure in place. To standardize local development on Lando, the team built a way to test and generate SSH keys, so developers could use them to deploy to Platform.sh, pull in the database and content, and connect to GitLab. \n Learn more about local development with Lando and Platform.sh \n Oh, and not all developers on campus had used Git. To get developers across campus up to speed, the team created a workflow based on merge request. It helped to get the broader development team over the hurdle, \u201cfeeling good about tools that open up a new world of flexibility,\u201d says Gilzow. \n \n  From a business standpoint, when you think about business process workflow control, Platform's just a natural. Platform.sh uses tools that we're already familiar with, but allows us to control parts of the process that we could never control before. We can provide a much more certain, much more predictable experience to the departments that need websites than we ever were able to do in the past.\u201d\n   \n     \n     Kevin Bailey \n     \n   \n \n Mizzou team calls out their favorite Platform.sh features \n Development environments that speed and smooth workflows \n Development environments are inexpensive and easy to build up and tear down. With our Central IT-managed infrastructure, if we wanted a test environment, we had to write scripts to sync everything, and make sure code was synced to the dev environment before it went live. People with smaller sites rarely used testing environments. Platform.sh enables us to put people in a workflow that\u2019s pretty much built into our Git integration, seeing that whole process through syncing the code, database, and files between development environments.\nIt just makes our lives easier. \n Establish standards, automate, manage at scale \n Platform.sh  gives us the ability to create standards and move all these extremely variable sites into a standard workflow, a standard build process, a standard setup, so that we can manage things at scale. Platform.sh has a really good CLI tool\u2014and behind that an API\u2014 allowing us to automate a lot of these things. \n Here\u2019s an example: per security policies, all applications are required to be integrated with an approved, centrally managed authentication service (e.g., Active Directory) for authentication. If the application is hosted off-premises, the only approved method is via  Shibboleth . However, there are numerous ways and configurations that integration can take, and previously, everyone did it differently. Now, we have a single, standardized method of installing and configuring the Shibboleth Service Provider for each site. And we have a single module/plugin that\u2019s used for each CMS. This approach enables our users to have a consistent authentication experience no matter which site they use\u2014even if they switch between WordPress and Drupal. For developers, because there\u2019s a consistent setup, it\u2019s much more efficient to troubleshoot any errors that occur. And from an institutional standpoint, when there are security issues related to Shibboleth, because each site is configured the same, we\u2019re able to deploy those fixes in a much more expedient manner. Once we know it works on one site, we can confidently deploy to all the others. \n Customer support \n One thing we found really refreshing is the Platform.sh team\u2019s honesty about the strengths and limitations of the service. When we\u2019ve experienced issues, Platform.sh staff have told us exactly what\u2019s going on and owned up without any runaround. In those instances, Platform.sh specialists in those areas have actually jumped in to help make our stuff work. \n Managing Drupal and WordPress sites at scale \n For the Mizzou team, getting a single site up and running on Platform.sh was easy. The seeming challenge? To determine how to do the same at scale for the \u201chundreds and hundreds of Drupal and WordPress sites that weren\u2019t identical, were set up differently, and that we didn\u2019t have staff authority over,\u201d says Gilzow. \u201cThe advantage with Platform.sh was that there\u2019s no strong opinion of the current state or how things should work; instead, we had the flexibility to develop an approach that worked for us.\u201d \n The team began by rolling the sites they had jurisdiction over to Platform.sh. Quickly, they determined they needed to connect the sites to an upstream\u2014a boilerplate and scaffolding of directories, files, and other elements that would enable developers to work within Platform.sh. So, the core team could easily incorporate any changes into the upstream, then push them downstream to all sites. \n All the sites the marketing team oversees are set up to use SimpleSAMLphp, so they can implement authentication through Shibboleth. When SimpleSAMLphp announced a fairly critical security patch, Platform.sh enabled the team to update 70 sites\u2014patched, pushed out, and back to live\u2014in a day. \u201cWhen we had a major security issue prior to adopting Platform.sh, it may have taken us weeks to contact site owners, get credentials, make updates (or force them to make the updates!), or even contact their manager to make the updates,\u201d explains Boyer. \u201cToday, we can say to site owners, \u2018because your site is standardized, you can do the update yourself. But if you haven\u2019t updated it yet, we\u2019ll just push the change for you.\u2019 That gives us extreme flexibility. From weeks to a day, and then using that information moving forward to develop tools to speed that process even further, is a really big win for us.\u201d \n Find out about managing a website fleet on Platform.sh \n Reported, real-world results \n \n  With a standard WordPress plan, we're seeing a 300% increase in the number of requests a WordPress site can handle\u2014even when we had caching plugins on the old service. A distinct improvement in performance.\u201d\n   \n     \u2014 \n     \n       Paul Gilzow Programmer Analyst Principal (WordPress), Marketing University of Missouri\n     \n   \n \n Performance: faster sites, faster provisioning \n With Platform.sh, we\u2019re way faster. We rely on our IT counterparts for account creation. But once the accounts have been created, we can have a new site up, completely synced, ready to go\u2014between GitLab and Platform.sh and all the pieces\u2014in literally two minutes. We can also keep the stack components up to date much faster. \n I had a developer the other day that said, \u2018Hey, I can\u2019t use [PHP] 7.2; I need  7.1. What do I have to do?\u2019 And I said, \u201cJust go change your YAML file, redeploy to master, and you\u2019re done.\u201d Boom. So much faster. We\u2019re able to create features now and deploy them with confidence into production because we\u2019ve had those multiple instances to test them and make sure they\u2019re going to work. \n With Platform.sh, I can deploy features and updates much faster and more confidently. I feel like I\u2019m delivering more frequently, too. \n Our performance and uptime are much better. The 300% increase in WordPress performance is mirrored in our Drupal projects (based on Google website audit tools). We also have consistent backups across every site, regardless of technology. In the past, we had no idea whether or not a backup existed. And because our departments were siloed, the backups were in multiple different locations. Now, we have one single place. We know that if something happens, we can easily grab that snapshot, redeploy it, and have a site back up in literally minutes. Platform.sh is literally driving our digital web presence into the future. \n It\u2019s very beneficial to us to be able to go out and talk to our customers and speak with authority to them about, \u2018Once we move here, when I get your site to Platform.sh, this is the kind of support you\u2019ll be able to get, this is the kind of uptime you can expect. You\u2019ll see faster response times on your websites than you were getting locally.\u2019 \n From the end-user standpoint, we\u2019ve seen a lot more speedy access as we look at Google Analytics; people are spending less time just clicking around. They\u2019re actually getting what they need quickly just because Platform.sh makes things so much faster. \n Flexibility: future-proof support for multiple languages \n We have flexibility to change components in the stack on a site-by-site basis, and we have the flexibility for the future. If we need to do a  PHP  or  Node.js  or  Ruby  application, now we can. We don\u2019t have to go through months and months of work between other departments, buy a server, and get these things set up. \n Efficiency: more sites per developer, with faster dev onboarding \n We\u2019re  way  more efficient. We\u2019re now able to manage many more sites with fewer developers than we were previously. Because, with the help of Platform.sh, we\u2019ve standardized on all these things related to local development, I can give a developer who\u2019s never touched a site access to the repository, they clone it down, start up Lando, run through the script, and have a working, exact clone of the Platform.sh site on their local machine. They can start working on it and figuring it out. They\u2019re able to support other sites, too, even if they haven\u2019t seen them. \n Cost savings: eliminate duplicate efforts, lower expenses \n The main thing it boils down to is when we purchase an account from Platform, we\u2019re able to have the hosting environment  and  the database environment together on a single bill. With local servers through our IT department, we had a LAMP stack: Linux, Apache, MySQL, PHP. The MySQL support charges for our internal service were quite expensive because it\u2019s kind of a one-off from what they normally support, so it costs them more. A lot of our reduction in cost revolves around the fact that we\u2019re bundling database hosting with Platform.sh, and we can get the database services at a significantly lower cost than we can internally. \n Explore MySQL services on Platform.sh \n \n   \n   \n     30 \n   \n   \n     Decrease in hosting costs \n   \n \n \n\n Most of our sites are small tier and are seeing a 30% decrease in their annual hosting costs with Platform.sh. \n It\u2019s just been helpful to show our user community that they\u2019re getting a lot of value from a cloud-based hosting vendor like Platform.sh. We can honestly say to them, \u2018These are the benefits that you\u2019re getting.\u2019 And most of our websites are costing us less than they did just on our local hardware. \n We project that once we get fully implemented on Platform.sh, with just two content management systems, our overall effort to create and maintain websites will be reduced. That will shorten our time to market\u2014from when someone needs a website or rebuild or redesign to the time it actually becomes live. We needed a hosting system that would support those strategies, and Platform.sh does just that. \n Meeting the stringent security requirements and aspirations of higher ed \n Today, Gilzow and Boyer manage hundreds of websites very efficiently in contrast to the university\u2019s past, when it was a slice of everyone\u2019s job to manage website back ends. \u201cIt\u2019s just going to be fantastic once we get all of the sites moved over; we\u2019re about four or five months away from completing Phase I (shutting off all the IT servers), and then we\u2019ll spend a year probably working on servers that departments still have running under their desks or in their closets,\u201d says Bailey. \n \u201cI can see us maybe consolidating down to one content management system eventually, and gaining even more efficiencies going that way. It\u2019s just going to be more and more automation, so that our web developers and our content managers\u2014who are doing all the content on the websites\u2014can focus more and more on the UI elements we need on a website and how they manage the content, rather than worrying about all the back-end stuff.\u201d \n By the end of 2020, Bailey projects his team\u2019s time will move from managing and migrating sites to improving the efficiency of current sites and rebuilding them to map to the university\u2019s new brand. \u201cOur team will focus their time on how to automate those design system elements into the themes and templates that we use across all our websites,\u201d Bailey explains. \n \n  \u201cI feel that Platform.sh was a good selection for the University of Missouri\u2014and a good selection for higher-ed teams who need the same kind of security protections for student data and university data. While every team\u2019s workflow is a little different, Platform.sh has the flexibility to accommodate a variety of workflow requirements.\u201d\n   \n     \n     Kevin Bailey \n     \n   \n \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Customer story", "title": "UNICEF Switzerland and Liechtenstein + Platform.sh ", "url": "https://platform.sh/customers/stories/unicef-switzerland-and-liechtenstein+platform.sh/", "documentId": "40e23302d9d369ad810f97c6711187b7a5cd167d", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         customers \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           UNICEF Switzerland and Liechtenstein + Platform.sh \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n           \n          \n          \n          \n           \n Challenge \n To eliminate limited, time-consuming testing processes that impeded development workflow \n Solution \n Adopt Platform.sh to gain the flexibility to test and deploy new services faster \n Results \n \n   60% reduction in costs \n   Ability to scale during emergencies \n   Improved donor and fundraising experiences \n \n    \n           \n        \n       \n       \n        \n        \n        \n         Pioneer in nonprofit digital transformation moves to Platform.sh, gains flexibility, drives innovation \n For more than 70 years, the United Nations Children\u2019s Fund, or  UNICEF , has been committed to children\u2019s rights throughout the world. Today, more than 12,000 employees in 150-plus countries worldwide work diligently to advocate for children and to provide support and services for education, health, nutrition, and hygiene. UNICEF also campaigns for refugees and against recruiting children into military service. All of the organization\u2019s efforts are financed entirely by voluntary contributions from governments and private donors. \n Numerous national committees represent UNICEF on a global scale, acting as independent nonprofit organizations that educate the public on a local level about UNICEF\u2019s sustainable development goals and collect donations for both national and global UNICEF projects. One of these committees is UNICEF Switzerland and Liechtenstein, founded in Zurich in 2018. As an independent non-governmental organization, it\u2019s one of UNICEF\u2019s 33 national committees. \n Manfred Ruf, the head of information technology at UNICEF Switzerland and Liechtenstein, has been working with the organization for nearly 15 years. His responsibilities include IT infrastructure maintenance and ensuring the security and operability of unicef.ch. He\u2019s also responsible for the continuous development of communication systems and the donation portal.  In recent years, Ruf repeatedly encountered setbacks in his development workflow due to a lack of flexibility in testing processes\u2014until he migrated from his old hosting provider to Platform.sh. \n \n  \u201cToday, I can easily create a clone of my current system, and it's fast. We\u2019re much more flexible.\u201d\n   \n     \u2014 \n     \n       Manfred Ruf Head of Information Technology UNICEF Switzerland and Liechtenstein\n     \n   \n \n Creating more efficient ways to work \n Ruf\u2019s goal has been to replace outdated systems with modern technologies to create agile workflows that can help manage the organization\u2019s IT infrastructure more efficiently. UNICEF Switzerland and Liechtenstein uses Drupal for web development and is supported by the expert Drupal team at Swiss-based MD Systems and its subsidiary Kampaweb, both Platform.sh partners. \n Part of the organization\u2019s digital transformation was a long-needed overhaul of the outdated unicef.ch website, last updated in 2013. With swift, ever-evolving technology advancements and the official November 2021 end of support for Drupal 7, a timely transition to Drupal 8 was needed. Platform.sh provided the necessary flexibility to the organization\u2019s testing process. \n Prior to adopting Platform.sh, UNICEF Switzerland and Liechtenstein was hosted on Nine, the leading cloud provider in Switzerland; a sandbox was used for testing purposes. Even though there hadn\u2019t been major problems with the old solution, Ruf encountered obstacles during the transition from Drupal 7 to Drupal 8. And creating a testing environment was limited and time consuming, Ruf explains. \n \u201cEventually MD Systems asked us if we wanted to change our hosting provider. They said Platform.sh would make it much easier to create test environments and copy entire web pages, so we could proceed faster. In general, we trust our agency to recommend the best possible solutions.\u201d \n A compelling combination: cost effective, reliable, and GDPR-compliant \n Since UNICEF Switzerland joined forces with Liechtenstein in September 2018, an important criterion for any tool used by the organization has been its conformity with the European General Data Protection Regulation (GDPR); Liechtenstein\u2014unlike Switzerland\u2014is subject to European data regulations. Ruf quickly learned that Platform.sh not only complies with the GDPR, but also enforces strict security standards in general. \n Although Ruf normally tests and compares three to five different solutions, he says that the Platform.sh price/performance ratio was unbeatable, which led to a quickly made decision. \n \u201cThe cost was a major reason why we decided to go with Platform.sh. It is far less costly than our previous provider, and we actually decided relatively fast that we wanted to change,\u201d Ruf says. \u201cAnd I have to say we\u2019re very satisfied. We didn\u2019t have any failures or loss of speed.\u201d \n \n   \n   \n     60 \n   \n   \n     Reduction in costs \n   \n \n \n\n Less complexity, more productivity \n UNICEF Switzerland and Liechtenstein has been with Platform.sh since 2018, and Ruf says he\u2019s more than satisfied. He emphasizes that the organization has benefited from numerous Platform.sh services and that he\u2019s happy to have made the switch. \n \u201cEven though we didn\u2019t have any serious issues before using Platform.sh, everything was more complicated,\u201d Ruf explains. \u201cEspecially when it came to building test environments. I had to call MD Systems, and they had to copy all the content. So it took a long time to test something new. Today, I can easily create a clone of my current system, and it\u2019s fast. We\u2019re much more flexible.\u201d \n New pages go live faster, can be scaled at any time \n One of the most important technical criterion for Ruf is to retain flexibility in providing new services. Fast and smooth deployments are often critical factors for the organization. Emergency situations, where quick action is required, are not uncommon. \n \u201cIf, for example, public fundraising reaches out to us in the morning with a request for the creation of a certain page that has to go live in the afternoon, I can do it the same day,\u201d explains Ruf. \u201cPrior to Platform.sh, it would take me half a day or even an entire day.\u201d \n The newly won scalability that UNICEF Switzerland and Liechtenstein gained through Platform.sh has become indispensable for the organization today. Ruf also praises Platform.sh for its easy usability and customer support. \n \n  \"If you ever need anything or want to change something, there's always someone to support you quickly. Unlike other platforms, Platform.sh is much less bureaucratic.\u201d\n   \n     \u2014 \n     \n       Manfred Ruf \n     \n\n Enabling the adaptation to modern technologies \n Currently, UNICEF Switzerland and Liechtenstein is working with MD Systems on a complete revision of its current donation and fundraising processes. The cloud-based CRM service Salesforce will soon replace the old system to enhance the future fundraising experience for donors and UNICEF. Platform.sh will play a significant role in the transition to Salesforce. \n \u201cEverything about payment transactions and the payment status is now being completely revised,\u201d Ruf says. \u201cIt\u2019s a huge project.\u201d \n Even though Salesforce has been offering a custom solution for nonprofit and charitable organizations for years, not many nonprofits in Europe are using the solution. UNICEF Switzerland and Liechtenstein is now considered to be at the forefront of digitization in the nonprofit sector. Ever since the project started, Ruf has been attending a large number of industry events, presenting the new venture to other organizations. \u201cAnd I also like to mention our good experiences with Platform.sh,\u201d he says. \n Platform.sh provides UNICEF Switzerland and Liechtenstein with test environments and the necessary flexibility to move the project forward efficiently. The revised donation and fundraising processes are scheduled to go live in March 2020. \n \u201cEspecially in the context of testing, we use Platform.sh a lot,\u201d Ruf says. \u201cWe build test environments with Salesforce integration and test processes quickly and easily. The flexibility helps us enormously.\u201d \n An optimistic look into the future with Platform.sh \n Ruf explains that UNICEF Switzerland and Liechtenstein realizes benefits from Platform.sh in terms of productivity, speed, and cost. \u201cCosts have decreased by more than 60%,\u201d Ruf says and shares that the organization has also started to use Platform.sh to host another children\u2019s aid website.\n \n   \n     \u201cEverything has become easier and, above all, faster. The handling of Platform.sh is professional, there are no noticeable failures, and the good price-performance ratio is, of course, very important in the nonprofit sector. The cooperation is simply great and has no downside.\u201d \n \u2014  Manfred Ruf \n   \n   \n   \n \n\n UNICEF bases its commitment on the principles of tolerance, mutual understanding, solidarity, and peace between peoples. The children\u2019s relief organization opposes any kind of discrimination, is politically and denominationally independent, and works to improve the living conditions for children in developing countries.  Learn more about UNICEF  and  how you can make a donation . \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n\n\n  \n\n\n\n\n \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n \n\n\n\n\n\n     \n       \n         \n           \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n           \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n         \n       \n     \n   \n \n\n           \n             \n   \n   Subscribe to our latest news \n   \n   \n \n\n           \n         \n         \n           Company \n           \n             About \n             Board and investors \n             Careers \n             Press \n           \n         \n         \n           Regions \n           \n             Australia \n             Canada \n             France \n             Germany \n             UK \n             Europe and USA \n           \n         \n         \n           Connect \n           \n             Events \n             Contact us \n             Find us on Slack \n             Communications preferences \n           \n         \n         \n           Resources \n           \n             Whitepapers and downloads \n             What is FleetOps? \n             PHP PaaS cloud hosting \n             Drupal PaaS cloud hosting \n             CI/CD on Platform.sh \n           \n         \n       \n    \n\n       \n         \n           \n   \n   Subscribe to our latest news \n   \n   \n \n\n         \n       \n       \n         \n           \n         \n       \n\n   \n     \n       \u00a9 2020 Platform.sh. All rights reserved. \n     \n     \n       \n         Security \n         Privacy \n         Terms of Service \n         Impressum \n          Cookie Settings \n         Security Issue \n       \n     \n   \n   \n     \n       Supported by Horizon 2020's SME Instrument - European Commission \ud83c\uddea\ud83c\uddfa \n     \n   \n \n\n \n \n  MktoForms2.setOptions({formXDPath: \"/rs/232-OWY-009/images/marketo-xdframe-relative.html\"});\n  MktoForms2.loadForm(\"https://lp.platform.sh\", \"232-OWY-009\", 1169);\n \n\n    ", "rank": 4},
{"site": "website", "section": "Customer story", "title": "Drupal + Python + Platform.sh: how we helped save man\u2019s best friends ", "url": "https://platform.sh/customers/stories/drupal-python-platformsh-oxbow-labs/", "documentId": "581478a28cb157323b33b7db893de76a0cca16b4", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         customers \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Drupal + Python + Platform.sh: how we helped save man\u2019s best friends \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Colorado Springs  is a great place to live for many reasons. People throughout the country associate it with sunshine, some say as much as 300 days per year. (That\u2019s kind of an exaggeration. The National Weather Service reports the Front Range actually averages 115 clear-sky days, 130 partly cloudy days and 120 cloudy days annually.) But for the last five years, it\u2019s been raining cats and dogs for my team at  Oxbow Labs . \n We\u2019re a small web dev studio based in the Springs, excelling at helping clients of all sizes further their missions by integrating seamlessly with their organizations. For more than four years, Platform.sh has been our go-to hosting solution, and has completely changed how we build and maintain websites. \n Tackling a legacy challenge to support a crucial mission \n In 2014, the  Humane Society of the Pike\u2019s Peak Region  (HSPPR) approached us with a challenge: to reimagine their website, so it elevated their most critical clients\u2014pets seeking their forever homes. First, let me give you some background on HSPPR. Since 1949, HSPPR\u2014a local, independent nonprofit\u2014has served as the largest animal welfare group for homeless and abused animals in southern Colorado. As an open-admission shelter, HSPPR helps all animals in need; that means not one of the 26,000 animals brought to HSPPR each year is turned away, which is pretty amazing. As you might imagine, most people frequent the Humane Society website to view pets they may be interested in adopting. That activity drives the majority of site traffic and serves as their core mission to serve the community through pets. \n Before we began to create the new HSPPR website, our analysis revealed that their legacy pet database had been around for decades (and seemingly hadn\u2019t been updated in years). So, there wasn\u2019t any direct way to access that information. The solution we came up with was to build a scraping tool using Python to extract the data directly off of the legacy system\u2019s website. With Platform.sh, we were able to deploy this solution directly into the same hosting container as the Drupal website we were building. We could, then, build, test, and deploy the Python scraper and the Drupal website as one unified system. \n Flexible, customizable workflow speeds development \n Since launching the website, the Platform.sh multiple app architecture has enabled us to continually support and upgrade the pet scraper to adapt to HSPPR\u2019s evolving needs. Because Platform.sh allows us to customize our development workflow, we\u2019re able to meet the unique requirements for each website. For HSPPR, when a new feature is requested, we spin up a clone of the entire website, including the database, code, and files. We use this cloned website to build and test just this one new feature. \n When we\u2019re ready to show the new feature to our client, we pass along the URL, so they can provide feedback. With Platform.sh, this new feature can include changes to the Drupal website as well as the Python scraper tool simultaneously. Deploying the new feature is as simple as merging the code into the live website. \n For more complex websites, we may have multiple developers working on a dozen new features or bug fixes at the same time, but the process is still just as easy. \n Reliability: inversely proportional to complexity \n Oxbow Labs is a small team of web developers. We\u2019re not system administrators or hard-core DevOps experts, so keeping a whole suite of websites operational can be a challenge. Since we switched to Platform.sh, we\u2019ve all slept much better at night, knowing that the websites we maintain are in good hands. Reliability starts with a dedicated app container for each website. This means that the performance of one website isn\u2019t affected by other sites on the same server. \n For HSPPR, putting both the PHP and Python applications on the same server reduces the complexity and potential points of failure by 50 percent. Backups and up-time monitoring are also greatly simplified by only having to monitor one instance. \n Capabilities help increase pet adoptions, family reunions \n It\u2019s not often that Oxbow Labs and Platform.sh can say that we literally save puppies and kittens, but in this case, it\u2019s not hyperbole. In the years since we built the HSPPR website, adoption rates have increased an average of 23 percent per year. And more than 30,000 pets have been reunited with their families. Platform.sh sustained reliability, performance, and improved development workflow were certainly contributing factors in HSPPR\u2019s success. \n Winn Jewett  is Oxbow Labs founder and lead web architect. \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Customer story", "title": "Web dev agency Thinkbean to the rescue ", "url": "https://platform.sh/customers/stories/web-dev-agency-thinkbean-to-the-rescue/", "documentId": "72b15dacafa13faa7ec7424588a3eb49f20c4aa9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         customers \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Web dev agency Thinkbean to the rescue \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         \n \u00a0 \n When clients are at the ends of the road (and their wits), with no solutions in sight, they call Boston-area-based Web dev agency,  Thinkbean, LLC . A deeply experienced, Drupal-only dev shop, Thinkbean developers apply their extensive expertise to build the customized solutions clients require, when their current vendors\u2019 skill sets have been exhausted. The Thinkbean team stands proud knowing a client has never needed to bring in larger agencies to reach their project\u2019s business goals. \n Reduce provider costs, gain more value and flexibility \n Platform.sh enables Thinkbean\u2019s developers to apply the same processes and infrastructure to all clients\u2014regardless of the size of their organizations. This approach drives consistency, optimizes workflow, and keeps customer costs down.  \n \n \"We can set up a prototype branch in minutes, test, and share new features with our clients, and immediately get their feedback. We can do all of our work more quickly, and that\u2019s a cost savings to our clients. That means happier clients who will (hopefully) keep coming back to us.\" \n Glenn Hodgkinson, Co-founder , Thinkbean \n \n But it wasn\u2019t always this way. Restrictions with their previous provider\u2019s hosting processes and infrastructure impeded Thinkbean\u2019s ability to realize these efficiencies. To better serve current clients (including several major healthcare organizations), the Thinkbean team began to seriously consider other partners/providers. So, they set out the following criteria to guide their evaluation process: \n \n\t Flexible pricing relative to website requirements and usage \n\t Value of services \n\t Modern features, like CI, VCS, and multiple environments  \n\t Unlimited GitHub integration \n\t Project/environment API \n\t Ability to automate integration configuration \n\t Quality support \n\t Symfony and NodeJS support \n \n \u201cOur former provider didn\u2019t seem to care about smaller shops or sites, or how their decisions impacted agencies like Thinkbean,\u201d mused Mike Milano, Thinkbean\u2019s director of engineering. \u201cAfter doing our due diligence, Platform.sh received all the highest marks, in all of our considerations,\u201d says Milano. \u201cAnd Platform.sh continues to provide the best solutions for an agency like ours. \n Let me give you an example from a technical perspective: the GitHub integration to the Platform.sh webhook. The webhook integration sets up webhooks on each of our projects. So, when an event happens on Platform.sh, it pings our agency application. Then, we pull in the data and have a central place to see what's going on with all site deployments. That integration thing Platform.sh has is just beautiful.\u201d  \n Thinkbean\u2019s Agency Portal\u2014an internal app for managing client, project, and environmental data\u2014also takes advantage of Platform.sh integration capabilities. Health checks and tasks\u2014including backups, Drupal security checks, SSL expiration checks, redeployments for certificate renewals, and configuration for log transports to Elasticsearch\u2014are all automated. So, the team can focus their time on creative thinking and solution building. \n \n \"From a business point of view, Platform.sh has a lower cost of entry for a higher standard of base-level service. For example, we could offer one of our clients (a leading healthcare organization) a low cost of entry, and we gain access to all the tools we want.  To match Platform\u2019s service offering, the cost from our previous vendor would be ~300% more , which would have translated into a reduction in services or work arounds to keep costs in line with project requirements. Choosing Platform was a no-brainer.\" \n Glenn Hodgkinson \n \n So,  that\u2019s  what support is supposed to be  \n \u201cDon't it always seem to go, that you don't know what you\u2019ve got \u2018til it\u2019s gone.\u201d Classic Joni Mitchell. But in Thinkbean\u2019s case, it was quite the opposite. \u201cWe didn\u2019t know what we\u2019d been missing until, well, we found out what we\u2019d been missing.\u201d Milano says. Thinkbean\u2019s onboarding with Platform.sh, guided by a team of senior engineers communicating through a dedicated Slack channel, delivered the concise information and levels of support Milano was looking for.  \n \u201cI was never handed off to different tiers of folks; it's just night and day from the support that we had before,\u201d Milano explains. \u201cIn the several years we\u2019ve had projects with Platform.sh, it\u2019s uncommon that a question isn\u2019t resolved quickly through the Slack channel. That\u2019s been huge for us. Technical documentation is clear, concise, and easy to find. Simply put, support with Platform.sh has been second to none.\u201d \n Reported real-world results \n \n\t Technical support resolutions reduced, in most cases, from days to minutes. \n\t Dramatically improved DevOps efficiency and stability, with superior build capabilities available to all projects. \n\t Ability to provision as many environments as are needed for QA or prototyping. \n\t Increased automation, with access to project/environment data and actions made available from the CLI and libraries. \n\t Greater flexibility to offer clients comparable package options, with substantial savings. \n\t More value to our business than competitive offerings.  \n \n Speedier development and approvals, happier clients \n Working with larger clients usually means more organizational complexity and multiple stakeholder reviewers and approvers\u2014often creating project bottlenecks. For Thinkbean, developing with Platform.sh has streamlined that previously cumbersome process. Now, they have the ability to create multiple environments to test and QA new features, develop those features in parallel, and then, merge them into their master environment. \n Find out more \u00a0about how to reap Platform.sh agency partner benefits. \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Four days, four languages, four frameworks on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             How a marketing guy quickly built a Python microservice chatbot app for Drift on Platform.sh \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             B2B Software-as-a-Service companies: accelerate your journey to enterprise! \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Customer story", "title": "Real Life Digital speeds DevOps, re-energizes focus on client problem-solving ", "url": "https://platform.sh/customers/stories/real-life-digital-speeds-devops-re-energizes-focus-on-client-problem-solving/", "documentId": "c1b6dd6e7f4938ca137ab2561cddd7b8591e7366", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         customers \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Real Life Digital speeds DevOps, re-energizes focus on client problem-solving \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Sony. Virgin. Peugeot. All high-profile brands with a foundational objective in common: to create digital experiences that more deeply engage customers and generate sales. And they\u2019ve turned to UK-based, Drupal web and application agency Real Life Digital to do it. \n \n Why Real Life Digital?  from  RLD  on  Vimeo . \n Unique client requests morph into complexity, inefficiency \n A rapidly growing agency with an impressive client portfolio, the Real Life Digital dev team supported diverse client requirements by applying equally diverse infrastructure solutions: dedicated servers, virtual private servers, cloud services. Managing all the different software and tools? Messy. And cumbersome. Weighing down the team\u2019s ability to efficiently deploy each site and cater to unique client requests. \u201cHaving different infrastructure setups for different clients meant that we needed to follow different processes for continuous deployment. Each one became error prone and typically required manual actions to be taken in order to complete a deployment successfully.\u201d   Barry Fisher, Real Life Digital director explained. \n To improve their deployment workflow, the team recognized they needed to create long-term consistency and reliability across the growing number of projects they were entrusted to maintain. But how? \n Stunning, real-world results with a single platform \n Real Life Digital consolidated their various dev and production workflows onto Platform.sh. Now, a single set of tools adapts to their diverse client and project needs, helping to speed development and deployment and drive consistency\u2014nearly overnight.   The team can focus their energies on building amazing customer experiences, instead of DevOps. And their clients can realize time to value faster as they drive sales.\u00a0  \n Here are Real Life Digital\u2019s reported results: \n \n \u00a0 \n Bonus: Fisher appreciated that Plaftform.sh provides all the extra software their team uses, including Apache Solr, Redis, and image compression libraries\u2014all which he reports \u201cvastly improve on the value we\u2019re able to bring to our clients\u2019 sites.\u201d And adding new services is as easy as adding a line to a configuration file. \n \n Platfom.sh deployment: a study in success from day one \n When  ANS Global , green roof and living wall designers, approached Real Life Digital to build its new website, the agency put Platform.sh to the test. The team saw the instant benefits of having consistent, secure deployments. \u201cThe immediate effect of using Platform.sh for the first time was that we were able to deploy a development site on launch day for the client with relative ease,\u201d Fisher says. \n The real test: how quickly the dev team could respond to new feature requests from ANS Global. With deployment flow based around git branches, everything was well within the developers\u2019 control, and ANS could deliver richer content and experiences to  their  customers. \n Agility for small dev teams \n Through their ANS Global project, the Real Life Digital team recognized the importance of finding just the right partner. Fisher says, \u201cWith Platform.sh, we   now have more fluidity in our deployment process and something we can standardize all our projects on. As a relatively small team, DevOps isn't a full-time role for any given person in our agency, so making sure we use our time wisely is the most important thing to get right. We can now spend our time more effectively consulting with our clients to solve their business problems\u2014without the headaches of fragile and differing hosting environments.\u201d \n Learn more  about how to reap Platform.sh agency partner benefits. \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Customer story", "title": "Digital agency WONDROUS: finding technology agnosticism, freedom, and lower costs ", "url": "https://platform.sh/customers/stories/digital-agency-wondrous-finding-technology-agnosticism-freedom-and-lower-costs/", "documentId": "79ae66caed148aea9dc71af7a7ec4bd9dcbe74d9", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         customers \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Digital agency WONDROUS: finding technology agnosticism, freedom, and lower costs \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         When clients engage a digital agency, what are they looking for? Creativity (check). Talent (check). Innovation. (definitely, check). But at the end of the day, what clients  really  want are solutions to problems they haven\u2019t yet been able to solve on their own. And that\u2019s where digital creative studio  WONDROUS  shines. \n Established in Switzerland in 2008, WONDROUS designs and develops best-in-class user experiences and bespoke digital solutions with latest web technologies. They approach projects from a user\u2019s perspective and commit to solving them creatively. WONDROUS CTO and Managing Partner Rainer Friederich describes the team as a  little family.  And for the last five years, this committed, 23-member family has experienced near-zero turnover. \n \n   \n     Finding the best solution for each challenge means not being locked into any one technology. Rather, the WONDROUS team chooses the technologies that will yield optimal results and delight their global clients. Clients like healthcare pioneer Roche. Pharma giant Novartis. And one of the most-recognized premium car and commercial vehicle manufacturers in the world, Daimler. \n   \n   \n   \n \n\n Simplifying workflow, radically reducing costs \n Friederich and his team created and maintained client projects on Acquia, Heroku, Amazon Web Services, and others. They chose these providers for different reasons: a strength in workflows. Hosting capacity. Support for a particular language or framework. But Friederich wanted a provider that enabled him to implement a simple, consistent workflow for WONDROUS developers across all client projects\u2014a goal that was complex and difficult to achieve. \n For the last five years, the WONDROUS team has had twelve Drupal 8 projects on Acquia; workflows were cumbersome. \u201cWhile it\u2019s possible to automate workflows with Acquia, it\u2019s difficult to do. It takes a lot of work, and you have to use vendor-locked Acquia libraries and workflows you won\u2019t find anywhere else,\u201d explains Friederich. \u201cThe Acquia workflow could just not compete with Platform.sh.\u201d \n \n  Overall with Platform.sh, we can handle a higher volume of projects\u2014and work on more projects concurrently\u2014than we could before.\u201d\n   \n     \n     Rainer Friederich ,\n    CTO and Managing Partner,\n    WONDROUS\n     \n   \n \n Platform.sh capabilities don\u2019t require the WONDROUS team to engage in any manual interactions. \u201cIt sounds so simple,\u201d Friederich says. \u201cBut if you trust your change and have reviewed it on a feature branch or in a development environment, you just merge the PR, and you\u2019re done. You can close the project and move on to other work.\u201d \n Beginning with the easiest project first, the team began to move one Acquia project after another to Platform.sh, until all the projects had been migrated. With projects now on Platform.sh, they made the decision not to train any new developers on Acquia workflows. \u201cIt would have been a complete waste of time,\u201d says Friederich. \u201cWe\u2019re now completely free of Acquia, and that\u2019s a good thing.\u201d \n \n  Platform.sh enables us to use a single solution provider for all the different technologies and approaches we use for our projects. We see this as our number-one Platform.sh benefit.\u201d\n   \n     \n     Rainer Friederich \n     \n   \n \n Today, when WONDROUS developers begin a new Platform.sh project from scratch, they can use their own template to completely set up the project remotely\u2014the production environment, all deployment workflows, and everything else\u2014in under 20 minutes.  Friederich describes this process as just insanely good. \u201cAt this juncture, I would never consider buying some server hardware somewhere and writing all the deployment scripts and so on; it\u2019s just unthinkable,\u201d concludes Friederich. \n \n   \n   \n     80 \n   \n   \n     Reduction in infrastructure resource and workflow costs \n   \n \n \n\n Another scenario where Friederich shared Acquia couldn\u2019t compete with Platform.sh? Price.\nAfter migrating its twelve Drupal 8 projects from Acquia to Platform.sh, WONDROUS was able to reduce infrastructure resource and workflow costs by 80 percent. \n Finally, Platform.sh workflows and automation help WONDROUS save significant time compared to previous providers and keep maintenance and support costs low\u2014resulting in more profitable client support contracts. \n Modern and natural for developers \n As noted, it\u2019s paramount for the WONDROUS team to have the flexibility to use the languages and frameworks most appropriate for any given client project. And that\u2019s a pivotal reason WONDROUS developers embraced Platform.sh. \n \u201cWhen you work with Drupal on Platform sh, you work with a standard, modern, state-of-the-art approach to PHP programming and management,\u201c explains, Friederich. \u201cIt\u2019s much more natural for us to work with Drupal 8 on Platform.sh because all the Symfony projects that we do in PHP or Laravel all work the same way.\u201d In contrast, \u201cWorking with Drupal on Acquia is like we used to work 10 years ago; you need special knowledge, and it\u2019s a steep learning curve. We want a technology-agnostic approach to working with software,\u201d says Friederich. \n Earlier this year\u2014when WONDROUS launched a team dedicated to client support and developing small, new features\u2014they onboarded a new developer who was new to both Platform.sh and to Drupal 8. After minimal training over the course of a week, the developer was basically able to work on 20 different projects. \u201cTwo or three years ago, I could never have imagined that developers could work on more than three different projects in a day; with Platform.sh, it\u2019s possible to work on 10 different projects,\u201d Friederich shares. \n \n   \n   The WONDROUS team chooses the languages and frameworks (including  Drupal ,  Laravel ,  Node.js , and  Symfony ) and technologies that will yield optimal results and delight their global clients. \n \n The Platform.sh features WONDROUS loves \n \n   \n     Feature branch environments \n     I could not imagine how to develop without it anymore. The ability for multiple developers to work on multiple features simultaneously, together with the Platform.sh CLI, is very, very handy for maintaining all of our projects. \n   \n   \n     Git integration and integrations with GitHub \n     We use them on all projects! \n   \n   \n     Support \n     Amazingly fast response time for critical issues, always on time for non-critical issues. Those responses are well formulated and quite helpful. \n   \n \n Successful solutions for projects and clients of all sizes \n From small clients with a single website to enterprise clients who need the scalability to meet the demand of hundreds of thousands of users, WONDROUS has taken advantage of Platform.sh capabilities to build solutions across the spectrum. All leveraging the same workflows. \n Small project, education client \n \n   Challenge \n   Migrate six or seven smaller websites into one new Drupal website, setting up a volume of very, very complicated redirects for all the old URLs prior to go-live.\n \n \n   Outcome \n   This work was so simple with the Platform.sh routes.yaml. That saved us a lot of work, which otherwise would have had to be done manually in engineer's config. \n \n Complex project, midsize customer \n \n   Challenge \n   Gain flexibility and performance improvements.\n \n \n   Outcome \n   By moving from Acquia to Platform.sh and adding Cloudflare on top, we\u2019ve been able to significantly boost performance and reduce costs by 40%. And now we can have at least five open feature/bug fix environments to review with our client; the previous development model\u2014with static dev, stage, and prod\u2014only allowed two. \n \n Large project, enterprise client \n \n   Challenge \n   Develop an intranet that could scale to support 200,000 authenticated users on demand.\n \n \n   Outcome \n   At launch, the site scaled to support all authenticated users without any manual intervention on our parts. Platform.sh gave us a hand by providing onboarding and amazing support with this complex infrastructure landscape. Two days post-launch, we got an email from the client saying \u2018everything's so great and running so fast; we\u2019ve never had a system before that could take the load!\u2019 That was a real success for us. \n \n Strength in small numbers \n A small, tightly knit team, with a strong company culture. A strategic client partner, with a passion for delivering innovative, sustainable digital solutions that make a difference. Solutions that WONDROUS hosts, whenever possible, on Platform sh. \u201cAn agnostic approach, excellent support, security, and cost-effective pricing are the reasons we stay with Platform.sh,\u201d Friederich concludes. \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Customer story", "title": "Cambridge Audio renews focus on hi-fi lovers with Platform.sh capabilities ", "url": "https://platform.sh/customers/stories/cambridge-audio-renews-focus-on-hi-fi-lovers-with-platform.sh-capabilities/", "documentId": "6f6e428682395d1fd72ae8ac83bb1b1f879413fb", "text": "\n     \n       \n         \n  \n   \n     \n       \n        \n         customers \n        \n       \n     \n   \n  \n\n   \n     \n       \n         \n           Cambridge Audio renews focus on hi-fi lovers with Platform.sh capabilities \n         \n\n        \n       \n\n      \n      \n      \n      \n      \n      \n       \n         \n       \n      \n      \n\n     \n   \n \n\n       \n     \n\n     \n       \n        \n        \n       \n       \n        \n        \n        \n         Since 1968, British manufacturer  Cambridge Audio  has been developing high-end audio equipment to represent the true nature of sound to music enthusiasts around the world. From earphones and entry-level hi-fi systems to advanced speakers and premium audio setups, Cambridge Audio has won numerous awards that attest to the quality and value of its products. \n For more than six years, Povilas Uogintas has served as Cambridge Audio\u2019s lead web developer. He\u2019s been through many technical ups and downs with the company and knows the needs and challenges of managing Cambridge Audio\u2019s web presence by heart. \n A major challenge Uogintas faced was finding a trusted, reliable hosting platform. The old hosting provider offered inconsistent support, which forced Uogintas\u2019s development team to focus on infrastructure and vendor maintenance instead of on building new features. Early in 2018, he decided to make a switch from Cambridge Audio\u2019s dedicated web hosting company to a managed cloud solution with Platform.sh. \n Seamless implementation through native Drupal support \n Uogintas says he remembers the struggles with Cambridge Audio\u2019s previous hosting provider of three years and reflects on some difficulties he and his team had faced only a few years ago. While the previous hoster controlled the server and server management, the company wasn\u2019t responsive enough to the team\u2019s needs. \n \u201cThey didn\u2019t really manage it, meaning they didn\u2019t perform any updates, like PHP security updates or anything of this kind,\u201d Uogintas explains. \u201cSo we needed to check everything all the time and ask them to make necessary updates. And they did\u2014when we asked them. But it was more effort than it needed to be.\u201d \n Uogintas began to search for a solution that would enable the Cambridge Audio team to shift its focus back to enhancing website functionality and delivering new features while providing a highly reliable platform. He was looking for a provider that could offer automation capabilities and clear documentation. After recalling Platform.sh from a Drupal Camp London several years prior, he started to look into the service, comparing it to several other managed cloud solutions. Concluding his evaluation of multiple providers, he chose Platform.sh. \n \u201cI liked the documentation and that it was more focused on developers,\u201d Uogintas says. \u201cOther documentation I saw was more about website builders and other things. Overall, I trusted Platform.sh more.\u201d \n Cambridge Audio has been using Drupal for its online store, but is also able to pull orders from external e-commerce sites like eBay and Amazon. Platform.sh was one of the first platforms that natively supported Drupal, which simplified the integration of Platform.sh with the developer workflow. Since Platform.sh provides all essential tools, like Composer, Drupal Console, and Drush, developers can easily and quickly migrate their applications. \n \u201cGetting started was not difficult at all, explains Uogintas. \u201cThe initial setup was already done, we just needed to learn a few new things, but it was quite easy.\u201d \n Gaining flexibility and developer time \n Since Cambridge Audio adopted Platform.sh as its hosting solution, Uogintas shares developer productivity has improved significantly. His team doesn\u2019t have to manage as many tasks manually as they did prior to adopting Platform.sh and can focus on shipping new features to customers faster. One of the most helpful Platform.sh features to the Cambridge Audio team has been the branching feature, says Uogintas. \n \u201cWith Platform.sh, everything is Git-controlled, so you can create branches and quickly copy a website to test new features, which was a big challenge for us before. In the past, we had to copy the whole site or locally create a site manually, a lengthy process. Now we can create and download the site in a couple of command lines.\u201d \n The ability to test features on work environments associated with the branches has also been helpful to identify bugs, improving the development team\u2019s efficiency in their testing process. Previously, the team tested new developments sequentially on a single test site\u2014which constrained their workflow; now they can test multiple new features in parallel. \n \n  With Platform.sh, we can quickly duplicate a website and ship exactly the same copy of it to identify any issues that may occur. Our development time for testing and deployment has become much faster. In fact, pretty much any aspect of developing and deploying has significantly improved.\u201d\n   \n     \n     Povilas Uogintas ,\n    Lead Web Developer, Cambridge Audio\n     \n   \n \n Aside from faster and more frequent deployments, the branching feature also enables new developers to get started quickly and progress through their workflow more efficiently. \n \u201cIf new developers come in, we can create new branches in no time and set them up quickly,\u201d Uogintas explains. \u201cDevelopers can do whatever they want in their own environments and not influence anything on the live site. And if you have a bigger team with lots of developers, it\u2019s quite easy to create different users for different branches. It\u2019s less stressful and error-prone.\u201d \n An easily adaptable solution to react to demand, improve efficiencies \n Today, the Cambridge Audio team uses Platform.sh for eight of their projects. Uogintas says he enjoys the ability to scale infrastructure whenever needed as well as the speed of his Platform.sh-based applications. \n If a site slows down when visitor volume increases, Uogintas says it\u2019s been easy to react quickly, scaling up to accommodate changing demand. \n \u201cWe just enhanced our Platform.sh plan to a larger tier; ultimately, our website got more power and started working faster. Platform.sh is quite easy to upgrade or downgrade or to increase your resources, if you need to, so it\u2019s a more efficient way to run a website,\u201d he explains. \n Platform.sh has also been adaptable in its ability to set up new services and databases that can be quickly synced, moved, or deleted. \n \n   \n     \u201cIf we need to add a new service like Solr or Elasticsearch, we can quickly enable and add it. We can think less about things on the server-side. It\u2019s much easier to focus on what I want to focus on, like developing new features. Instead of taking care of setting up a new server, if I want to test things, Platform.sh handles it, and I like that.\u201d \n \u2014  Povilas Uogintas \n\n   \n   \n   \n \n\n Why Cambridge Audio loves Platform.sh \n \n   Unbeatable speed All the websites we have with Platform.sh are quite fast and handle a lot of data and bandwidth. \n   Handy features The branching feature has really accelerated our development process. \n   24x7 support With Platform.sh, we know that we can always get support. If we have problems of any kind, Platform.sh is always on it. \n   Development and deployment time Pretty much any aspect of developing and deploying has significantly improved. \n \n Speedy, reliable support from the Platform.sh community, Slack channel \n Uogintas praises not only the technical features of Platform.sh, but also commends the Platform.sh team for its commitment and responsiveness. He says he remembers past hacking attempts and the lack of response from Cambridge Audio\u2019s previous server company, generating numerous issues for his team. \n Uogintas also appreciates the public Platform.sh Slack channel to connect to its community, 24x7. He uses it regularly to receive input on technical questions, new ideas, or issues. \u201cI really like the Slack channel. Sometimes I ask something I think is pretty basic, but everybody is always nice and genuinely tries to help out and give honest opinions.\u201d \n A more secure, stable infrastructure translates into confidence \n Uogintas says he worries less about cyber attacks and security issues, which was a major reason he and his team decided to expand the use of Platform.sh to other websites and across multiple projects. To keep sensitive data outside of the code, Uogintas uses Platform.sh variables. \n \u201cLet\u2019s say our system has some website credentials, you can create variables, and they\u2019re securely saved and stored with Platform.sh,\u201d he explains. \u201cSo if our code ever gets stolen for some reason, all the variables are secured, which is nice.\u201d \n Overall, Uogintas concludes that his team\u2019s development workflow has become easier and faster than ever before since Cambridge Audio\u2019s web properties moved to Platform.sh. \n \u201cWe\u2019re much more confident with our websites being live and not getting crashed or hacked,\u201d he said. \u201cIn general, we\u2019re happy with Platform.sh. We\u2019re happy with the service, and we\u2019re happy with where we are now.\u201d \n\n        \n\n\n\n\n       \n       \n         \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n   \n     \n       \n       \n       \n     \n   \n \n\n       \n     \n   \n   \n\n     \n       Related articles \n       \n   View all \n   \n \n\n     \n     \n       \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Platform.sh + Lando: local dev in perfect sync with the cloud \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Supporting the Drupal Association and community through the COVID-19 crisis \n           \n         \n        \n         \n           \n             \n            \n            \n            \n              \n              \n              \n               \n              \n             \n           \n           \n             Building a resilient digital foundation with Drupal + Gatsby  \n           \n         \n        \n       \n     \n   \n", "rank": 4},
{"site": "website", "section": "Solutions", "title": "Hosting and workflow for digital agencies and development companies ", "url": "https://platform.sh/solutions/agency/?utm_source=blog&utm_medium=landing_page&utm_campaign=agencies&utm_content=thinkbean", "documentId": "09ef9b9758eca037acd33b03560126657ce510ce", "text": "\n   \n     \n       \n     \n         Digital agencies \n\n        \n\n        \n         Transform the way your team builds web apps \n        \n\n        \n\n        \n\n        \n          \n  \n        \n\n       \n     \n     \n      \n        \n        \n        \n           \n        \n      \n     \n   \n \n   \n     \n       The most flexible hosting platform    for digital agencies \n       With Platform.sh, you can increase developer productivity, agency profitability, and client satisfaction. \n     \n   \n   \n     \n       \n         \n           \n             A cloud environment for every branch \n             Free agency website hosting \n             Strict data localization \n           \n         \n         \n           \n             Zero infrastructure management tasks \n             Project dashboard \n             24x7 support \n           \n         \n         \n           \n             Free user licenses for  your team \n             99.99% uptime SLA on the Enterprise stack \n           \n         \n       \n     \n   \n   \n     \n       \n   \n     Explore our Partner Program \n     \n   \n \n\n       \n   \n \n   \n     \n       Capabilities to meet ever-evolving demand \n     \n   \n   \n     \n       \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Exercise your flexibility \n    \n    \n     Out-of-the-box support for an array of languages and frameworks empowers your developers to tailor solutions to customer needs. All while freeing you from technology lock-in, mitigating your risk, and increasing your competitive advantage. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Simplify your workflow \n    \n    \n     With Platform.sh, your team can focus on what\u2019s important: creating amazing customer experiences that drive revenue. Eliminate workflow bottlenecks by instantly cloning your entire production stack (including services and their data) to speed new apps and features to market; streamline client reviews, approvals, and UAT in the process. \n    \n   \n \n\n\n         \n         \n           \n  \n   \n    \n       \n \n \n \n \n \n \n \n \n\n    \n   \n  \n   \n    \n     Take your business to new heights \n    \n    \n     Propel your agency\u2019s growth by tapping into new opportunities and by expanding your offering into new markets. Align your sales and marketing strategies with Platform.sh capabilities to expand your portfolio, and easily scale your business to meet client demand. \n    \n   \n \n\n\n         \n       \n     \n   \n \n   \n\n     \n       Digital agencies love Platform.sh \n       \n   Read their stories \n   \n \n\n     \n\n     \n       \n         \n           \n             \n             Previous \n           \n           \n             \n             Next \n           \n         \n\n         \n           \n             \n               \n                 \n                   Platform.sh enables us to use a single solution provider for all the different technologies and approaches we use for our projects. We see this as our number-one Platform.sh benefit. We can also handle a higher volume of projects\u2014and work on more projects concurrently\u2014than we could before.\u201d \n                 \n                 \n                   Rainer Friederich , CTO and Managing Partner, WONDROUS \n                 \n               \n             \n           \n           \n             \n               \n                 \n                   We can set up a prototype branch in minutes, test, and share new features with our clients, and immediately get their feedback. We can do all of our work more quickly, and that\u2019s a cost savings to our clients. That means happier clients who will (hopefully) keep coming back to us.\u201d \n                 \n                 \n                   Glenn Hodgkinson , Co-founder, Thinkbean \n                 \n               \n             \n           \n           \n             \n               \n                 \n                   We searched for a solution and found that Platform.sh offered the most extensive feature set and has technical tools that are missing from other Drupal-focused PaaS providers. Having a fixed monthly cost model is appreciated by our clients, so they can budget consistently; Platform.sh provides all the benefits of a cloud service without the cost uncertainties.\u201d \n                 \n                 \n                   Barry Fisher , Director, Real Life Digital \n                 \n               \n             \n           \n           \n             \n                \n                  \n                    It\u2019s not often that Oxbow Labs and Platform.sh can say that we literally save puppies and kittens, but in this case, it\u2019s not hyperbole. In the years since we built the Humane Society of the Pike's Peak Region website, adoption rates have increased an average of 23 percent per year. And more than 30,000 pets have been reunited with their families. Platform.sh sustained reliability, performance, and improved development workflow were certainly contributing factors in the society's success.\u201d \n                  \n                  \n                    Winn Jewett , Founder, Oxbow Labs \n                  \n                \n              \n            \n          \n         \n       \n     \n   \n   \n     \n       Learn more about becoming a partner \n      \n      \n       \n         Explore our Partner Program \n         \n       \n      \n     \n   \n", "rank": 4}
]